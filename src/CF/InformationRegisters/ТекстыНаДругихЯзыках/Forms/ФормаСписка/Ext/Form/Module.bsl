// sza151223-2328 фикс
// sza150710-0040 выгр автору
// sza150429-1744
// sza150401-0217
// sza131104
// sza131003-1245 :

&НаКлиенте
Процедура ВыгрузитьРучнойПеревод(Команда)

	Язык = Неопределено;
	ДокументДляПечати = Новый ТабличныйДокумент;
	ДокументДляПечати.ИмяПараметровПечати = "МЕКЕТНАЯЗЫКАХПЕРЕВОД";
	ДокументДляПечати.КлючПараметровПечати = ДокументДляПечати.ИмяПараметровПечати;
	ПодготовитьМакетСТекстамиНаСервере(Язык, ДокументДляПечати, ИСТИНА);
	ДокументДляПечати.Показать();

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПереводЭлементаИнтерфейса(Команда)

	ПараметрыФормыЗаписи = Новый Структура("ЭтоЭлементИнтерфейса", ИСТИНА);
	ОткрытьФорму("РегистрСведений.ТекстыНаДругихЯзыках.ФормаЗаписи", ПараметрыФормыЗаписи, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтборРегистра()

	ОбщийМодульКлиент.УстановитьЭлементОтбора(
	Список.Отбор,
	"ЭтоЭлементИнтерфейса",
	ИСТИНА,
	ВидСравненияКомпоновкиДанных.Равно,
	, ОтобратьТолькоЭлементыИнтерфейса
	);
	ОбщийМодульКлиент.УстановитьЭлементОтбора(
	Список.Отбор,
	"МашинныйПеревод",
	ЛОЖЬ,
	ВидСравненияКомпоновкиДанных.Равно,
	, ОтобратьТолькоПереводПользователя
	);
	ЭтаФорма.ОбновитьОтображениеДанных();

КонецПроцедуры

&НаКлиенте
Процедура ОтобратьТолькоПереводПользователяПриИзменении(Элемент)

	ОбновитьОтборРегистра();

КонецПроцедуры

&НаКлиенте
Процедура ОтобратьТолькоЭлементыИнтерфейсаПриИзменении(Элемент)

	ОбновитьОтборРегистра();

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПереводыАвтору(Команда)

	ОтправитьПереводыАвторуНаСервере();

КонецПроцедуры

&НаСервере
Процедура ОтправитьПереводыАвторуНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ТекстыНаДругихЯзыках.Язык,
	|	ТекстыНаДругихЯзыках.ТекстНаРусском,
	|	ТекстыНаДругихЯзыках.ЭтоЭлементИнтерфейса,
	|	ТекстыНаДругихЯзыках.ТекстНаЯзыке
	|ИЗ РегистрСведений.ТекстыНаДругихЯзыках КАК ТекстыНаДругихЯзыках
	|ГДЕ ТекстыНаДругихЯзыках.МашинныйПеревод = ЛОЖЬ";

	РезультатЗапроса = Запрос.Выполнить();

	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ТестОпереводе = "";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ТестОпереводе = ТестОпереводе + "---" + Символы.ПС +
			ВыборкаДетальныеЗаписи.ТекстНаРусском + Символы.ПС +
			ВыборкаДетальныеЗаписи.Язык + Символы.ПС +
			ВыборкаДетальныеЗаписи.ТекстНаЯзыке + Символы.ПС +
			ВыборкаДетальныеЗаписи.ЭтоЭлементИнтерфейса + Символы.ПС;

		КонецЦикла;

		СтруктураПисьма = Новый Структура;
		СтруктураПисьма.Вставить("ТемаСообщения", "ЭТ Пользовательский перевод");
		СтруктураПисьма.Вставить("ТекстСообщения", ТестОпереводе);
		СтруктураПисьма.Вставить("Вручную", ИСТИНА);
		ОбщийМодульСервисСервер.ПисьмоАвтору(СтруктураПисьма);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПодготовитьМакетСТекстамиНаСервере(Знач Язык, ДокументДляПечати, Знач ТолькоРучнойПеревод = ЛОЖЬ)

	Макет = РегистрыСведений.ТекстыНаДругихЯзыках.ПолучитьМакет("МакетЯзыка");

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ТекстыНаДругихЯзыках.ТекстНаРусском,
	|	ТекстыНаДругихЯзыках.Язык.Код Как КодЯзыка,
	|	ТекстыНаДругихЯзыках.ТекстНаЯзыке
	|ИЗ РегистрСведений.ТекстыНаДругихЯзыках КАК ТекстыНаДругихЯзыках ГДЕ ИСТИНА ";

	Если НЕ Язык = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + " И ТекстыНаДругихЯзыках.Язык = &Язык ";
		Запрос.УстановитьПараметр("Язык", Язык);
	КонецЕсли;

	Если ТолькоРучнойПеревод Тогда
		Запрос.Текст = Запрос.Текст + " И ТекстыНаДругихЯзыках.МашинныйПеревод = ЛОЖЬ";
	КонецЕсли;

	РезультатЗапроса = Запрос.Выполнить();
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	ДокументДляПечати.ИмяПараметровПечати  = "Тексты" + СокрЛП(ИмяКомпьютера());
	ДокументДляПечати.КлючПараметровПечати = ДокументДляПечати.ИмяПараметровПечати;
	ДокументДляПечати.Очистить();
	ДокументДляПечати.НачатьАвтогруппировкуСтрок();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьДетальныхЗаписей);
		ДокументДляПечати.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());

	КонецЦикла;

	ДокументДляПечати.ЗакончитьАвтогруппировкуСтрок();

КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьМакетСТекстами(Команда)

	Язык = Неопределено;
	ПоказатьВводЗначения(Новый ОписаниеОповещения("ПодготовитьМакетСТекстамиЗавершение", ЭтаФорма, Новый Структура("Язык", Язык)), Язык, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите язык макета") + ": ", тип("СправочникСсылка.Языки"));

КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьМакетСТекстамиЗавершение(Значение, ДополнительныеПараметры) Экспорт

	Язык = ?(Значение = Неопределено, ДополнительныеПараметры.Язык, Значение);

	Если (Значение <> Неопределено) Тогда
		ДокументДляПечати = Новый ТабличныйДокумент;
		ДокументДляПечати.ИмяПараметровПечати = "МЕКЕТНАЯЗЫКАХ";
		ДокументДляПечати.КлючПараметровПечати = ДокументДляПечати.ИмяПараметровПечати;
		ПодготовитьМакетСТекстамиНаСервере(Язык, ДокументДляПечати);
		ДокументДляПечати.Показать();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                               // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                          // ПРИ ОТКРЫТИИ

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	ОбновитьОтборРегистра();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);
		КонецЕсли;

		ОбщийМодульСервер.ОбеспечитьСписокОтборов(Список);
		ИспользоватьСобственныйПереводЭлементовИнтерфейса   = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса");
		Элементы.ЭтоЭлементИнтерфейса.Видимость 			= ИспользоватьСобственныйПереводЭлементовИнтерфейса;
		Элементы.ОтобратьТолькоЭлементыИнтерфейса.Видимость = ИспользоватьСобственныйПереводЭлементовИнтерфейса;
		Элементы.ФормаДобавитьПереводЭлементаИнтерфейса.Видимость = ИспользоватьСобственныйПереводЭлементовИнтерфейса;

		Если ПараметрыСеанса.ВерсияПриложения < 803050000
			ИЛИ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВместоТумблеровПоказыватьГалочки") Тогда

			Если НЕ ПараметрыСеанса.ВерсияПриложения < 803050000 Тогда
				Выполнить(" Элементы.ОтобратьТолькоПереводПользователя.ВидФлажка = ВидФлажка.Флажок;
				|Элементы.ОтобратьТолькоЭлементыИнтерфейса.ВидФлажка = ВидФлажка.Флажок; ");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры
