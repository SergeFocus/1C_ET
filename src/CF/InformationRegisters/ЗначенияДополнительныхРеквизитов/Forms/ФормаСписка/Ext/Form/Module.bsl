// sza140509-0126
// sza140106-2315 : 

&НаКлиенте
Процедура ДобавитьДополнительныйРеквизит(Команда)
	
	параметрыФормы = Новый Структура("ОбъектВладелец", ОбъектВладелец);
	ФормаНовогоДопРеквизита = ПолучитьФорму("Справочник.ДополнительныеРеквизиты.ФормаОбъекта", параметрыФормы);
	ФормаНовогоДопРеквизита.ОткрытьМодально();
	ПроверитьНаличиеВсехРеквизитов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.ОбъектВладелец) Тогда
			ОбъектВладелец = Параметры.ОбъектВладелец;
			НаименованиеОбъектаВладельца = СокрЛП(ТипЗнч(ОбъектВладелец));
			
			ПроверитьНаличиеВсехРеквизитов();
			
		Иначе
			Элементы.ОбъектВладелец.Видимость = ИСТИНА;
			Элементы.ГруппаГоризонт.Видимость = ИСТИНА;
		КонецЕсли;
		
		Список.Параметры.УстановитьЗначениеПараметра("НетОтбораПоОбъектВладелец", НЕ ЗначениеЗаполнено(ОбъектВладелец));
		Список.Параметры.УстановитьЗначениеПараметра("ОбъектВладелец", ОбъектВладелец);
		
		Наименование = ОбщийМодульПовтор.ПолучитьКрасивоеНаименованиеОбъекта(НаименованиеОбъектаВладельца);
		
		Элементы.ДобавитьДополнительныйРеквизит.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Добавить дополнительный реквизит для") + " " + Наименование;
		Элементы.ОбъектВладелец1.Заголовок = Наименование;
		ОбщийМодульСервер.ОбеспечитьСписокОтборов(Список);
		
		Элементы.ГруппаГоризонт.Видимость = ЗначениеЗаполнено(ОбъектВладелец);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьНаличиеВсехРеквизитов()
	
	Если НЕ ОбъектВладелец = Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ДополнительныеРеквизиты.Ссылка,
		|	ДополнительныеРеквизиты.ТипДополнительногоРеквизита,
		|	ДополнительныеРеквизиты.ЗначениеПоУмолчанию
		|ИЗ Справочник.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
		|ГДЕ ДополнительныеРеквизиты.НаименованиеОбъектаВладельца = &НаименованиеОбъектаВладельца
		|	И ДополнительныеРеквизиты.ПометкаУдаления = ЛОЖЬ";
		
		Запрос.УстановитьПараметр("НаименованиеОбъектаВладельца", НаименованиеОбъектаВладельца);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
			
			ЗапросЗначения = Новый Запрос;
			ЗапросЗначения.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 ЗначенияДополнительныхРеквизитовСрезПоследних.ЗначениеРеквизита
			|ИЗ РегистрСведений.ЗначенияДополнительныхРеквизитов.СрезПоследних КАК ЗначенияДополнительныхРеквизитовСрезПоследних
			|ГДЕ ЗначенияДополнительныхРеквизитовСрезПоследних.ОбъектВладелец = &ОбъектВладелец
			|	И ЗначенияДополнительныхРеквизитовСрезПоследних.ДополнительныйРеквизит = &ДополнительныйРеквизит";
			ЗапросЗначения.УстановитьПараметр("ОбъектВладелец", ОбъектВладелец);
			
			ДатаПервогоДокумента = ОбщийМодульСервисСервер.ДатаПервогоДокумента();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ДополнительныйРеквизит  = ВыборкаДетальныеЗаписи.ссылка;
				ЗапросЗначения.УстановитьПараметр("ДополнительныйРеквизит", ДополнительныйРеквизит);
				
				РезультатЗапросЗначения = ЗапросЗначения.Выполнить();
				Если РезультатЗапросЗначения.Пустой() Тогда
					
					ДопРеквизит = РегистрыСведений.ЗначенияДополнительныхРеквизитов.СоздатьМенеджерЗаписи();
					ДопРеквизит.Активность = ИСТИНА;
					ДопРеквизит.ДополнительныйРеквизит = ДополнительныйРеквизит;
					ДопРеквизит.ЗначениеРеквизита = ВыборкаДетальныеЗаписи.ЗначениеПоУмолчанию;
					ДопРеквизит.ОбъектВладелец    = ОбъектВладелец;
					ДопРеквизит.Период			  = ДатаПервогоДокумента;
					
					ДопРеквизит.Записать(ИСТИНА);
					
				КонецЕсли;
				
			КонецЦикла;                        	
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ГруппаГоризонт.Видимость = ЗначениеЗаполнено(ОбъектВладелец);
	
КонецПроцедуры // ПроверитьНаличиеВсехРеквизитов
