//sza140114-0004 : 
//sza131005-0242 : 
&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	НоменклатураПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура НоменклатураПриИзмененииНаСервере()	
	Элементы.СерияНоменклатуры.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетСерийНоменклатуры") И ЗначениеЗаполнено(Запись.Номенклатура) и Запись.Номенклатура.СерийныйУчет;	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[ 1 ] = Неопределено Тогда
				Запись.ШтрихКод = Параметр[ 0 ];
			Иначе
				Запись.ШтрихКод = Параметр[ 1 ][ 1 ];
			КонецЕсли;
			ПолученШтрихКодИзСШК(Запись.ШтрихКод);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Запись.ИсходныйКлючЗаписи.Пустой() Тогда
		Если НЕ ПодключаемоеОборудованиеДСервер.ПроверитьУникальностьШтрихКода(Запись.ШтрихКод, Запись.ТипШтрихКода) Тогда
			Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("ШтрихКод не уникален!"));
			Отказ = ИСТИНА;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПроверитьТипШтрихКодаПередЗаписью() Тогда
		Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("ШтрихКод не соответсвует данному типу"));
		Отказ = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолученШтрихКодИзСШК(ШтрихКод)
	
	Запись.ТипШтрихКода = ПодключаемоеОборудованиеДСервер.ОпределитьТипШтрихКода(ШтрихКод);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                              // ПРИ ЗАКРЫТИИ   	
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
	
	Если ИспользоватьПодключаемоеОборудование Тогда
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить( "СканерШтрихКода" );
		МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                         // ПРИ ОТКРЫТИИ	
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Запись.Ответственный, ИСТИНА);
	
	Если ИспользоватьПодключаемоеОборудование И МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		
		ОписаниеОшибки = "" ;
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить( "СканерШтрихКода" );
		
		Если НЕ МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении оборудования произошла ошибка") + ": " + ОписаниеОшибки;
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000300", ЭтаФорма, Отказ, );	
	
	Если НЕ Отказ Тогда
	Если ЗначениеЗаполнено(Параметры.Номенклатура) Тогда
		Запись.Номенклатура = Параметры.Номенклатура;
		Если ЗначениеЗаполнено(Параметры.Серия) Тогда
			Запись.СерияНоменклатуры = Параметры.Серия;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(запись.ТипШтрихКода) Тогда
		запись.ТипШтрихКода = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ТипШтрихКодов");
		Если НЕ ЗначениеЗаполнено(запись.ТипШтрихКода) Тогда
			запись.ТипШтрихКода = ПланыВидовХарактеристик.ТипыШтрихКодов.CODE128;	
		КонецЕсли;
	КонецЕсли;
	
	ИспользоватьПодключаемоеОборудование = ПодключаемоеОборудованиеДСервер.ИспользоватьПодключаемоеОборудование();
	НоменклатураПриИзмененииНаСервере();	
										КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция   ПроверитьТипШтрихКодаПередЗаписью()
	
	Результат = ИСТИНА;
	ТипШК = ПодключаемоеОборудованиеДСервер.ОпределитьТипШтрихКода(Запись.ШтрихКод);
	Если (Запись.ТипШтрихКода = ПланыВидовХарактеристик.ТипыШтрихКодов.CODE39 ИЛИ
		Запись.ТипШтрихКода = ПланыВидовХарактеристик.ТипыШтрихКодов.CODE128 ИЛИ
		Запись.ТипШтрихКода = ПланыВидовХарактеристик.ТипыШтрихКодов.EAN128) И
		ТипШК = ПланыВидовХарактеристик.ТипыШтрихКодов.EAN13 Тогда
		// ничего не меняется
	ИначеЕсли (Запись.ТипШтрихКода = ПланыВидовХарактеристик.ТипыШтрихКодов.EAN8 ИЛИ
		Запись.ТипШтрихКода = ПланыВидовХарактеристик.ТипыШтрихКодов.CODE128) И
		ТипШК = ПланыВидовХарактеристик.ТипыШтрихКодов.CODE39 Тогда
		;
	ИначеЕсли Запись.ТипШтрихКода = ПланыВидовХарактеристик.ТипыШтрихКодов.EAN128 И
		ТипШК = ПланыВидовХарактеристик.ТипыШтрихКодов.CODE128 Тогда
		;
	ИначеЕсли Запись.ТипШтрихКода <> ТипШК Тогда
		Результат = ЛОЖЬ; // несоответствие типов
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ШтрихКодПриИзменении(Элемент)
	
	ПолученШтрихКодИзСШК(Запись.ШтрихКод);
	
КонецПроцедуры



