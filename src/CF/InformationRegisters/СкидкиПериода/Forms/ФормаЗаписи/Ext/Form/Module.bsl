// sza150624-1754

&НаКлиенте
Процедура ЗначениеПослеПриИзменении(Элемент)
	ОкончаниеИзменяли = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НоменклатурнаяГруппаПриИзменении(Элемент)
	ОбозначитьКонецДействия();
КонецПроцедуры

&НаСервере
Процедура ОбозначитьКонецДействия()
	
	Если Запись.Период < ОкончаниеДействия Тогда
		ОкончаниеДействия = Запись.Период + 1;
	КонецЕсли;
	
	ОкончаниеДействия = '00010101';
	ЗначениеПосле = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 СкидкиПериода.Период КАК Период,
	|	СкидкиПериода.Скидка
	|ИЗ РегистрСведений.СкидкиПериода КАК СкидкиПериода
	|ГДЕ СкидкиПериода.Период > &Период ";
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетНоменклатурыВРазрезеНоменклатурныхГрупп")
		И ЗначениеЗаполнено(Запись.НоменклатурнаяГруппа) Тогда
		Запрос.Текст = Запрос.Текст + " И СкидкиПериода.НоменклатурнаяГруппа = &НоменклатурнаяГруппа ";
		
		Запрос.УстановитьПараметр("НоменклатурнаяГруппа", Запись.НоменклатурнаяГруппа);
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + " И СкидкиПериода.Склад = &Склад ";
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетНоменклатурыВРазрезеНоменклатурныхГрупп")
		И ЗначениеЗаполнено(Запись.Склад) Тогда
		
		Запрос.УстановитьПараметр("Склад", Запись.Склад);
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО Период";
	
	Запрос.УстановитьПараметр("Период", Запись.Период);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи.Следующий();
		ОкончаниеДействия = ВыборкаДетальныеЗаписи.Период;
		ЗначениеПосле 	  = ВыборкаДетальныеЗаписи.Скидка;
		ОкончаниеИзменяли = ЛОЖЬ;
	КонецЕсли;
	
	ПериодСкидки.ДатаНачала = Запись.Период;
	ПериодСкидки.ДатаОкончания = ОкончаниеДействия;
	
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеДействияПриИзменении(Элемент)
	
	ОкончаниеИзменяли = ИСТИНА;
	Если Запись.Период < ОкончаниеДействия Тогда
		Запись.Период = ОкончаниеДействия - 1;
	КонецЕсли;
	ПериодСкидки.ДатаНачала = Запись.Период;
	ПериодСкидки.ДатаОкончания = ОкончаниеДействия;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ОбозначитьКонецДействия();
КонецПроцедуры

&НаКлиенте
Процедура ПериодСкидкиПриИзменении(Элемент)
	
	Если НЕ Запись.Период = ПериодСкидки.ДатаНачала Тогда
		Запись.Период = ПериодСкидки.ДатаНачала;	
		ОбозначитьКонецДействия();
	КонецЕсли;
	
	Если НЕ ОкончаниеДействия = ПериодСкидки.ДатаОкончания Тогда
		ОкончаниеДействия = ПериодСкидки.ДатаОкончания;
		ОкончаниеИзменяли = ИСТИНА;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ОкончаниеИзменяли
		И ЗначениеЗаполнено(ОкончаниеДействия) Тогда
		
		ЗаписьОкончанияСсылки = РегистрыСведений.СкидкиПериода.СоздатьМенеджерЗаписи();
		ЗаписьОкончанияСсылки.Активность			= ИСТИНА;
		ЗаписьОкончанияСсылки.Комментарий			= Запись.Комментарий;
		ЗаписьОкончанияСсылки.НоменклатурнаяГруппа	= Запись.НоменклатурнаяГруппа;
		ЗаписьОкончанияСсылки.Период				= ОкончаниеДействия;
		ЗаписьОкончанияСсылки.Скидка				= ЗначениеПосле;
		ЗаписьОкончанияСсылки.Склад					= Запись.Склад;
		
		ЗаписьОкончанияСсылки.Записать(ИСТИНА);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Запись.Ответственный, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Запись.Ответственный, ИСТИНА);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002355", ЭтаФорма, Отказ, );	
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Запись.Период) Тогда
			Запись.Период = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
		КонецЕсли;
		
		ОбозначитьКонецДействия();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	ОбозначитьКонецДействия();
КонецПроцедуры
