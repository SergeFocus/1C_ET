// sza141203-1545
// sza141128-2247

&НаКлиенте
Функция   ОбработатьПолученныйШтрихкодНаКлиенте(Знач ТекКод)

	Результат = ИСТИНА;
	КодЭлемента = ОбработатьПолученныйШтрихкодНаСервере(ТекКод);
	Если КодЭлемента <> Неопределено Тогда
		ОтборПоНоменклатуре = КодЭлемента;
		ОтборПоКонтрагентуПриИзмененииНаСервере();

	Иначе
		Результат = ЛОЖЬ;
	КонецЕсли;

	Возврат Результат;

КонецФункции

&НаСервереБезКонтекста
Функция   ОбработатьПолученныйШтрихкодНаСервере(Знач ТекКод)

	КодЭлемента = ОбщийМодульТоварСервер.НайтиНоменклатуруПоШтрихКоду(ТекКод, ЛОЖЬ);

	Если ЗначениеЗаполнено(КодЭлемента) Тогда
		Результат = КодЭлемента;
	Иначе
		Результат = Неопределено;
	КонецЕсли;

	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда

		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[1] = Неопределено Тогда
				ТекКод = Параметр[0];
			Иначе
				ТекКод = Параметр[1][1];
			КонецЕсли;

			Если НЕ ОбработатьПолученныйШтрихкодНаКлиенте(ТекКод) Тогда
				СообщитьОбОшибке(ТекКод)
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтборПоКонтрагентуПриИзменении(Элемент)
	ОтборПоКонтрагентуПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтборПоКонтрагентуПриИзмененииНаСервере()

	НетОтбораПоКонтрагенту = не ЗначениеЗаполнено(ОтборПоКонтрагенту);
	Список.Параметры.УстановитьЗначениеПараметра("НетОтбораПоКонтрагенту", НетОтбораПоКонтрагенту);
	Список.Параметры.УстановитьЗначениеПараметра("КлиентПоставщик", ОтборПоКонтрагенту);
	Элементы.КлиентПоставщик.Видимость = НетОтбораПоКонтрагенту;
	НетОтбораПоНоменклатуре = не ЗначениеЗаполнено(ОтборПоНоменклатуре);
	Список.Параметры.УстановитьЗначениеПараметра("НетОтбораПоНоменклатуре", НетОтбораПоНоменклатуре);
	Список.Параметры.УстановитьЗначениеПараметра("Номенклатура", ОтборПоНоменклатуре);
	Элементы.ОтборПоНоменклатуре.Видимость = НетОтбораПоНоменклатуре;
	Элементы.ОтключитьОтборы.Видимость = НЕ НетОтбораПоНоменклатуре ИЛИ НЕ НетОтбораПоКонтрагенту;

КонецПроцедуры

&НаКлиенте
Процедура ОтборПоНоменклатуреПриИзменении(Элемент)
	ОтборПоКонтрагентуПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьОтборы(Команда)

	ОтборПоКонтрагенту = Неопределено;
	ОтборПоНоменклатуре = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	ОтборПоКонтрагентуПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()

	Если ИспользоватьПодключаемоеОборудование
		И СканерБылПодключен Тогда

		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить( "СканерШтрихКода" );
		МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	КонецЕсли;

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);

	Если ИспользоватьПодключаемоеОборудование
		И НЕ ЗначениеЗаполнено(ОтборПоНоменклатуре)
		И МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда

		ОписаниеОшибки = "" ;
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить( "СканерШтрихКода" );
		Если НЕ МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении оборудования произошла ошибка") + ": " + ОписаниеОшибки;
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе
			СканерБылПодключен = ИСТИНА;
		КонецЕсли;
	КонецЕсли;

	ОтборПоКонтрагентуПриИзмененииНаСервере();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("00065B", ЭтаФорма, Отказ, );

	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);
		КонецЕсли;

		ИспользоватьПодключаемоеОборудование = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьПодключаемоеОборудование");
		ОтборПоКонтрагенту	= Параметры.КлиентПоставщик;
		ОтборПоНоменклатуре = параметры.Номенклатура;
		ОтборПоКонтрагентуПриИзмененииНаСервере();
		ОбщийМодульСервер.ОбеспечитьСписокОтборов(Список);
	КонецЕсли;

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СообщитьОбОшибке(Знач ТекКод)

	ТекстПредупреждения 	= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Позиция номенклатуры не найдена!");
	ЗаголовокПредупреждения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поиск по Штрих-Коду");
	ПоказатьПредупреждение(Неопределено, ТекстПредупреждения, 10, ЗаголовокПредупреждения);

КонецПроцедуры
