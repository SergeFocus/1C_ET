//sza140428-2144 SZA: 
//sza131007-1634  

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                          // ПРИ ОТКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Запись.Ответственный, истина);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                               // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002350");	
	
	Если НЕ ОТказ 
		И ЕстьЗависимыеЦены(Запись.Валюта) 
		И Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Есть Зависимые цены!") + символы.пс + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Рассчитать все зависимые цены по этому курсу валют (если он изменился)?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Расчет всех зависимых цен.."));
		РассчитатьВсеЗависимыеЦены();
		
	КонецЕсли;
	
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = Истина;
	
КонецПроцедуры

&НаСервере
Функция   ЕстьЗависимыеЦены(Знач Валюта) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 Цены.Цена
		|ИЗ РегистрСведений.Цены КАК Цены
		|ГДЕ Цены.Цена <> 0
		|	И Цены.ВидЦен.Зависимая = Истина
		|	И Цены.ВидЦен.ОсновнойВидЦен.ВалютаЦены = &ВалютаЦены";

	Запрос.УстановитьПараметр("ВалютаЦены", Валюта);

	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	Если ЗначениеЗаполнено(Параметры.Валюта) Тогда
		Запись.Валюта = Параметры.Валюта;
	КонецЕсли;
	
	НаименованиеБазововйВалюты = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта").Наименование ;
	ВыяснитьТекущийКурс();
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	ВыяснитьТекущийКурс();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ВыяснитьТекущийКурс();
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаСервере
Процедура ВыяснитьТекущийКурс()
	
	элементы.На1Валюту.Заголовок = сокрлп(НаименованиеБазововйВалюты) + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " 1 " + запись.Валюта;
	
	Если ЗначениеЗаполнено(Запись.Валюта) Тогда
		Если Запись.Валюта.Предопределенный Тогда
			ТекущийКурс = 1;
			Запись.Курс = 1;
			элементы.Курс.Доступность = ложь;
		Иначе
			ТекущийКурс = ОбщийМодульПовтор.ПолучитьТекущийКурс(Запись.Валюта);
			Элементы.Курс.ТолькоПросмотр = Ложь;
		КонецЕсли;
		
		Элементы.ТекущийКурс.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Курс на") + " " + Формат(ОбщийМодульСервисСервер.ПользователяТекущаяДата(), "ДФ=dd.MM.yyyy") + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(" от") + " " + Справочники.Валюты.ОсновнаяВалюта.Наименование;
	КонецЕсли;	
	ОбратныйПересчетКурса();
	
КонецПроцедуры

&НаКлиенте
Процедура КурсПриИзменении(Элемент)
	ОбратныйПересчетКурса();
КонецПроцедуры

&НаСервере
Процедура ОбратныйПересчетКурса()
	
	Если ЗначениеЗаполнено(запись.Валюта) 
		и не запись.Курс = 0 Тогда
		элементы.ОбратныйПересчет.Заголовок = "1 " + НаименованиеБазововйВалюты + " = " + формат(1 / запись.Курс, "ЧЦ=10; ЧДЦ=4") + " " + запись.Валюта;
	иначе
		элементы.ОбратныйПересчет.Заголовок = "";
	КонецЕсли;  	
	
КонецПроцедуры 

&НаКлиенте
Процедура НаНачалоМесяца(Команда)
	запись.Период = НачалоМесяца(ОбщийМодульКлиент.ПользователяТекущаяДата());
КонецПроцедуры

&НаКлиенте
Процедура РасчитатьВсеЗависимыеЦены(Команда)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002350");	
	
	Если НЕ ОТказ 
		И ЕстьЗависимыеЦены(Запись.Валюта) 
		и Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Есть Зависимые цены!") + символы.пс + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Рассчитать все зависимые цены по этой валюте?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Расчет всех зависимых цен.."));
		РассчитатьВсеЗависимыеЦены();
		
	КонецЕсли;
	
	глПроверятьСообщения = Истина;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьВсеЗависимыеЦены()	
	ОбщийМодульСервер.РассчитатьВсеЗависимыеЦеныПриСменеКурса(Запись.Валюта);	
КонецПроцедуры
