//sza140509-0122 SZA: 
//sza131129-2329 SZA: 

&НаКлиенте
Процедура ЗначениеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	ТекущиеДанные.ДатаУстановки = ТекущаяДата();
	ТекущиеДанные.Пользователь 	= ТекущийПользователь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	ОбновитьВидОкна();
	Если НЕ ВидОкнаВсеНастройки Тогда
		УстановитьОтборПоИерархииОбработчикОжидания();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Отказ Тогда
		ТекущийПользователь = параметрысеанса.ТекущийПользователь;
		Список.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", ТекущийПользователь);
		СписокВсеНастройки.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", ТекущийПользователь);
		
		ПлатнаяВерсия = ОбщийМодульПовтор.ПлатнаяВерсия();
		Если НЕ платнаяверсия Тогда
			
			ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("НастройкаКод");
			ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.НеСодержит;
			ЭлементОтбора.ПравоеЗначение 	= "NF";
			ЭлементОтбора.Использование 	= Истина;
			Элементы.Список.Обновить();
			
			ЭлементОтбора = СписокВсеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("НастройкаКод");
			ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.НеСодержит;
			ЭлементОтбора.ПравоеЗначение 	= "NF";
			ЭлементОтбора.Использование 	= Истина;
			Элементы.Список.Обновить();
			
		КонецЕсли;
		
		ОбновитьПараметрыПользователя();
		ОбщийМодульСервер.ОбеспечитьСписокОтборов(Список);	
		ОбщийМодульСервер.ОбеспечитьСписокОтборов(СписокВсеНастройки);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	ТекущиеДанные.Пользователь = ТекущийПользователь;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПараметрыПользователя()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиПользователей.Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.НастройкиПользователей КАК НастройкиПользователей
	|ГДЕ
	|	НастройкиПользователей.ЭтоГруппа = ЛОЖЬ
	|	И НастройкиПользователей.ПометкаУдаления = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		РСНЗ = регистрысведений.НастройкиПользователей.СоздатьНаборЗаписей();
		
		РСНЗ.Отбор.Пользователь.Установить(ТекущийПользователь);
		РСНЗ.Отбор.Настройка.Установить(ВыборкаДетальныеЗаписи.Ссылка);
		
		РСНЗ.Прочитать();
		если РСНЗ.Количество() = 0 тогда
			
			НоваяЗапись = РСНЗ.Добавить();
			НоваяЗапись.Пользователь 	= ТекущийПользователь;
			НоваяЗапись.Настройка 		= ВыборкаДетальныеЗаписи.Ссылка;			
			
			РСНЗ.Записать(Истина);          	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗначениямиОбщихНастроек(Команда)
	
	ЗаполнитьЗначениямиОбщихНастроекНаСервере(ТекущийПользователь);
	ЭтаФорма.ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьЗначениямиОбщихНастроекНаСервере(ТекущийПользователь)
	
	ПредопределеннаяНастройка = ПланыВидовХарактеристик.НастройкиПользователей.Выбрать();
	Пока ПредопределеннаяНастройка.Следующий() Цикл
		
		Если Не ПредопределеннаяНастройка.ЭтоГруппа Тогда
			НастройкаИмя 	= планывидовхарактеристик.НастройкиПользователей.ПолучитьИмяПредопределенного(ПредопределеннаяНастройка.Ссылка);
			Настройка 		= ПланыВидовХарактеристик.НастройкиПользователей[НастройкаИмя];
			
			РСНЗ = регистрысведений.НастройкиПользователей.СоздатьНаборЗаписей();
			
			РСНЗ.Отбор.Пользователь.Установить(ТекущийПользователь);
			РСНЗ.Отбор.Настройка.Установить(Настройка);
			
			Добавлять = Ложь;
			РСНЗ.Прочитать();
			если РСНЗ.Количество() = 0 тогда
				Добавлять = Истина;
			Иначе
				Если РСНЗ[0].ЗначениеНастройки = Неопределено 
					или НЕ ЗначениеЗаполнено(РСНЗ[0].ЗначениеНастройки) тогда
					
					Добавлять = Истина;
				КонецЕсли;
			КонецЕсли;
			
			Если Добавлять Тогда	
				РСНЗ.Очистить();
				
				НоваяЗапись = РСНЗ.Добавить();
				НоваяЗапись.Пользователь = ТекущийПользователь;
				НоваяЗапись.Настройка 	 = Настройка;						
				НоваяЗапись.ЗначениеНастройки = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты(НастройкаИмя, Истина);
				
				РСНЗ.Записать(Истина);          	
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыНастроекПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("УстановитьОтборПоИерархииОбработчикОжидания", 0.2, Истина);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоИерархииОбработчикОжидания()
	
	СменуПроизвелилева = истина;
	ТекущиеДанныеНавигации = Элементы.ГруппыНастроек.ТекущиеДанные;
	
	ЗначениеОтбора = ?(ТекущиеДанныеНавигации <> Неопределено, ТекущиеДанныеНавигации.Ссылка, ПредопределенноеЗначение("ПланВидовХарактеристик.НастройкиПользователей.ПустаяСсылка"));
	ОбщийМодульКлиент.УстановитьЭлементОтбора(
	Список.Отбор,
	"Настройка.Родитель",
	ЗначениеОтбора,
	ВидСравненияКомпоновкиДанных.Равно,
	,
	Истина
	);
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьЛичныеНастройки(Команда)
	
	СброситьЛичныеНастройкиНаСервере();
	ЭтаФорма.ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаСервере
Процедура СброситьЛичныеНастройкиНаСервере()
	
	РСНЗ = регистрысведений.НастройкиПользователей.СоздатьНаборЗаписей();
	РСНЗ.Отбор.Пользователь.Установить(ТекущийПользователь);
	РСНЗ.Прочитать();
	РСНЗ.Очистить();
	РСНЗ.Записать(Истина);
	
	ОбновитьПовторноИспользуемыеЗначения();
	ОбновитьПараметрыПользователя();
	
КонецПроцедуры

&НаКлиенте
Процедура СменитьВидОкна(Команда)
	
	ВидОкнаВсеНастройки = НЕ ВидОкнаВсеНастройки;
	ОбновитьВидОкна();	
	Если НЕ ВидОкнаВсеНастройки Тогда
		УстановитьОтборПоИерархииОбработчикОжидания();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидОкна()
	
	Элементы.ГруппаГоризонт.Видимость 		= НЕ ВидОкнаВсеНастройки;
	Элементы.ГруппаВсеНастройки.Видимость 	= ВидОкнаВсеНастройки;
	
Конецпроцедуры;
