// sza140509-0125
// sza131005-0242 :

&НаКлиенте
Процедура ДобавитьЗаписьНаКлиенте(ТекКод)

	ТекстВопроса = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("ШтрихКод") + " " + ТекКод + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("не зарегистрирован. Создать новую запись?");
	Ответ = Неопределено;
	ПоказатьВопрос(Новый ОписаниеОповещения("ДобавитьЗаписьНаКлиентеЗавершение", ЭтаФорма, Новый Структура("ТекКод", ТекКод)), ТекстВопроса, РежимДиалогаВопрос.ДаНет, 50);

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗаписьНаКлиентеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт

	ТекКод = ДополнительныеПараметры.ТекКод;
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПараметрыФормы = Новый Структура("ШтрихКод", ТекКод);
		ОткрытьФорму("РегистрСведений.ШтрихКоды.ФормаЗаписи", ПараметрыФормы);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ОбработатьПолученныйШтрихкод(ТекКод)

	ВозвращаемоеЗначение = ИСТИНА;
	Результат = ПодключаемоеОборудованиеДСервер.ПоискПоРегиструСведенийШтрихКоды(ТекКод);
	Если Результат.Свойство("Номенклатура") Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("Номенклатура", Результат.Номенклатура);
		Отбор.Вставить("ШтрихКод", ТекКод);
		Отбор.Вставить("ТипШтрихКода", Результат.ТипШтрихКода);
		КлючЗаписи = РегистрыСведений.ШтрихКоды.СоздатьКлючЗаписи(Отбор);
		Элементы.Список.СтрокаТовара = КлючЗаписи;
	Иначе
		ВозвращаемоеЗначение = ЛОЖЬ;
	КонецЕсли;

	Возврат ВозвращаемоеЗначение;

КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	// ПодключаемоеОборудование

	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда

		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[1] = Неопределено Тогда
				ТекКод = Параметр[0];
			Иначе
				ТекКод = Параметр[1][1];
			КонецЕсли;

			Если НЕ ОбработатьПолученныйШтрихкод(ТекКод) Тогда
				ДобавитьЗаписьНаКлиенте(ТекКод);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	// Конец ПодключаемоеОборудование

КонецПроцедуры

&НаСервере
Процедура отборНаСервере(ЭлементДляОтбора, ПолеОтбора, ЗначениеОтбора) // Экспорт

	Элемент = ЭлементДляОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Элемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПолеОтбора);
	Элемент.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
	Элемент.ПравоеЗначение = ЗначениеОтбора;
	Элемент.Использование  = ИСТИНА;

КонецПроцедуры // отборНаСервере

&НаКлиенте
Процедура ПриЗакрытии()                                                  // ПРИ ЗАКРЫТИИ   	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);

	Если ИспользоватьПодключаемоеОборудование Тогда
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить( "СканерШтрихКода" );
		МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	КонецЕсли;

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                                                    // ПРИ ОТКРЫТИИ	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);

	Если ИспользоватьПодключаемоеОборудование
		И МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда

		ОписаниеОшибки = "" ;
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить( "СканерШтрихКода" );

		Если НЕ МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке( "При подключении оборудования произошла ошибка") + ": " + ОписаниеОшибки;
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ

	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000200", ЭтаФорма, Отказ, );

	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);
		КонецЕсли;

		ИспользоватьПодключаемоеОборудование = ПодключаемоеОборудованиеДСервер.ИспользоватьПодключаемоеОборудование();

		Если Параметры.Свойство("Номенклатура") Тогда
			отборНаСервере(Список.Отбор, "Номенклатура", Параметры.Номенклатура);
		КонецЕсли;

		ОбщийМодульСервер.ОбеспечитьСписокОтборов(Список);
	КонецЕсли;

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры
