// sza151108-1900

&НаКлиенте
Процедура ДопРеквизитПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ДопРеквизит) Тогда
		Запись.НаименованиеПараметра = "" + ДопРеквизит;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьПустуюСтроку(Команда)
	Запись.ЗначениеДляЗамены = "";
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьПустуюСтрокуЗначению(Команда)
	Запись.НаЗначение = "";
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Запись.ДлинаЗначения = СтрДлина(Запись.ЗначениеДляЗамены);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Запись.Ответственный, ИСТИНА);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002350", ЭтаФорма, Отказ, );	
	//
	//Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры
