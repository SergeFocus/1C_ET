// sza140420-2113
// sza131001-0326 :

&НаКлиенте
Процедура ВидЦенПриИзменении(Элемент)

	проверитьЗависимостьВидаЦен();
	ПроверитьВидЦенЗависимый(Новый ОписаниеОповещения("ВидЦенПриИзмененииЗавершение", ЭтаФорма));

КонецПроцедуры

&НаКлиенте
Процедура ВидЦенПриИзмененииЗавершение(Результат, ДополнительныеПараметры) Экспорт

	запись.Вручную = ИСТИНА;

КонецПроцедуры

&НаСервере
Процедура ЗаблокироватьЗапись()

	ОбщийМодульСервер.ОбработатьБлокировку(, ЭтаФорма);
	Элементы.Сегодня.Доступность 		= ЛОЖЬ;
	Элементы.НаНачалоМесяца.Доступность = ЛОЖЬ;
	Элементы.ВидЦен.Доступность 		= ЛОЖЬ;
	Элементы.Цена.Доступность 		  	= ЛОЖЬ;
	Элементы.Номенклатура.Доступность 	= ЛОЖЬ;
	Элементы.Период.Доступность 		= ЛОЖЬ;

КонецПроцедуры

&НаКлиенте
Процедура НаНачалоМесяца(Команда)

	Запись.Период = НачалоМесяца(Запись.Период);
	запись.Вручную = ИСТИНА;

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)

	Запись.Вручную = ИСТИНА;
	Элементы.ЕдиницаИзмерения.Видимость = ИспользоватьЕдиницыИзмеренияНоменклатуры И ЗначениеЗаполнено(Запись.Номенклатура) И ОбщийМодульПовтор.УНоменклатурыЕстьЕдиницыИзмерения(Запись.Номенклатура);

КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)

	запись.Вручную = ИСТИНА;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	СтрокаТовара = Новый Структура;
	СтрокаТовара.Вставить("Номенклатура", ТекущийОбъект.Номенклатура);
	СтрокаТовара.Вставить("Цена", ТекущийОбъект.Цена);
	ОбщийМодульСервер.УстановитьЦенуИВсеЗависимые(ТекущийОбъект.ВидЦен, СтрокаТовара, , ТекущийОбъект.Комментарий, ТекущийОбъект.Период, ИСТИНА, , , , , ТекущийОбъект.ЕдиницаИзмерения);

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                      // ПРИ ЗАКРЫТИИ

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                 // ПРИ ОТКРЫТИИ

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Запись.Ответственный, ИСТИНА);
	ПроверитьВидЦенЗависимый(Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтаФорма));

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)  // ПРИ СОЗДАНИИ НА СЕРВЕРЕ

	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002350", ЭтаФорма, Отказ, );

	Если НЕ Отказ Тогда
		ИспользоватьЕдиницыИзмеренияНоменклатуры = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьЕдиницыИзмеренияНоменклатуры");
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(Запись.Номенклатура) Тогда
			Запись.Номенклатура = Параметры.Номенклатура;
			Запись.Период = Параметры.Период;
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(Запись.ВидЦен) Тогда
			Запись.ВидЦен  = ПредопределенноеЗначение("Справочник.ВидыЦен.ГлавныйВидЦен");
			запись.Вручную = ИСТИНА;
		КонецЕсли;

		ПроверитьЗависимостьВидаЦен();
	КонецЕсли;

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВидЦенЗависимый(Знач Оповещение)

	Если ЭтоЗависимаяЦена Тогда
		ТекстВопроса = "" + Запись.ВидЦен + " - " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("это Зависимый Вид цен.") + символы.пс + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Редакция вручную не рекомендована. Все равно открыть для записи?");
		ПоказатьВопрос(Новый ОписаниеОповещения("ПроверитьВидЦенЗависимыйЗавершение", ЭтаФорма, Новый Структура("Оповещение", Оповещение)), ТекстВопроса, РежимДиалогаВопрос.ДаНет);

        Возврат;
	КонецЕсли;

	ПроверитьВидЦенЗависимыйФрагмент(Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВидЦенЗависимыйЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Оповещение = ДополнительныеПараметры.Оповещение;

	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		ЗаблокироватьЗапись();
	КонецЕсли;

	ПроверитьВидЦенЗависимыйФрагмент(Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВидЦенЗависимыйФрагмент(Знач Оповещение)
	ВыполнитьОбработкуОповещения(Оповещение);
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗависимостьВидаЦен()

	Если ЗначениеЗаполнено(Запись.ВидЦен) Тогда
		ЭтоЗависимаяЦена = Запись.ВидЦен.Зависимая;
	Иначе
		ЭтоЗависимаяЦена = ЛОЖЬ;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Сегодня(Команда)

	Запись.Период = ОбщийМодульКлиент.ПользователяТекущаяДата();
	запись.Вручную = ИСТИНА;

КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	запись.Вручную = ИСТИНА;
КонецПроцедуры
