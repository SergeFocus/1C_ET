// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
// Функция осуществляет подключение устройства.
// 
// Параметры:
//  ОбъектДрайвера   - <*>
//           - ОбъектДрайвера драйвера торгового оборудования.
// 
// Возвращаемое значение:
//  <Булево> - Результат работы функции.
// 
// Функция осуществляет выгрузку строки в терминал сбора данных.
// 
// Параметры:
//  Объект                         - <*>
//                                 - Объект драйвера торгового оборудования.
// 
//  Штрихкод                       - <Строка>
//                                 - Штрихкод товара.
// 
//  Номенклатура                   - <СправочникСсылка.Номенклатура>
//                                 - Номенклатура.
// 
//  ЕдиницаИзмерения               - <СправочникСсылка.ЕдиницыИзмерения>
//                                 - Единица измерения номенклатуры.
// 
//  ХарактеристикаНоменклатуры     - <СправочникСсылка.ХарактеристикиНоменклатуры>
//                                 - Характеристика номенклатуры.
// 
//  СерияНоменклатуры              - <СправочникСсылка.СерииНоменклатуры>
//                                 - Серия номенклатуры.
// 
//  Качество                       - <СправочникСсылка.Качество>
//                                 - Качество.
// 
//  Цена                           - <Число>
//                                 - Цена номенклатуры.
// 
//  Количество                     - <Число>
//                                 - Количество номенклатуры.
// 
// Возвращаемое значение:
//  <ПеречислениеСсылка.ТООшибки*> - Результат работы функции
// 
Функция ВыгрузитьСтроку(ОбъектДрайвера, Параметры, ПараметрыПодключения,
                        Штрихкод, Номенклатура, ЕдиницаИзмерения,
                        ХарактеристикаНоменклатуры, СерияНоменклатуры,
                        Качество, Цена, Количество, ВыходныеПараметры) Экспорт

	Результат         = ИСТИНА;

	Для Индекс = 1 По 16 Цикл
		ОбъектДрайвера.ИндексПоляОтчета = Индекс - 1;
		ОбъектДрайвера.ПолеОтчета = "";
	КонецЦикла;

	Если Параметры.ФорматВыгрузки.Количество() > 0 Тогда
		Для Каждого СтрокаФормата Из Параметры.ФорматВыгрузки Цикл
			Если СтрокаФормата.Наименование = "Штрихкод" Тогда
				ОбъектДрайвера.ИндексПоляОтчета = СтрокаФормата.НомерПоля - 1;
				ОбъектДрайвера.ПолеОтчета = Штрихкод;
			ИначеЕсли СтрокаФормата.Наименование = "Номенклатура" Тогда
				ОбъектДрайвера.ИндексПоляОтчета = СтрокаФормата.НомерПоля - 1;
				ОбъектДрайвера.ПолеОтчета = Строка(Номенклатура);
			ИначеЕсли СтрокаФормата.Наименование = "ЕдиницаИзмерения" Тогда
				ОбъектДрайвера.ИндексПоляОтчета = СтрокаФормата.НомерПоля - 1;
				ОбъектДрайвера.ПолеОтчета = Строка(ЕдиницаИзмерения);
			ИначеЕсли СтрокаФормата.Наименование = "ХарактеристикаНоменклатуры" Тогда
				ОбъектДрайвера.ИндексПоляОтчета = СтрокаФормата.НомерПоля - 1;
				ОбъектДрайвера.ПолеОтчета = Строка(ХарактеристикаНоменклатуры);
			ИначеЕсли СтрокаФормата.Наименование = "СерияНоменклатуры" Тогда
				ОбъектДрайвера.ИндексПоляОтчета = СтрокаФормата.НомерПоля - 1;
				ОбъектДрайвера.ПолеОтчета = Строка(СерияНоменклатуры);
			ИначеЕсли СтрокаФормата.Наименование = "Качество" Тогда
				ОбъектДрайвера.ИндексПоляОтчета = СтрокаФормата.НомерПоля - 1;
				ОбъектДрайвера.ПолеОтчета = Строка(Качество);
			ИначеЕсли СтрокаФормата.Наименование = "Цена" Тогда
				ОбъектДрайвера.ИндексПоляОтчета = СтрокаФормата.НомерПоля - 1;
				ОбъектДрайвера.ПолеОтчета = Цена;
			ИначеЕсли СтрокаФормата.Наименование = "Количество" Тогда
				ОбъектДрайвера.ИндексПоляОтчета = СтрокаФормата.НомерПоля - 1;
				ОбъектДрайвера.ПолеОтчета = Количество;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ОбъектДрайвера.ИндексПоляОтчета = 0;
		ОбъектДрайвера.ПолеОтчета       = Штрихкод;
		ОбъектДрайвера.ИндексПоляОтчета = 1;
		ОбъектДрайвера.ПолеОтчета       = Номенклатура;
		ОбъектДрайвера.ИндексПоляОтчета = 2;
		ОбъектДрайвера.ПолеОтчета       = ЕдиницаИзмерения;
		ОбъектДрайвера.ИндексПоляОтчета = 3;
		ОбъектДрайвера.ПолеОтчета       = ХарактеристикаНоменклатуры;
		ОбъектДрайвера.ИндексПоляОтчета = 4;
		ОбъектДрайвера.ПолеОтчета       = СерияНоменклатуры;
		ОбъектДрайвера.ИндексПоляОтчета = 5;
		ОбъектДрайвера.ПолеОтчета       = Качество;
		ОбъектДрайвера.ИндексПоляОтчета = 6;
		ОбъектДрайвера.ПолеОтчета       = Цена;
		ОбъектДрайвера.ИндексПоляОтчета = 7;
		ОбъектДрайвера.ПолеОтчета       = Количество;
	КонецЕсли;
	ОбъектДрайвера.УстановитьЗапись();

	Если ОбъектДрайвера.Результат <> 0 Тогда
		ВыходныеПараметры.Очистить();
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(ОбъектДрайвера.ОписаниеРезультата);

		Результат = ЛОЖЬ;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
// Функция осуществляет выгрузку строки в терминал сбора данных.
// 
Функция ВыгрузитьТаблицу(ОбъектДрайвера, Параметры, ПараметрыПодключения, ТаблицаВыгрузки, ВыходныеПараметры)

	Результат = ИСТИНА;

	Результат = НачатьВыгрузку(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры);

	Если Результат Тогда
		Для Индекс = 0 По ТаблицаВыгрузки.Количество() - 1 Цикл
			Результат = ВыгрузитьСтроку(ОбъектДрайвера, Параметры, ПараметрыПодключения,
			                            ТаблицаВыгрузки[Индекс][0].Значение, ТаблицаВыгрузки[Индекс][1].Значение,
			                            ТаблицаВыгрузки[Индекс][2].Значение, ТаблицаВыгрузки[Индекс][3].Значение,
			                            ТаблицаВыгрузки[Индекс][4].Значение, ТаблицаВыгрузки[Индекс][5].Значение,
			                            ТаблицаВыгрузки[Индекс][6].Значение, ТаблицаВыгрузки[Индекс][7].Значение,
			                            ВыходныеПараметры);
			Если НЕ Результат Тогда
				ОбъектДрайвера.ПрерватьОперацию();
				Прервать;
			КонецЕсли;
		КонецЦикла;

		Если Результат Тогда
			Результат = ЗавершитьВыгрузку(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры);
		КонецЕсли;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция получает, обрабатывает и перенаправляет на исполнение команду к драйверу
// 
Функция ВыполнитьКоманду(Команда, ВходныеПараметры = Неопределено, ВыходныеПараметры = Неопределено,
                         ОбъектДрайвера, Параметры, ПараметрыПодключения) Экспорт

	Результат = ИСТИНА;

	ВыходныеПараметры = Новый Массив();

	// Выгрузка таблицы в устройство
	Если Команда = "ВыгрузитьТаблицу" ИЛИ Команда = "UploadDirectory" Тогда
		ТаблицаВыгрузки = ВходныеПараметры[1];

		Результат = ВыгрузитьТаблицу(ОбъектДрайвера, Параметры, ПараметрыПодключения,
									 ТаблицаВыгрузки, ВыходныеПараметры);

	// Загрузка таблицы из устройства
	ИначеЕсли Команда = "ЗагрузитьТаблицу" ИЛИ Команда = "DownloadDocument" Тогда
		Результат = ЗагрузитьТаблицу(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры);
	// Тестирование устройства
	ИначеЕсли Команда = "CheckHealth" Тогда
		Результат = ТестУстройства(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры);
	// Получение версии драйвера
	ИначеЕсли Команда = "ПолучитьВерсиюДрайвера" Тогда
		Результат = ПолучитьВерсиюДрайвера(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры);

	// Указанная команда не поддерживается данным драйвером
	Иначе
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(НСтр("ru='Команда ""%Команда%"" не поддерживается данным драйвером.'"));
		ВыходныеПараметры[1] = СтрЗаменить(ВыходныеПараметры[1], "%Команда%", Команда);
		Результат = ЛОЖЬ;

	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция осуществляет завершение процедуры выгрузки данных в терминал сбора данных.
// 
Функция ЗавершитьВыгрузку(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры)

	Результат = ИСТИНА;

	ОбъектДрайвера.ПоказатьПрогресс = ИСТИНА;
	ОбъектДрайвера.РежимДобавления  = 1;
	ОбъектДрайвера.ЗакончитьДобавление();
	Если ОбъектДрайвера.Результат <> 0 Тогда
		ВыходныеПараметры.Очистить();
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(ОбъектДрайвера.ОписаниеРезультата);

		Результат = ЛОЖЬ;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция осуществляет завершение процедуры загрузки данных из терминала сбора данных.
// 
// Параметры:
//  Объект                         - <*>
//                                 - Объект драйвера торгового оборудования.
// 
// Возвращаемое значение:
//  <ПеречислениеСсылка.ТООшибки*> - Результат работы функции.
// 
Функция ЗавершитьЗагрузку(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры)

	Результат = ИСТИНА;

	ОбъектДрайвера.КонецОтчета();
	Если ОбъектДрайвера.Результат <> 0 Тогда
		ВыходныеПараметры.Очистить();
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(ОбъектДрайвера.ОписаниеРезультата);

		Результат = ЛОЖЬ;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция осуществляет загрузку строки из терминала сбора данных.
// 
// Параметры:
//  Объект                         - <*>
//                                 - Объект драйвера торгового оборудования.
// 
//  Штрихкод                       - <Строка>
//                                 - Штрихкод, соответствующий данной номенклатуре.
// 
//  Количество                     - <Число>
//                                 - Выходной параметр; количество номенклатуры.
// 
// Возвращаемое значение:
//  <ПеречислениеСсылка.ТООшибки*> - Результат работы функции.
// 
Функция ЗагрузитьСтроку(ОбъектДрайвера, Параметры, ПараметрыПодключения, Штрихкод, Количество, ВыходныеПараметры)

	Результат  = ИСТИНА;
	Штрихкод   = Неопределено;
	Количество = Неопределено;

	ОбъектДрайвера.ПолучитьЗапись();
	Если ОбъектДрайвера.Результат = 0 Тогда
		Если Параметры.ФорматЗагрузки.Количество() > 0 Тогда
			Для Каждого СтрокаФормата Из Параметры.ФорматЗагрузки Цикл
				Если СтрокаФормата.Наименование = "Штрихкод" Тогда
					ОбъектДрайвера.ИндексПоляОтчета = СтрокаФормата.НомерПоля - 1;
					Штрихкод   = ОбъектДрайвера.ПолеОтчета;
				ИначеЕсли СтрокаФормата.Наименование = "Количество" Тогда
					ОбъектДрайвера.ИндексПоляОтчета = СтрокаФормата.НомерПоля - 1;
					Количество = ОбъектДрайвера.ПолеОтчета;
				КонецЕсли;
			КонецЦикла;
		Иначе
			ОбъектДрайвера.ИндексПоляОтчета = 0;
			Штрихкод = ОбъектДрайвера.ПолеОтчета;
			ОбъектДрайвера.ИндексПоляОтчета = 1;
			Количество = ОбъектДрайвера.ПолеОтчета;
		КонецЕсли;
	Иначе
		ВыходныеПараметры.Очистить();
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(ОбъектДрайвера.ОписаниеРезультата);

		Результат = ЛОЖЬ;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция осуществляет загрузку строки из терминала сбора данных.
// 
Функция ЗагрузитьТаблицу(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры)

	Результат  = ИСТИНА;
	Штрихкод   = Неопределено;
	Количество = Неопределено;

	Результат = НачатьЗагрузку(ОбъектДрайвера, Параметры, ПараметрыПодключения, Количество, ВыходныеПараметры);

	Если Результат Тогда
		ВыходныеПараметры.Добавить(Новый Массив());
		Для Индекс = 1 По Количество Цикл
			Результат = ЗагрузитьСтроку(ОбъектДрайвера, Параметры, ПараметрыПодключения,
			                            Штрихкод, Количество, ВыходныеПараметры);
			Если Результат Тогда
				ВыходныеПараметры[0].Добавить(Штрихкод);
				ВыходныеПараметры[0].Добавить(Количество);
			Иначе
				ОбъектДрайвера.ПрерватьОперацию();
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Если Результат Тогда
		Результат = ЗавершитьЗагрузку(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры);
		Если НЕ Результат Тогда
			ВыходныеПараметры.Очистить();
			ВыходныеПараметры.Добавить(999);
			ВыходныеПараметры.Добавить(ОбъектДрайвера.ОписаниеРезультата);

			Результат = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция осуществляет подготовку процедуры выгрузки данных в терминал.
// 
Функция НачатьВыгрузку(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры)

	Результат = ИСТИНА;

	ОбъектДрайвера.НомерТекущегоУстройства = ПараметрыПодключения.ИДУстройства;

	ОбъектДрайвера.НомерФормы = Параметры.ТаблицаВыгрузки;

	ОбъектДрайвера.НачатьДобавление();
	Если ОбъектДрайвера.Результат <> 0 Тогда
		ВыходныеПараметры.Очистить();
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(ОбъектДрайвера.ОписаниеРезультата);

		Результат = ЛОЖЬ;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция осуществляет подготовку процедуры загрузки данных из терминала сбора данных.
// 
Функция НачатьЗагрузку(ОбъектДрайвера, Параметры, ПараметрыПодключения, Количество, ВыходныеПараметры)

	Результат = ИСТИНА;

	ОбъектДрайвера.НомерТекущегоУстройства = ПараметрыПодключения.ИДУстройства;

	ОбъектДрайвера.НомерФормы       = Параметры.ТаблицаЗагрузки;
	ОбъектДрайвера.ПоказатьПрогресс = ИСТИНА;

	ОбъектДрайвера.НачалоОтчета();
	Если ОбъектДрайвера.Результат = 0 Тогда
		Количество = ОбъектДрайвера.КоличествоЗаписейОтчета;
	Иначе
		ВыходныеПараметры.Очистить();
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(ОбъектДрайвера.ОписаниеРезультата);

		Результат = ЛОЖЬ;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция осуществляет отключение устройства.
// 
// Параметры:
//  ОбъектДрайвера - <*>
//         - ОбъектДрайвера драйвера торгового оборудования.
// 
// Возвращаемое значение:
//  <Булево> - Результат работы функции.
// 
Функция ОтключитьУстройство(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры) Экспорт

	Результат = ИСТИНА;

	ВыходныеПараметры = Новый Массив();

	ОбъектДрайвера.НомерТекущегоУстройства = ПараметрыПодключения.ИДУстройства;
	ОбъектДрайвера.УстройствоВключено = 0;
	ОбъектДрайвера.УдалитьУстройство();

	Возврат Результат;

КонецФункции

Функция ПодключитьУстройство(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры) Экспорт

	Результат = ИСТИНА;
	ПараметрыПодключения.Вставить("ИДУстройства", "");

	ВыходныеПараметры = Новый Массив();

	// Проверка параметров устройства
	Порт            = Неопределено;
	Скорость        = Неопределено;
	IPПорт          = Неопределено;
	Четность        = Неопределено;
	БитыДанных      = Неопределено;
	СтопБиты        = Неопределено;
	ТаблицаВыгрузки = Неопределено;
	ТаблицаЗагрузки = Неопределено;
	Разделитель     = Неопределено;
	ФорматВыгрузки  = Неопределено;
	ФорматЗагрузки  = Неопределено;
	Модель          = Неопределено;
	Наименование    = Неопределено;

	Параметры.Свойство("Порт"           , Порт);
	Параметры.Свойство("Скорость"       , Скорость);
	Параметры.Свойство("IPПорт"         , IPПорт);
	Параметры.Свойство("Четность"       , Четность);
	Параметры.Свойство("БитыДанных"     , БитыДанных);
	Параметры.Свойство("СтопБиты"       , СтопБиты);
	Параметры.Свойство("ТаблицаВыгрузки", ТаблицаВыгрузки);
	Параметры.Свойство("ТаблицаЗагрузки", ТаблицаЗагрузки);
	Параметры.Свойство("Разделитель"    , Разделитель);
	Параметры.Свойство("ФорматВыгрузки" , ФорматВыгрузки);
	Параметры.Свойство("ФорматЗагрузки" , ФорматЗагрузки);
	Параметры.Свойство("Модель"         , Модель);
	Параметры.Свойство("Наименование"   , Наименование);

	Если Порт            = Неопределено
	 Или Скорость        = Неопределено
	 Или IPПорт          = Неопределено
	 Или Четность        = Неопределено
	 Или БитыДанных      = Неопределено
	 Или СтопБиты        = Неопределено
	 Или ТаблицаВыгрузки = Неопределено
	 Или ТаблицаЗагрузки = Неопределено
	 Или Разделитель     = Неопределено
	 Или ФорматВыгрузки  = Неопределено
	 Или ФорматЗагрузки  = Неопределено
	 Или Модель          = Неопределено
	 Или Наименование    = Неопределено Тогда
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(НСтр("ru='Не настроены параметры устройства.
		|Для корректной работы устройства необходимо задать параметры его работы.
		|Сделать это можно при помощи формы ""Настройка параметров"" модели
		|подключаемого оборудования в форме ""Подключение и настройка оборудования"".'"));

		Результат = ЛОЖЬ;
	КонецЕсли;

	Если Результат Тогда
		ОбъектДрайвера.ДобавитьУстройство();
		Если ОбъектДрайвера.Результат = 0 Тогда
			ПараметрыПодключения.ИДУстройства = ОбъектДрайвера.НомерТекущегоУстройства;
			ОбъектДрайвера.НаименованиеТекущегоУстройства = Параметры.Наименование;

			ОбъектДрайвера.Модель = Число(Параметры.Модель);

			ОбъектДрайвера.НомерПорта     = Параметры.Порт;
			ОбъектДрайвера.СкоростьОбмена = Параметры.Скорость;
			ОбъектДрайвера.ПортIP         = Параметры.IPПорт;
			ОбъектДрайвера.Четность       = Параметры.Четность;
			ОбъектДрайвера.БитыДанных     = Параметры.БитыДанных;
			ОбъектДрайвера.СтопБиты       = Параметры.СтопБиты;
			ОбъектДрайвера.Разделитель    = Параметры.Разделитель;

			ОбъектДрайвера.УстройствоВключено = 1;
			Если ОбъектДрайвера.Результат <> 0 Тогда
				ВыходныеПараметры.Очистить();
				ВыходныеПараметры.Добавить(999);
				ВыходныеПараметры.Добавить(ОбъектДрайвера.ОписаниеРезультата);

				ОбъектДрайвера.УдалитьУстройство();
				ПараметрыПодключения.ИДУстройства = Неопределено;

				Результат = ЛОЖЬ;
			КонецЕсли;
		Иначе
			ВыходныеПараметры.Очистить();
			ВыходныеПараметры.Добавить(999);
			ВыходныеПараметры.Добавить(ОбъектДрайвера.ОписаниеРезультата);

			Результат = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция возвращает версию установленного драйвера
// 
Функция ПолучитьВерсиюДрайвера(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры)

	Результат = ИСТИНА;

	ВыходныеПараметры.Добавить(НСтр("ru='Установлен'"));
	ВыходныеПараметры.Добавить(НСтр("ru='Не определена'"));

	Попытка
		ВыходныеПараметры[1] = ОбъектДрайвера.Версия;
	Исключение
	КонецПопытки;

	Возврат Результат;

КонецФункции

// Функция осуществляет тестирование устройства.
// 
Функция ТестУстройства(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры)

	Результат = ИСТИНА;

	Результат = ПодключитьУстройство(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры);

	ВыходныеПараметры.Добавить(?(Результат, 0, 999));
	ВыходныеПараметры.Добавить(?(Результат, "", НСтр("ru='Ошибка при подключении устройства'")));

	ОтключитьУстройство(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры);

	Возврат Результат;

КонецФункции



