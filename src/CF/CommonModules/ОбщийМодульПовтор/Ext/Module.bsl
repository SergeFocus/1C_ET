//sza140125-0311 
//sza131003-1330 : 

Функция   ПолучитьТекстНаЯзыке(Знач ТекстНаРусском, Знач КонкретныйЯзык = Неопределено) Экспорт 	
	Возврат ОбщийМодульТекстСервер.ПолучитьТекстНаЯзыке(ТекстНаРусском, КонкретныйЯзык);	
КонецФункции //ПолучитьТекстНаЯзыке

&НаСервере
Функция   ТоварНеУчитываетсяПоКоличеству(Знач Номенклатура) Экспорт
//%16.8	
	Если Номенклатура.НеОтслеживатьОстаток 
		или Номенклатура = Справочники.Номенклатура.ТоварНаСумму
		или Номенклатура = Справочники.Номенклатура.УслугиНаСумму Тогда
		
		возврат истина;
	иначе
		возврат ложь;
	КонецЕсли;
	
КонецФункции //ТоварНеУчитываетсяПоКоличеству

Функция   ЭтоНабор(Знач Номенклатура) Экспорт
	
	#Если Клиент Тогда
		Возврат ОбщийМодульСервер.ПолучитьЗначениеПраметраСеанса("ИспользованиеНаборовТоваровПС") И ОбщийМодульТоварСервер.ЭтоНабор(Номенклатура);
	#КонецЕсли
	
	#Если НЕ Клиент Тогда
		Возврат ПараметрыСеанса.ИспользованиеНаборовТоваровПС И Номенклатура.ЭтоНабор;		
	#КонецЕсли	
	
КонецФункции //ЭтоНабор

Функция   ПолучитьТекущийКурс(Знач Валюта = Неопределено, Знач Дата = Неопределено) Экспорт  	
	Возврат ОбщийМодульСервер.ПолучитьТекущийКурс(Валюта, Дата);	
КонецФункции //ПолучитьТекущийКурс

Функция   ПолучитьПараметрСеанса(Знач ИмяПараметра) Экспорт	
	Возврат ОбщийМодульСервер.ПолучитьЗначениеПраметраСеанса(ИмяПараметра);	
КонецФункции //получитьПараметрСеанса

&НаСервере
Функция   ВыяснитьПодходящийВидОбъекта(Знач ИсточникМетаданные, Знач режим) Экспорт
	
	если режим = 1 тогда
		ВидОбъекта = Метаданные.ОбщиеРеквизиты.Ответственный.Состав.Найти(Метаданные.регистрынакопления[ИсточникМетаданные]);	
	иначеесли режим = 2 тогда 
		ВидОбъекта = Метаданные.ОбщиеРеквизиты.Ответственный.Состав.Найти(Метаданные.справочники[ИсточникМетаданные]);	
	иначеесли режим = 3 тогда 
		ВидОбъекта = Метаданные.ОбщиеРеквизиты.Ответственный.Состав.Найти(Метаданные.регистрысведений[ИсточникМетаданные]);	
	КонецЕсли;
	
	Возврат  НЕ ВидОбъекта = Неопределено 
	и ВидОбъекта.Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать
	и ПараметрыСеанса.ИспользоватьЖурналированиеСобытий;
	
КонецФункции //ВыяснитьПодходящийВидОбъекта

&НаСервере
Функция   ПолучитьСписокНоменклатурыБыстрогоСпроса(Знач ВернутьСписок = истина) Экспорт
	возврат ОбщийМодульТоварСервер.ПолучитьСписокНоменклатурыБыстрогоСпроса(ВернутьСписок);
КонецФункции //ПолучитьСписокНоменклатурыБыстрогоСпроса

&НаСервере
Функция   ПолучитьНоменклатуруБыстрогоСпроса(Знач Позиция) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 НоменклатураЧастогоСпроса.Номенклатура
	|ИЗ РегистрСведений.НоменклатураЧастогоСпроса КАК НоменклатураЧастогоСпроса
	|ГДЕ НоменклатураЧастогоСпроса.Позиция = &Позиция";
	
	Запрос.УстановитьПараметр("Позиция", Позиция);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат Справочники.Номенклатура.ПустаяСсылка();	
		
	Иначе
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();   		
		ВыборкаДетальныеЗаписи.Следующий();
		
		Возврат ВыборкаДетальныеЗаписи.Номенклатура;	
		
	КонецЕсли;
	
КонецФункции //ПолучитьНоменклатуруБыстрогоСпроса

&НаСервере
Функция   ПлатнаяВерсия() Экспорт
	Возврат ОбщийМодульСервер.ПлатнаяВерсия();
КонецФункции

&НаСервере
Функция   РегистрационныйКод() Экспорт
	Возврат Метаданные.Комментарий;
КонецФункции //РегистрационныйКод

Функция   получитьЗначениеНастройкиИлиКонстанты(Знач ИмяКонстанты, Знач ТолькоКонстанта = Ложь) Экспорт
	Возврат ОбщийМодульСервисСервер.получитьЗначениеНастройкиИлиКонстантыНаСервере(ИмяКонстанты, ТолькоКонстанта);
КонецФункции //получитьЗначениеНастройкиИлиКонстанты

Функция   ТоварВедетсяПоСериям(Номенклатура) Экспорт
	
	Возврат ОбщийМодульСервисСервер.ПолучитьЗначениеРеквизита(Номенклатура, "СерийныйУчет");
	
КонецФункции //ТоварВедетсяПоСериям

Функция   ТоварВедетсяПоСериямИСерияОбязательна(Знач Номенклатура) Экспорт
	
	Результат = Ложь;
	
	Если ЗначениеЗаполнено(Номенклатура)
		и Номенклатура.СерийныйУчет
		И Номенклатура.ЗапретитьУказаниеБезСерии Тогда
		
		Результат = Истина;
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции //ТоварВедетсяПоСериямИСерияОбязательна

&НаСервере
Функция   ОпределитьПользователя() Экспорт
	Возврат ОбщийМодульСерверПривилегия.ОпределитьПользователя();
КонецФункции

&НаСервере
функция   ЗапросВЦ() Экспорт
	
	ЗапросВЦР = Новый Запрос;
	ЗапросВЦР.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 ВидыЦен.Ссылка ИЗ Справочник.ВидыЦен КАК ВидыЦен ГДЕ ВидыЦен.ПометкаУдаления = ЛОЖЬ И ВидыЦен.Зависимая = ЛОЖЬ И ВидыЦен.ВалютаЦены = &ОсновнаяВалюта";
	
	ЗапросВЦР.УстановитьПараметр("ОсновнаяВалюта", ЗначениеПредопределенного("Справочники.Валюты.ОсновнаяВалюта"));
	
	Возврат ЗапросВЦР.Выполнить();
	
КонецФункции

&НаСервере
Функция   ЗначениеПредопределенного(Знач ТекстДляЗначения) Экспорт
	
	Результат = Неопределено;
	
	Выполнить(" Результат = " + ТекстДляЗначения + ";");
	
	Возврат Результат;
	
КонецФункции //ЗначениеПредопределенного

&НаСервере
Функция   ПолучитьНоменклатурнуюГруппуПоНаименованию(Знач наименование, Знач НеСоздавать = Ложь) Экспорт
	Возврат ОбщийМодульТоварСервер.ПолучитьНоменклатурнуюГруппуПоНаименованию(наименование, НеСоздавать);
КонецФункции //ПолучитьНоменклатурнуюГруппуПоНаименованию

&НаСервере
Функция   ТекущийЯзыкРусский() Экспорт
	Возврат НЕ ЗначениеЗаполнено(ПараметрыСеанса.ТекущийЯзыкИнтерфейсаПрограммы) ИЛИ ПараметрыСеанса.ТекущийЯзыкИнтерфейсаПрограммы = Справочники.Языки.Русский;	
КонецФункции //ТекущийЯзыкРусский

&НаСервере
Функция   ПолучитьПредставлениеНаЯзыке(Знач Данные, Знач ПолеЗначения = "Наименование", Знач ОтказатьсяПриОтсутствии = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 ЗначенияНаДругихЯзыках.НаЯзыке
	|ИЗ РегистрСведений.ЗначенияНаДругихЯзыках КАК ЗначенияНаДругихЯзыках
	|ГДЕ ЗначенияНаДругихЯзыках.ОбъектБазыДанных = &ОбъектБазыДанных
	|	И ЗначенияНаДругихЯзыках.Поле = &Поле
	|	И ЗначенияНаДругихЯзыках.Язык = &Язык";
	
	Запрос.УстановитьПараметр("ОбъектБазыДанных", Данные);
	Запрос.УстановитьПараметр("Поле", ПолеЗначения);
	Запрос.УстановитьПараметр("Язык", ОбщийМодульПовтор.ПолучитьПараметрСеанса("ТекущийЯзыкИнтерфейсаПрограммы"));
	
	РезультатЗапроса = Запрос.Выполнить();
	если не РезультатЗапроса.Пустой() тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		ВыборкаДетальныеЗаписи.Следующий();
		НаЯзыке = ВыборкаДетальныеЗаписи.НаЯзыке;
	иначеЕсли НЕ ОтказатьсяПриОтсутствии Тогда
		НаЯзыке = Данные[ПолеЗначения];
	Иначе
		НаЯзыке = Неопределено;
	КонецЕсли;
	
	Возврат НаЯзыке;
	
КонецФункции //ПолучитьПредставлениеНаЯзыке

Функция   СпецСправочник(Знач ТипСправочника) Экспорт
	
	ТипСправочника = Врег(ТипСправочника);
	Возврат ТипСправочника = "НОМЕНКЛАТУРА"
		ИЛИ ТипСправочника = "КЛИЕНТЫ" 
		ИЛИ ТипСправочника = "ПОСТАВЩИКИ" 
		ИЛИ ТипСправочника = "ОРГАНИЗАЦИИ" 
		ИЛИ ТипСправочника = "СЕРИИНОМЕНКЛАТУРЫ" 
		ИЛИ ТипСправочника = "СОТРУДНИКИ";
	
КонецФункции //СпецСправочник

&НаСервере
Функция   ПолучитьШтрихКодНоменклатурыИлиСерии(Знач Ссылка, Знач ЭтоСерия = Ложь) Экспорт
	
	результат = "";
	если не этосерия тогда
		результат = Сокрлп(ссылка.ОсновнойШтрихКод);
		
		Если результат = "" Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 ШтрихКоды.ШтрихКод
			|ИЗ РегистрСведений.ШтрихКоды КАК ШтрихКоды
			|ГДЕ ШтрихКоды.Номенклатура = &Номенклатура";
			
			Запрос.УстановитьПараметр("Номенклатура", Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			если не РезультатЗапроса.Пустой() тогда
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				ВыборкаДетальныеЗаписи.Следующий();
				результат = ВыборкаДетальныеЗаписи.ШтрихКод;
			конецесли;
		КонецЕсли;
		
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 ШтрихКоды.ШтрихКод
		|ИЗ РегистрСведений.ШтрихКоды КАК ШтрихКоды
		|ГДЕ ШтрихКоды.СерияНоменклатуры = &СерияНоменклатуры";
		
		Запрос.УстановитьПараметр("СерияНоменклатуры", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		если не РезультатЗапроса.Пустой() тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			ВыборкаДетальныеЗаписи.Следующий();
			результат = ВыборкаДетальныеЗаписи.ШтрихКод;
		конецесли;
	КонецЕсли;
	
	Возврат Результат
	
КонецФункции //ПолучитьШтрихКодНоменклатурыИлиСерии

Функция   ПолучитьТекстЗапросаПоискаСпецСправочника(Знач ТипСправочника) Экспорт
			
	Результат = "";
	
	ТипСправочника = Врег(ТипСправочника);
	Если ТипСправочника = "НОМЕНКЛАТУРА"
		и ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьШтрихКоды")
		и НЕ ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("НеПроверятьУникальностьШтрихКода") Тогда
		
		Результат = "НШК";
		
	ИначеЕсли (ТипСправочника = "КЛИЕНТЫ" 
		ИЛИ ТипСправочника = "ПОСТАВЩИКИ" 
		ИЛИ ТипСправочника = "ОРГАНИЗАЦИИ" 
		ИЛИ ТипСправочника = "СОТРУДНИКИ")
		и ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ЗапретитьИспользоватьОдинаковыеКодыИНН") Тогда
		
		Результат = "ВЫБРАТЬ ПЕРВЫЕ 1 С.Ссылка ИЗ Справочник." + ТипСправочника + " КАК С ГДЕ С.ОКПО = &СпецКод ";
		
	ИначеЕсли ТипСправочника = "СЕРИИНОМЕНКЛАТУРЫ"
		и ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьШтрихКоды")
		и НЕ ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("НеПроверятьУникальностьШтрихКода") Тогда
		
		Результат = "ВЫБРАТЬ ПЕРВЫЕ 1 ШтрихКоды.СерияНоменклатуры Как Ссылка
		 |ИЗ РегистрСведений.ШтрихКоды КАК ШтрихКоды
		 |ГДЕ ШтрихКоды.ШтрихКод = &СпецКод";
		
	Иначе
		Результат = "ВЫБРАТЬ ПЕРВЫЕ 1 С.Ссылка ИЗ Справочник." + ТипСправочника + " КАК С ГДЕ С.Наименование = &СпецКод ";// И С.Код = &ЗначениеКод";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

Функция   ПолучитьОсновноеИзображениеОбъекта(Знач СвязанныйОбъект) Экспорт	
	Возврат ОбщийМодульСервер.ПолучитьОсновноеИзображениеОбъекта(СвязанныйОбъект);	
КонецФункции //ПолучитьОсновноеИзображениеОбъекта

Функция   ВычислитьИмяФормы(Знач ФормаСобытияТ) Экспорт
	
	ФормаСобытияТ = СтрЗаменить(ФормаСобытияТ, "Форма.ФормаЭлемента", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Карточка"));
		ФормаСобытияТ = СтрЗаменить(ФормаСобытияТ, "Форма.ФормаЗаписи", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Карточка"));
		ФормаСобытияТ = СтрЗаменить(ФормаСобытияТ, "Форма.ФормаСписка", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Список"));
		ФормаСобытияТ = СтрЗаменить(ФормаСобытияТ, "Форма.ФормаОтчета", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Окно отчета"));
		ФормаСобытияТ = СтрЗаменить(ФормаСобытияТ, "Форма.ФормаСпискаСОтборомПоГруппе", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Форма с отбором по группе"));
		ФормаСобытияТ = СтрЗаменить(ФормаСобытияТ, "ОбщаяФорма.НастройкиБазыДанных", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Форма настроек"));
		ФормаСобытияТ = СтрЗаменить(ФормаСобытияТ, ".", " ");
	
	Возврат ФормаСобытияТ;
	
КонецФункции //ВычислитьИмяФормы

Функция   ПолучитьПустоеЗначениеДополнительногоРеквизита(Знач ТипДополнительногоРеквизита) Экспорт
	Возврат ОбщийМодульСервер.ПолучитьПустоеЗначениеДополнительногоРеквизита(ТипДополнительногоРеквизита);
КонецФункции

Функция   ПолучитьТипДополнительногоРеквизита(Знач ТипОбъектаДляДополнительныхРеквизитов) Экспорт
	Возврат ОбщийМодульСервер.ПолучитьТипДополнительногоРеквизита(ТипОбъектаДляДополнительныхРеквизитов);
КонецФункции

&НаСервере
Функция   ПолучитьИмяДополнительногоРеквизита(Знач ОбъектВладелец) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ЭтоРеквизитДляОбъекта", Перечисления.ОбъектыДляДополнительныхРеквизитов.ПустаяСсылка()) ;
	ТипЗнчОбъектВладелец = ТипЗнч(ОбъектВладелец);
	Результат.Вставить("НаименованиеОбъектаВладельца", ТипЗнчОбъектВладелец);
	
	Если ТипЗнчОбъектВладелец = Тип("СправочникСсылка.ВидыЦен") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляСправочникаВидыЦен ;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("СправочникСсылка.Договора") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляСправочникаДоговора ;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("СправочникСсылка.ЗаметкиИНапоминания") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляЗаметокИНапоминаний;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("СправочникСсылка.Изображения") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляПрикрепленныхИзображений;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("СправочникСсылка.Клиенты") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляСправочникаКлиенты;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("СправочникСсылка.Номенклатура") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляСправочникаНоменклатура ;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("СправочникСсылка.Организации") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляСправочникаОрганизации;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("СправочникСсылка.ПартииПриобретения") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляСправочникаПартииПриобретения ;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("СправочникСсылка.Поставщики") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляСправочникаПоставщики ;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("СправочникСсылка.Производители") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляСправочникаПроизводители ;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("СправочникСсылка.Регионы") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляСправочникаРегионы ;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("СправочникСсылка.Склады") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляСправочникаСклады ;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("СправочникСсылка.Сотрудники") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляСправочникаСотрудники ;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("СправочникСсылка.СредстваПредприятия") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляСправочникаСредств;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("СправочникСсылка.СтатьиДвиженияДенег") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляСправочникаСтатьиДвиженияДенег ;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("СправочникСсылка.ХранилищаДенег") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляСправочникаХранилищаДенег ;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("ДокументСсылка.ДвиженияДенег") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляДокументаДвиженияДенег;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("ДокументСсылка.Инвентаризации") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляДокументаИнвентаризация;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("ДокументСсылка.КорректировкиИРегистрацияОстатков") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляДокументаКорректировкаИВводОстатков;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("ДокументСсылка.ПеремещенияТовара") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляДокументаПеремещенияТоваров;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("ДокументСсылка.ПланыПродаж") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляДокументаПланПродаж;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("ДокументСсылка.ПоступленияТовара") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляДокументаПоступлениеТовара;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("ДокументСсылка.РасходыТовара") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляДокументаРасходТовара;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("ДокументСсылка.ВыполнениеРабот") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляДокументаВыполненияРабот;
	ИначеЕсли ТипЗнчОбъектВладелец = Тип("ДокументСсылка.УстановкиЦен") Тогда
		Результат.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляДокументаУстановкаЦен;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции //ПолучитьИмяДополнительногоРеквизита

Функция   ПолучитьКрасивоеНаименованиеОбъекта(Знач НаименованиеОбъекта) Экспорт
	
	Наименование = СтрЗаменить(НаименованиеОбъекта, "СправочникСсылка.", "");
	Наименование = СтрЗаменить(Наименование, "ДокументСсылка.", "");
	с = стрдлина(Наименование);
	сч = 1;
	Наименование2 = Лев(Наименование, 1);
	пока сч < с цикл
		сч = сч + 1;		
		СимволСтроки = Сред(Наименование, сч, 1);
		Если СимволСтроки = Врег(СимволСтроки) Тогда
			Наименование2 = Наименование2 + " " + НРег(СимволСтроки);
		Иначе
			Наименование2 = Наименование2 + СимволСтроки;
		КонецЕсли;
		
	КонецЦикла;
	
	Наименование = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(Наименование2);
	
	Возврат Наименование;
	
КонецФункции //ПолучитьКрасивоеНаименованиеОбъекта
