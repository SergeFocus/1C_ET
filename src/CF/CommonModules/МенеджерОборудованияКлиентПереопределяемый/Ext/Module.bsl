// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
// Возвращает текущую дату, приведенную к часовому поясу сеанса.
// Предназначена для использования вместо функции ТекущаяДата().
//
Функция ДатаСеанса() Экспорт

	Возврат ТекущаяДата();

КонецФункции

// Осуществляет печать фискального чека
//
Функция ПечатьЧека(ОбщийМодульОборудования, ОбъектДрайвера, Параметры, ПараметрыПодключения, ВходныеПараметры, ВыходныеПараметры, ВывестиСообщениеПользователю = ЛОЖЬ) Экспорт

	ТаблицаНоменклатуры = ВходныеПараметры[0];
	ТаблицаОплат        = ВходныеПараметры[1];
	ОбщиеПараметры      = ВходныеПараметры[2];
	Результат  = ИСТИНА;
	// Открываем чек
	Результат = ОбщийМодульОборудования.ОткрытьЧек(ОбъектДрайвера, Параметры, ПараметрыПодключения,
	                       ОбщиеПараметры[0] = 1, ОбщиеПараметры[1], ВыходныеПараметры);
	// Печатаем строки чека
	Если Результат Тогда

		ОшибкаПриПечатиСтроки = ЛОЖЬ;
		// Печатаем строки чека
		Для ИндексМассива = 0 По ТаблицаНоменклатуры.Количество() - 1 Цикл
			Наименование  = ТаблицаНоменклатуры[ИндексМассива][0].Значение;
			Количество    = ТаблицаНоменклатуры[ИндексМассива][5].Значение;
			Цена          = ТаблицаНоменклатуры[ИндексМассива][4].Значение;
			ПроцентСкидки = ТаблицаНоменклатуры[ИндексМассива][8].Значение;
			Сумма         = ТаблицаНоменклатуры[ИндексМассива][9].Значение;
			НомерСекции   = ТаблицаНоменклатуры[ИндексМассива][3].Значение;
			СтавкаНДС     = ТаблицаНоменклатуры[ИндексМассива][12].Значение;

			Если НЕ ОбщийМодульОборудования.НапечататьФискальнуюСтроку(ОбъектДрайвера, Параметры, ПараметрыПодключения,
											   Наименование, Количество, Цена, ПроцентСкидки, Сумма,
											   НомерСекции, СтавкаНДС, ВыходныеПараметры) Тогда

				ОшибкаПриПечатиСтроки = ИСТИНА;
				Прервать;
			КонецЕсли;
		КонецЦикла;

		Если НЕ ОшибкаПриПечатиСтроки Тогда
		  	// Закрываем чек
			Результат = ОбщийМодульОборудования.ЗакрытьЧек(ОбъектДрайвера, Параметры, ПараметрыПодключения, ТаблицаОплат, ВыходныеПараметры);
		Иначе
			Результат = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция возвращает объект обработчика драйвера по его наименованию
//
Функция ПолучитьОбработчикаДрайвера(ОбработчикДрайвера) Экспорт
	
	Результат = Неопределено;

	// Вызов метода выполнения команды у обработчика
	Если ОбработчикДрайвера <> Неопределено Тогда
		
		// Сканеры штрихкода
		//Если ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.Обработчик1ССканерыШтрихкода") Тогда
		//	Возврат ПодключаемоеОборудование1ССканерыШтрихкодаКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикСканкодСканерыШтрихкода") Тогда
		//	Возврат ПодключаемоеОборудованиеСканкодСканерыШтрихкодаКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикАтолСканерыШтрихкода") Тогда
		//	Возврат ПодключаемоеОборудованиеАтолСканерыШтрихкодаКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикГексагонСканерыШтрихкода") Тогда
		//	Возврат ПодключаемоеОборудованиеУниверсальныйДрайверКлиент;
		//КонецЕсли;
		//// Конец Сканеры штрихкода
		//
		//// Считыватели магнитных карт
		//Если ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.Обработчик1ССчитывателиМагнитныхКарт") Тогда
		//	Возврат ПодключаемоеОборудование1ССчитывателиМагнитныхКартКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикАтолСчитывателиМагнитныхКарт") Тогда
		//	Возврат ПодключаемоеОборудованиеАтолСчитывателиМагнитныхКартКлиент;
		//КонецЕсли;
		//// Конец Считыватели магнитных карт

		//// Фискальные регистраторы
		//Если ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.Обработчик1СФискальныйРегистраторЭмулятор") Тогда
		//	Возврат ПодключаемоеОборудованиеУниверсальныйДрайверКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикАтолФискальныеРегистраторы") Тогда
		//	Возврат ПодключаемоеОборудованиеАтолФискальныеРегистраторыКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикАтолФискальныеРегистраторыУниверсальный") Тогда
		//	Возврат ПодключаемоеОборудованиеУниверсальныйДрайверКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикАтолФискальныеРегистраторы8X") Тогда
		//	Возврат ПодключаемоеОборудованиеУниверсальныйДрайверКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикВерсияТКасбиФР01К") Тогда
		//	Возврат ПодключаемоеОборудованиеВерсияТКасбиФР01ККлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикККСФискальныеРегистраторыСпарк") Тогда
		//	Возврат ПодключаемоеОборудованиеККСФискальныеРегистраторыСпаркКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикШтрихМФискальныеРегистраторы") Тогда
		//	Возврат ПодключаемоеОборудованиеШтрихМФискальныеРегистраторыКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикОРИОНФискальныйРегистраторФР01К") Тогда
		//	Возврат ПодключаемоеОборудованиеОРИОНФР01ККлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.Обработчик1СРарусФискальныеРегистраторыФеликс") Тогда
		//	Возврат ПодключаемоеОборудованиеУниверсальныйДрайверКлиент;
		//КонецЕсли;
		//// Конец Фискальные регистраторы

		//// Дисплеи покупателя
		//Если ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикАтолДисплеиПокупателя") Тогда
		//	Возврат ПодключаемоеОборудованиеАтолДисплеиПокупателяКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикСканкодДисплеиПокупателя") Тогда
		//	Возврат ПодключаемоеОборудованиеСканкодДисплеиПокупателяКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикШтрихМДисплеиПокупателя") Тогда
		//	Возврат ПодключаемоеОборудованиеШтрихМДисплеиПокупателяКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикККСДисплеиПокупателя") Тогда
		//	Возврат ПодключаемоеОборудованиеККСДисплеиПокупателяКлиент;
		//КонецЕсли;                 
		//// Конец Дисплеи покупателя
		//
		//// Терминалы сбора данных
		//Если ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикАтолТерминалыСбораДанных") Тогда
		//	Возврат ПодключаемоеОборудованиеАтолТерминалыСбораДанныхКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикШтрихМТерминалыСбораДанных") Тогда
		//	Возврат ПодключаемоеОборудованиеШтрихМТерминалыСбораДанныхКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикСканкодТерминалыСбораДанных") Тогда
		//	Возврат ПодключаемоеОборудованиеСканкодТерминалыСбораДанныхКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикСканситиТерминалыСбораДанных") Тогда
		//	Возврат ПодключаемоеОборудованиеСканситиТерминалыСбораДанныхКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикКлеверенсТерминалыСбораДанных") Тогда
		//	Возврат ПодключаемоеОборудованиеУниверсальныйДрайверКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикГексагонТерминалыСбораДанных") Тогда
		//	Возврат ПодключаемоеОборудованиеУниверсальныйДрайверКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикАтолТерминалыСбораДанныхMobileLogistics") Тогда
		//	Возврат ПодключаемоеОборудованиеУниверсальныйДрайверКлиент;
		//КонецЕсли;
		//
		// Конец Терминалы сбора данных
		
		// Эквайринговые терминалы
		//Если ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикСБРФЭквайринговыеТерминалы") Тогда
		//	Возврат ПодключаемоеОборудованиеСБРФЭквайринговыеТерминалыКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикИНПАСЭквайринговыеТерминалы") Тогда
		//	Возврат ПодключаемоеОборудованиеИНПАСЭквайринговыеТерминалыКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикИНПАСЭквайринговыеТерминалыSmart") Тогда
		//	Возврат ПодключаемоеОборудованиеИНПАСЭквайринговыеТерминалыSmartКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикСофткейсЭквайринговыеТерминалы") Тогда
		//	Возврат ПодключаемоеОборудованиеСофтКейсЭквайринговыеТерминалыКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикTRPOS32ЭквайринговыеТерминалы") Тогда
		//	Возврат ПодключаемоеОборудованиеУниверсальныйДрайверКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикIngenicoECRCommXПриватбанк") Тогда
		//	Возврат ПодключаемоеОборудованиеУниверсальныйДрайверКлиент;
		//КонецЕсли;
		// Конец Эквайринговые терминалы
		                     
		// Электронные весы
		//Если ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикАтолЭлектронныеВесы") Тогда
		//	Возврат ПодключаемоеОборудованиеАтолЭлектронныеВесыКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикШтрихМЭлектронныеВесы") Тогда
		//	Возврат ПодключаемоеОборудованиеШтрихМЭлектронныеВесыКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикCASЭлектронныеВесы") Тогда
		//	Возврат ПодключаемоеОборудованиеУниверсальныйДрайверКлиент;
		//КонецЕсли;
		// Конец Электронные весы
		
		// Весы с печатью этикеток
		//Если ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикACOMВесыСПечатьюЭтикеток") Тогда
		//	Возврат ПодключаемоеОборудованиеACOMВесыСПечатьюЭтикетокКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикScaleCASВесыСПечатьюЭтикеток") Тогда
		//	Возврат ПодключаемоеОборудованиеScaleCASВесыСПечатьюЭтикетокКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикШтрихМВесыСПечатьюЭтикеток") Тогда
		//	Возврат ПодключаемоеОборудованиеШтрихМВесыСПечатьюЭтикетокКлиент;
		//КонецЕсли;
		// Конец Весы с печатью этикеток
		
		// ККМ offline
		//Если ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикАтолККМOffline") Тогда
		//	Возврат ПодключаемоеОборудованиеАтолККМOfflineКлиент;
		//ИначеЕсли ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикШтрихМККМOffline") Тогда
		//	Возврат ПодключаемоеОборудованиеШтрихМККМOfflineКлиент;
		//КонецЕсли;
		//// Конец offline
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
