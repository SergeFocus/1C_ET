// sza151117-0123
// sza150117-0049
// sza141203-1412
// sza141102-0100 :
// sza140412-0227 :
// sza131210-2245 :

Функция   ВыводитьСообщенияМожно() Экспорт
	Возврат Не ПараметрыСеанса.НеВыводитьСообщений;
КонецФункции

Функция   ПолучитьПереченьВидовЦен(Знач ВидЦен) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ВидыЦен.Ссылка
	|ИЗ Справочник.ВидыЦен КАК ВидыЦен
	|ГДЕ ВидыЦен.ОсновнойВидЦен = &ОсновнойВидЦен
	|	И ВидыЦен.Зависимая = ИСТИНА
	|	И ВидыЦен.ПометкаУдаления = ЛОЖЬ
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп.Ссылка
	|ИЗ Справочник.ВидыЦен.СпособыФормированияЦеныДляНоменклатурныхГрупп КАК ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп
	|ГДЕ ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп.ОсновнойВидЦен = &ОсновнойВидЦен
	|	И ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп.Ссылка.Зависимая = ИСТИНА
	|	И ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп.Ссылка.ПометкаУдаления = ЛОЖЬ
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ВидыЦенТаблицаЗависимости.Ссылка
	|ИЗ Справочник.ВидыЦен.ТаблицаЗависимости КАК ВидыЦенТаблицаЗависимости
	|ГДЕ ВидыЦенТаблицаЗависимости.ОсновнойВидЦен = &ОсновнойВидЦен
	|	И ВидыЦенТаблицаЗависимости.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И ВидыЦенТаблицаЗависимости.Ссылка.Зависимая = ИСТИНА ";
	Запрос.УстановитьПараметр("ОсновнойВидЦен", ВидЦен);

	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Возврат Результат.Выгрузить();
	КонецЕсли;

КонецФункции

Функция   НайтиНоменклатурнуюГруппуПоНаименованию(Знач Наименование, Знач ВтороеНаименование, Знач ПоПервомуСлову = ЛОЖЬ) Экспорт

	Результат = ПредопределенноеЗначение("Справочник.НоменклатурныеГруппы.ПустаяСсылка");
	Если ЗначениеЗаполнено(наименование) Тогда
		Результат = Справочники.НоменклатурныеГруппы.НайтиПоНаименованию(Наименование, ЛОЖЬ);
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Результат)
		И ЗначениеЗаполнено(ВтороеНаименование) Тогда

		Результат = Справочники.НоменклатурныеГруппы.НайтиПоНаименованию(Наименование, ЛОЖЬ);
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Результат)
		И ПоПервомуСлову Тогда

		НаименованиеСлово = СокрЛП(Лев(Наименование, Найти(Наименование, " ") ));
		Результат = Справочники.НоменклатурныеГруппы.НайтиПоНаименованию(НаименованиеСлово, ЛОЖЬ);
		Если НЕ ЗначениеЗаполнено(Результат) Тогда
			НаименованиеСлово = СокрЛП(Лев(ВтороеНаименование, Найти(ВтороеНаименование, " ") ));
			Результат = Справочники.НоменклатурныеГруппы.НайтиПоНаименованию(НаименованиеСлово, ЛОЖЬ);
		КонецЕсли;
	КонецЕсли;

	Возврат Результат;

КонецФункции

Функция   ПолучитьСложнуюЦену(Знач Номенклатура, Знач ВидЦен = Неопределено, Знач Дата, Знач ВыводитьОшибку = ИСТИНА, Знач Количество = 0, Знач ЭтоПроверкаЦены = ЛОЖЬ, Знач Вручную = ЛОЖЬ, Знач Ссылка = Неопределено, Знач ЕдиницаИзмерения = Неопределено) Экспорт
	Возврат ОбщийМодульСервер.ПолучитьСложнуюЦену(Номенклатура, ВидЦен, Дата, ВыводитьОшибку, Количество, ЭтоПроверкаЦены, Вручную, Ссылка, ЕдиницаИзмерения);
КонецФункции

Функция   ПолучитьСпособыФормированияЦенНоменклатурныхГрупп(Знач ВидЦенИсточник, Знач ВидЦен, Знач НоменклатурнаяГруппа) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп.ФормулаРасчетаОтБазовогоВидаЦены,
	|	ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп.ПроцентОтБазовойЦены,
	|	ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп.ЦенаВЦелыхЕдиницах,
	|	ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп.ЦенаВДесятых,
	|	ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп.ПроцентСкидкиДляРасчетаЛьготнойЦены,
	|	ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп.ОкруглятьТолькоВБольшуюСторону
	|ИЗ Справочник.ВидыЦен.СпособыФормированияЦеныДляНоменклатурныхГрупп КАК ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп
	|ГДЕ (ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп.ОсновнойВидЦен = &ОсновнойВидЦен
	|			ИЛИ ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп.ОсновнойВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
	|	И ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
	|	И ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп.Ссылка.Ссылка = &Ссылка
	|УПОРЯДОЧИТЬ ПО ВидыЦенСпособыФормированияЦеныДляНоменклатурныхГрупп.ОсновнойВидЦен УБЫВ";

	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
	Запрос.УстановитьПараметр("ОсновнойВидЦен", ВидЦенИсточник);
	Запрос.УстановитьПараметр("Ссылка", ВидЦен);

	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Возврат Результат.Выгрузить();
	КонецЕсли;

КонецФункции

Функция   ПолучитьСсылкиПоРеквизиту(Знач ОбластьЗапроса, Знач ЧислоПервых = 0, Знач ПараметрыЗапроса = Неопределено, Знач ВернутьПервыйЭлементИлиПустуюСсылку = ЛОЖЬ) Экспорт

	Результат = Новый Массив;
	Если Не ПустаяСтрока(ОбластьЗапроса) Тогда // Справочник Пользователи
		Если ВернутьПервыйЭлементИлиПустуюСсылку Тогда
			Результат = ПредопределенноеЗначение(ОбластьЗапроса + ".ПустаяСсылка");
		КонецЕСли;

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ " + ?(ЧислоПервых = 0, "", " ПЕРВЫЕ " + Формат(ЧислоПервых, "ЧДЦ=; ЧРГ=' '; ЧГ=0")) +
		" ОбъектЗапроса.Ссылка Из " + ОбластьЗапроса + " КАК ОбъектЗапроса ";
		Если НЕ ПараметрыЗапроса = Неопределено Тогда
			Запрос.Текст = Запрос.Текст + " ГДЕ ИСТИНА ";

			Для Каждого ПараметрЗапроса Из ПараметрыЗапроса Цикл // соответствие
				Запрос.Текст = Запрос.Текст + " И ОбъектЗапроса." + ПараметрЗапроса.Ключ + " = &" + ПараметрЗапроса.Ключ;
				Запрос.УстановитьПараметр(ПараметрЗапроса.Ключ, ПараметрЗапроса.Значение);
			КонецЦикла;
		КонецЕсли;

		РезультатЗапроса = Запрос.Выполнить();

		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ВернутьПервыйЭлементИлиПустуюСсылку Тогда
					Результат = ВыборкаДетальныеЗаписи.Ссылка;
					Прервать;
				Иначе
					Результат.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

	Возврат Результат;

КонецФункции

Функция   ПолучитьТаблицуЗависимостей(Знач ВидЦенИсточник, Знач ВидЦен) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыЦенТаблицаЗависимости.ФормулаРасчетаОтБазовогоВидаЦены,
	|	ВидыЦенТаблицаЗависимости.ЦенаВЦелыхЕдиницах,
	|	ВидыЦенТаблицаЗависимости.ЦенаВДесятых,
	|	ВидыЦенТаблицаЗависимости.ПроцентОтБазовойЦены,
	|	ВидыЦенТаблицаЗависимости.ОкруглятьТолькоВБольшуюСторону,
	|	ВидыЦенТаблицаЗависимости.ПроцентСкидкиДляРасчетаЛьготнойЦены
	|ИЗ Справочник.ВидыЦен.ТаблицаЗависимости КАК ВидыЦенТаблицаЗависимости
	|ГДЕ ВидыЦенТаблицаЗависимости.ОсновнойВидЦен = &ОсновнойВидЦен
	|	И ВидыЦенТаблицаЗависимости.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("ОсновнойВидЦен", ВидЦенИсточник);
	Запрос.УстановитьПараметр("Ссылка", ВидЦен);

	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Возврат Результат.Выгрузить();
	КонецЕсли;

КонецФункции

Функция   ПолучитьЦенуСписания(Знач Номенклатура, Знач Количество = 1, Знач ДатаОкончанияОтчета = Неопределено, Знач Склад = Неопределено, Знач СерияНоменклатуры = Неопределено, Знач ПолучитьСреднююВИстории = ЛОЖЬ) Экспорт

	Если ДатаОкончанияОтчета = Неопределено Тогда
		ДатаОкончанияОтчета = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
	КонецЕсли;

	Возврат ОбщийМодульСервер.ПолучитьЦенуСписания(Номенклатура, Количество, ДатаОкончанияОтчета, , , Склад, СерияНоменклатуры, ПолучитьСреднююВИстории);

КонецФункции

Функция   ЦенаУжеПроставлена(Знач ВидЦен, Знач Номенклатура, Знач Дата, Знач Ссылка, Знач ЕдиницаИзмерения = Неопределено) Экспорт
	Возврат ЗначениеЗаполнено(ОбщийМодульСервер.ПолучитьСложнуюЦену(Номенклатура, ВидЦен, Дата, ЛОЖЬ, , ИСТИНА, , Ссылка, ЕдиницаИзмерения));
КонецФункции

Функция   ЦенаУжеСтоит(Знач ВидЦен, Знач Номенклатура, Знач Дата, Знач Цена, Знач Вручную, Знач Ссылка, Знач ЕдиницаИзмерения = Неопределено) Экспорт
	Возврат ОбщийМодульСервер.ЦенаУжеСтоит(ВидЦен, Номенклатура, Дата, Цена, Вручную, Ссылка, ЕдиницаИзмерения);
КонецФункции
