// Суров С.В <s_surov@mail.ru>

// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // 
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает регламентное, соответствующее объекту
// 
// Параметры:
// нет
// 
// Возвращаемое значение:
// РегламентноеЗадание
// 
Функция РегламентноеЗадание() Экспорт
	
	УстановитьПривилегированныйРежим(ИСТИНА);
	Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторРегламентногоЗадания);
	УстановитьПривилегированныйРежим(ЛОЖЬ);
	Возврат Задание;
	
КонецФункции

// Удаляет регламентное задание, соответствующее объекту
// 
// Параметры:
// нет
// 
// Возвращаемое значение:
// нет
// 
Процедура УдалитьРегламентноеЗадание() Экспорт
	
	Задание = РегламентноеЗадание();
	Если НЕ Задание = НеОпределено Тогда
		УстановитьПривилегированныйРежим(ИСТИНА);
		Задание.Удалить();
		УстановитьПривилегированныйРежим(ЛОЖЬ);
	КонецЕсли;
	
КонецПроцедуры

// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // 
// ОБРАБОТЧИКИ СОБЫТИЙ


Процедура ПриКопировании(ОбъектКопирования)
	Код = "";
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ПустаяСтрока(Код) Тогда
		УстановитьНовыйКод();
	КонецЕсли;
	
	Если ПустаяСтрока(Наименование) Тогда
		СформироватьНаименование()
	КонецЕсли;
	
	Если НЕ ОбменТоварами
		И НЕ ОбменЗаказами Тогда
		
		Отказ = ИСТИНА;
		Сообщение = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Режим обмена не выбран!");
		Поле = "ОбменТоварами";
		Попытка // ЭтотОбъект
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение, ЭтотОбъект, Поле);
		Исключение
		КонецПопытки;
		
	КонецЕсли;

	ДобавитьПроверяемыеРеквизиты(ПроверяемыеРеквизиты);
	
КонецПроцедуры

// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // 
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Формирует уникальное наименование объекта
// 
// Параметры:
// нет
// 
// Возвращаемое значение:
// нет
// 
Процедура СформироватьНаименование()
	
	Если ОбменТоварами И ОбменЗаказами Тогда
		
		Префикс = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Обмен товарами и заказами");
		
	ИначеЕсли ОбменЗаказами Тогда
		
		Префикс = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Обмен заказами");
		
	Иначе
		
		Префикс = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выгрузка товаров");
		
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	МАКСИМУМ(ОбменССайтом.Наименование) КАК Наименование
	               |ИЗ
	               |	ПланОбмена.ОбменССайтом КАК ОбменССайтом
	               |ГДЕ
	               |	ОбменССайтом.Наименование ПОДОБНО &Шаблон
	               |
	               |ИМЕЮЩИЕ
	               |	НЕ МАКСИМУМ(ОбменССайтом.Наименование) ЕСТЬ NULL ";

	
	Запрос.УстановитьПараметр("Шаблон", Префикс + "%");
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Наименование = Префикс;
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Суффикс = Прав(СокрЛП(Выборка.Наименование), 4);
	
	Попытка
		СуффиксЧислом = Число(Суффикс);
	Исключение
		Наименование = Префикс + " 0001";
		Возврат;
	КонецПопытки;
		
	Наименование = Префикс + " " + Формат(СуффиксЧислом + 1, "ЧЦ=4; ЧВН=; ЧГ=");
	
КонецПроцедуры

Процедура ДобавитьПроверяемыеРеквизиты(ПроверяемыеРеквизиты)
	
	Если ВыгружатьНаСайт Тогда
		
		ПроверяемыеРеквизиты.Добавить("АдресСайта");
		ПроверяемыеРеквизиты.Добавить("ИмяПользователя");
		
	Иначе
		
		ПроверяемыеРеквизиты.Добавить("КаталогВыгрузки");
		
	КонецЕсли;
	
	Если ОбменТоварами Тогда
		
		ПроверяемыеРеквизиты.Добавить("ВладелецКаталога");
		
	КонецЕсли;
	
	Если ОбменЗаказами Тогда
		
		Если НЕ ВыгружатьНаСайт Тогда
			ПроверяемыеРеквизиты.Добавить("ФайлЗагрузки");
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

