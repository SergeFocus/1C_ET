// sza150104-1843 корр

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)

	УникальныйИдентификатор   = Новый УникальныйИдентификатор();

	ИдентификаторУстройстваЭТ = Неопределено;
	ИдентификаторУстройстваФР = Неопределено;
	ОписаниеОшибки            = "";

	СуммаОперации       = 0;
	НомерКарты          = "";
	НомерСсылкиОперации = "";
	НомерЧека           = "";
	СтрокаСлипЧека      = "";

	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		// Выбор устройства ЭТ
		ИдентификаторУстройстваЭТ = МенеджерОборудованияКлиент.ВыбратьУстройство("ЭквайринговыйТерминал",
		    ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите эквайринговый терминал"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Эквайринговый терминал не подключен"));

		Если ИдентификаторУстройстваЭТ <> Неопределено Тогда
			// Выбор устройства ФР
			ИдентификаторУстройстваФР = МенеджерОборудованияКлиент.ВыбратьУстройство("ФискальныйРегистратор",
			    ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите фискальный регистратор"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Фискальный регистратор не подключен"));

			Если ИдентификаторУстройстваФР <> Неопределено Тогда
				// Подключение устройства ЭТ
				РезультатЭТ = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
				                                                                                ИдентификаторУстройстваЭТ,
				                                                                                ОписаниеОшибки);

				Если РезультатЭТ Тогда
					// Подключение устройства ФР
					РезультатФР = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
					                                                                                ИдентификаторУстройстваФР,
					                                                                                ОписаниеОшибки);

					Если РезультатФР Тогда
						ВходныеПараметры  = Неопределено;
						ВыходныеПараметры = Неопределено;

						// Выполнение операции на ЭТ
						РезультатЭТ = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваЭТ,
						                                                          "Settlement",
						                                                          ВходныеПараметры,
						                                                          ВыходныеПараметры);

						Если НЕ РезультатЭТ Тогда
							ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При выполнении операции возникла ошибка") + ": " + Символы.пс +
							"""%ОписаниеОшибки%""." + Символы.ПС + 
							ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция сверки итогов не была проведена.");
							ТекстСообщения = СтрЗаменить(ТекстСообщения,
														 "%ОписаниеОшибки%",
														 ВыходныеПараметры[1]);
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
						Иначе
							Если НЕ ПустаяСтрока(ВыходныеПараметры[0][1]) Тогда
								глПодключаемоеОборудование.Вставить("ПоследнийСлипЧек", ВыходныеПараметры[0][1]);
							КонецЕсли;

							НомерКарты          = "";
							НомерСсылкиОперации = "";
							НомерЧека           = "";
							СтрокаСлипЧека      = ВыходныеПараметры[0][1];

							Если НЕ ПустаяСтрока(СтрокаСлипЧека) Тогда
								ВходныеПараметры = Новый Массив();
								ВходныеПараметры.Добавить(СтрокаСлипЧека);
								ВыходныеПараметры = Неопределено;

								РезультатФР = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,
								                                                          "PrintText",
								                                                          ВходныеПараметры,
								                                                          ВыходныеПараметры);
								Если НЕ РезультатФР Тогда
									ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При печати слип-чека возникла ошибка") + ":
										|""%ОписаниеОшибки%"".";
									ТекстСообщения = СтрЗаменить(ТекстСообщения,
																 "%ОписаниеОшибки%",
																 ВыходныеПараметры[1]);
									ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
								КонецЕсли;
							Иначе
								ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция сверки итогов успешно выполнена");
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
							КонецЕсли;
						КонецЕсли;

						// Отключение устройства ФР
						МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
						                                                                 ИдентификаторУстройстваФР);
						// Отключение устройства ЭТ
						МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
						                                                                 ИдентификаторУстройстваЭТ);
					Иначе
						ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении фискального регистратора произошла ошибка") + ":
						|""%ОписаниеОшибки%"".
						|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция сверки итогов не была проведена.");
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
					КонецЕсли;
				Иначе
					ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении эквайрингового терминала произошла ошибка") + ":
						|""%ОписаниеОшибки%"".
						|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция сверки итогов не была проведена.");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Предварительно необходимо выбрать рабочее место подключаемого оборудования текущего сеанса.");

		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры



