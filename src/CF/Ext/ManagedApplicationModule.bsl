//sza140117-2231 : 
//sza130901-0137 : 

Перем глЧислоОбъектов Экспорт;
Перем глПодключаемоеОборудование Экспорт;
Перем глКонфигурацияВРаботе Экспорт;
Перем глОтборСтруктура Экспорт;
Перем глПроверятьСообщения Экспорт;

Процедура ПриНачалеРаботыСистемы()
	
	глКонфигурацияВРаботе = Истина;
	глЧислоОбъектов = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ЧислоОбъектов", Истина);
	ОбщийМодульКлиент.ПриНачалеРаботыСистемы();
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.ПриНачалеРаботыСистемы();
	// Конец ПодключаемоеОборудование
	
	ПроверитьПодключениеОбработчикаОжидания();
	ДобавитьНапоминанияПриСтартеСистемы();
		
КонецПроцедуры

Процедура ПроверитьПодключениеОбработчикаОжидания() Экспорт
	
	Если ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьМеханизмЗаметокИНапоминаний") Тогда
		ПодключитьОбработчикОжидания("ВыполнениеРегламентныхЗаданий", 60);
	Иначе
		ОтключитьОбработчикОжидания("ВыполнениеРегламентныхЗаданий");
	КонецЕсли; 	
	
	глОтборСтруктура = Новый Структура("Пользователь", ОбщийМодульПовтор.ПолучитьПараметрСеанса("ТекущийПользователь"));
	ПодключитьОбработчикОжидания("СообщенияПользователюОтСистемы", 1);
		
КонецПроцедуры

Процедура ВыполнениеРегламентныхЗаданий() Экспорт
    ОбщийМодульСерверПривилегия.ВыполнитьЗадачи();
КонецПроцедуры

Процедура СообщенияПользователюОтСистемы() Экспорт
	
	Если глПроверятьСообщения Тогда
    	ОбщийМодульКлиент.ПроверитьВывестиСообщенияПользователю(глОтборСтруктура);	
		глПроверятьСообщения = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗавершениемРаботыСистемы(Отказ)
	
	СледуетВыполнитьОперацииПередЗавершением = ОбщийМодульСервисСервер.СледуетВыполнитьОперацииПередЗавершением();
	Если Не СледуетВыполнитьОперацииПередЗавершением.количество() = 0 Тогда
		
		Количество = СледуетВыполнитьОперацииПередЗавершением.Количество();
		Процент = ?(Количество = 0, 100, 100 /Количество);
		ТекущийПроцент = Процент;
		Для Каждого ОперацияПередЗавершением Из СледуетВыполнитьОперацииПередЗавершением Цикл
			
			Если ОперацияПередЗавершением = "Восстановление Валовой Прибыли" 
				и Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Необходимо восстановить показатели валовой прибыли. Восстановить сейчас?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				
			Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция:") + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(ОперацияПередЗавершением), Процент, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."), БиблиотекаКартинок.GrayGIf);
			ОбщийМодульСервисСервер.ПередЗавершениемРаботыСистемы(ОперацияПередЗавершением);	
			
			КонецЕсли;
			
			ТекущийПроцент = ТекущийПроцент + Процент;
		КонецЦикла;
	КонецЕсли;
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.ПередЗавершениемРаботыСистемы();
	// Конец ПодключаемоеОборудование
	
	ОбщийМодульСервисСервер.УстановитьЗначениеКонстанты("ЧислоОбъектов", глЧислоОбъектов) ;
	
КонецПроцедуры

Процедура ОбработкаВнешнегоСобытия(Источник, Событие, Данные)

	ОписаниеСобытия = Новый Структура();
	ОписаниеОшибки  = "";

	ОписаниеСобытия.Вставить("Источник", Источник);
	ОписаниеСобытия.Вставить("Событие",  Событие);
	ОписаниеСобытия.Вставить("Данные",   Данные);

	Результат = МенеджерОборудованияКлиент.ОбработатьСобытиеОтУстройства(ОписаниеСобытия, ОписаниеОшибки);
	Если Не Результат Тогда
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При обработке внешнего события от устройства произошла ошибка.")
		                                                 + Символы.ПС + ОписаниеОшибки);
	КонецЕсли;

КонецПроцедуры

глПроверятьСообщения = Ложь;