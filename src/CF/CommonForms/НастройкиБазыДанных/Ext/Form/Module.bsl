//sza150113-1730
//sza150112-1950 обн имя принтера
//sza150108-0341
//sza141228-1419
//sza141223-2050 
//sza141214-0211 ЧислоДнейДействительностиСчетаФактурыДляОплаты
//sza141126-0254 шк
//sza141120-1535 НеПредупреждатьЕслиКлиентНеДоплатилИлиПереплатил
//sza141118-1803 печэтик
//sza141116-1944 
//sza141112-0208 
//sza141030-2012 : РаспределятьДополнительныеРасходыПропорциональноКоличествуАНеСумме
//sza141016-2351 : 
//sza141015-1354 ключи учета
//sza141011-2021 
//sza141009-0053 
//sza140922-2200
//sza140917-1430
//sza140903-1215 : 
//sza140831-0549
//sza140827-0032
//sza140717-0054  
//sza140710-1114  локация
//sza140703-1506  видимость
//sza140627-1654  
//sza140619-1708  
//sza130909-0305 : 
&НаКлиенте
Процедура БлокироватьИзмененияУсловийДоговораЕслиОнУжеУказанВДокументахПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.БлокироватьИзмененияУсловийДоговораЕслиОнУжеУказанВДокументах), 2);
КонецПроцедуры

&НаКлиенте
Процедура БлокироватьКарточкуНоменклатурыПослеУказанияЕеВдокументахПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляВыполненияРаботПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляДвиженияДенегПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляИнвентаризацииПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляКомплектацийПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляОказанияУслугЗаВремяПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляПеремещенияПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляПоступленияПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляРасходаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляУстановкиЦенПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиЗаписьВЖурналВсехОбычныхДействийПользователейПриИзменении(Элемент)
	ОбщийМодульКлиент.УстановитьЗначениеПараметраСеанса("ВестиЗаписьВЖурналВсехОбычныхДействий", НаборКонстант.ВестиЗаписьВЖурналВсехОбычныхДействийПользователей);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетВаловойПрибылиПриИзменении(Элемент)
	
	Если НЕ НаборКонстант.ВестиУчетВаловойПрибыли Тогда
		НаборКонстант.СообщатьОНеактуальностиПоказателейВаловойПрибылиИПредлагатьПерепроведениеДокументовПриВыходеИзПрограммыПоследнегоПользователя = ЛОЖЬ;
	КонецЕсли;
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетВалютПриИзменении(Элемент)
	
	Если НЕ НаборКонстант.ВестиУчетВалют Тогда
		НаборКонстант.ПоказыватьОкноВводаКурсовВалютКаждыйДеньПриЗапускеПрограммы = ЛОЖЬ;
		НаборКонстант.РазрешеноПриниматьПриРеализацииДеньгиСразуВНесколькихВалютах = ЛОЖЬ;
	КонецЕсли;
	ОбщийМодульКлиент.УстановитьЗначениеПараметраСеанса("ВестиУчетВалютВСеансе", НаборКонстант.ВестиУчетВалют);
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Элементы.РазрешеноПриниматьПриРеализацииДеньгиСразуВНесколькихВалютах.Видимость = НаборКонстант.ВестиУчетДвиженияДенег И НаборКонстант.ИспользоватьРегистрациюПриемаИВыдачиДенегПрямоВДокументахРасходаИПрихода И НаборКонстант.ВестиУчетВалют;
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетДвиженияДенегПриИзменении(Элемент)
	
	ВестиУчетДвиженияДенегПриИзмененииП();		
	Элементы.ПриВеденииУчетаВРазныхВалютахРекомендуетсяВключитьУчетВРазныхХранилищах.Видимость = НаборКонстант.ВестиУчетДвиженияДенег;
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетДвиженияДенегПриИзмененииП() 
	
	Если НЕ НаборКонстант.ВестиУчетДвиженияДенег Тогда
		НаборКонстант.ИспользоватьРегистрациюПриемаИВыдачиДенегПрямоВДокументахРасходаИПрихода 	= ЛОЖЬ;
		НаборКонстант.ПоказыватьОкноВводаКурсовВалютКаждыйДеньПриЗапускеПрограммы 				= ЛОЖЬ;
		НаборКонстант.ВестиУчетВалют 						= ЛОЖЬ;
		НаборКонстант.ВестиУчетДенегВНесколькихХранилищах 	= ЛОЖЬ;
		НаборКонстант.ВестиУчетПлановДоходовИРасходов		= ЛОЖЬ;
		Элементы.УчетПлановДоходовИРасходов.Видимость		= ЛОЖЬ;
		
	ИначеЕсли ПлатнаяВерсия Тогда
		Элементы.УчетПлановДоходовИРасходов.Видимость		= ИСТИНА;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетДенегВНесколькихХранилищахПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетЗаказовКлиентовПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетЗаказовПоставщикамПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетНоменклатурыВРазрезеНоменклатурныхГруппПриИзменении(Элемент)
	
	Если НЕ НаборКонстант.ВестиУчетНоменклатурыВРазрезеНоменклатурныхГрупп Тогда
		НаборКонстант.НоменклатурнаяГруппаОбязательныйРеквизитЛюбойНоменклатуры = ЛОЖЬ;
		Если НаборКонстант.НазначатьРазличныеСпособыФормированияЦеныДляНоменклатурныхГрупп Тогда		
			НаборКонстант.НазначатьРазличныеСпособыФормированияЦеныДляНоменклатурныхГрупп = ЛОЖЬ;	
		КонецЕсли;
	КонецЕсли;
	
	ИспользоватьДополнтельныеРеквизитыНоменклатурныхГруппПриИзмененииНаСервере();
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.ФормулаАвтоНаименованияНоменклатурыНоменклатурнойГруппыПоУмолчанию.Видимость = НаборКонстант.ВестиУчетНоменклатурыВРазрезеНоменклатурныхГрупп и НаборКонстант.ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом;
	Элементы.ФормулаИКнопкаПримера.Видимость = НаборКонстант.ВестиУчетНоменклатурыВРазрезеНоменклатурныхГрупп;
	
	обновитьвидимостьэлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетОбъектовКлиентовПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.СкладДляОбъектовКлиентаПоУмолчанию.Видимость  = НаборКонстант.ИспользоватьДокументыВыполненияРабот И НаборКонстант.ВестиУчетПоСкладам И НЕ НаборКонстант.ВестиУчетОбъектовКлиентов;
	Элементы.СкладДляОбъектовКлиентаПоУмолчанию1.Видимость = НаборКонстант.ИспользоватьДокументыВыполненияРабот И НаборКонстант.ВестиУчетПоСкладам И НЕ НаборКонстант.ВестиУчетОбъектовКлиентов;
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетОказанияУслугЗаВремяПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетОказанияУслугЗаВремяСОпределеннымиПозициямиНомерамиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетОплатПоОтдельнымЗаказамПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетОтдельныхДоговоровСКонтрагентамиПриИзменении(Элемент)
	
	Если НЕ НаборКонстант.ВестиУчетОтдельныхДоговоровСКонтрагентами Тогда
		НаборКонстант.ДоговорДолженБытьВыбранОбязательноИначеПрограммаВыберетДоговорПоУмолчанию = ЛОЖЬ;
	КонецЕсли;
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПартийПоступленияПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПлановДоходовИРасходовПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПлановыхПоказателейПродажПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПодразделенийПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПоКлиентамПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.РазмерСкидкиНаДатаРождения.Видимость 							= НаборКонстант.ИспользоватьСкидки и НаборКонстант.ВестиУчетПоКлиентам;
	Элементы.ВключитьВозможностьУказыватьПроцентСкидкиДляКлиентов.Видимость = НаборКонстант.ВестиУчетПоКлиентам и НаборКонстант.ИспользоватьСкидки;
	
	Если НЕ НаборКонстант.ВестиУчетПоКлиентам
		И НЕ НаборКонстант.ВестиУчетПоПоставщикам Тогда
		
		НаборКонстант.ВестиУчетОтдельныхДоговоровСКонтрагентами = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПоПоставщикамПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	
	Если НЕ НаборКонстант.ВестиУчетПоКлиентам
		И НЕ НаборКонстант.ВестиУчетПоПоставщикам Тогда
		
		НаборКонстант.ВестиУчетОтдельныхДоговоровСКонтрагентами = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПоСкладамПриИзменении(Элемент)
	
	Элементы.СкладДляОбъектовКлиентаПоУмолчанию.Видимость = НаборКонстант.ВестиУчетПоСкладам И НЕ НаборКонстант.ВестиУчетОбъектовКлиентов;
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПродажПоСотрудникамПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПроизводителейНоменклатурыПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетРазмеровИВесаТоваровПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетРегионовПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетСерийНоменклатурыПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.ШтрихКодомМожетВыступатьСерияИлиКодПродукта.Видимость = НаборКонстант.ИспользоватьШтрихКоды И НаборКонстант.ВестиУчетСерийНоменклатуры;
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетСертификатовНоменклатурыПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетСобственныхЮридическихЛицПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетСредствПредприятияПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВидЦенДляОтпускаТоваровСобственнымСотрудникаПриИзменении(Элемент)
	
	ВидЦенДляОтпускаТоваровСобственнымСотрудникаПриИзмененииНаСервере(НаборКонстант.ВидЦенДляОтпускаТоваровСобственнымСотрудникам);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВидЦенДляОтпускаТоваровСобственнымСотрудникаПриИзмененииНаСервере(Знач ВидЦенДляОтпускаТоваровСобственнымСотрудникам)
	
	СвязаннаяПапкаКлиентов = Справочники.Клиенты.НайтиПоНаименованию(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Собственные Сотрудники"));
	
	Если ЗначениеЗаполнено(СвязаннаяПапкаКлиентов)
		И СвязаннаяПапкаКлиентов.ЭтоГруппа Тогда
		
		СвязаннаяПапкаКлиентов = СвязаннаяПапкаКлиентов.ПолучитьОбъект();
		СвязаннаяПапкаКлиентов.ВидЦен = ВидЦенДляОтпускаТоваровСобственнымСотрудникам;
		СвязаннаяПапкаКлиентов.Записать();
	КонецЕсли;
	
	СвязаннаяПапкаПоставщиков = Справочники.Поставщики.НайтиПоНаименованию(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Собственные Сотрудники"));
	
	Если ЗначениеЗаполнено(СвязаннаяПапкаПоставщиков)
		И СвязаннаяПапкаПоставщиков.ЭтоГруппа Тогда
		
		СвязаннаяПапкаПоставщиков = СвязаннаяПапкаПоставщиков.ПолучитьОбъект();
		СвязаннаяПапкаПоставщиков.ВидЦен = ВидЦенДляОтпускаТоваровСобственнымСотрудникам;
		СвязаннаяПапкаПоставщиков.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЦенДляРеализацииНаРабочемМестеОператораКассыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВидЦенДляРегистрацииФактическойЦеныПриобретенияПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВидЦенРасходованияПоУмолчаниюПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(НаборКонстант.ВидЦенРасходованияПоУмолчанию) Тогда
		НаборКонстант.РеализаторНеМожетМенятьЦены = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВозможностьУказыватьПроцентСкидкиДляКлиентовПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВозможностьУказыватьПроцентСкидкиДляНоменклатурыПриИзменении(Элемент)
	
	Если НЕ НаборКонстант.ВключитьВозможностьУказыватьПроцентСкидкиДляНоменклатуры тогда
		НаборКонстант.СуммироватьПроцентСкидкиКлиентаИНоменклатуры = ЛОЖЬ;
	КонецЕсли;
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьИспользоватьНаборыТоваровПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВключитьМеханизмЛьготнойЦеныПоКоличествуПриПродажеПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.МеханизмЛьготнойЦены.Видимость = НаборКонстант.ВключитьМеханизмЛьготнойЦеныПоКоличествуПриПродаже;
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьМеханизмПодбораНоменклатурыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВПриходномДокументеНеЗаполнятьЗакупочнуюЦенуПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьВРасходномДокументеЕдиницуИзмеренияОтдельнойКолонкойПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДатаСКоторойТребуетсяОбязательноеУказаниеДоговораПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДемонстрироватьИнформационнуюКолонкуОстатокТовараСУчетомДокументаВНепроведенныхДокументахПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДемонстрироватьПриВыбореНоменклатурыПриРасходованииИПеремещенииТолькоСОстаткамиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДляДокументовДемонстрироватьСамыеСвежиеСертификатыНоменклатуры1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДляДокументовДемонстрироватьСамыеСвежиеСертификатыНоменклатурыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанныхПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФункцииПриемаИВыдачиОбъектаРаботДокументуВыполненияРаботПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДобавлятьТекущуюДатуИВремяВоВсеПечатныеФормыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДоговорДолженБытьВыбранОбязательноИначеПрограммаВыберетДоговорПоУмолчаниюПриИзменении(Элемент)	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);	
КонецПроцедуры

&НаКлиенте
Процедура ЕстьПринтерПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.СтраницыНастроекПечати.Видимость = НаборКонстант.ЕстьПринтер;
	
	Если НаборКонстант.ЕстьПринтер Тогда
		ОбновитьИменаПринтеров();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЧтоНового(Знач ТолькоВПоследнейВерсии = ЛОЖЬ, ОпределенныйРезультат = Неопределено)
	
	МакетЧтоНового = ПолучитьОбщийМакет("ЧтоНового");
	
	МассивНеобходимыхОбластей = Новый ТаблицаЗначений;
	МассивНеобходимыхОбластей.Колонки.Добавить("ИмяОбласти");
	
	Для Каждого Область Из МакетЧтоНового.Области Цикл
		
		ИмяОбласти = СтрЗаменить(Область.Имя, "Ш", "");
		Если НЕ ПустаяСтрока(ИмяОбласти) Тогда
			
			Попытка
				НомерОбласти = Число(ИмяОбласти);
				Если НомерОбласти > ЧислоВерсияПриИнсталляции Тогда
					СтрокаТаблицы = МассивНеобходимыхОбластей.Добавить();
					СтрокаТаблицы.ИмяОбласти = Область.Имя;
				КонецЕсли;
			Исключение
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ МассивНеобходимыхОбластей.Количество() = 0 Тогда
		
		Ш = МакетЧтоНового.ПолучитьОбласть("Ш");	
		Если ОпределенныйРезультат = Неопределено Тогда
			ЧтоНового.Вывести(Ш);
		Иначе
			ОпределенныйРезультат.Вывести(Ш);
		КонецЕсли;
		
		Если НЕ ПлатнаяВерсия Тогда
			ШП = МакетЧтоНового.ПолучитьОбласть("ШП");	
			Если ОпределенныйРезультат = Неопределено Тогда
				ЧтоНового.Вывести(ШП);
			Иначе
				ОпределенныйРезультат.Вывести(ШП);
			КонецЕсли;
		КонецЕсли;
		
		МассивНеобходимыхОбластей.Сортировать("ИмяОбласти УБЫВ");
		Для Каждого ОбластьМассива Из МассивНеобходимыхОбластей Цикл
			Ш = МакетЧтоНового.ПолучитьОбласть(ОбластьМассива.ИмяОбласти);	
			Если ОпределенныйРезультат = Неопределено Тогда
				ЧтоНового.Вывести(Ш);
			Иначе
				ОпределенныйРезультат.Вывести(Ш);
			КонецЕсли;
			Если ТолькоВПоследнейВерсии Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ОпределенныйРезультат = Неопределено Тогда
			Элементы.ЧтоНового.Видимость = ИСТИНА;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапретитьВозможностьРегистрироватьДополнительныеРасходыПриПриходованииТоваровПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЗапретитьИзмененияВПрошломПериоде()
	
	Если НаборКонстант.ЗапретитьИзмененияВПрошломПериоде = ПредопределенноеЗначение("Перечисление.ВидыЗапрета.ЗапрещатьИзмененияСтаршеОпределенногоСрока") Тогда
		Элементы.ДатаЗапретаИзмененияДанных.Видимость = ЛОЖЬ;
		Элементы.СрокЗапретаДанныхВЧасах.Видимость = ИСТИНА;
	ИначеЕсли НаборКонстант.ЗапретитьИзмененияВПрошломПериоде = ПредопределенноеЗначение("Перечисление.ВидыЗапрета.ЗапрещатьИзмененияСтаршеДаты") Тогда
		Элементы.ДатаЗапретаИзмененияДанных.Видимость = ИСТИНА;
		Элементы.СрокЗапретаДанныхВЧасах.Видимость = ЛОЖЬ;
	Иначе		
		Элементы.ДатаЗапретаИзмененияДанных.Видимость = ЛОЖЬ;
		Элементы.СрокЗапретаДанныхВЧасах.Видимость = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапретитьИзмененияВПрошломПериодеПриИзменении(Элемент)
	
	ЗапретитьИзмененияВПрошломПериоде();
	ЗапретитьИзмененияВПрошломПериодеП = НаборКонстант.ЗапретитьИзмененияВПрошломПериоде;
	ЗапретитьИзмененияВПрошломПериодеП = (ЗапретитьИзмененияВПрошломПериодеП = ПредопределенноеЗначение("Перечисление.ВидыЗапрета.ЗапрещатьИзмененияСтаршеДаты")) ИЛИ (ЗапретитьИзмененияВПрошломПериодеП = ПредопределенноеЗначение("Перечисление.ВидыЗапрета.ЗапрещатьИзмененияСтаршеОпределенногоСрока"));
	ОбщийМодульКлиент.УстановитьЗначениеПараметраСеанса("ДействуетЗапретИзмененийПрошлого", ЗапретитьИзмененияВПрошломПериодеП);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапретитьИспользоватьОдинаковыеКодыИННПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЗапретитьНоменклатуруБезШтрихКодаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЗапретитьРазукомплектациюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЗачислятьТоварПереданныйКомиссионерамВКачествеПроданногоПриОтчетеКомиссионераПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаСервереБезКонтекста
Функция   ЗНК()
	
	Возврат ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ЭлектроннаяПочтаПользователь");
	
КонецФункции

&НаКлиенте
Процедура ИндивидуальныйТекстВШапкеПечатнойФормыЗаказаКлиентаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ИндивидуальныйТекстВШапкеПечатнойФормыРасходаТовараПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДокументыВыполненияРаботПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.СкладДляОбъектовКлиентаПоУмолчанию.Видимость  = НаборКонстант.ИспользоватьДокументыВыполненияРабот И НаборКонстант.ВестиУчетПоСкладам И НЕ НаборКонстант.ВестиУчетОбъектовКлиентов;
	Элементы.СкладДляОбъектовКлиентаПоУмолчанию1.Видимость = НаборКонстант.ИспользоватьДокументыВыполненияРабот И НаборКонстант.ВестиУчетПоСкладам И НЕ НаборКонстант.ВестиУчетОбъектовКлиентов;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДополнительнуюИнформациюДляОбъектовБазыДанныхПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДополнительныеРеквизитыСправочниковИДокументовПриИзменении(Элемент)
	
	ИспользоватьДополнтельныеРеквизитыНоменклатурныхГруппПриИзмененииНаСервере();
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДополнительныеУстаревшиеШтрихКодыНоменклатурыПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДополнтельныеРеквизитыНоменклатурныхГруппПриИзменении(Элемент)
	
	ИспользоватьДополнтельныеРеквизитыНоменклатурныхГруппПриИзмененииНаСервере();
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	
КонецПроцедуры

&НаСервере
Процедура ИспользоватьДополнтельныеРеквизитыНоменклатурныхГруппПриИзмененииНаСервере()
	
	Если НаборКонстант.ИспользоватьДополнительныеРеквизитыНоменклатурныхГрупп Тогда
		Если НЕ НаборКонстант.ИспользоватьДополнительныеРеквизитыСправочниковИДокументов Тогда
			
			НаборКонстант.ИспользоватьДополнительныеРеквизитыСправочниковИДокументов = ИСТИНА;	
		КонецЕсли;
		Если НЕ НаборКонстант.ВестиУчетНоменклатурыВРазрезеНоменклатурныхГрупп Тогда
			
			НаборКонстант.ВестиУчетНоменклатурыВРазрезеНоменклатурныхГрупп = ИСТИНА;	
		КонецЕсли;
		
	ИначеЕсли НЕ НаборКонстант.ВестиУчетНоменклатурыВРазрезеНоменклатурныхГрупп
		ИЛИ НЕ НаборКонстант.ИспользоватьДополнительныеРеквизитыСправочниковИДокументов Тогда
		
		НаборКонстант.ИспользоватьДополнительныеРеквизитыНоменклатурныхГрупп = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЕдиницыИзмеренияНоменклатурыПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.ГруппаОсновнойЕдиницы.Видимость = НаборКонстант.ИспользоватьЕдиницыИзмеренияНоменклатуры;
	Элементы.ГруппаОтменыЕдиницИзмерения.Видимость = НЕ НаборКонстант.ИспользоватьЕдиницыИзмеренияНоменклатуры;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЖурналированиеСобытийПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);	
	ОбщийМодульКлиент.УстановитьЗначениеПараметраСеанса("ИспользоватьЖурналированиеСобытий", НаборКонстант.ИспользоватьЖурналированиеСобытий);
	Элементы.ВРежимеСИспользованиемМеханизмаСторнирования.Видимость = НаборКонстант.ИспользоватьСторнированиеДокументов И Не НаборКонстант.ИспользоватьЖурналированиеСобытий;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьИнструментРабочееМестоОператораКассыПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.ГруппаНастроекОператораКассы.Видимость = НаборКонстант.ИспользоватьИнструментРабочееМестоОператораКассы;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКомандуПечатиПочтовогоБланкаДляКонтрагентовПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКомандыИзмененийИЗаполненияДляТаблицыТоварыПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКомплектациюПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЛичныеНастройкиПользователейПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМеханизмАналоговДляНоменклатурыПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМеханизмЗаметокИНапоминанийПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМеханизмОтсрочкиПлатежаПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМеханизмыПечатиНалоговойНакладнойДляУкраиныПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМеханизмыПечатиФормыТОРГ12ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтдельныеПоляАдресаИТелефонаВЗаказахКлиентовПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПечатьЭтикетокПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.ПриУказанииНаименованияПринтераШтрихКодовПечатьБудетИдтиСразуБезВыбораПринтера.Видимость = НаборКонстант.ИспользоватьПечатьЭтикеток;
	Элементы.ГруппаДополнительнойСтрокиЭтикетки.Видимость = НаборКонстант.ИспользоватьПечатьЭтикеток;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПодключаемоеОборудованиеПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.ПриИспользованииШтрихКодаЕслиНоменклатураНеНайденаПоШтрихКодуИскатьПоАртикулу.Видимость = НаборКонстант.ИспользоватьШтрихКоды И НаборКонстант.ИспользоватьПодключаемоеОборудование И НаборКонстант.ИспользоватьРеквизитАртикулНоменклатуры;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРегистрациюПриемаИВыдачиДенегПрямоВДокументахРасходаИПриходаПриИзменении(Элемент)
	
	Если НЕ НаборКонстант.ИспользоватьРегистрациюПриемаИВыдачиДенегПрямоВДокументахРасходаИПрихода Тогда
		НаборКонстант.РазрешеноПриниматьПриРеализацииДеньгиСразуВНесколькихВалютах = ЛОЖЬ;
	КонецЕсли;
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.РазрешеноПриниматьПриРеализацииДеньгиСразуВНесколькихВалютах.Видимость = НаборКонстант.ВестиУчетДвиженияДенег И НаборКонстант.ИспользоватьРегистрациюПриемаИВыдачиДенегПрямоВДокументахРасходаИПрихода И НаборКонстант.ВестиУчетВалют;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРеквизитАртикулНоменклатурыПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.ПриИспользованииШтрихКодаЕслиНоменклатураНеНайденаПоШтрихКодуИскатьПоАртикулу.Видимость = НаборКонстант.ИспользоватьШтрихКоды И НаборКонстант.ИспользоватьПодключаемоеОборудование И НаборКонстант.ИспользоватьРеквизитАртикулНоменклатуры;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСистемуУправленияДоступомПриИзменении(Элемент)	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);		
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСкидкиПриИзменении(Элемент)
	
	Если НЕ НаборКонстант.ИспользоватьСкидки Тогда
		НаборКонстант.РазмерСкидкиНаДатаРождения = 0;
		НаборКонстант.ВключитьВозможностьУказыватьПроцентСкидкиДляКлиентов = ЛОЖЬ;
		НаборКонстант.ВключитьВозможностьУказыватьПроцентСкидкиДляНоменклатуры = ЛОЖЬ;
		НаборКонстант.СуммироватьПроцентСкидкиКлиентаИНоменклатуры = ЛОЖЬ;
	КонецЕсли;
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.РазмерСкидкиНаДатаРождения.Видимость = НаборКонстант.ИспользоватьСкидки и НаборКонстант.ВестиУчетПоКлиентам;
	Элементы.ВключитьВозможностьУказыватьПроцентСкидкиДляКлиентов.Видимость  = НаборКонстант.ВестиУчетПоКлиентам и НаборКонстант.ИспользоватьСкидки;
	Элементы.ВключитьВозможностьУказыватьПроцентСкидкиДляКлиентов1.Видимость = НаборКонстант.ВестиУчетПоКлиентам и НаборКонстант.ИспользоватьСкидки;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСложныйМеханизмЦенПриИзменении(Элемент)
	
	Если НЕ НаборКонстант.ИспользоватьСложныйМеханизмЦен
		И НаборКонстант.НазначатьРазличныеСпособыФормированияЦеныДляНоменклатурныхГрупп Тогда
		
		НаборКонстант.НазначатьРазличныеСпособыФормированияЦеныДляНоменклатурныхГрупп = ЛОЖЬ;
	КонецЕсли;
	
	Элементы.ГруппаФормулыПреобразованияЦены.Видимость = НаборКонстант.ИспользоватьСложныйМеханизмЦен и НаборКонстант.ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом;
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	обновитьвидимостьэлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодомПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);	
	
	Элементы.ФормулаАвтоНаименованияНоменклатурыНоменклатурнойГруппыПоУмолчанию.Видимость 	= НаборКонстант.ВестиУчетНоменклатурыВРазрезеНоменклатурныхГрупп и НаборКонстант.ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом;
	Элементы.ОсновнаяФормулаПреобразованияЦен.Видимость = НаборКонстант.ИспользоватьСложныйМеханизмЦен И НаборКонстант.ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом;
	Элементы.ОбновитьШтрикоды.Видимость 				= НаборКонстант.ИспользоватьШтрихКоды И НаборКонстант.ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьШтрихКодыДляИдентификацииКонтрагентовПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьШтрихКодыПриИзменении(Элемент)
	
	Если НЕ НаборКонстант.ИспользоватьШтрихКоды Тогда
		НаборКонстант.ЗапретитьНоменклатуруБезШтрихКода = ЛОЖЬ;
	КонецЕсли;
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	НаборКонстантИспользоватьШтрихКоды = НаборКонстант.ИспользоватьШтрихКоды;
	
	Элементы.ПриИспользованииШтрихКодаЕслиНоменклатураНеНайденаПоШтрихКодуИскатьПоАртикулу.Видимость = НаборКонстантИспользоватьШтрихКоды И НаборКонстант.ИспользоватьПодключаемоеОборудование И НаборКонстант.ИспользоватьРеквизитАртикулНоменклатуры;
	Элементы.ШтрихКодомМожетВыступатьСерияИлиКодПродукта.Видимость 						= НаборКонстантИспользоватьШтрихКоды И НаборКонстант.ВестиУчетСерийНоменклатуры;
	Элементы.ОстанавливатьСканированиеВДокументеПриНеНайденнойНоменклатуре.Видимость 	= НаборКонстантИспользоватьШтрихКоды ;
	Элементы.УстанавливатьШтрихКодИзКарточкиНоменклатуры.Видимость 						= НаборКонстантИспользоватьШтрихКоды ;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоНоменклатурыМожетБытьДробнымПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
	Элементы.ЧислоЗнаковПослеЗапятойДляКоличества.Видимость = НаборКонстант.КоличествоНоменклатурыМожетБытьДробным;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаТест(Команда)
	
	попытка
		Выполнить(" УстановитьКраткийЗаголовокПриложения(""SZA"")");
	исключение
	конецпопытки;
	
	ОбщийМодульКлиент.ВыдатьСигнал("000");
	тест();
	
КонецПроцедуры

&НаКлиенте
Процедура КомиссионерыОтчитываютсяПоОтдельнымДокументамПередачиНаКоммиссиюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура Литр(Команда)
	
	НаборКонстант.НаименованиеОсновнойЕдиницыИзмеренияПоУмолчанию = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("л.");
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил основную единицу измерения") + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Литр"), 2);
	
КонецПроцедуры

&НаКлиенте
Процедура Метр(Команда)
	
	НаборКонстант.НаименованиеОсновнойЕдиницыИзмеренияПоУмолчанию = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("м.");
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил основную единицу измерения") + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Метр"), 2);
	
КонецПроцедуры

&НаКлиенте
Процедура МинимальнаяСуммаОказанияУслугПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура МинимальныйОбъемОказанияУслугПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НазначатьРазличныеСпособыФормированияЦеныДляНоменклатурныхГрупп1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НазначатьРазличныеСпособыФормированияЦеныДляНоменклатурныхГруппПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНашегоРегионПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	НаименованиеНашегоРегионПриИзмененииНаСервере(НаименованиеНашегоРегиона);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура НаименованиеНашегоРегионПриИзмененииНаСервере(Знач НаименованиеНашегоРегиона)
	
	НашРегион = Справочники.Регионы.НашРегион.ПолучитьОбъект();
	НашРегион.Наименование = НаименованиеНашегоРегиона;
	НашРегион.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеОсновнойВалютыПриИзменении(Элемент)	
	НаименованиеОсновнойВалютыПриИзмененииНаСервере(НаименованиеОсновнойВалюты);	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура НаименованиеОсновнойВалютыПриИзмененииНаСервере(Знач НаименованиеОсновнойВалюты)
	
	ОсновнаяВалюта = Справочники.Валюты.ОсновнаяВалюта.ПолучитьОбъект();
	ОсновнаяВалюта.Наименование = НаименованиеОсновнойВалюты;
	ОсновнаяВалюта.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеОсновнойЕдиницыИзмеренияПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПринтераШтрихКодов1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НашеОКПОПриИзменении(Элемент)
	НашеОКПОПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура НашеОКПОПриИзмененииНаСервере()
	
	ОсновнаяОрганизация = Справочники.Организации.ОсновноеПредприятие.ПолучитьОбъект();
	ОсновнаяОрганизация.ОКПО = НашеОКПО;
	ОсновнаяОрганизация.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура НашЮридическийАдресПриИзменении(Элемент)
	НашЮридическийАдресПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура НашЮридическийАдресПриИзмененииНаСервере()
	
	ОсновнаяОрганизация = Справочники.Организации.ОсновноеПредприятие.ПолучитьОбъект();
	ОсновнаяОрганизация.Адрес = НашЮридическийАдрес;
	ОсновнаяОрганизация.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура НеВыводитьНаПечатьДанныеОСкидкеПриПечатиРасходногоДокумента1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеВыводитьНаПечатьДанныеОСкидкеПриПечатиРасходногоДокументаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеВыводитьСообщенийПриИзменении(Элемент)
	НеВыводитьСообщенийПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура НеВыводитьСообщенийПриИзмененииНаСервере()
	ПараметрыСеанса.НеВыводитьСообщений = НеВыводитьСообщений;
КонецПроцедуры

&НаКлиенте
Процедура НеИспользоватьПеремещениеТовараЧерезСкладТоварВПутиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеОтправлятьСтатистикуАвторуПрограммыПриПервомЗапускеИОбновленииПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеПоказыватьКомандуДобавленияНоменклатурыСКоличествомПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеПроверятьУникальностьШтрихКодаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеРегистрироватьЦеныЗаСчетДокументовПоступленияПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеСворачиватьТоварыПоКоличествуВоВсехДокументахПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеСворачиватьТоварыПоКоличествуПриПриходованииТовараПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеСообщатьОПополненииТовараИлиДенегПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеСпрашиватьПодтверждениеПриВыходеИзПрограммыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ОбводитьРамкамиТекстовыеПоляВФормахПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
	Если НЕ НаборКонстант.ОбводитьРамкамиТекстовыеПоляВФормах
		И НаборКонстант.РамкиТекстовыхПолейВФормахРазличногоЦвета Тогда
		
		НаборКонстант.РамкиТекстовыхПолейВФормахРазличногоЦвета = ЛОЖЬ;	
	КонецЕсли;
	
КонецПроцедуры

Процедура обновитьвидимостьэлементов()	
	
	Элементы.ВидЦенДляРегистрацииФактическойЦеныПриобретения.Видимость = НаборКонстант.РегистрироватьВКачествеЗакупочнойСтрогоЦенуПоставщикаНезависимоОтНаличияДополнительныхРасходов;	
	
	ДоступноНазначатьРазличныеСпособыФормированияЦеныДляНоменклатурныхГрупп = ПлатнаяВерсия И НаборКонстант.ИспользоватьСложныйМеханизмЦен И НаборКонстант.ВестиУчетНоменклатурыВРазрезеНоменклатурныхГрупп;
	Элементы.НазначатьРазличныеСпособыФормированияЦеныДляНоменклатурныхГрупп.Видимость  = ДоступноНазначатьРазличныеСпособыФормированияЦеныДляНоменклатурныхГрупп;
	Элементы.НазначатьРазличныеСпособыФормированияЦеныДляНоменклатурныхГрупп1.Видимость = ДоступноНазначатьРазличныеСпособыФормированияЦеныДляНоменклатурныхГрупп;
	
КонецПроцедуры //обновитьвидимостьэлементов

&НаСервереБезКонтекста
Процедура ОбновитьТекущийЯзыкИнтерфейса(Знач ТекущийЯзыкИнтерфейса)
	
	ПараметрыСеанса.ТекущийЯзыкИнтерфейсаПрограммы = ТекущийЯзыкИнтерфейса;
	
	ОбщийМодульТекстСервер.ЗагрузитьТекстыОпределенногоЯзыкаИзМакета(ТекущийЯзыкИнтерфейса);	
	ОбновитьПовторноИспользуемыеЗначения();
	ОбщийМодульСервер.ЗадатьНаименованияОбъектамНаДругомЯзыке();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбновитьШтрикоды(Команда)
	
	Если ЗначениеЗаполнено(НаборКонстант.ОсновнаяФормулаШтрихКодаНоменклатуры)
		И Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы готовы запустить обновление всех штрих-кодов?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда				
		
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Обновление штрих-кодов номенклатуры.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
		Записать();
		ОбновитьШтрихКодыНаСервере();	
		
		глПроверятьСообщения = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьШтрихКодыНаСервере()
	
	Счетчик = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Номенклатура.Ссылка
	|ИЗ Справочник.Номенклатура КАК Номенклатура
	|ГДЕ Номенклатура.ЭтоГруппа = ЛОЖЬ";
	
	ФормироватьНовыйШтрихКодТолькоВЕгоОтсутствии = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ФормироватьНовыйШтрихКодТолькоВЕгоОтсутствии");
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			БылИзм = ЛОЖЬ;
			
			НоменклатураОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			Если ФормироватьНовыйШтрихКодТолькоВЕгоОтсутствии Тогда 
				Если ПустаяСтрока(НоменклатураОбъект.ОсновнойШтрихКод) Тогда
					НоменклатураОбъект.ОсновнойШтрихКод = ОбщийМодульТоварСервер.УстановитьШтрихКодНоменклатурыПоФормуле(НоменклатураОбъект);
					БылИзм = ИСТИНА;
				КонецЕсли;
			Иначе
				НоменклатураОбъект.ОсновнойШтрихКод = ОбщийМодульТоварСервер.УстановитьШтрихКодНоменклатурыПоФормуле(НоменклатураОбъект);
				БылИзм = ИСТИНА;
			КонецЕсли;
			
			Если БылИзм Тогда
				НоменклатураОбъект.Записать();	
			КонецЕсли;
			
			Счетчик = Счетчик + 1;
		КонецЦикла;                                                                                      	
	КонецЕсли;
	
	Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Всего обновлено") + ": " + СокрЛП(Счетчик));
	
КонецПроцедуры

&НаКлиенте
Процедура ОдинДокументПриходаИлиРасходаТовараМожетБытьОформленДляНесколькихЗаказовПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаСервере
Процедура ОправитьПоEMAILКонтрагентуНаСервере(Знач ТекстСопровождения, Знач получатель)	
	ОбщийМодульСервисСервер.ПисьмоКонтрагенту(, , ТекстСопровождения, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Письмо для проверки настроек почты в базе данных конфигурации Элементарная Торговля"), ?(НЕ ЗначениеЗаполнено(получатель), НаборКонстант.ЭлектроннаяПочтаОтправитель, получатель));
КонецПроцедуры

&НаКлиенте
Процедура ОсновноеХранилищеДенег1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьПланированиеВДокументеВыполненияРаботПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСтраницуСайтаПрограммы(Команда)
	ЗапуститьПриложение("https://sites.google.com/site/elementarytrade/platnaa-versia-programmy");
КонецПроцедуры

&НаКлиенте
Процедура ОтправлятьПечатьДокументовИСправочниковСразуНаПринтерПриИзменении(Элемент)
	
	Если НаборКонстант.ОтправлятьПечатьДокументовИСправочниковСразуНаПринтер
		И НЕ Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что принтер будет все время включен и готов к печати?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		
		НаборКонстант.ОтправлятьПечатьДокументовИСправочниковСразуНаПринтер = ЛОЖЬ;
	Иначе
		ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОформлятьПриРеализацииПоЛьготнойЦенеКакСкидкуНаТоварПриИзменении(Элемент)
	Элементы.СуммироватьПроцентСкидкиКлиентаИлиНоменклатурыСПроцентомЛьготнойЦены.Видимость = НаборКонстант.ИспользоватьСкидки и НаборКонстант.ОформлятьПриРеализацииПоЛьготнойЦенеКакСкидкуНаТовар;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЖурналДоУказаннойДаты(Команда)
	
	Если Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Очистить журнал") + " " + ?(ЗначениеЗаполнено(ДатаГраницыОчисткиЖурнала), "до " + Формат(ДатаГраницыОчисткиЖурнала, "ДФ=dd.MM.yyyy"), "за весь период") + "?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет очистка журнала.."));
		ОчиститьЖурналДоУказаннойДатыНаСервере(ДатаГраницыОчисткиЖурнала);	
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОчиститьЖурналДоУказаннойДатыНаСервере(Знач ДатаГраницыОчисткиЖурналаБК = Неопределено)
	
	ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Очистил журнал событий") + " " + ?(ЗначениеЗаполнено(ДатаГраницыОчисткиЖурналаБК), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("по") + " " + ДатаГраницыОчисткиЖурналаБК, ""), 2);
	
	Если ДатаГраницыОчисткиЖурналаБК = Неопределено Тогда
		ЖурналСобытий = РегистрыСведений.ЖурналСобытий.СоздатьНаборЗаписей();
		ЖурналСобытий.Прочитать();
		ЖурналСобытий.Записать(ИСТИНА);		
	Иначе
		Выборка = РегистрыСведений.ЖурналСобытий.Выбрать('00010101000000', ДатаГраницыОчисткиЖурналаБК);
		Пока Выборка.Следующий() Цикл
			Выборка.ПолучитьМенеджерЗаписи().Удалить();
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ТекущаяСтраница = Элементы.ГруппаСтраниц.ТекущаяСтраница;
	СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
	СтраницаПанели  = СтраницыПанели.Индекс(ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерепровестиПриходныеИРасходныеДокументыНачинаяСДатыДляВосстановленияПоказателейВаловойПрибыли(Команда)
	
	Если ЗначениеЗаполнено(НаборКонстант.ДатаАктуальностиПоказателейВаловойПрибыли) Тогда
		
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Перепроведение документов.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."), БиблиотекаКартинок.GrayGIf);
		ПерепровестиПриходныеИРасходныеДокументыНачинаяСДатыДляВосстановленияПоказателейВаловойПрибылиНаСервере();
		НаборКонстант.ДатаАктуальностиПоказателейВаловойПрибыли = '00010101000000';
		
		ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Перепровел документы для восстановления показателей валовой прибыли"), 2);
		глПроверятьСообщения = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПерепровестиПриходныеИРасходныеДокументыНачинаяСДатыДляВосстановленияПоказателейВаловойПрибылиНаСервере()
	ОбщийМодульСервер.ПерепровестиПриходныеИРасходныеДокументыНачинаяСДатыДляВосстановленияПоказателейВаловойПрибыли();
КонецПроцедуры

&НаКлиенте
Процедура ПечататьРегламентированныйДокументРасходнойНакладнойПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПечататьЧекПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
	Элементы.СтрогоеИмяНефискальногоПринтераЧеков.Видимость = НаборКонстант.ПечататьЧек;
	
КонецПроцедуры

&НаКлиенте
Процедура ПисьмоАвторуОбОшибкеИлиСПожеланием(Команда)
	
	формаписьма = ПолучитьФорму("ОбщаяФорма.ПисьмоАвтору");
	формаписьма.открыть();
	
КонецПроцедуры

&НаСервере
Процедура ПоведениеПрограммыИзмена()
	
	Поведение 			= НаборКонстант.ПоведениеПрограммыПриРасходеТоваровНижеРекомендованногоМинимальногоОстатка;
	видимостьЭлементов 	= ЗначениеЗаполнено(Поведение) И НЕ Поведение = Перечисления.ИгнорироватьРазрешитьЗапретить.Игнорировать ;
	
	Элементы.ДатаСКоторойДействуетПоведениеОРекомендуемомОстаткеТовара.Видимость = видимостьЭлементов;
	Элементы.РекомендуемыйМинимальныйОстатокТовара.Видимость = видимостьЭлементов;
	
	Поведение = НаборКонстант.ПоведениеПрограммыПриРасходеТоваровБезОстатка;
	видимостьЭлементов = ЗначениеЗаполнено(Поведение) И НЕ Поведение = Перечисления.ИгнорироватьРазрешитьЗапретить.Игнорировать ;
	Элементы.ДатаСКоторойДействуетПоведениеОбОтрицательныхОстаткахТовара.Видимость = видимостьЭлементов;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоведениеПрограммыПриРасходеТоваровБезОстаткаПриИзменении(Элемент)
	
	ПроверитьДатуОграничения();
	ПоведениеПрограммыИзмена();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоведениеПрограммыПриРасходеТоваровНижеРекомендованногоМинимальногоОстаткаПриИзменении(Элемент)
	ПоведениеПрограммыИзмена();
КонецПроцедуры

&НаКлиенте
Процедура ПоддерживатьИныеЯзыкиКромеРусскогоПриИзменении(Элемент)
	
	Если НЕ НаборКонстант.ПоддерживатьИныеЯзыкиКромеРусского тогда
		
		НаборКонстант.ПоддерживатьНаименованияНаДругихЯзыкахКромеРусского = ЛОЖЬ;
		
		Если ЗначениеЗаполнено(НаборКонстант.ТекущийЯзыкИнтерфейса) Тогда
			
			НаборКонстант.ТекущийЯзыкИнтерфейса = ПредопределенноеЗначение("Справочник.Языки.Русский");
			ОбновитьТекущийЯзыкИнтерфейса(НаборКонстант.ТекущийЯзыкИнтерфейса);	
		КонецЕсли;
		
	КонецЕсли;
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоддерживатьНаименованияНаДругихЯзыкахКромеРусскогоПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ПодсветитьФонПолейПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПодсистемаИЭДемонстрироватьКомандыИмпортаИЭкспортаВСправочникахИДокументахПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ПодсистемаИЭИмпортЭкспортПриИзменении(Элемент)
	
	Если НЕ НаборКонстант.ПодсистемаИЭИмпортЭкспорт Тогда
		НаборКонстант.ПодсистемаИЭДемонстрироватьКомандыИмпортаИЭкспортаВСправочникахИДокументах = ЛОЖЬ;
	КонецЕсли;
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьКнопкуПечатиГарантийногоТаблонаВРасходномДокументеПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьОкноВводаКурсовВалютКаждыйДеньПриЗапускеПрограммыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьПриСтартеСписокКлиентовУКоторыхСгодняЗавтраПослезавтраДеньРожденияПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьСуммуРасходногоДокументаТакжеВВалюте1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьСуммуРасходногоДокументаТакжеВВалютеПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПроверитьПодключениеОбработчикаОжидания();	
	ПроверитьВключитьВыключитьНапоминания();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьПовторноИспользуемыеЗначения();	
КонецПроцедуры

&НаКлиенте
Процедура ПочтовыйБланкА5ПовернутыйПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПочтовыйБланкАдресОтправительПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПочтовыйБланкИндексОтправительПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПочтовыйБланкТекстОтправительПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПочтовыйБланкТекстОценкаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПравовойСтатусПоставщикаПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПравовойСтатусПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПредлагатьВосстанавливатьПоказателиВаловойПрибылиСразуПриПроведенииПриходногоДокументаЗаднимЧисломПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлятьСерииНоменклатурыВДокументахОтдельнымОкномПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлятьСправочникНоменклатурыБезБлокаГруппПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПриАвтоматическомПерепроведенииДокументовОтменитьПроверкиНаОтказПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                                  // ПРИ ЗАКРЫТИИ   		
	
	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Закрытиие окна настроек.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);			
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОбщийМодульСервисСервер.УстановитьПараметрыСеансаЭлементарнаяТорговля();
	Элементы.ВключитьВозможностьУказыватьПроцентСкидкиДляКлиентов.Видимость = ПараметрыСеанса.ИспользоватьСкидкиПС и НаборКонстант.ВестиУчетПоКлиентам;
	Если НаборКонстант.ИспользоватьСторнированиеДокументов Тогда
		НаборКонстант.БлокироватьПроведенныеДокументы = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИспользованииШтрихКодаЕслиНоменклатураНеНайденаПоШтрихКодуИскатьПоАртикулуПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПримерФормулыДляАвтоНаименованиНоменклатурыНоменклатурнойГруппы(Команда)	
	НаборКонстант.ФормулаАвтоНаименованияНоменклатурыНоменклатурнойГруппыПоУмолчанию = ПримерФормулыДляАвтоНаименованиНоменклатурыНоменклатурнойГруппыНаСервере();	
КонецПроцедуры

&НаСервере
Функция   ПримерФормулыДляАвтоНаименованиНоменклатурыНоменклатурнойГруппыНаСервере()
	
	ПримерФормулы 		= " Номенклатура.НоменклатурнаяГруппа.Наименование + "" "" + Номенклатура.Производитель.Код + ""x"" + Формат(Цена, ""ЧЦ=9; ЧДЦ=0"") ";
	НаименованиеПример 	= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Наименование") + " = " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Номенклатурная Группа") + ", пробел,  Код Производителя, символ X, Цена";
	СсылкаНаПример 		= Справочники.ФормулыОписания.НайтиПоНаименованию(НаименованиеПример);
	Если НЕ ЗначениеЗаполнено(СсылкаНаПример) Тогда
		НаименованиеПримерОбъект = Справочники.ФормулыОписания.СоздатьЭлемент();
		НаименованиеПримерОбъект.Родитель 	  = ОбщийМодульПовтор.ЗначениеПредопределенного("Справочники.ФормулыОписания.ФормулыАвтоНаименованияНоменклатурыДляНоменклатурнойГруппы");
		НаименованиеПримерОбъект.Наименование = НаименованиеПример;
		НаименованиеПримерОбъект.Формула 	  = ПримерФормулы;
		НаименованиеПримерОбъект.Записать();
		СсылкаНаПример = НаименованиеПримерОбъект.Ссылка;
	КонецЕсли;
	Константы.ФормулаАвтоНаименованияНоменклатурыНоменклатурнойГруппыПоУмолчанию.Установить(СсылкаНаПример);
	
	Возврат СсылкаНаПример;
	
КонецФункции

&НаКлиенте
Процедура ПримерФормулыДляШтрихКода(Команда)	
	НаборКонстант.ОсновнаяФормулаШтрихКодаНоменклатуры = установитьПримерФормулыДляШтрихКода();	
КонецПроцедуры

&НаКлиенте
Процедура ПримерФормулыПреобразованияЦен(Команда) 	
	НаборКонстант.ОсновнаяФормулаПреобразованияЦен = ПримерФормулыПреобразованияЦенНаСервере();	
КонецПроцедуры

&НаСервере
Функция   ПримерФормулыПреобразованияЦенНаСервере()
	
	ПримерФормулы 		= " Цел(Цел(Цена + 1) * 2.5) ";
	НаименованиеПример  = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Цена реализации") + " = (" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Целое число от Цены закупки") + " + 1) * 2.5 ";
	СсылкаНаПример 		= Справочники.ФормулыОписания.НайтиПоНаименованию(НаименованиеПример);
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаПример) Тогда
		
		НаименованиеПримерОбъект = Справочники.ФормулыОписания.СоздатьЭлемент();
		НаименованиеПримерОбъект.Родитель 		= ОбщийМодульПовтор.ЗначениеПредопределенного("Справочники.ФормулыОписания.ФормулыПреобразованияЦен");
		НаименованиеПримерОбъект.Наименование 	= НаименованиеПример;
		НаименованиеПримерОбъект.Формула 		= ПримерФормулы;
		НаименованиеПримерОбъект.Записать();
		СсылкаНаПример = НаименованиеПримерОбъект.Ссылка;
		
	КонецЕсли;
	Константы.ОсновнаяФормулаПреобразованияЦен.Установить(СсылкаНаПример);
	
	Возврат СсылкаНаПример;
	
КонецФункции

&НаКлиенте
Процедура ПримерФормулыТекстаЭтикетки(Команда)
	
	НаборКонстант.ОсновнаяФормулаТекстаЭтикетки = ПримерФормулыТекстаЭтикеткиНаСервере();	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("основную форуму заголовка этикетки") + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ОсновнаяФормулаТекстаЭтикетки), 2);
	
КонецПроцедуры

&НаСервере
Функция   ПримерФормулыТекстаЭтикеткиНаСервере()
	
	ПримерФормулы 		= " Номенклатура.Наименование + "" "" + Лев(Номенклатура.НоменклатурнаяГруппа.Код, 2) + Лев(Номенклатура.Производитель.Код, 2) + ""x"" + Формат(Цена, ""ЧЦ=12; ЧДЦ=2"") ";
	НаименованиеПример  = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Текст") + " = " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Наименование") + ", пробел,  Код НГ, Код Произв., символ X, Цена";
	СсылкаНаПример 		= Справочники.ФормулыОписания.НайтиПоНаименованию(НаименованиеПример);
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаПример) Тогда
		
		НаименованиеПримерОбъект = Справочники.ФормулыОписания.СоздатьЭлемент();
		НаименованиеПримерОбъект.Родитель 		= ОбщийМодульПовтор.ЗначениеПредопределенного("Справочники.ФормулыОписания.ФормулыТекстаЭтикетки");
		НаименованиеПримерОбъект.Наименование 	= НаименованиеПример;
		НаименованиеПримерОбъект.Формула 		= ПримерФормулы;
		НаименованиеПримерОбъект.Записать();
		СсылкаНаПример = НаименованиеПримерОбъект.Ссылка;
		
	КонецЕсли;
	Константы.ОсновнаяФормулаТекстаЭтикетки.Установить(СсылкаНаПример);
	
	Возврат СсылкаНаПример;
	
КонецФункции

&НаКлиенте
Процедура ПриОтказеВДоступеВыводитьСообщениеПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                    // ПРИ ОТКРЫТИИ 
	
	Если НЕ Отказ Тогда
		
		Если НЕ ПлатнаяВерсия Тогда
			Элементы.УчетСеритификатов.Видимость  	 = ЛОЖЬ;
			Элементы.ЗаказыИПланыПродаж.Видимость 	 = ЛОЖЬ;
			Элементы.ГруппаИзображения.Видимость 	 = ЛОЖЬ;
			Элементы.ГруппаДопРеквизиты.Видимость 	 = ЛОЖЬ;
			Элементы.СПодключаемоеОборудование.Видимость 	 = ЛОЖЬ;
			Элементы.РеализаторНеМожетМенятьЦены1.Видимость  = ЛОЖЬ;
			Элементы.ГруппаУчетаСредствПредприятия.Видимость = ЛОЖЬ;
			Элементы.ВестиУчетСерийНоменклатуры.Видимость 	 = ЛОЖЬ;
			Элементы.РеализаторНеМожетМенятьЦены.Видимость 	 = ЛОЖЬ;
			Элементы.ВключитьМеханизмПодбораНоменклатуры.Видимость 	 = ЛОЖЬ;				
			Элементы.НастройкиEMAILДляОтправкиКонтрагентам.Видимость = ЛОЖЬ;
			Элементы.ВестиДополнительнуюИнформациюДляКомплектаций.Видимость 	  	  = ЛОЖЬ;
			Элементы.ИспользоватьШтрихКодыДляИдентификацииКонтрагентов.Видимость 	  = ЛОЖЬ;
			Элементы.ИспользоватьДополнтельныеРеквизитыНоменклатурныхГрупп.Видимость  = ЛОЖЬ;
			Элементы.ПредставлятьСерииНоменклатурыВДокументахОтдельнымОкном.Видимость = ЛОЖЬ;
			Элементы.ВестиУчетОказанияУслугЗаВремяСОпределеннымиПозициямиНомерами.Видимость = ЛОЖЬ;
			Элементы.ОбязательноПроведитеОчисткуЕдиницИзмеренияЕслиОтказываетесьОтЭтогоМеханизма.Видимость = ЛОЖЬ;
			Элементы.МеханизмОтсрочкиНеРекомендуетсяВключатьИлиВыключатьБезПолногоПерепроведенияВсехДокументовПоВзаиморасчетам.Видимость = ЛОЖЬ;
		КонецЕсли;
		
		ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
		#Если НЕ ВебКлиент тогда
			Элементы.ОПлатнойВерсии.Видимость = НЕ ПлатнаяВерсия;
			ЗаполнитьЧтоНового(ИСТИНА);
		#КонецЕсли
		ЗапретитьИзмененияВПрошломПериоде();
		ПоведениеПрограммыИзмена();
		
//		Элементы.Декорация3.Видимость = ОбщийМодульКлиент.ПолучитьПараметрСеанса("ИспользоватьСложныйМеханизмЦенПС");
		Элементы.УчетПартийРуководителем.Видимость = НаборКонстант.ИспользоватьСложныйМеханизмЦен и ПлатнаяВерсия;
		
		Если ЗначениеЗаполнено(СтраницаПанели)Тогда
			
			Попытка
				СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
				ТекущаяСтраница = СтраницыПанели.получить(СтраницаПанели);
				Элементы.ГруппаСтраниц.ТекущаяСтраница = ТекущаяСтраница;
			Исключение
			КонецПопытки;
			
		КонецЕсли;
		
		Элементы.ОстанавливатьСканированиеВДокументеПриНеНайденнойНоменклатуре.Видимость = НаборКонстант.ИспользоватьШтрихКоды ;
		Элементы.УстанавливатьШтрихКодИзКарточкиНоменклатуры.Видимость = НаборКонстант.ИспользоватьШтрихКоды ;
		Элементы.ОбновитьШтрикоды.Видимость = НаборКонстант.ИспользоватьШтрихКоды И НаборКонстант.ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом;	
		Элементы.ГруппаНастроекОператораКассы.Видимость = НаборКонстант.ИспользоватьИнструментРабочееМестоОператораКассы;
		
		СменитьВидОкнаНастроекНаСервере();
		обновитьвидимостьэлементов();  	
		
		ВестиУчетДвиженияДенегПриИзмененииП();
		
		Если НаборКонстант.ЕстьПринтер Тогда
			ОбновитьИменаПринтеров();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000150", ЭтаФорма, Отказ, );	
	
	Если НЕ Отказ Тогда
		Если НЕ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьШтрихКоды")
			И НЕ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом") Тогда
			
			Элементы.ФормулыШК.Видимость = ЛОЖЬ;
		КонецЕсли;
		
		ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
		Версия 				= Метаданные.Версия;
		ПлатнаяВерсия 		= ОбщийМодульПовтор.ПлатнаяВерсия();
		
		Если НЕ ПлатнаяВерсия Тогда
			ОПлатнойВерсии.Очистить();
			МакетОПлатной = ПолучитьОбщийМакет("ОПлатнойВерсии");
			ОбластьМакета = МакетОПлатной.ПолучитьОбласть("Ш");
			ОПлатнойВерсии.Вывести(ОбластьМакета);
		КонецЕсли;
		
		Элементы.ВерсияПрограммы.Заголовок 	= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Версия") + ": " + Версия;	
		Элементы.ОписаниеПрограммыЭлементарнаяТорговля.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Описание программы") + " v " + Метаданные.Версия;
		
		НаименованиеОсновнойВалюты 	= ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта").Наименование ;	
		НаименованиеНашегоРегиона 	= ПредопределенноеЗначение("Справочник.Регионы.НашРегион").Наименование ;
		
		ВключитьМеханизмЛьготнойЦеныПоКоличествуПриПродаже 	= ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВключитьМеханизмЛьготнойЦеныПоКоличествуПриПродаже");
		Элементы.МеханизмЛьготнойЦены.Видимость 			= ВключитьМеханизмЛьготнойЦеныПоКоличествуПриПродаже;
		Элементы.ФормулаИКнопкаПримера.Видимость 			= НаборКонстант.ВестиУчетНоменклатурыВРазрезеНоменклатурныхГрупп;
		Элементы.ГруппаОсновнойЕдиницы.Видимость 			= НаборКонстант.ИспользоватьЕдиницыИзмеренияНоменклатуры;
		Элементы.СуммироватьПроцентСкидкиКлиентаИлиНоменклатурыСПроцентомЛьготнойЦены.Видимость = ОбщийМодульПовтор.ПолучитьПараметрСеанса("ИспользоватьСкидкиПС") и ВключитьМеханизмЛьготнойЦеныПоКоличествуПриПродаже и ОбщийМодульПовтор.ПолучитьПараметрСеанса("ОформлятьПриРеализацииПоЛьготнойЦенеКакСкидкуНаТовар");
		Элементы.ВключитьВозможностьУказыватьПроцентСкидкиДляКлиентов.Видимость 				= ОбщийМодульПовтор.ПолучитьПараметрСеанса("ИспользоватьСкидкиПС") и НаборКонстант.ВестиУчетПоКлиентам;
		Элементы.ФормулаАвтоНаименованияНоменклатурыНоменклатурнойГруппыПоУмолчанию.Видимость 	= НаборКонстант.ВестиУчетНоменклатурыВРазрезеНоменклатурныхГрупп и НаборКонстант.ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом;
		Элементы.ПриИспользованииШтрихКодаЕслиНоменклатураНеНайденаПоШтрихКодуИскатьПоАртикулу.Видимость = НаборКонстант.ИспользоватьШтрихКоды И НаборКонстант.ИспользоватьПодключаемоеОборудование И НаборКонстант.ИспользоватьРеквизитАртикулНоменклатуры;
		Элементы.ВключитьВозможностьУказыватьПроцентСкидкиДляКлиентов1.Видимость = НаборКонстант.ВестиУчетПоКлиентам и НаборКонстант.ИспользоватьСкидки;
		
		ВерсияПриИнсталляции = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВерсияПриИнсталляции");
		Попытка
			ЧислоВерсияПриИнсталляции = Число(Лев(ВерсияПриИнсталляции, 6));
		Исключение
			ЧислоВерсияПриИнсталляции = 0;
		КонецПопытки;
		Элементы.ЧтоНового.Видимость = ЛОЖЬ;
		
		РегистрационныйКод 							= ОбщийМодульСервисСервер.РегистрационныйКод();
		ЯзыкПользователяЗаданВКонфигураторе 		= ОбщийМодульТекстСервер.ЯзыкПользователяЗаданВКонфигураторе();
		Элементы.ТекущийЯзыкИнтерфейса.Доступность 	= НЕ ЯзыкПользователяЗаданВКонфигураторе;
		Элементы.ЯзыкТекущегоПользователяЗаданВКонфигураторе.Видимость = ЯзыкПользователяЗаданВКонфигураторе;
		Элементы.ОтветственныйЗаДоставкуПоУмолчанию.Видимость = НаборКонстант.ВестиУчетЗарплатыСотрудников И НаборКонстант.УчитыватьИнформациюОДоставкеВДокументахРасхода;
		
		Если НЕ ОбщийМодульТекстСервер.ТекущийЯзыкРусский() Тогда
			Элементы.ДекорацияЛого.Видимость   = ЛОЖЬ;
			Элементы.ДекорацияЛогоET.Видимость = ИСТИНА;
		КонецЕсли;
		
		РабочаяДата = ОбщийМодульПовтор.ПолучитьПараметрСеанса("РабочаяДата");
		Элементы.ОПлатнойВерсии.Видимость 				= ЛОЖЬ;  	
		Элементы.ЗаголовокСтраницы4.Видимость 			= ПлатнаяВерсия;
		Элементы.ЭТО_БЕСПЛАТНАЯ_ВЕРСИЯ.Видимость 		= НЕ ПлатнаяВерсия;
		Элементы.СтраницыНастроекПечати.Видимость 		= НаборКонстант.ЕстьПринтер;		
		Элементы.СобственныеЮридическиеЛица.Видимость 	= НаборКонстант.ВестиУчетСобственныхЮридическихЛиц;
		Элементы.РазмерСкидкиНаДатаРождения.Видимость 	= НаборКонстант.ИспользоватьСкидки и НаборКонстант.ВестиУчетПоКлиентам;
		Элементы.УчетПлановДоходовИРасходов.Видимость	= ПлатнаяВерсия И НаборКонстант.ВестиУчетДвиженияДенег;		
		Элементы.ГруппаОтменыЕдиницИзмерения.Видимость  = НЕ НаборКонстант.ИспользоватьЕдиницыИзмеренияНоменклатуры;
		Элементы.ГруппаДополнительнойСтрокиЭтикетки.Видимость 	= НаборКонстант.ИспользоватьПечатьЭтикеток;
		Элементы.ГруппаФормулыПреобразованияЦены.Видимость 	  	= НаборКонстант.ИспользоватьСложныйМеханизмЦен и НаборКонстант.ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом;
		Элементы.СкладДляОбъектовКлиентаПоУмолчанию.Видимость 	= НаборКонстант.ИспользоватьДокументыВыполненияРабот И НаборКонстант.ВестиУчетПоСкладам И НЕ НаборКонстант.ВестиУчетОбъектовКлиентов;		
		Элементы.СкладДляОбъектовКлиентаПоУмолчанию1.Видимость  = НаборКонстант.ИспользоватьДокументыВыполненияРабот И НаборКонстант.ВестиУчетПоСкладам И НЕ НаборКонстант.ВестиУчетОбъектовКлиентов;
		Элементы.ЧислоЗнаковПослеЗапятойДляКоличества.Видимость = НаборКонстант.КоличествоНоменклатурыМожетБытьДробным;
		Элементы.СтрогоеИмяНефискальногоПринтераЧеков.Видимость = НаборКонстант.ПечататьЧек;
		Элементы.ШтрихКодомМожетВыступатьСерияИлиКодПродукта.Видимость 			= НаборКонстант.ИспользоватьШтрихКоды И НаборКонстант.ВестиУчетСерийНоменклатуры;
		Элементы.ВключитьВозможностьУказыватьПроцентСкидкиДляКлиентов.Видимость = НаборКонстант.ВестиУчетПоКлиентам И НаборКонстант.ИспользоватьСкидки;		
		Элементы.ИспользованиеДополнительныхРеквизитовСправочникаКлиентов.Видимость 	= ПлатнаяВерсия;
		Элементы.НаименованияДополнительныхРеквизитовСправочникаКлиентов.Видимость 		= ПлатнаяВерсия И НаборКонстант.ИспользоватьДополнительныеРеквизитыСправочникаКлиентов;
		Элементы.РазрешеноПриниматьПриРеализацииДеньгиСразуВНесколькихВалютах.Видимость = НаборКонстант.ВестиУчетДвиженияДенег И НаборКонстант.ИспользоватьРегистрациюПриемаИВыдачиДенегПрямоВДокументахРасходаИПрихода И НаборКонстант.ВестиУчетВалют;
		Элементы.ДляКлиентовПредусмотреныСобственныеДополнительныеРеквизиты.Видимость 	= ПлатнаяВерсия И НаборКонстант.ВестиУчетПоКлиентам;
		Элементы.ДляНоменклатурыПредусмотреныДополнительныеРеквизитыНоменклатурныхГрупп1.Видимость 	= ПлатнаяВерсия И НаборКонстант.ВестиУчетНоменклатурыВРазрезеНоменклатурныхГрупп;
		Элементы.ДляНоменклатурыПредусмотреныДополнительныеРеквизитыНоменклатурныхГрупп.Видимость 	= ПлатнаяВерсия И НаборКонстант.ВестиУчетНоменклатурыВРазрезеНоменклатурныхГрупп;
		Элементы.НаименованияДополнительныхРеквизитовСправочникаКлиентовНаДругихЯзыках.Видимость 	= ПлатнаяВерсия И НаборКонстант.ИспользоватьДополнительныеРеквизитыСправочникаКлиентов И НаборКонстант.ПоддерживатьНаименованияНаДругихЯзыкахКромеРусского;
		Элементы.ПриВеденииУчетаВРазныхВалютахРекомендуетсяВключитьУчетВРазныхХранилищах.Видимость  = НаборКонстант.ВестиУчетДвиженияДенег;
		Элементы.ПриУказанииНаименованияПринтераШтрихКодовПечатьБудетИдтиСразуБезВыбораПринтера.Видимость = НаборКонстант.ИспользоватьПечатьЭтикеток;
		
		Если НаборКонстант.ИспользоватьСторнированиеДокументов Тогда
			Элементы.БлокироватьПроведенныеДокументы.Доступность = ЛОЖЬ;
		КонецЕсли;
		
		Если ПлатнаяВерсия Тогда
			ЗагрузитьНаименованияИменованныхОбъектов();
		КонецЕсли;
		
		НеВыводитьСообщений = ПараметрыСеанса.НеВыводитьСообщений;	
		ОсновноеПредприятие = Справочники.Организации.ОсновноеПредприятие ;
		НашеОКПО 			= ОсновноеПредприятие.ОКПО;
		НашЮридическийАдрес = ОсновноеПредприятие.Адрес;		
		
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.РазмерПланкиКоличестваТовараДляЛьготнойЦены, ИСТИНА);
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.РазмерПланкиКоличестваТовараДляЛьготнойЦены1, ИСТИНА);
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.МинимальныйОбъемОказанияУслуг, ИСТИНА);
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.РекомендуемыйМинимальныйОстатокТовара, ИСТИНА);			
		
		ИмяЛокаций();
		ВсегоЭтикеток = НаборКонстант.ЧислоЭтикетокНаЛистеПоВертикали * НаборКонстант.ЧислоЭтикетокНаЛистеПоГоризонтали;
		Элементы.ВРежимеСИспользованиемМеханизмаСторнирования.Видимость = НаборКонстант.ИспользоватьСторнированиеДокументов И Не НаборКонстант.ИспользоватьЖурналированиеСобытий;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьДатуОграничения() 
	
	Если НЕ ЗначениеЗаполнено(НаборКонстант.ДатаСКоторойДействуетПоведениеОбОтрицательныхОстаткахТовара) 
		И НЕ НаборКонстант.ПоведениеПрограммыПриРасходеТоваровБезОстатка = Перечисления.ИгнорироватьРазрешитьЗапретить.Игнорировать Тогда
		
		НаборКонстант.ДатаСКоторойДействуетПоведениеОбОтрицательныхОстаткахТовара = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры //ПроверитьДатуОграничения()

&НаКлиенте
Процедура ПроверитьНаличиеНовойВерсииКонфигурации(Команда)
	
	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет связь с сервером конфигурации.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Проверка наличия обновления"));
	Сообщение = Новый СообщениеПользователю; 	
	Сообщение.Текст = ПроверитьНаличиеНовойВерсииКонфигурацииНаСервере();
	Сообщение.Сообщить();
	
	НаборКонстант.ДатаВремяПоследнегоЗапросаКНовойВерсии = ОбщийМодульКлиент.ПолучитьЗначениеНастройкиИлиКонстанты("ДатаВремяПоследнегоЗапросаКНовойВерсии");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция   ПроверитьНаличиеНовойВерсииКонфигурацииНаСервере()
	
	ВопросКСерверу = ОбщийМодульСервер.ЕстьНоваяВерсияПрограммы(ИСТИНА);
	Если ВопросКСерверу = Неопределено Тогда
		Возврат ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Нет связи с сервером конфигурации.");
		
	ИначеЕсли НЕ ПустаяСтрока(ВопросКСерверу.ВерсияНаСайте) Тогда
		Возврат ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("На сайте") + " http://www.ELTR.od.ua " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Доступна новая версия конфигурации") + ": " + ВопросКСерверу.ВерсияНаСайте + ?(ЗначениеЗаполнено(ВопросКСерверу.ПолныйТекстВерсии), Символы.ПС + ВопросКСерверу.ПолныйТекстВерсии, "");
		
	Иначе
		Возврат ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ваша версия конфигурации актуальная.");
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьОтправитьПисьмо(Команда)
	
	СообщитьОСменеФункциональнойОпции();
	ТекстСопровождения = "";
	получатель = "";
	ВвестиСтроку(получатель, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите электронный адрес получателя") + ": ", 100, ЛОЖЬ);
	ВвестиСтроку(ТекстСопровождения, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите текст сопровождающий сообщение") + ": ", 1020, ИСТИНА);
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Отправил письмо для проверки настроек."), 2);	
	ОправитьПоEMAILКонтрагентуНаСервере(ТекстСопровождения, получатель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуАвтоНаименованияНоменклатуры(Команда)
	
	ПроверитьФормулуАвтоНаименованияНоменклатурыНаСервере();
	глПроверятьСообщения = ИСТИНА;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуАвтоНаименованияНоменклатурыНаСервере()
	
	Если ЗначениеЗаполнено(НаборКонстант.ФормулаАвтоНаименованияНоменклатурыНоменклатурнойГруппыПоУмолчанию) Тогда
		ОбщийМодульСервер.ПроверитьФормулу(НаборКонстант.ФормулаАвтоНаименованияНоменклатурыНоменклатурнойГруппыПоУмолчанию.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуТекстаЭтикетки(Команда)
	ПроверитьФормулуТекстаЭтикеткиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуТекстаЭтикеткиНаСервере()
	
	Если ЗначениеЗаполнено(НаборКонстант.ОсновнаяФормулаТекстаЭтикетки) Тогда
		ОбщийМодульСервер.ПроверитьФормулу(НаборКонстант.ОсновнаяФормулаТекстаЭтикетки.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуФормированияЦены(Команда)
	ПроверитьФормулуФормированияЦеныНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуФормированияЦеныНаСервере()
	
	Если ЗначениеЗаполнено(НаборКонстант.ОсновнаяФормулаПреобразованияЦен) Тогда
		ОбщийМодульСервер.ПроверитьФормулу(НаборКонстант.ОсновнаяФормулаПреобразованияЦен.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуШтрихКода(Команда)
	ПроверитьФормулуШтрихКодаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуШтрихКодаНаСервере()
	
	Если ЗначениеЗаполнено(НаборКонстант.ОсновнаяФормулаШтрихКодаНоменклатуры) Тогда
		ОбщийМодульСервер.ПроверитьФормулу(НаборКонстант.ОсновнаяФормулаШтрихКодаНоменклатуры.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверятьНаличиеНовойВерсииКонфигурацииПриЗапускеПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПроцентКомиссионногоВознагражденияПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РабочаяДата1ПриИзменении(Элемент)
	
	ОбщийМодульКлиент.УстановитьЗначениеПараметраСеанса("РабочаяДата", РабочаяДата);
	
	Если ЗначениеЗаполнено(РабочаяДата) Тогда
		Выполнить(" УстановитьКраткийЗаголовокПриложения(Формат(РабочаяДата, ""ДФ='dd.MM.yy ЧЧ:мм'"")); ");		
	Иначе
		Выполнить(" УстановитьКраткийЗаголовокПриложения(""""); ");		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерСкидкиНаДатаРожденияПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РазмещениеТекстаСШтрихКодомНаЭтикетке1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РазрешеноПриниматьПриРеализацииДеньгиСразуВНесколькихВалютахПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьМеханизмРегистрацииРеализацииЗаСчетПериодическойИнвентаризацииСкладаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РамкиТекстовыхПолейВФормахРазличногоЦветаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РегистрироватьВКачествеЗакупочнойСтрогоЦенуПоставщикаНезависимоОтНаличияДополнительныхРасходовПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
	обновитьвидимостьэлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура РегулироватьКоличествоНоменклатурыПоУмолчаниюДляУпаковок1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РегулироватьКоличествоНоменклатурыПоУмолчаниюДляУпаковокПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьАдресИТелефонКлиентаПрямоВДокументахРеализацииПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РекомендуемыйМинимальныйОстатокТовараПриИзменении(Элемент)
	
	Если НаборКонстант.РекомендуемыйМинимальныйОстатокТовара = 0 Тогда
		НаборКонстант.ДатаСКоторойДействуетПоведениеОРекомендуемомОстаткеТовара = '00010101000000' ;
	Иначе
		НаборКонстант.ДатаСКоторойДействуетПоведениеОРекомендуемомОстаткеТовара = ОбщийМодульКлиент.ПользователяТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкладДляОбъектовКлиентаПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура СкладПроизводстваПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура СменитьВидОкнаНастроек(Команда)
	
	ВидГоризонтальный = НЕ ВидГоризонтальный;
	СменитьВидОкнаНастроекНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СменитьВидОкнаНастроекНаСервере()
	
	Если ВидГоризонтальный Тогда
		Элементы.ГруппаСтраниц.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;
	Иначе
		Элементы.ГруппаСтраниц.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСлеваГоризонтально;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздаватьГруппыНоменклатурыПоПервомуСловуНаименованияИАвтоматическиОтноситьКНимНоменклатуруПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументНачисленияИВыдачиЗаработнойПлаты(Команда)
	
	ФормаНовогоДокумента = Неопределено;
	Выполнить(" ФормаНовогоДокумента = ПолучитьФорму(""Документ.ДвиженияДенег.Форма.СписокДокументовРасчетаЗаработнойПлаты"");");
	ФормаНовогоДокумента.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СообщатьОНеактуальностиПоказателейВаловойПрибылиИПредлагатьПерепроведениеДокументовПриВыходеИзПрограммыПоследнегоПользователя1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура СообщатьОНеактуальностиПоказателейВаловойПрибылиИПредлагатьПерепроведениеДокументовПриВыходеИзПрограммыПоследнегоПользователяПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура СообщитьОСменеФункциональнойОпции(Знач ЭлементЗдесь = "")
	
	Элементы.УчетПартийРуководителем.Видимость = НаборКонстант.ИспользоватьСложныйМеханизмЦен и ПлатнаяВерсия;
	Если НЕ ПустаяСтрока(ЭлементЗдесь) Тогда
		ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + ЭлементЗдесь, 2);	
	КонецЕсли;
	
	Попытка 
		ЭтаФорма.Записать();
		Элементы.СобственныеЮридическиеЛица.Видимость = НаборКонстант.ВестиУчетСобственныхЮридическихЛиц;
		
	Исключение 	
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ОписаниеОшибки();
		Сообщение.Сообщить();
		
	КонецПопытки;
	ОбновитьИнтерфейс();
	
КонецПроцедуры //СообщитьОСменеФункциональнойОпции

&НаКлиенте
Процедура СопровождатьДоговораИзображениямиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьДокументыИзображениямиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьЗаметкиИзображениямиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьКлиентовИзображениямиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьНоменклатуруИзображениями1ПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьОрганизацииИзображениямиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьПоставщиковИзображениямиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьПроизводителейИзображениямиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьСотрудниковИзображениямиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникРеализацииПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура СрокОплатыВДняхДляДоговоровПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура СрокОтчетаКомиссионераПоОтдельномуДокументуПередачиТоваровПоУмолчаниюВДняхПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура СтраницаОбновленияКонфигурацииНажатие(Элемент)
	ЗапуститьПриложение("http://www.ELTR.od.ua");
КонецПроцедуры

&НаКлиенте
Процедура СтрогоеИмяНефискальногоПринтераЧековПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ТекстВПодвалеДокументовПриПечатиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ТекстВШапкеДокументовПриПечатиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ТекстЗаголовкаОкнаПрограммыПриИзменении(Элемент)
	
	ТекстЗаголовкаОкнаПрограммы = ?(НаборКонстант.ДобавлятьИмяПользователяВЗаголовокОкна, "" + глТекущийПользователь + " ", "") + НаборКонстант.ТекстЗаголовкаОкнаПрограммы;
	
	Если ЗначениеЗаполнено(ТекстЗаголовкаОкнаПрограммы) Тогда
		попытка
			Выполнить(" УстановитьЗаголовокКлиентскогоПриложения(ТекстЗаголовкаОкнаПрограммы); ");
		исключение //8.2!
			попытка
				Выполнить(" УстановитьЗаголовокПриложения(ТекстЗаголовкаОкнаПрограммы); ");
			исключение
			конецпопытки;
		конецпопытки;
		ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поменял заголовок приложения"), 2);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущийЯзыкИнтерфейсаПриИзменении(Элемент)
	
	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Добавление текстов перевода.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
	ОбновитьТекущийЯзыкИнтерфейса(НаборКонстант.ТекущийЯзыкИнтерфейса);
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);	
	
КонецПроцедуры

&НаСервере
Процедура тест()
	
	константы.ВерсияПрограммы.Установить("");
	константы.ВерсияПриИнсталляции.Установить("131101");
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ЗНК();
	Сообщение.Сообщить();
	
конецпроцедуры

&НаКлиенте
Процедура ТипШтрихКодовПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура УникальныеНаименованияДляНоменклатурыКлиентовИПоставщиковПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура Упаковка(Команда)
	
	НаборКонстант.НаименованиеОсновнойЕдиницыИзмеренияПоУмолчанию = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("уп.");
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил основную единицу измерения") + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Упаковка"), 2);
	
КонецПроцедуры

&НаКлиенте
Процедура Услуга(Команда)
	
	НаборКонстант.НаименованиеОсновнойЕдиницыИзмеренияПоУмолчанию = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("усл.");
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил основную единицу измерения") + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Услуга"), 2);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметрыПоУмолчанию(Команда)
	
	//	Если Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы готовы установить первоначальные настройки?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
	ФормаВизарда = Получитьформу("ОбщаяФорма.УстановкаПервоначальныхНастроек");
	ФормаВизарда.Открыть();
	//	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция   УстановитьПримерФормулыДляШтрихКода() 
	
	ПримерФормулы 		= " СокрЛП(Номенклатура.НоменклатурнаяГруппа.Код) + Номенклатура.Производитель.Код + ""x"" + СокрЛП(Формат(Цена, ""ЧЦ=9; ЧДЦ=0"")) ";
	НаименованиеПример  = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Штрих-код") + " = " + ПримерФормулы;
	СсылкаНаПример 		= Справочники.ФормулыОписания.НайтиПоНаименованию(НаименованиеПример);
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаПример) Тогда
		
		НаименованиеПримерОбъект = Справочники.ФормулыОписания.СоздатьЭлемент();
		НаименованиеПримерОбъект.Родитель 		= ОбщийМодульПовтор.ЗначениеПредопределенного("Справочники.ФормулыОписания.ФормулыШтрихКодаНоменклатуры");
		НаименованиеПримерОбъект.Наименование 	= НаименованиеПример;
		НаименованиеПримерОбъект.Формула 		= ПримерФормулы;
		НаименованиеПримерОбъект.Записать();
		СсылкаНаПример = НаименованиеПримерОбъект.Ссылка;
		
	КонецЕсли;
	
	Константы.ОсновнаяФормулаШтрихКодаНоменклатуры.Установить(СсылкаНаПример);
	
	Возврат СсылкаНаПример;
	
КонецФункции 

&НаКлиенте
Процедура УчетЗарплатыСотрудниковПриИзменении(Элемент)
	
	Если НЕ НаборКонстант.ВестиУчетЗарплатыСотрудников Тогда
		НаборКонстант.ВестиУчетПродажПоСотрудникам = ЛОЖЬ;
	КонецЕсли;
	УчетЗарплатыСотрудниковПриИзменениинаСервере(НаборКонстант.ВестиУчетЗарплатыСотрудников);
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УчетЗарплатыСотрудниковПриИзменениинаСервере(Знач ВестиУчетЗарплатыСотрудников)
	
	Если ВестиУчетЗарплатыСотрудников Тогда
		СвязаннаяПапкаКлиентов = Справочники.Клиенты.НайтиПоНаименованию(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Собственные Сотрудники"));
		
		Если НЕ ЗначениеЗаполнено(СвязаннаяПапкаКлиентов)
			ИЛИ НЕ СвязаннаяПапкаКлиентов.ЭтоГруппа Тогда
			
			СвязаннаяПапкаКлиентов = Справочники.Клиенты.СоздатьГруппу();
			СвязаннаяПапкаКлиентов.Наименование = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Собственные Сотрудники");
			СвязаннаяПапкаКлиентов.ВидЦен = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВидЦенДляОтпускаТоваровСобственнымСотрудникам");
			СвязаннаяПапкаКлиентов.Записать();
		КонецЕсли;
		СвязаннаяПапкапоставщиков = Справочники.Клиенты.НайтиПоНаименованию(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Собственные Сотрудники"));
		
		Если НЕ ЗначениеЗаполнено(СвязаннаяПапкапоставщиков)
			ИЛИ НЕ СвязаннаяПапкапоставщиков.ЭтоГруппа Тогда
			
			СвязаннаяПапкапоставщиков = Справочники.Клиенты.СоздатьГруппу();
			СвязаннаяПапкапоставщиков.Наименование = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Собственные Сотрудники");
			СвязаннаяПапкапоставщиков.ВидЦен = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВидЦенДляОтпускаТоваровСобственнымСотрудникам");
			СвязаннаяПапкапоставщиков.Записать();
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура УчетТоваровПереданныхОтНасКомиссионерамДляКомиссионнойТорговлиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура УчитыватьИнформациюОДоставкеВДокументахПоступленияПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура УчитыватьИнформациюОДоставкеВДокументахРасходаПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.ОтветственныйЗаДоставкуПоУмолчанию.Видимость = НаборКонстант.ВестиУчетЗарплатыСотрудников И НаборКонстант.УчитыватьИнформациюОДоставкеВДокументахРасхода;
	
КонецПроцедуры

&НаКлиенте
Процедура ФорматЭтикетки1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ХранилищеДенегДляРабочегоМестаОператораКассыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЧислоДнейОтсрочкиКлиентамПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЧислоДнейОтсрочкиПередПоставщикамиПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЧислоЗнаковПослеЗапятойДляКоличестваПриИзменении(Элемент)
	
	Если НаборКонстант.ЧислоЗнаковПослеЗапятойДляКоличества < 0 Тогда
		НаборКонстант.ЧислоЗнаковПослеЗапятойДляКоличества = 0;
	ИначеЕсли НаборКонстант.ЧислоЗнаковПослеЗапятойДляКоличества > 6 Тогда
		НаборКонстант.ЧислоЗнаковПослеЗапятойДляКоличества = 6;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихКодомМожетВыступатьСерияИлиКодПродуктаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура Штука(Команда)
	
	НаборКонстант.НаименованиеОсновнойЕдиницыИзмеренияПоУмолчанию = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("шт.");
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил основную единицу измерения") + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Штука"), 2);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаАдресСервераPOP3ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаАдресСервераSMTPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаИмяОтправителяПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаКопироватьВТекстПисьмаСодержаниеДокументаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаОтправительПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПарольSMTPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПарольПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПодписьПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПользовательПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПортPOP3ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПортSMTPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭТО_БЕСПЛАТНАЯ_ВЕРСИЯНажатие(Элемент)
	Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.ОПлатнойВерсии;
КонецПроцедуры

&НаКлиенте
Процедура ТекстЗаголовкаСчетаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВсеРеквизитыШапкиДокументовВПервуюЗакладкуРежимБольшихТаблицДляМалыхМониторовПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРегистрациюПриемаИВыдачиДенегПрямоВДокументахРасходаИПрихода1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура УчитыватьЛокациюКонтрагентовПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРегионыДляУчетаСтранАЛокацииГородовПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
	ИмяЛокаций();
	
КонецПроцедуры

Процедура ИмяЛокаций()
	
	Если НаборКонстант.ИспользоватьРегионыДляУчетаСтранАЛокацииГородов Тогда
		Элементы.СправочникРегионыОткрытьСписок1.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Справочник Стран");
		Элементы.СправочникЛокацииОткрытьСписок.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Справочник Городов");
	Иначе
		Элементы.СправочникРегионыОткрытьСписок1.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Справочник Регионов");
		Элементы.СправочникЛокацииОткрытьСписок.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Справочник Локаций");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСправочникРегионовПоКлассификаторуСтранНаСервере()	
	ОбщийМодульТекстСервер.ЗагрузитьСтраныИзМакета();	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСправочникРегионовПоКлассификаторуСтран(Команда)
	
	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заполнение справочника Регионов.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
	ЗаполнитьСправочникРегионовПоКлассификаторуСтранНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГородаСтраныПоКлассификаторуНаСервере(Знач ВыбраннаяСтрана)
	ОбщийМодульТекстСервер.ЗагрузитьГородаСтраныИзМакета(ВыбраннаяСтрана);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьГородаСтраныПоКлассификатору(Команда)
	
	СписокДоступныхСтран = ПолучитьСписокДоступныхСтранДляЗагрузкиГородовИзКлассификатора();
	ВыбраннаяСтрана = ВыбратьИзСписка(СписокДоступныхСтран);
	Если НЕ ВыбраннаяСтрана = Неопределено Тогда
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заполнение справочника Локаций.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
		ЗаполнитьГородаСтраныПоКлассификаторуНаСервере(ВыбраннаяСтрана.Значение);	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция   ПолучитьСписокДоступныхСтранДляЗагрузкиГородовИзКлассификатора()
	
	Результат = Новый СписокЗначений;
	
	Макет 	= ПолучитьОбщийМакет("МакетДоступныхРегионовДляЗагрузкиГородовВКлассификатореПоЯзыкам");
	КоличествоСтрок = 99999;
	счетчик = 1;
	пусто 	= 0;
	
	ТекущийЯзыкИнтерфейсаПрограммы = ПараметрыСеанса.ТекущийЯзыкИнтерфейсаПрограммы;
	Если НЕ ЗначениеЗаполнено(ТекущийЯзыкИнтерфейсаПрограммы) Тогда
		ТекущийЯзыкИнтерфейсаПрограммы = ПредопределенноеЗначение("Справочник.Языки.Русский");
	КонецЕсли;
	ТекущийЯзык = НРег(ТекущийЯзыкИнтерфейсаПрограммы.код);
	
	пока КоличествоСтрок > Счетчик цикл
		
		R = СокрЛП(формат(счетчик, "ЧГ=0"));
		ЯзыкСтроки = НРег(СокрЛП(Макет.Область("R" + R + "C1").Текст));
		Если значениезаполнено(ЯзыкСтроки) Тогда
			
			Если ЯзыкСтроки = ТекущийЯзык Тогда				
				Результат.Добавить(СокрЛП(Макет.Область("R" + R + "C2").Текст));				
			КонецЕсли;
			
		Иначе 
			пусто = пусто + 1;
		КонецЕсли;
		
		Если пусто = 10 тогда
			прервать;
		КонецЕсли;
		
		счетчик = счетчик + 1;
	КонецЦикла;	
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьПолнуюИсториюИзмененийВКонфигурации(Команда)
	
	ПараметрыФормы = Новый Структура;
	ФормаПечати = получитьформу("ОбщаяФорма.ФормаПечати", ПараметрыФормы);
	
	ЗаполнитьЧтоНового(ЛОЖЬ, ФормаПечати.Результат);
	
	ФормаПечати.Результат.ОтображатьСетку = ЛОЖЬ;
	ФормаПечати.Результат.Защита = ИСТИНА;
	ФормаПечати.Результат.ТолькоПросмотр = ИСТИНА;
	ФормаПечати.Результат.ОтображатьЗаголовки = ЛОЖЬ;
	ФормаПечати.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("История изменений в конфигурации");
	ФормаПечати.открыть();	
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьПодтвержденияРуководителя(Команда)
	
	НаборКонстант.ДатаНачалаПериодаПодтвержденнаяРуководителем 	  = '00010101';
	НаборКонстант.ДатаОкончанияПериодаПодтвержденнаяРуководителем = '00010101';
	
КонецПроцедуры

&НаКлиенте
Процедура ДетализироватьОтчетРуководителюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПапкаСИзображениямиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПапкаСИзображениямиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогФильтр	 = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Каталог");
	ДиалогРасширение = "*";
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбФайла.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите каталог изображений") + ":";
	ДиалогВыбФайла.Каталог					=	НаборКонстант.ПапкаСИзображениями;
	ДиалогВыбФайла.Фильтр					=	ДиалогФильтр;
	ДиалогВыбФайла.Расширение				=	ДиалогРасширение;
	ДиалогВыбФайла.МножественныйВыбор		=	ЛОЖЬ;
	ДиалогВыбФайла.ПредварительныйПросмотр	=	ЛОЖЬ;
	ДиалогВыбФайла.ИндексФильтра			=	0;
	ДиалогВыбФайла.ПроверятьСуществованиеФайла	=	ИСТИНА;
	Если ДиалогВыбФайла.Выбрать() Тогда
		НаборКонстант.ПапкаСИзображениями = ДиалогВыбФайла.Каталог;
		ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
	КонецЕсли; //когда файл п выбран
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерШрифтаЗаголовкаЭтикеткиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМеханизмПечатиПКОРФПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДополнительныеРеквизитыСправочникаКлиентовПриИзменении(Элемент)
	
	Элементы.НаименованияДополнительныхРеквизитовСправочникаКлиентовНаДругихЯзыках.Видимость = НаборКонстант.ИспользоватьДополнительныеРеквизитыСправочникаКлиентов И НаборКонстант.ПоддерживатьНаименованияНаДругихЯзыкахКромеРусского;
	Элементы.НаименованияДополнительныхРеквизитовСправочникаКлиентов.Видимость = НаборКонстант.ИспользоватьДополнительныеРеквизитыСправочникаКлиентов;
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованияДополнительныхРеквизитовСправочникаКлиентовНаДругихЯзыках(Команда)
	
	ПараметрыФормы = Новый Структура("ДляДопРеквизитовКлиентов", ИСТИНА);
	ФормаСпискаЗаписейРегистра = ПолучитьФорму("РегистрСведений.ЗначенияНаДругихЯзыках.ФормаСписка", ПараметрыФормы);
	ФормаСпискаЗаписейРегистра.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЯзыкПечатныхФормПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЯзыкПечатныхФорм), 2);
	
	ОбщийМодульТекстСервер.ЗагрузитьТекстыОпределенногоЯзыкаИзМакета(НаборКонстант.ЯзыкПечатныхФорм);
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаименованияИменованныхОбъектов()
	
	Для Счетчик = 1 по 10 Цикл
		Выполнить(" ДополнительныйРеквизитСправочникаКлиентов" + СокрЛП(Счетчик) + " = справочники.ДополнительныеРеквизиты.ДополнительныйРеквизитСправочникаКлиентов" + СокрЛП(Счетчик) + ";");
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапретитьОдинаковыеНомераТелефоновУКлиентовИПоставщиковПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЗапретитьОдинаковыеНомераТелефоновУКлиентовИПоставщиков), 2);
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйЗаДоставкуПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ОтветственныйЗаДоставкуПоУмолчанию), 2);
КонецПроцедуры

&НаКлиенте
Процедура ИмпортЭкспортПакетноеИсполнение(Команда)
	
	ФормаОбработки = ПолучитьФорму("Обработка.ИмпортЭкспортПакетноеИсполнение.Форма.ФормаСпискаЗадач");
	ФормаОбработки.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура РаспространитьОбновленияЗначенийДополнительныхРеквизитовНаСуществующихКлиентов(Команда)
	РаспространитьОбновленияЗначенийДополнительныхРеквизитовНаСуществующихКлиентовНаСервере();
КонецПроцедуры

&НаСервере
Процедура РаспространитьОбновленияЗначенийДополнительныхРеквизитовНаСуществующихКлиентовНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Клиенты.Ссылка
	|ИЗ Справочник.Клиенты КАК Клиенты
	|ГДЕ Клиенты.ЭтоГруппа = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Счетчик = 1;
		Былизм = ЛОЖЬ;
		КлиентОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		
		НаименованияДополнительныхРеквизитов = ОбщийМодульПовтор.ПолучитьДополнительныеРеквизитыКлиентов();
		Если НЕ НаименованияДополнительныхРеквизитов = Неопределено Тогда
			
			Для Каждого ДопРеквизит Из НаименованияДополнительныхРеквизитов Цикл
				
				Если Счетчик <= 10 Тогда
					
					ДополнительныйРеквизит = ДопРеквизит.ДополнительныйРеквизит;
					НаименованиеДопРеквизита = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(ДополнительныйРеквизит);
					
					ТипЗначенияРеквизит = ТипЗнч(ВыборкаДетальныеЗаписи.Ссылка["РеквизитКлиента" + СокрЛП(Счетчик)]);
					
					Если НЕ ТипЗначенияРеквизит = типзнч(ДополнительныйРеквизит.ЗначениеПоУмолчанию)  Тогда						
						Выполнить(" КлиентОбъект.РеквизитКлиента" + СокрЛП(Счетчик) + " = ДополнительныйРеквизит.ЗначениеПоУмолчанию;");
						Былизм = ИСТИНА;
					КонецЕсли;	
				КонецЕсли;
				
				Счетчик = Счетчик + 1;
			КонецЦикла;	
		КонецЕсли;
		
		Пока Счетчик <= 10 Цикл
			
			Если НЕ ВыборкаДетальныеЗаписи.Ссылка["РеквизитКлиента" + СокрЛП(Счетчик)] = Неопределено Тогда
				Выполнить(" КлиентОбъект.РеквизитКлиента" + СокрЛП(Счетчик) + " = Неопределено;");
				Былизм = ИСТИНА;
			КонецЕсли;
			
			счетчик = счетчик + 1;
		КонецЦикла;
		
		Если Былизм Тогда
			КлиентОбъект.записать();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаИспользоватьSSLSMTPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЭлектроннаяПочтаИспользоватьSSLSMTP), 2);
КонецПроцедуры

&НаКлиенте
Процедура Килограмм(Команда)
	
	
	НаборКонстант.НаименованиеОсновнойЕдиницыИзмеренияПоУмолчанию = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("кг.");
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил основную единицу измерения") + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Килограмм"), 2);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧислоЭтикетокНаЛистеПоГоризонталиПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЧислоЭтикетокНаЛистеПоГоризонтали), 2);
	ВсегоЭтикеток = НаборКонстант.ЧислоЭтикетокНаЛистеПоВертикали * НаборКонстант.ЧислоЭтикетокНаЛистеПоГоризонтали;
	
КонецПроцедуры

&НаКлиенте
Процедура ЧислоЭтикетокНаЛистеПоВертикалиПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЧислоЭтикетокНаЛистеПоВертикали), 2);
	ВсегоЭтикеток = НаборКонстант.ЧислоЭтикетокНаЛистеПоВертикали * НаборКонстант.ЧислоЭтикетокНаЛистеПоГоризонтали;
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяФормулаТекстаЭтикеткиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ОсновнаяФормулаТекстаЭтикетки), 2);
КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяФормулаТекстаЭтикетки1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ОсновнаяФормулаТекстаЭтикетки), 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКлючиУчетаНоменклатурыИИхСвязанныеСпискиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура КлючиУчетаНоменклатуры(Команда)
	
	ПараметрыФормы = Новый Структура;
	ФормаСписка = ПолучитьФорму("Справочник.ДополнительныеРеквизиты.Форма.КлючиУчетаНоменклатуры", ПараметрыФормы);
	ФормаСписка.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьВРасходномДокументеАртикулВНаименованииЧерезЗапятуюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВыводитьВРасходномДокументеАртикулВНаименованииЧерезЗапятую), 2);
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыЗначенийДополнительныхРеквизитовДатыПредставлятьВГодахПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ПараметрыЗначенийДополнительныхРеквизитовДатыПредставлятьВГодах), 2);
КонецПроцедуры

&НаКлиенте
Процедура РаспределятьДополнительныеРасходыПропорциональноКоличествуАНеСуммеПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.РаспределятьДополнительныеРасходыПропорциональноКоличествуАНеСумме), 2);
	Если НаборКонстант.РаспределятьДополнительныеРасходыПропорциональноКоличествуАНеСумме Тогда
		НаборКонстант.РаспределятьДополнительныеРасходыПропорциональноНаЕдиницуНоменклатурыНезависимоОтЕеСтоимости = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПовторноИспользуемыеЗначенияНаСервере()
	ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьУпоминаниеОбЕдиницахИзмерения(Команда)
	
	Если Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы хотите очистить все упоминания об единицах измерения?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ОбщийМодульСервер.ОчиститьУпоминаниеОбЕдиницахИзмерения();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьПерсонифицированныйУчетВаловойПрибылиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВключитьПерсонифицированныйУчетВаловойПрибыли), 2);
КонецПроцедуры

&НаКлиенте
Процедура ВывестиДополнительнуюСтрокуЭтикеткиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВывестиДополнительнуюСтрокуЭтикетки), 2);
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяСтрокаЭтикеткиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ДополнительнаяСтрокаЭтикетки), 2);
КонецПроцедуры

&НаКлиенте
Процедура ФормулаДополнительнойСтрокиЭтикеткиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ФормулаДополнительнойСтрокиЭтикетки), 2);
КонецПроцедуры

&НаКлиенте
Процедура РазмещениеДополнительнойСтрокиЭтикеткиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.РазмещениеДополнительнойСтрокиЭтикетки), 2);
КонецПроцедуры

&НаКлиенте
Процедура ВторойВидЦенДляЭтикеткиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВторойВидЦенДляЭтикетки), 2);
КонецПроцедуры

&НаКлиенте
Процедура РазмерШрифтаДополнительнойСтрокиЭтикеткиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.РазмерШрифтаДополнительнойСтрокиЭтикетки), 2);
КонецПроцедуры

&НаКлиенте
Процедура НеПредупреждатьЕслиКлиентНеДоплатилИлиПереплатилПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.НеПредупреждатьЕслиКлиентНеДоплатилИлиПереплатил), 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКомандыИзмененийИЗаполненияДляТаблицыТовары1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ИспользоватьКомандыИзмененийИЗаполненияДляТаблицыТовары), 2);
КонецПроцедуры

&НаКлиенте
Процедура ФормироватьНовыйШтрихКодТолькоВЕгоОтсутствииПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ФормироватьНовыйШтрихКодТолькоВЕгоОтсутствии), 2);
КонецПроцедуры

&НаКлиенте
Процедура КодСтраныПервыеТриЧислаШтрихКодаПоEAN13ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.КодСтраныПервыеТриЧислаШтрихКодаПоEAN13), 2);
КонецПроцедуры

&НаКлиенте
Процедура КодПроизводителяЧетыреЧислаШтрихКодаПоEAN13ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.КодПроизводителяЧетыреЧислаШтрихКодаПоEAN13), 2);
КонецПроцедуры

&НаКлиенте
Процедура ФормироватьШтрихКодБезФормулыПоФорматуEAN13ПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ФормироватьШтрихКодБезФормулыПоФорматуEAN13), 2);
	Если НаборКонстант.ФормироватьШтрихКодБезФормулыПоФорматуEAN13 Тогда
		НаборКонстант.ФормироватьШтрихКодБезФормулыПоФорматуCode128 = ЛОЖЬ;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормироватьШтрихКодБезФормулыПоФорматуCode128ПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ФормироватьШтрихКодБезФормулыПоФорматуCode128), 2);
	Если НаборКонстант.ФормироватьШтрихКодБезФормулыПоФорматуCode128 Тогда
		НаборКонстант.ФормироватьШтрихКодБезФормулыПоФорматуEAN13 = ЛОЖЬ;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПредставлениеТоваровКонтрагентамиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПовторноИспользуемыеЗначенияКоманда(Команда)
	ОбновитьПовторноИспользуемыеЗначенияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РаспределятьДополнительныеРасходыПропорциональноНаЕдиницуНоменклатурыНезависимоОтЕеСтоимостиПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.РаспределятьДополнительныеРасходыПропорциональноНаЕдиницуНоменклатурыНезависимоОтЕеСтоимости), 2);
	Если НаборКонстант.РаспределятьДополнительныеРасходыПропорциональноНаЕдиницуНоменклатурыНезависимоОтЕеСтоимости Тогда
		НаборКонстант.РаспределятьДополнительныеРасходыПропорциональноКоличествуАНеСумме = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЧислоДнейДействительностиСчетаФактурыДляОплатыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЧислоДнейДействительностиСчетаФактурыДляОплаты), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЦенаТоваровСодержитНДСПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЦенаТоваровСодержитНДС), 2);
КонецПроцедуры

&НаКлиенте
Процедура ТекстУсловииПродажиРегламентированногоДокументаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ТекстУсловииПродажиРегламентированногоДокумента), 2);
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьКомандыСнизуПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ОтображатьКомандыСнизу), 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОбменССайтомПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура НалогообложениеНДСпоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.НалогообложениеНДСпоУмолчанию), 2);
КонецПроцедуры

&НаКлиенте
Процедура УзлыОбмена(Команда)
	ИмяФормыПланаОбмена = "ПланОбмена.ОбменССайтом.ФормаСписка"; //Вынесено для бесплатной
	ОткрытьФорму(ИмяФормыПланаОбмена, , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьВПечатиПеремещенияАртикулыИСуммыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВыводитьВПечатиПеремещенияАртикулыИСуммы), 2);
КонецПроцедуры

&НаКлиенте
Процедура ТипРаботПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ТипРаботПоУмолчанию), 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСторнированиеДокументовПриИзменении(Элемент)
	
	Если НаборКонстант.ИспользоватьСторнированиеДокументов Тогда
		НаборКонстант.БлокироватьПроведенныеДокументы = ИСТИНА;
		Элементы.БлокироватьПроведенныеДокументы.Доступность = ЛОЖЬ;
	Иначе
		Элементы.БлокироватьПроведенныеДокументы.Доступность = ИСТИНА;
	КонецЕсли;
	
	Элементы.ВРежимеСИспользованиемМеханизмаСторнирования.Видимость = НаборКонстант.ИспользоватьСторнированиеДокументов И Не НаборКонстант.ИспользоватьЖурналированиеСобытий;
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура БлокироватьПроведенныеДокументыПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.БлокироватьПроведенныеДокументы), 2);
	
	Если НЕ НаборКонстант.БлокироватьПроведенныеДокументы 
		И НаборКонстант.ИспользоватьСторнированиеДокументов Тогда
		
		НаборКонстант.ИспользоватьСторнированиеДокументов = ЛОЖЬ;
		СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЦенРеализатораПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВидЦенРеализатораПоУмолчанию), 2);
КонецПроцедуры

&НаКлиенте
Процедура ДобавлятьИмяПользователяВЗаголовокОкнаПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ДобавлятьИмяПользователяВЗаголовокОкна), 2);
	
	ТекстЗаголовкаОкнаПрограммы = ?(НаборКонстант.ДобавлятьИмяПользователяВЗаголовокОкна, "" + глТекущийПользователь + " ", "") + НаборКонстант.ТекстЗаголовкаОкнаПрограммы;
	
	Если ЗначениеЗаполнено(ТекстЗаголовкаОкнаПрограммы) Тогда
		попытка
			Выполнить(" УстановитьЗаголовокКлиентскогоПриложения(ТекстЗаголовкаОкнаПрограммы); ");
		исключение //8.2!
			попытка
				Выполнить(" УстановитьЗаголовокПриложения(ТекстЗаголовкаОкнаПрограммы); ");
			исключение
			конецпопытки;
		конецпопытки;
		ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поменял заголовок приложения"), 2);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапретитьУстановкуКурсаЗаднимЧисломПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВидЦенРеализатораПоУмолчанию), 2);
КонецПроцедуры

&НаКлиенте
Процедура СтрогоеИмяНефискальногоПринтераЧековОчистка(Элемент, СтандартнаяОбработка)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.СтрогоеИмяНефискальногоПринтераЧеков), 2);	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИменаПринтеров()
	
	Элементы.СтрогоеИмяНефискальногоПринтераЧеков.СписокВыбора.Очистить();
	Элементы.НаименованиеПринтераШтрихКодов1.СписокВыбора.Очистить();
	Элементы.НаименованиеПринтераШтрихКодов.СписокВыбора.Очистить();
	
	ИмяПринтера = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Принтер по-умолчанию");
	Элементы.СтрогоеИмяНефискальногоПринтераЧеков.СписокВыбора.Добавить("ПринтерПоУмолчанию", ИмяПринтера);
	Элементы.НаименованиеПринтераШтрихКодов1.СписокВыбора.Добавить("ПринтерПоУмолчанию", ИмяПринтера);
	Элементы.НаименованиеПринтераШтрихКодов.СписокВыбора.Добавить("ПринтерПоУмолчанию", ИмяПринтера);
	
	#Если Клиент Тогда 
        Попытка
            КОМОбъект =  Новый COMОбъект ("WScript.Network");
            Принтеры =  КОМОбъект.EnumPrinterConnections();
            шшш = 0;
			Пока шшш < Принтеры.Count()-1 Цикл
				ИмяПринтера = СокрЛП(Принтеры.Item(шшш+1));
                Элементы.СтрогоеИмяНефискальногоПринтераЧеков.СписокВыбора.Добавить(ИмяПринтера, ИмяПринтера);
				Элементы.НаименованиеПринтераШтрихКодов1.СписокВыбора.Добавить(ИмяПринтера, ИмяПринтера);
				Элементы.НаименованиеПринтераШтрихКодов.СписокВыбора.Добавить(ИмяПринтера, ИмяПринтера);
                шшш = шшш + 2;
			КонецЦикла;
			КОМОбъект = Неопределено;
        Исключение
            Сообщить(ОписаниеОшибки());
        КонецПопытки;
    #КонецЕсли 
    
Конецпроцедуры
