// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
// Процедура представляет обработчик события "Нажатие" кнопки
// "ОК" командной панели "ОсновныеДействияФормы".
// 
// Параметры:
//  Кнопка - <КнопкаКоманднойПанели>
//         - Кнопка, с которой связано данное событие (кнопка "ОК").
// 
&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()

	Параметры.ПараметрыНастройки.Добавить(Порт                      , "Порт");
	Параметры.ПараметрыНастройки.Добавить(Скорость                  , "Скорость");
	Параметры.ПараметрыНастройки.Добавить(Таймаут                   , "Таймаут");
	Параметры.ПараметрыНастройки.Добавить(ПарольПользователя        , "ПарольПользователя");
	Параметры.ПараметрыНастройки.Добавить(ПарольУстройства          , "ПарольУстройства");
	Параметры.ПараметрыНастройки.Добавить(ПечататьНалогиВЧеке       , "ПечататьНалогиВЧеке");
	Параметры.ПараметрыНастройки.Добавить(НомерСекции               , "НомерСекции");
	Параметры.ПараметрыНастройки.Добавить(КодСимволаЧастичногоОтреза, "КодСимволаЧастичногоОтреза");
	Параметры.ПараметрыНастройки.Добавить(Модель                    , "Модель");

	ОчиститьСообщения();
	Закрыть(КодВозвратаДиалога.ОК);

КонецПроцедуры

// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере()

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Порт"                      , Порт);
	времПараметрыУстройства.Вставить("Скорость"                  , Скорость);
	времПараметрыУстройства.Вставить("Таймаут"                   , Таймаут);
	времПараметрыУстройства.Вставить("ПарольПользователя"        , ПарольПользователя);
	времПараметрыУстройства.Вставить("ПарольУстройства"          , ПарольУстройства);
	времПараметрыУстройства.Вставить("ПечататьНалогиВЧеке"       , ПечататьНалогиВЧеке);
	времПараметрыУстройства.Вставить("НомерСекции"               , НомерСекции);
	времПараметрыУстройства.Вставить("КодСимволаЧастичногоОтреза", КодСимволаЧастичногоОтреза);
	времПараметрыУстройства.Вставить("Модель"                    , Модель);

	Если МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ПолучитьВерсиюДрайвера",
	                                                               ВходныеПараметры,
	                                                               ВыходныеПараметры,
	                                                               Идентификатор,
	                                                               времПараметрыУстройства) Тогда
		Драйвер = ВыходныеПараметры[0];
		Версия  = ВыходныеПараметры[1];
	Иначе
		Драйвер = ВыходныеПараметры[2];
		Версия  = НСтр("ru='Не определена'");
	КонецЕсли;

	Элементы.Драйвер.ЦветТекста = ?(Драйвер = НСтр("ru='Не установлен'"), ЦветОшибки, ЦветТекста);
	Элементы.Версия.ЦветТекста  = ?(Версия  = НСтр("ru='Не определена'"), ЦветОшибки, ЦветТекста);

	Элементы.УстановитьДрайвер.Доступность = Не (Драйвер = НСтр("ru='Установлен'"));

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест"
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Параметры.Свойство("Идентификатор", Идентификатор);
	Заголовок = НСтр("ru='ФР'") + " """ + Строка(Идентификатор) + """";

	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;

	СпМодель = Элементы.Модель.СписокВыбора;
	СпМодель.Добавить(0, "Штрих-М: ЭЛВЕС-МИКРО-Ф");
	СпМодель.Добавить(13, "АТОЛ: Триум-Ф версия 01");
	СпМодель.Добавить(14, "АТОЛ: ФЕЛИКС-РФ версия 02");
	СпМодель.Добавить(15, "АТОЛ: ФЕЛИКС-02К версия 01");
	СпМодель.Добавить(16, "АТОЛ: МЕРКУРИЙ-140Ф версия 02");
	СпМодель.Добавить(16, "АТОЛ: МЕРКУРИЙ-140Ф версия 03");
	СпМодель.Добавить(17, "Инкотекс: МЕРКУРИЙ 114.1Ф версия 01");
	СпМодель.Добавить(17, "Инкотекс: МЕРКУРИЙ 114.1Ф версия 02");
	СпМодель.Добавить(18, "Штрих-М: ШТРИХ-ФР-Ф версия 03");
	СпМодель.Добавить(18, "Штрих-М: ШТРИХ-ФР-Ф версия 04");
	СпМодель.Добавить(19, "Штрих-М: ЭЛВЕС-МИНИ-ФР-Ф версия 02");
	СпМодель.Добавить(20, "АТОЛ: ТОРНАДО (МЕРКУРИЙ-114.1 Ф версия 04)");
	СпМодель.Добавить(23, "АТОЛ: ТОРНАДО-К (МЕРКУРИЙ MS-K версия 02)");
	СпМодель.Добавить(24, "АТОЛ: ФЕЛИКС-РК версия 01");
	СпМодель.Добавить(25, "Штрих-М: ШТРИХ-ФР-К версия 01");
	СпМодель.Добавить(26, "Штрих-М: ЭЛВЕС-ФР-К версия 01");
	СпМодель.Добавить(27, "АТОЛ: ФЕЛИКС-3СК версия 01");
	СпМодель.Добавить(28, "Штрих-М: ШТРИХ-МИНИ-ФР-К версия 01");
	СпМодель.Добавить(30, "АТОЛ: FPrint-02K");
	СпМодель.Добавить(31, "АТОЛ: FPrint-03K");
	СпМодель.Добавить(32, "АТОЛ: FPrint-88K");
	СпМодель.Добавить(33, "АТОЛ: BIXOLON-01K");
	СпМодель.Добавить(35, "АТОЛ: FPrint-5200K");
	СпМодель.Добавить(41, "АТОЛ: PayVKP-80K");
	СпМодель.Добавить(45, "АТОЛ: PayPPU-700K");
	СпМодель.Добавить(46, "АТОЛ: PayCTS-2000K");
	СпМодель.Добавить(42, "АТОЛ: FPrint-02KZ");
	СпМодель.Добавить(43, "АТОЛ: PayVKP-80KZ");      
	СпМодель.Добавить(47, "АТОЛ: FPrint-55K");
	СпМодель.Добавить(51, "АТОЛ: FPrint-11K");
	СпМодель.Добавить(52, "АТОЛ: FPrint-22K");
	СпМодель.Добавить(101, "ПИЛОТ: POSPrint FP410K");
	СпМодель.Добавить(102, "МультиСофт: MSTAR-Ф");
	СпМодель.Добавить(103, "Мария-301 МТМ Т7");
	СпМодель.Добавить(104, "Искра: ПРИМ-88ТК");
	СпМодель.Добавить(105, "Искра: ПРИМ-08ТК");
	СпМодель.Добавить(106, "СЕРВИС ПЛЮС: СП101ФР-К");
	СпМодель.Добавить(107, "Штрих-М: ШТРИХ-КОМБО-ФР-К");
	СпМодель.Добавить(108, "Искра: ПРИМ-07К");
	СпМодель.Добавить(109, "Юнисистем: МИНИ-ФП6");
	СпМодель.Добавить(110, "Штрих-М: ШТРИХ-М-ФР-К");
	СпМодель.Добавить(111, "МультиСофт: MSTAR-TK.1");
	СпМодель.Добавить(113, "Штрих-М: ШТРИХ-LIGHT-ФР-К");
	СпМодель.Добавить(114, "КристаллСервис: ПИРИТ ФР01К");
	СпМодель.СортироватьПоПредставлению();

	СпПорт = Элементы.Порт.СписокВыбора;
	Индекс = Неопределено;
	Для Индекс = 1 По 63 Цикл
		СпПорт.Добавить(Индекс, "COM" + СокрЛП(Индекс));
	КонецЦикла;

	СпСкорость = Элементы.Скорость.СписокВыбора;
	СпСкорость.Добавить(1200,   "1200");
	СпСкорость.Добавить(2400,   "2400");
	СпСкорость.Добавить(4800,   "4800");
	СпСкорость.Добавить(9600,   "9600");
	СпСкорость.Добавить(19200,  "19200");
	СпСкорость.Добавить(38400,  "38400");
	СпСкорость.Добавить(57600,  "57600");
	СпСкорость.Добавить(115200, "115200");

	времПорт                       = Неопределено;
	времСкорость                   = Неопределено;
	времТаймаут                    = Неопределено;
	времПарольПользователя         = Неопределено;
	времПарольУстройства           = Неопределено;
	времПечататьНалогиВЧеке        = Неопределено;
	времНомерСекции                = Неопределено;
	времКодСимволаЧастичногоОтреза = Неопределено;
	времМодель                     = Неопределено;

	Параметры.Свойство("Порт"                      , времПорт);
	Параметры.Свойство("Скорость"                  , времСкорость);
	Параметры.Свойство("Таймаут"                   , времТаймаут);
	Параметры.Свойство("ПарольПользователя"        , времПарольПользователя);
	Параметры.Свойство("ПарольУстройства"          , времПарольУстройства);
	Параметры.Свойство("ПечататьНалогиВЧеке"       , времПечататьНалогиВЧеке);
	Параметры.Свойство("НомерСекции"               , времНомерСекции);
	Параметры.Свойство("КодСимволаЧастичногоОтреза", времКодСимволаЧастичногоОтреза);
	Параметры.Свойство("Модель"                    , времМодель);

	Порт                       = ?(времПорт                       = Неопределено,      1, времПорт);
	Скорость                   = ?(времСкорость                   = Неопределено, 115200, времСкорость);
	Таймаут                    = ?(времТаймаут                    = Неопределено,    150, времТаймаут);
	ПарольПользователя         = ?(времПарольПользователя         = Неопределено,   "30", времПарольПользователя);
	ПарольУстройства           = ?(времПарольУстройства           = Неопределено,    "0", времПарольУстройства);
	ПечататьНалогиВЧеке        = ?(времПечататьНалогиВЧеке        = Неопределено,   ЛОЖЬ, времПечататьНалогиВЧеке);
	НомерСекции                = ?(времНомерСекции                = Неопределено,      0, времНомерСекции);
	КодСимволаЧастичногоОтреза = ?(времКодСимволаЧастичногоОтреза = Неопределено,     22, времКодСимволаЧастичногоОтреза);
	Модель                     = ?(времМодель                     = Неопределено, Элементы.Модель.СписокВыбора[0].Значение, времМодель);

	Элементы.ТестУстройства.Видимость    = (ПараметрыСеанса.РабочееМестоКлиента
	                                        = Идентификатор.РабочееМесто);
	Элементы.УстановитьДрайвер.Видимость = (ПараметрыСеанса.РабочееМестоКлиента
	                                        = Идентификатор.РабочееМесто);

КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)

	РезультатТеста = Неопределено;

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Порт"                      , Порт);
	времПараметрыУстройства.Вставить("Скорость"                  , Скорость);
	времПараметрыУстройства.Вставить("Таймаут"                   , Таймаут);
	времПараметрыУстройства.Вставить("ПарольПользователя"        , ПарольПользователя);
	времПараметрыУстройства.Вставить("ПарольУстройства"          , ПарольУстройства);
	времПараметрыУстройства.Вставить("ПечататьНалогиВЧеке"       , ПечататьНалогиВЧеке);
	времПараметрыУстройства.Вставить("НомерСекции"               , НомерСекции);
	времПараметрыУстройства.Вставить("КодСимволаЧастичногоОтреза", КодСимволаЧастичногоОтреза);
	времПараметрыУстройства.Вставить("Модель"                    , Модель);

	Результат = МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("CheckHealth",
	                                                                      ВходныеПараметры,
	                                                                      ВыходныеПараметры,
	                                                                      Идентификатор,
	                                                                      времПараметрыУстройства);

	ДополнительноеОписание = ?(ТипЗнч(ВыходныеПараметры) = Тип("Массив")
	                           И ВыходныеПараметры.Количество() >= 2,
	                           НСтр("ru = 'Дополнительное описание:'") + " " + ВыходныеПараметры[1],
	                           "");
	Если Результат Тогда
		ТекстСообщения = НСтр("ru = 'Тест успешно выполнен.%ПереводСтроки%%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПереводСтроки%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                  "",
		                                                                  Символы.ПС));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                           "",
		                                                                           ДополнительноеОписание));
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	Иначе
		ТекстСообщения = НСтр("ru = 'Тест не пройден.%ПереводСтроки%%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПереводСтроки%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                  "",
		                                                                  Символы.ПС));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                           "",
		                                                                           ДополнительноеОписание));
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДрайвер(Команда)

	МенеджерОборудованияКлиент.УстановитьДрайвер(Идентификатор);

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры



