//sza131122-1855 SZA: 
//sza131121-1617 SZA: 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	ОбновитьПереченьНапоминаний();
	ОбновитьСвязиСсылок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНапоминание(Команда)
	
	Код = СтрЗаменить(Этаформа.ТекущийЭлемент.Имя, "КнопкаОткрыть", "");
	Напоминание = НайтиНапоминаниеПоКоду(Код);
	ОткрытьЗначение(Напоминание);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция   НайтиНапоминаниеПоКоду(Код)	
	Возврат Справочники.ЗаметкиИНапоминания.НайтиПоКоду(код);	
КонецФункции //НайтиНапоминаниеПоКоду

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСсылкуИзНапоминания()
	
	Ссылка = Этаформа.ТекущийЭлемент.ПутьКДанным;
	ОткрытьЗначение(Ссылка);
	
КонецПроцедуры

&НаКлиенте
процедура ОбновитьСвязиСсылок()
	
	Для Каждого Напоминание Из МассивНапоминаний Цикл
		
		СтруктураНапоминания = ОбщийМодульСервисСервер.ПолучитьСтруктуруЗначенийРеквизитовСсылкиНаОбъект(Напоминание.Значение, "Справочники", "ЗаметкиИНапоминания");
		Код 	 = СтруктураНапоминания.код;
		Причина  = СтруктураНапоминания.причина;
		СвязаноС = СтруктураНапоминания.СвязаноС;
		группаЭтогоНапоминания = элементы.Найти("ГруппаЭтогоНапоминания" + Код);
		
		если НЕ группаЭтогоНапоминания = неопределено тогда
			Если ЗначениеЗаполнено(причина) Тогда
				ЭлементПричина = элементы.Найти("ЭлементПричина" + Код);
				если НЕ ЭлементПричина = неопределено тогда
					Выполнить("ЭтаФорма.РеквизитПричина" + Код + " = Причина;");	
				КонецЕсли;	
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СвязаноС) Тогда
				ЭлементСвязаноС = элементы.Найти("ЭлементСвязаноС" + Код);
				если не ЭлементСвязаноС = неопределено тогда				
					Выполнить("ЭтаФорма.ЭлементСвязаноС" + Код + " = СвязаноС;");	
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
процедура ОбновитьПереченьНапоминаний()
	
	ГруппаНапоминания = Элементы.Найти("ГруппаНапоминания");
	
//	ЛюбаяСсылка = Новый ОписаниеТипов("Строка");
	ЛюбаяСсылка = Справочники.ТипВсеССылки();
//	ЛюбаяСсылка = Новый ОписаниеТипов(ЛюбаяСсылка, Перечисления.ТипВсеССылки().Типы());
	ЛюбаяСсылка = Новый ОписаниеТипов(ЛюбаяСсылка, Документы.ТипВсеССылки().Типы());
	//ЛюбаяСсылка = Новый ОписаниеТипов(ЛюбаяСсылка, Планывидовхарактеристик.ТипВсеССылки().Типы());
	//ЛюбаяСсылка = Новый ОписаниеТипов(ЛюбаяСсылка, Планысчетов.ТипВсеССылки().Типы());
	//ЛюбаяСсылка = Новый ОписаниеТипов(ЛюбаяСсылка, Планывидоврасчета.ТипВсеССылки().Типы());
	//ЛюбаяСсылка = Новый ОписаниеТипов(ЛюбаяСсылка, Планыобмена.ТипВсеССылки().Типы());
	//ЛюбаяСсылка = Новый ОписаниеТипов(ЛюбаяСсылка, Бизнеспроцессы.ТипВсеССылки().Типы());
	//ЛюбаяСсылка = Новый ОписаниеТипов(ЛюбаяСсылка, Задачи.ТипВсеССылки().Типы());
	
	Дата = ТекущаяДата();
	
	Для Каждого Напоминание Из МассивНапоминаний Цикл
		
		СтруктураНапоминания = ОбщийМодульСервисСервер.ПолучитьСтруктуруЗначенийРеквизитовСсылкиНаОбъект(Напоминание.Значение, "Справочники", "ЗаметкиИНапоминания");
		Код 			= СтруктураНапоминания.код;
		Наименование 	= СтруктураНапоминания.Наименование;
		Причина 		= СтруктураНапоминания.причина;
		ТекстЗаметки 	= СтруктураНапоминания.ТекстЗаметки;
		СвязаноС		= СтруктураНапоминания.СвязаноС;
		
		группаЭтогоНапоминания = элементы.Найти("ГруппаЭтогоНапоминания" + Код);
		если группаЭтогоНапоминания = неопределено тогда
			
			ЧислоНапоминаний = ЧислоНапоминаний + 1;
			
			группаЭтогоНапоминания = элементы.Добавить("ГруппаЭтогоНапоминания" + Код, тип("ГруппаФормы"), ГруппаНапоминания);				
			группаЭтогоНапоминания.Вид = видгруппыформы.ОбычнаяГруппа;
			группаЭтогоНапоминания.Группировка 	= ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			группаЭтогоНапоминания.Отображение 	= ОтображениеОбычнойГруппы.Нет;
			группаЭтогоНапоминания.Заголовок 	= "";
			группаЭтогоНапоминания.отображатьЗаголовок 			= Ложь;
			группаЭтогоНапоминания.РастягиватьПоГоризонтали 	= Ложь;
			группаЭтогоНапоминания.ШиринаПодчиненныхЭлементов 	= ШиринаПодчиненныхЭлементовФормы.Авто;     
			
		КонецЕсли;
		
		ВремяНапоминания = элементы.Найти("ВремяНапоминания" + Код);
		если ВремяНапоминания = неопределено тогда
			ВремяНапоминания = элементы.Добавить("ВремяНапоминания" + Код, тип("ДекорацияФормы"), группаЭтогоНапоминания);						
		КонецЕсли;
		ВремяНапоминания.Заголовок = "" + Дата;
		
		ТекстНапоминания = элементы.Найти("ТекстНапоминания" + Код);
		если ТекстНапоминания = неопределено тогда
			ТекстНапоминания = элементы.Добавить("ТекстНапоминания" + Код, тип("ДекорацияФормы"), группаЭтогоНапоминания);
		КонецЕсли;
		ТекстНапоминания.Заголовок = ?(ЗначениеЗаполнено(ТекстЗаметки), ТекстЗаметки, Наименование);
		
		Если ЗначениеЗаполнено(причина) Тогда
			ЭлементПричина = элементы.Найти("ЭлементПричина" + Код);
			если ЭлементПричина = неопределено тогда
				
				Реквизит = Новый РеквизитФормы("РеквизитПричина" + Код, ЛюбаяСсылка, , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Причина"), Ложь);
				ДобавляемыеРеквизиты = Новый массив;
				ДобавляемыеРеквизиты.Добавить(Реквизит);
				ИзменитьРеквизиты(ДобавляемыеРеквизиты);           	
				
				ЭлементПричина = элементы.Добавить("ЭлементПричина" + Код, Тип("ПолеФормы"), группаЭтогоНапоминания);
				ЭлементПричина.ТолькоПросмотр 	= Истина;
				ЭлементПричина.Вид 				= ВидПоляФормы.ПолеВвода;
				ЭлементПричина.КнопкаОткрытия 	= Истина;
				ЭлементПричина.ПутьКДанным 		= "РеквизитПричина" + Код;
			КонецЕсли;
			ЭлементПричина.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Причина");
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СвязаноС) Тогда
			ЭлементСвязаноС = элементы.Найти("ЭлементСвязаноС" + Код);
			если ЭлементСвязаноС = неопределено тогда				
				
				Реквизит = Новый РеквизитФормы("ЭлементСвязаноС" + Код, ЛюбаяСсылка, , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Связано с"), Ложь);
				ДобавляемыеРеквизиты = Новый массив;
				ДобавляемыеРеквизиты.Добавить(Реквизит);
				ИзменитьРеквизиты(ДобавляемыеРеквизиты);           	
				
				ЭлементСвязаноС = элементы.Добавить("ЭлементСвязаноС" + Код, тип("ПолеФормы"), группаЭтогоНапоминания);
				ЭлементСвязаноС.ТолькоПросмотр 	= Истина;
				ЭлементСвязаноС.Вид 			= ВидПоляФормы.ПолеВвода;
				ЭлементСвязаноС.КнопкаОткрытия 	= Истина;
				ЭлементСвязаноС.ПутьКДанным 	= "ЭлементСвязаноС" + Код;
			КонецЕсли;
			ЭлементСвязаноС.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Связано с");
			
		КонецЕсли;
		
		группаКнопокЭтогоНапоминания = элементы.Найти("ГруппаКнопокЭтогоНапоминания" + Код);
		если группаКнопокЭтогоНапоминания = неопределено тогда
			
			группаКнопокЭтогоНапоминания = элементы.Добавить("ГруппаКнопокЭтогоНапоминания" + Код, тип("ГруппаФормы"), группаЭтогоНапоминания);
			группаКнопокЭтогоНапоминания.Вид = видгруппыформы.ОбычнаяГруппа;
			группаКнопокЭтогоНапоминания.Группировка 	= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
			группаКнопокЭтогоНапоминания.Отображение 	= ОтображениеОбычнойГруппы.Нет;
			группаКнопокЭтогоНапоминания.Заголовок 		= "";
			группаКнопокЭтогоНапоминания.отображатьЗаголовок 		= Ложь;
			группаКнопокЭтогоНапоминания.РастягиватьПоГоризонтали 	= Ложь;
			группаКнопокЭтогоНапоминания.ШиринаПодчиненныхЭлементов = ШиринаПодчиненныхЭлементовФормы.Авто;     
			
		КонецЕсли;
		
		КнопкаОткрытия = элементы.Найти("КнопкаОткрыть" + Код);
		если КнопкаОткрытия = неопределено тогда
			КнопкаОткрытия = элементы.Добавить("КнопкаОткрыть" + Код, тип("КнопкаФормы"), группаКнопокЭтогоНапоминания);		
			КнопкаОткрытия.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Открыть") + " " + Наименование;
			КнопкаОткрытия.ИмяКоманды = "ОткрытьНапоминание";		
		Конецесли;                                       	
		
		КнопкаВыключить = элементы.Найти("КнопкаВыключить" + Код);
		если КнопкаВыключить = неопределено тогда
			КнопкаВыключить = элементы.Добавить("КнопкаВыключить" + Код, тип("КнопкаФормы"), группаКнопокЭтогоНапоминания);		
			КнопкаВыключить.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выключить");
			КнопкаВыключить.ИмяКоманды = "ВыключитьНапоминание";		
		Конецесли;                                       	
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	
	ОбновитьПереченьНапоминаний();
	ОбновитьСвязиСсылок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьФормуНапоминаний" Тогда 
		ОбновитьПереченьНапоминаний();
		ЭтаФорма.ОбновитьОтображениеДанных(); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыключитьНапоминание(Команда)
	
	Код = СтрЗаменить(Этаформа.ТекущийЭлемент.Имя, "КнопкаВыключить", "");
	ВыключитьнапоминаниеПоКоду(Код);
	
	группаНапоминания = Элементы.Найти("ГруппаЭтогоНапоминания" + Код);
	Если не группаНапоминания = неопределено Тогда
		группаНапоминания.Видимость = Ложь;
		ЧислоНапоминаний = ЧислоНапоминаний - 1;
	КонецЕсли;
	
	Если ЧислоНапоминаний = 0 Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВыключитьнапоминаниеПоКоду(Код)
	
	Напоминание = Справочники.ЗаметкиИНапоминания.НайтиПоКоду(код);
	Если ЗначениеЗаполнено(Напоминание) Тогда
		Напоминание = Напоминание.ПолучитьОбъект();
		Напоминание.Актуально = Ложь;
		Напоминание.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДействия()
	
	ДействиеОткрытьСсылкуИзНапоминания = Новый Действие("ОткрытьСсылкуИзНапоминания");
	
	Для Каждого ЭлементЭтойФормы Из Элементы Цикл
		Если НЕ Найти(ЭлементЭтойФормы.Имя, "ЭлементПричина") = 0 
			ИЛИ НЕ Найти(ЭлементЭтойФормы.Имя, "ЭлементСвязаноС") = 0 Тогда
			
			ЭлементЭтойФормы.УстановитьДействие("ПриОткрытии", ДействиеОткрытьСсылкуИзНапоминания);
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

