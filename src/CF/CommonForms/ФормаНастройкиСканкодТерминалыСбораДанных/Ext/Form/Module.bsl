// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
// Процедура представляет обработчик события "Нажатие" кнопки
// "ОК" командной панели "ОсновныеДействияФормы".
// 
// Параметры:
//  Кнопка - <КнопкаКоманднойПанели>
//         - Кнопка, с которой связано данное событие (кнопка "ОК").
// 
&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()

	Параметры.ПараметрыНастройки.Добавить(Порт                    , "Порт");
	Параметры.ПараметрыНастройки.Добавить(Скорость                , "Скорость");
	Параметры.ПараметрыНастройки.Добавить(Таймаут                 , "Таймаут");
	Параметры.ПараметрыНастройки.Добавить(ИКПодставка             , "ИКПодставка");
	Параметры.ПараметрыНастройки.Добавить(РазделительБазы         , "РазделительБазы");
	Параметры.ПараметрыНастройки.Добавить(РазделительДокумента    , "РазделительДокумента");
	Параметры.ПараметрыНастройки.Добавить(НомерБазы               , "НомерБазы");
	Параметры.ПараметрыНастройки.Добавить(НомерДокумента          , "НомерДокумента");
	Параметры.ПараметрыНастройки.Добавить(ОчищатьДокумент         , "ОчищатьДокумент");
	Параметры.ПараметрыНастройки.Добавить(ВыбиратьИсточникЗагрузки, "ВыбиратьИсточникЗагрузки");
	Параметры.ПараметрыНастройки.Добавить(Модель                  , "Модель");

	времФорматБазы = Новый Массив();
	Для Каждого СтрокаТаблицы Из ФорматБазы Цикл
		НоваяСтрока = Новый Структура("НомерПоля, Наименование",
		                              СтрокаТаблицы.НомерПоля,
		                              СтрокаТаблицы.Наименование);
		времФорматБазы.Добавить(НоваяСтрока);
	КонецЦикла;
	Параметры.ПараметрыНастройки.Добавить(времФорматБазы, "ФорматБазы");

	времФорматДокумента = Новый Массив();
	Для Каждого СтрокаТаблицы Из ФорматДокумента Цикл
		НоваяСтрока = Новый Структура("НомерПоля, Наименование",
		                              СтрокаТаблицы.НомерПоля,
		                              СтрокаТаблицы.Наименование);
		времФорматДокумента.Добавить(НоваяСтрока);
	КонецЦикла;
	Параметры.ПараметрыНастройки.Добавить(времФорматДокумента, "ФорматДокумента");

	ОчиститьСообщения();
	Закрыть(КодВозвратаДиалога.ОК);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФорматБазыПоУмолчанию(Команда)
	ЗаполнитьФорматБазыПоУмолчаниюНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФорматБазыПоУмолчаниюНаСервере()
	ФорматБазы.Очистить();
	НоваяСтрока = ФорматБазы.Добавить();
	НоваяСтрока.НомерПоля 		= 1;
	НоваяСтрока.Наименование 	= Элементы.ФорматБазыНаименование.СписокВыбора[0];
	НоваяСтрока = ФорматБазы.Добавить();
	НоваяСтрока.НомерПоля 		= 2;
	НоваяСтрока.Наименование 	= Элементы.ФорматБазыНаименование.СписокВыбора[1];
	НоваяСтрока = ФорматБазы.Добавить();
	НоваяСтрока.НомерПоля 		= 3;
	НоваяСтрока.Наименование 	= Элементы.ФорматБазыНаименование.СписокВыбора[6];
	НоваяСтрока = ФорматБазы.Добавить();
	НоваяСтрока.НомерПоля 		= 4;
	НоваяСтрока.Наименование 	= Элементы.ФорматБазыНаименование.СписокВыбора[7];
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФорматДокументаПоУмолчанию(Команда)
	ЗаполнитьФорматДокументаПоУмолчаниюНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФорматДокументаПоУмолчаниюНаСервере()
	ФорматДокумента.Очистить();
	НоваяСтрока = ФорматДокумента.Добавить();
	НоваяСтрока.НомерПоля 		= 1;
	НоваяСтрока.Наименование 	= Элементы.ФорматДокументаНаименование.СписокВыбора[0];
	НоваяСтрока = ФорматДокумента.Добавить();
	НоваяСтрока.НомерПоля 		= 2;
	НоваяСтрока.Наименование 	= Элементы.ФорматДокументаНаименование.СписокВыбора[7];
КонецПроцедуры

// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере()

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Порт"                    , Порт);
	времПараметрыУстройства.Вставить("Скорость"                , Скорость);
	времПараметрыУстройства.Вставить("Таймаут"                 , Таймаут);
	времПараметрыУстройства.Вставить("ИКПодставка"             , ИКПодставка);
	времПараметрыУстройства.Вставить("РазделительБазы"         , РазделительБазы);
	времПараметрыУстройства.Вставить("РазделительДокумента"    , РазделительДокумента);
	времПараметрыУстройства.Вставить("НомерБазы"               , НомерБазы);
	времПараметрыУстройства.Вставить("НомерДокумента"          , НомерДокумента);
	времПараметрыУстройства.Вставить("ОчищатьДокумент"         , ОчищатьДокумент);
	времПараметрыУстройства.Вставить("ВыбиратьИсточникЗагрузки", ВыбиратьИсточникЗагрузки);
	времПараметрыУстройства.Вставить("Модель"                  , Модель);

	времФорматБазы = Новый Массив();
	Для Каждого СтрокаТаблицы Из ФорматБазы Цикл
		НоваяСтрока = Новый Структура("НомерПоля, Наименование",
		                              СтрокаТаблицы.НомерПоля,
		                              СтрокаТаблицы.Наименование);
		времФорматБазы.Добавить(НоваяСтрока);
	КонецЦикла;
	времПараметрыУстройства.Вставить("ФорматБазы", времФорматБазы);

	времФорматДокумента = Новый Массив();
	Для Каждого СтрокаТаблицы Из ФорматДокумента Цикл
		НоваяСтрока = Новый Структура("НомерПоля, Наименование",
		                              СтрокаТаблицы.НомерПоля,
		                              СтрокаТаблицы.Наименование);
		времФорматДокумента.Добавить(НоваяСтрока);
	КонецЦикла;
	времПараметрыУстройства.Вставить("ФорматДокумента", времФорматДокумента);

	Если МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ПолучитьВерсиюДрайвера",
	                                                               ВходныеПараметры,
	                                                               ВыходныеПараметры,
	                                                               Идентификатор,
	                                                               времПараметрыУстройства) Тогда
		Драйвер = ВыходныеПараметры[0];
		Версия  = ВыходныеПараметры[1];
	Иначе
		Драйвер = ВыходныеПараметры[2];
		Версия  = НСтр("ru='Не определена'");
	КонецЕсли;

	Элементы.Драйвер.ЦветТекста = ?(Драйвер = НСтр("ru='Не установлен'"), ЦветОшибки, ЦветТекста);
	Элементы.Версия.ЦветТекста  = ?(Версия  = НСтр("ru='Не определена'"), ЦветОшибки, ЦветТекста);	
	Элементы.УстановитьДрайвер.Доступность = Не (Драйвер = НСтр("ru='Установлен'"));

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест"
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Параметры.Свойство("Идентификатор", Идентификатор);
	Заголовок = НСтр("ru='ТСД'") + " """ + Строка(Идентификатор) + """";

	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;

	СпМодель = Элементы.Модель.СписокВыбора;
	СпМодель.Добавить("CipherLab CPT-711");
	СпМодель.Добавить("CipherLab CPT-720");
	СпМодель.Добавить("CipherLab CPT-800x");
	СпМодель.Добавить("CipherLab CPT-8300");
	СпМодель.Добавить("CipherLab CPT-8400");
	СпМодель.Добавить("CipherLab CPT-8500");

	СпПорт = Элементы.Порт.СписокВыбора;
	Индекс = Неопределено;
	Для Индекс = 1 По 256 Цикл
		СпПорт.Добавить(Индекс, "COM" + СокрЛП(Индекс));
	КонецЦикла;

	СпСкорость = Элементы.Скорость.СписокВыбора;
	СпСкорость.Добавить(1, "115200");
	СпСкорость.Добавить(2, "57600");
	СпСкорость.Добавить(3, "38400");
	СпСкорость.Добавить(4, "19200");
	СпСкорость.Добавить(5, "9600");

	времПорт                     = Неопределено;
	времСкорость                 = Неопределено;
	времТаймаут                  = Неопределено;
	времИКПодставка              = Неопределено;
	времРазделительБазы          = Неопределено;
	времРазделительДокумента     = Неопределено;
	времНомерБазы                = Неопределено;
	времНомерДокумента           = Неопределено;
	времОчищатьДокумент          = Неопределено;
	времВыбиратьИсточникЗагрузки = Неопределено;
	времФорматБазы               = Неопределено;
	времФорматДокумента          = Неопределено;
	времМодель                   = Неопределено;

	Параметры.Свойство("Порт"                    , времПорт);
	Параметры.Свойство("Скорость"                , времСкорость);
	Параметры.Свойство("Таймаут"                 , времТаймаут);
	Параметры.Свойство("ИКПодставка"             , времИКПодставка);
	Параметры.Свойство("РазделительБазы"         , времРазделительБазы);
	Параметры.Свойство("РазделительДокумента"    , времРазделительДокумента);
	Параметры.Свойство("НомерБазы"               , времНомерБазы);
	Параметры.Свойство("НомерДокумента"          , времНомерДокумента);
	Параметры.Свойство("ОчищатьДокумент"         , времОчищатьДокумент);
	Параметры.Свойство("ВыбиратьИсточникЗагрузки", времВыбиратьИсточникЗагрузки);
	Параметры.Свойство("ФорматБазы"              , времФорматБазы);
	Параметры.Свойство("ФорматДокумента"         , времФорматДокумента);
	Параметры.Свойство("Модель"                  , времМодель);

	Порт                     = ?(времПорт                     = Неопределено,    1, времПорт);
	Скорость                 = ?(времСкорость                 = Неопределено,    1, времСкорость);
	Таймаут                  = ?(времТаймаут                  = Неопределено,  500, времТаймаут);
	ИКПодставка              = ?(времИКПодставка              = Неопределено, ЛОЖЬ, времИКПодставка);
	РазделительБазы          = ?(времРазделительБазы          = Неопределено,    9, времРазделительБазы);
	РазделительДокумента     = ?(времРазделительДокумента     = Неопределено,    9, времРазделительДокумента);
	НомерБазы                = ?(времНомерБазы                = Неопределено,    1, времНомерБазы);
	НомерДокумента           = ?(времНомерДокумента           = Неопределено,    0, времНомерДокумента);
	ОчищатьДокумент          = ?(времОчищатьДокумент          = Неопределено, ЛОЖЬ, времОчищатьДокумент);
	ВыбиратьИсточникЗагрузки = ?(времВыбиратьИсточникЗагрузки = Неопределено, ЛОЖЬ, времВыбиратьИсточникЗагрузки);

	Если времФорматБазы <> Неопределено Тогда
		Для Каждого СтрокаБазы Из времФорматБазы Цикл
			СтрокаТаблицы = ФорматБазы.Добавить();
			СтрокаТаблицы.НомерПоля    = СтрокаБазы.НомерПоля;
			СтрокаТаблицы.Наименование = СтрокаБазы.Наименование;
		КонецЦикла;
	КонецЕсли;

	Если времФорматДокумента <> Неопределено Тогда
		Для Каждого СтрокаДокумента Из времФорматДокумента Цикл
			СтрокаТаблицы = ФорматДокумента.Добавить();
			СтрокаТаблицы.НомерПоля    = СтрокаДокумента.НомерПоля;
			СтрокаТаблицы.Наименование = СтрокаДокумента.Наименование;
		КонецЦикла;
	КонецЕсли;

	Модель = ?(времМодель = Неопределено,  Элементы.Модель.СписокВыбора[0], времМодель);

	Элементы.УстановитьДрайвер.Видимость = (ПараметрыСеанса.РабочееМестоКлиента
	                                        = Идентификатор.РабочееМесто);
											
	Если ФорматБазы.Количество() = 0 Тогда
		ЗаполнитьФорматБазыПоУмолчаниюНаСервере();
	КонецЕсли;
	Если ФорматДокумента.Количество() = 0 Тогда
		ЗаполнитьФорматДокументаПоУмолчаниюНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)
	
	РезультатТеста = Неопределено;
	
	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Порт"                    , Порт);
	времПараметрыУстройства.Вставить("Скорость"                , Скорость);
	времПараметрыУстройства.Вставить("Таймаут"                 , Таймаут);
	времПараметрыУстройства.Вставить("ИКПодставка"             , ИКПодставка);
	времПараметрыУстройства.Вставить("РазделительБазы"         , РазделительБазы);
	времПараметрыУстройства.Вставить("РазделительДокумента"    , РазделительДокумента);
	времПараметрыУстройства.Вставить("НомерБазы"               , НомерБазы);
	времПараметрыУстройства.Вставить("НомерДокумента"          , НомерДокумента);
	времПараметрыУстройства.Вставить("ОчищатьДокумент"         , ОчищатьДокумент);
	времПараметрыУстройства.Вставить("ВыбиратьИсточникЗагрузки", ВыбиратьИсточникЗагрузки);
	времПараметрыУстройства.Вставить("Модель"                  , Модель);

	Результат = МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ТестУстройства",
	                                                               ВходныеПараметры,
	                                                               ВыходныеПараметры,
	                                                               Идентификатор,
	                                                               времПараметрыУстройства);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДрайвер(Команда)

	МенеджерОборудованияКлиент.УстановитьДрайвер(Идентификатор);

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры



