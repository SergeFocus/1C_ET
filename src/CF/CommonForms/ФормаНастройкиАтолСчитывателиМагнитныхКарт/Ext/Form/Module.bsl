// sza140423-0204  
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
// Процедура представляет обработчик события "Нажатие" кнопки
// "ОК" командной панели "ОсновныеДействияФормы".
// 
// Параметры:
//  Кнопка - <КнопкаКоманднойПанели>
//         - Кнопка, с которой связано данное событие (кнопка "ОК").
// 
&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()

	НастроеноДорожек = 0;
	ДорожкаСПустымСуффиксом = ЛОЖЬ;
	времПараметрыДорожек = Новый Массив();

	Для Индекс = 1 По 3 Цикл
		Если ПараметрыДорожек[3 - Индекс].Использовать = ИСТИНА Тогда
			ДорожкаСПустымСуффиксом =
			    ДорожкаСПустымСуффиксом ИЛИ (ПараметрыДорожек[3 - Индекс].Суффикс = "");
			НастроеноДорожек = НастроеноДорожек + 1;
		КонецЕсли;
	КонецЦикла;

	Если НЕ ДорожкаСПустымСуффиксом Тогда
		Для Индекс = 1 По 3 Цикл
			НоваяСтрока = Новый Структура();
			НоваяСтрока.Вставить("НомерДорожки", ПараметрыДорожек[Индекс - 1].НомерДорожки);
			НоваяСтрока.Вставить("Использовать", ПараметрыДорожек[Индекс - 1].Использовать);
			НоваяСтрока.Вставить("Префикс"     , ПараметрыДорожек[Индекс - 1].Префикс);
			НоваяСтрока.Вставить("Суффикс"     , ПараметрыДорожек[Индекс - 1].Суффикс);
			времПараметрыДорожек.Добавить(НоваяСтрока);
		КонецЦикла;
	КонецЕсли;

	Если НастроеноДорожек > 0 И Не ДорожкаСПустымСуффиксом Тогда
		Параметры.ПараметрыНастройки.Добавить(Порт                , "Порт");
		Параметры.ПараметрыНастройки.Добавить(Скорость            , "Скорость");
		Параметры.ПараметрыНастройки.Добавить(БитДанных           , "БитДанных");
		Параметры.ПараметрыНастройки.Добавить(СтопБит             , "СтопБит");
		Параметры.ПараметрыНастройки.Добавить(Четность            , "Четность");
		Параметры.ПараметрыНастройки.Добавить(Чувствительность    , "Чувствительность");
		Параметры.ПараметрыНастройки.Добавить(времПараметрыДорожек, "ПараметрыДорожек");
		Параметры.ПараметрыНастройки.Добавить(Модель              , "Модель");
		ОчиститьСообщения();
		Закрыть(КодВозвратаДиалога.ОК);
	ИначеЕсли НастроеноДорожек = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Необходимо указать использование хотя бы одной дорожки для считывателя.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	ИначеЕсли ДорожкаСПустымСуффиксом Тогда
		ТекстСообщения = НСтр("ru = 'Для каждой используемой дорожки должен быть указан не пустой суффикс.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере()

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Порт"            , Порт);
	времПараметрыУстройства.Вставить("Скорость"        , Скорость);
	времПараметрыУстройства.Вставить("БитДанных"       , БитДанных);
	времПараметрыУстройства.Вставить("СтопБит"         , СтопБит);
	времПараметрыУстройства.Вставить("Четность"        , Четность);
	времПараметрыУстройства.Вставить("Чувствительность", Чувствительность);
	времПараметрыУстройства.Вставить("ПараметрыДорожек", Новый Массив());
	времПараметрыУстройства.Вставить("Модель"          , Модель);

	Если МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ПолучитьВерсиюДрайвера",
	                                                               ВходныеПараметры,
	                                                               ВыходныеПараметры,
	                                                               Идентификатор,
	                                                               времПараметрыУстройства) Тогда
		Драйвер = ВыходныеПараметры[0];
		Версия  = ВыходныеПараметры[1];
	Иначе
		Драйвер = ВыходныеПараметры[2];
		Версия  = НСтр("ru='Не определена'");
	КонецЕсли;

	Элементы.Драйвер.ЦветТекста = ?(Драйвер = НСтр("ru='Не установлен'"), ЦветОшибки, ЦветТекста);
	Элементы.Версия.ЦветТекста  = ?(Версия  = НСтр("ru='Не определена'"), ЦветОшибки, ЦветТекста);

КонецПроцедуры

// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ <ИМЯ ТАБЛИЧНОЙ ЧАСТИ>
&НаКлиенте
Процедура ПараметрыДорожекПриАктивизацииЯчейки(Элемент)


	Если (Элемент.ТекущийЭлемент.Имя = "Префикс"
	 Или Элемент.ТекущийЭлемент.Имя = "Суффикс")
	   И Элемент.ТекущийЭлемент.СписокВыбора.Количество() = 0 Тогда
		СпПараметрыДорожек = Элемент.ТекущийЭлемент.СписокВыбора;

		Для КодЭлемента = 0 По 127 Цикл
			СимволДорожки = "";
			Если КодЭлемента > 32 Тогда
				СимволДорожки = " ( " + Символ(КодЭлемента) + " )";
			ИначеЕсли КодЭлемента = 8 Тогда
				СимволДорожки = " (BACKSPACE)";
			ИначеЕсли КодЭлемента = 9 Тогда
				СимволДорожки = " (TAB)";
			ИначеЕсли КодЭлемента = 10 Тогда
				СимволДорожки = " (LF)";
			ИначеЕсли КодЭлемента = 13 Тогда
				СимволДорожки = " (CR)";
			ИначеЕсли КодЭлемента = 16 Тогда
				СимволДорожки = " (SHIFT)";
			ИначеЕсли КодЭлемента = 17 Тогда
				СимволДорожки = " (CONTROL)";
			ИначеЕсли КодЭлемента = 18 Тогда
				СимволДорожки = " (ALT)";
			ИначеЕсли КодЭлемента = 27 Тогда
				СимволДорожки = " (ESCAPE)";
			ИначеЕсли КодЭлемента = 32 Тогда
				СимволДорожки = " (SPACE)";
			КонецЕсли;
			СпПараметрыДорожек.Добавить("#" + СокрЛП(КодЭлемента), "#" + СокрЛП(КодЭлемента) + СимволДорожки);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ
&НаКлиенте
Процедура ПортПриИзменении()

	Элементы.Скорость.Доступность  = (Порт <> 100);
	Элементы.БитДанных.Доступность = (Порт <> 100);
	Элементы.СтопБит.Доступность   = (Порт <> 100);
	Элементы.Четность.Доступность  = (Порт <> 100);

КонецПроцедуры

&НаКлиенте
Процедура ПрефиксОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если ВыбранноеЗначение <> Неопределено Тогда
		Элементы.ПараметрыДорожек.ТекущиеДанные.Префикс = 
		    Элементы.ПараметрыДорожек.ТекущиеДанные.Префикс + ВыбранноеЗначение;
	КонецЕсли;
	СтандартнаяОбработка = ЛОЖЬ;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

// Процедура - обработчик события "Перед открытием" формы.
// 
// Параметры:
//  Отказ                - <Булево>
//                       - Признак отказа от открытия формы. Если в теле
//                         процедуры-обработчика установить данному параметру
//                         значение ИСТИНА, открытие формы выполнено не будет.
//                         Значение по умолчанию: ЛОЖЬ 
// 
//  СтандартнаяОбработка - <Булево>
//                       - В данный параметр передается признак выполнения
//                         стандартной (системной) обработки события. Если в
//                         теле процедуры-обработчика установить данному
//                         параметру значение ЛОЖЬ, стандартная обработка
//                         события производиться не будет. Отказ от стандартной
//                         обработки не отменяет открытие формы.
//                         Значение по умолчанию: ИСТИНА 
// 
&НаКлиенте
Процедура ПриОткрытии(Отказ)                                                                    // ПРИ ОТКРЫТИИ	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	ОбновитьИнформациюОДрайвере();

	ПортПриИзменении();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест"
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Параметры.Свойство("Идентификатор", Идентификатор);
	Заголовок = НСтр("ru='СМК'") + " """ + Строка(Идентификатор) + """";

	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;

	СпПорт = Элементы.Порт.СписокВыбора;
	Для Индекс = 1 По 32 Цикл
		СпПорт.Добавить(Индекс, "COM" + СокрЛП(Индекс));
	КонецЦикла;
	СпПорт.Добавить(100, "Клавиатура");

	СпСкорость = Элементы.Скорость.СписокВыбора;
	СпСкорость.Добавить(1,  "300");
	СпСкорость.Добавить(2,  "600");
	СпСкорость.Добавить(3,  "1200");
	СпСкорость.Добавить(4,  "2400");
	СпСкорость.Добавить(5,  "4800");
	СпСкорость.Добавить(7,  "9600");
	СпСкорость.Добавить(9,  "14400");
	СпСкорость.Добавить(10, "19200");
	СпСкорость.Добавить(12, "38400");

	СпБитДанных = Элементы.БитДанных.СписокВыбора;
	СпБитДанных.Добавить(3, НСтр("ru='7 бит'"));
	СпБитДанных.Добавить(4, НСтр("ru='8 бит'"));

	СпСтопБит = Элементы.СтопБит.СписокВыбора;
	СпСтопБит.Добавить(0, НСтр("ru='1 стоп-бит'"));
	СпСтопБит.Добавить(2, НСтр("ru='2 стоп-бита'"));

	СпЧетность = Элементы.Четность.СписокВыбора;
	СпЧетность.Добавить(0, НСтр("ru='Нет'"));
	СпЧетность.Добавить(1, НСтр("ru='Нечетность'"));
	СпЧетность.Добавить(2, НСтр("ru='Четность'"));
	СпЧетность.Добавить(3, НСтр("ru='Установлен'"));
	СпЧетность.Добавить(4, НСтр("ru='Сброшен'"));

	времПорт             = Неопределено;
	времСкорость         = Неопределено;
	времБитДанных        = Неопределено;
	времСтопБит          = Неопределено;
	времЧетность         = Неопределено;
	времЧувствительность = Неопределено;
	времМодель           = Неопределено;

	Параметры.Свойство("Порт"            , времПорт);
	Параметры.Свойство("Скорость"        , времСкорость);
	Параметры.Свойство("БитДанных"       , времБитДанных);
	Параметры.Свойство("СтопБит"         , времСтопБит);
	Параметры.Свойство("Четность"        , времЧетность);
	Параметры.Свойство("Чувствительность", времЧувствительность);
	Параметры.Свойство("Модель"          , времМодель);

	Порт             = ?(времПорт             = Неопределено,         1, времПорт);
	Скорость         = ?(времСкорость         = Неопределено,         7, времСкорость);
	БитДанных        = ?(времБитДанных        = Неопределено,         3, времБитДанных);
	СтопБит          = ?(времСтопБит          = Неопределено,         0, времСтопБит);
	Четность         = ?(времЧетность         = Неопределено,         0, времЧетность);
	Чувствительность = ?(времЧувствительность = Неопределено,        30, времЧувствительность);
	Модель           = ?(времМодель           = Неопределено, Элементы.Модель.СписокВыбора[0], времМодель);

	времПараметрыДорожек = Неопределено;
	Если НЕ Параметры.Свойство("ПараметрыДорожек", времПараметрыДорожек) Тогда
		времПараметрыДорожек = Новый Массив();
		Для Индекс = 1 По 3 Цикл
			НоваяСтрока = Новый Структура();
			НоваяСтрока.Вставить("НомерДорожки", Индекс);
			НоваяСтрока.Вставить("Префикс"     , "");
			НоваяСтрока.Вставить("Суффикс"     , ?(Индекс = 2, "#13", ""));
			НоваяСтрока.Вставить("Использовать", ?(Индекс = 2, ИСТИНА, ЛОЖЬ));

			времПараметрыДорожек.Добавить(НоваяСтрока);
		КонецЦикла;
	КонецЕсли;

	Для Каждого СтрокаДорожки Из времПараметрыДорожек Цикл
		НоваяСтрока = ПараметрыДорожек.Добавить();
		НоваяСтрока.НомерДорожки = СтрокаДорожки.НомерДорожки;
		НоваяСтрока.Префикс      = СтрокаДорожки.Префикс;
		НоваяСтрока.Суффикс      = СтрокаДорожки.Суффикс;
		НоваяСтрока.Использовать = СтрокаДорожки.Использовать;
	КонецЦикла;

	Элементы.УстановитьДрайвер.Видимость = (ПараметрыСеанса.РабочееМестоКлиента
	                                        = Идентификатор.РабочееМесто);

КонецПроцедуры

&НаКлиенте
Процедура СуффиксОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если ВыбранноеЗначение <> Неопределено Тогда
		Элементы.ПараметрыДорожек.ТекущиеДанные.Суффикс = 
		    Элементы.ПараметрыДорожек.ТекущиеДанные.Суффикс + ВыбранноеЗначение;
	КонецЕсли;
	СтандартнаяОбработка = ЛОЖЬ;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДрайвер(Команда)

	МенеджерОборудованияКлиент.УстановитьДрайвер(Идентификатор);

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры



