// sza160219-0310 НаправитьВсеСообщенияПользователямОтСистемыВОдноОкно
// sza160207-2222

&НаКлиенте
Процедура Англичанин(Команда)
	НаборКонстант.ТекущийЯзыкИнтерфейса = ПредопределенноеЗначение("Справочник.Языки.English");
	ВыбралиЯзык();
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВМенюСервисВызовОбработкиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВключитьМеханизмПодбораНоменклатурыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВместоТумблеровПоказыватьГалочкиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВместоТумблеровПоказыватьГалочки), 2);
КонецПроцедуры

&НаКлиенте
Процедура ВсеРеквизитыШапкиДокументовВПервуюЗакладкуРежимБольшихТаблицДляМалыхМониторовПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВыбралиЯзык()
	
	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Добавление текстов перевода..") + " " + СокрЛП(НаборКонстант.ТекущийЯзыкИнтерфейса), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
	ОбновитьТекущийЯзыкИнтерфейса(НаборКонстант.ТекущийЯзыкИнтерфейса);
	СообщитьОСменеФункциональнойОпции(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Язык интерфейса по-умолчанию"));
	
	Элементы.ГруппаПисателей.Видимость = НЕ ЗначениеЗаполнено(НаборКонстант.ТекущийЯзыкИнтерфейса);
	ПроверитьЧтоЯзыкИспользуется(НаборКонстант.ТекущийЯзыкИнтерфейса, ИСТИНА);
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиТекущийКурсВЗаголовкеПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВывестиТекущийКурсВЗаголовке), 2);
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьВКарточкеНоменклатурыСкоростьПродажВПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВыводитьВКарточкеНоменклатурыСкоростьПродажВ), 2);
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьДляНаборовНоменклатурыПоказыватьМаксимальныйОстатокПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВыводитьДляНаборовНоменклатурыПоказыватьМаксимальныйОстаток), 2);
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьСписокКлиентовСОтдельнымОкномГруппПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВыводитьСписокКлиентовСОтдельнымОкномГрупп), 2);
КонецПроцедуры

&НаКлиенте
Процедура ДемонстрироватьОстатокТовараСУчетомДокВНепроведенныхПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ДемонстрироватьОстатокТовараСУчетомДокВНепроведенных), 2);
КонецПроцедуры

&НаКлиенте
Процедура ДемонстрироватьПриВыбореНоменклатурыПриРасходованииИПеремещенииТолькоСОстаткамиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ДемонстрироватьПриВыбореНоменклатурыПриРасходованииИПеремещенииТолькоСОстатками), 2);
КонецПроцедуры

&НаКлиенте
Процедура ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанныхПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных), 2);
КонецПроцедуры

&НаКлиенте
Процедура ДобавлятьИмяПользователяВЗаголовокОкнаПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ДобавлятьИмяПользователяВЗаголовокОкна), 2);
	
	ТекстЗаголовкаОкнаПрограммы = ?(НаборКонстант.ДобавлятьИмяПользователяВЗаголовокОкна, "" + глТекущийПользователь + " ", "") + НаборКонстант.ТекстЗаголовкаОкнаПрограммы;
	
	Если ЗначениеЗаполнено(ТекстЗаголовкаОкнаПрограммы) Тогда
		попытка
			Выполнить(" УстановитьЗаголовокКлиентскогоПриложения(ТекстЗаголовкаОкнаПрограммы); ");
		исключение // 8.2!
			попытка
				Выполнить(" УстановитьЗаголовокПриложения(ТекстЗаголовкаОкнаПрограммы); ");
			исключение
			КонецПопытки;
		КонецПопытки;
		ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поменял заголовок приложения"), 2);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьСвоиПоложенияЭлементовПоискаПоСпискамПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЗадатьСвоиПоложенияЭлементовПоискаПоСпискам), 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКомандыИзмененийИЗаполненияДляТаблицыТовары1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ИспользоватьКомандыИзмененийИЗаполненияДляТаблицыТовары), 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРегистрТекстовНаДругихЯзыкахДляАвтоматическогоПереводаНаименованийПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ИспользоватьРегистрТекстовНаДругихЯзыкахДляАвтоматическогоПереводаНаименований), 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСобственныйПереводЭлементовИнтерфейсаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ИспользоватьСобственныйПереводЭлементовИнтерфейса), 2);
КонецПроцедуры

&НаКлиенте
Процедура НеПоказыватьКомандуДобавленияНоменклатурыСКоличествомПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.НеПоказыватьКомандуДобавленияНоменклатурыСКоличеством), 2);
КонецПроцедуры

&НаКлиенте
Процедура НеСпрашиватьПодтверждениеПриВыходеИзПрограммыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.НеСпрашиватьПодтверждениеПриВыходеИзПрограммы), 2);
КонецПроцедуры

&НаКлиенте
Процедура ОбводитьРамкамиТекстовыеПоляВФормахПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ОбводитьРамкамиТекстовыеПоляВФормах), 2);
	Если НЕ НаборКонстант.ОбводитьРамкамиТекстовыеПоляВФормах
		И НаборКонстант.РамкиТекстовыхПолейВФормахРазличногоЦвета Тогда
		
		НаборКонстант.РамкиТекстовыхПолейВФормахРазличногоЦвета = ЛОЖЬ;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРегионУчета()
	
	Если НаборКонстант.РегионРегламентированногоУчета = ПредопределенноеЗначение("Перечисление.РегионыРегламентированногоУчета.Украина") Тогда
		Элементы.СобственныеЮридическиеЛицаОКПО.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("ЕДРПОУ");
		Элементы.ЗапретитьИспользоватьОдинаковыеКодыИНН.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Запретить одинаковые ИНН, ЕДРПОУ в рамках одного справочника");
		Элементы.ИспользоватьМеханизмыПечатиФормыТОРГ12.Видимость = ЛОЖЬ;
		НаборКонстант.ИспользоватьМеханизмыПечатиФормыТОРГ12 = ЛОЖЬ;
		Элементы.ИспользоватьМеханизмыПечатиСчетаФактурыДляРФ.Видимость = ЛОЖЬ;
		НаборКонстант.ИспользоватьМеханизмыПечатиСчетаФактурыДляРФ = ЛОЖЬ;
		Элементы.ИспользоватьМеханизмПечатиПКОРФ.Видимость = ЛОЖЬ;
		НаборКонстант.ИспользоватьМеханизмПечатиПКОРФ = ЛОЖЬ;
		Элементы.НашеОКПО.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Наше ЕДРПОУ");
		
	ИначеЕсли НаборКонстант.РегионРегламентированногоУчета = ПредопределенноеЗначение("Перечисление.РегионыРегламентированногоУчета.Россия") Тогда
		Элементы.СобственныеЮридическиеЛицаОКПО.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("ОКПО");
		Элементы.ЗапретитьИспользоватьОдинаковыеКодыИНН.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Запретить одинаковые ИНН, ОКПО в рамках одного справочника");
		Элементы.НашеОКПО.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Наше ОКПО");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьТекущийЯзыкИнтерфейса(Знач ТекущийЯзыкИнтерфейса)
	
	ПараметрыСеанса.ТекущийЯзыкИнтерфейсаПрограммы = ТекущийЯзыкИнтерфейса;
	
	ОбщийМодульТекстСервер.ЗагрузитьТекстыОпределенногоЯзыкаИзМакета(ТекущийЯзыкИнтерфейса);	
	ОбновитьПовторноИспользуемыеЗначения();
	ОбщийМодульСервер.ЗадатьНаименованияОбъектамНаДругомЯзыке();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОтображатьКомандыСнизуПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ОтображатьКомандыСнизу), 2);
КонецПроцедуры

&НаКлиенте
Процедура ПереводитьЭлементыИнтерфейсаПрограммноПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ПереводитьЭлементыИнтерфейсаПрограммно), 2);
КонецПроцедуры

&НаКлиенте
Процедура ПечататьГарантийныеОбязательстваТолькоДляТоваровСУказаннымСрокомГарантииПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ПечататьГарантийныеОбязательстваТолькоДляТоваровСУказаннымСрокомГарантии), 2);
КонецПроцедуры

&НаКлиенте
Процедура ПоддерживатьИныеЯзыкиКромеРусскогоПриИзменении(Элемент)
	
	Если НЕ НаборКонстант.ПоддерживатьИныеЯзыкиКромеРусского Тогда
		
		НаборКонстант.ПоддерживатьНаименованияНаДругихЯзыкахКромеРусского = ЛОЖЬ;
		НаборКонстант.ИспользоватьРегистрТекстовНаДругихЯзыкахДляАвтоматическогоПереводаНаименований = ЛОЖЬ;
		НаборКонстант.ИспользоватьСобственныйПереводЭлементовИнтерфейса = ЛОЖЬ;
		НаборКонстант.ПереводитьЭлементыИнтерфейсаПрограммно = ЛОЖЬ;
		
		Если ЗначениеЗаполнено(НаборКонстант.ТекущийЯзыкИнтерфейса) Тогда
			
			НаборКонстант.ТекущийЯзыкИнтерфейса = ПредопределенноеЗначение("Справочник.Языки.Русский");
			ОбновитьТекущийЯзыкИнтерфейса(НаборКонстант.ТекущийЯзыкИнтерфейса);	
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ЗадайтеКакиеЯзыкиИспользуютсяДляКакихЦелейВСправочнике.Видимость = НаборКонстант.ПоддерживатьИныеЯзыкиКромеРусского;
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоддерживатьНаименованияНаДругихЯзыкахКромеРусскогоПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ПодсветитьФонПолейПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ПодсветитьФонПолей), 2);
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьКнопкиДобавленияНоменклатурыЧастогоСпросаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ПоказыватьКнопкиДобавленияНоменклатурыЧастогоСпроса), 2);
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьКнопкуПечатиГарантийногоТалонаВРасходномДокументеПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ПоказыватьКнопкуПечатиГарантийногоТалонаВРасходномДокументе), 2);
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьСуммуРасходногоДокументаТакжеВВалютеПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ПоказыватьСуммуРасходногоДокументаТакжеВВалюте), 2);
КонецПроцедуры

&НаКлиенте
Процедура ПоложениеСостоянияПросмотраПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ПоложениеСостоянияПросмотра), 2);
КонецПроцедуры

&НаКлиенте
Процедура ПоложениеСтрокиПоискаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ПоложениеСтрокиПоиска), 2);
КонецПроцедуры

&НаКлиенте
Процедура ПоложениеУправленияПоискомПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ПоложениеУправленияПоиском), 2);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПроверитьПодключениеОбработчикаОжидания();	
	ПроверитьВключитьВыключитьНапоминания();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры

&НаКлиенте
Процедура ПредставитьДокументРасходаТовараДвумяКолонкамиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ПредставитьДокументРасходаТовараДвумяКолонками), 2);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлятьСерииНоменклатурыВДокументахОтдельнымОкномПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ПредставлятьСерииНоменклатурыВДокументахОтдельнымОкном), 2);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлятьСправочникНоменклатурыБезБлокаГруппПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ПредставлятьСправочникНоменклатурыБезБлокаГрупп), 2);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000150", ЭтаФорма, Отказ, );	
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ЯзыкПользователяЗаданВКонфигураторе 		= ОбщийМодульТекстСервер.ЯзыкПользователяЗаданВКонфигураторе();
		Элементы.ТекущийЯзыкИнтерфейса.Доступность 	= НЕ ЯзыкПользователяЗаданВКонфигураторе;
		Элементы.ГруппаПисателей.Видимость 			= НЕ ЯзыкПользователяЗаданВКонфигураторе И НЕ ЗначениеЗаполнено(НаборКонстант.ТекущийЯзыкИнтерфейса);
		Элементы.ЯзыкТекущегоПользователяЗаданВКонфигураторе.Видимость = ЯзыкПользователяЗаданВКонфигураторе;	
		
		Элементы.ЗадайтеКакиеЯзыкиИспользуютсяДляКакихЦелейВСправочнике.Видимость = НаборКонстант.ПоддерживатьИныеЯзыкиКромеРусского;
																											 КонецЕсли;
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверитьЧтоЯзыкИспользуется(Знач УстановленныйЯзык, Знач ЭтоЯзыкИнтерфейса = ЛОЖЬ)
	
	Если ЗначениеЗаполнено(УстановленныйЯзык) Тогда
		Если ЭтоЯзыкИнтерфейса Тогда
			ЯзыкПечатныхФормОбъект = УстановленныйЯзык.ПолучитьОбъект();
			ЯзыкПечатныхФормОбъект.ИспользуетсяДляДокументов = ИСТИНА;
			ЯзыкПечатныхФормОбъект.ИспользуетсяДляНаименованияОбъектов = ИСТИНА;
			ЯзыкПечатныхФормОбъект.ИспользуетсяДляОбщения = ИСТИНА;
			ЯзыкПечатныхФормОбъект.Записать();
		ИначеЕсли НЕ УстановленныйЯзык.ИспользуетсяДляДокументов Тогда
			
			ЯзыкПечатныхФормОбъект = УстановленныйЯзык.ПолучитьОбъект();
			ЯзыкПечатныхФормОбъект.ИспользуетсяДляДокументов = ИСТИНА;
			ЯзыкПечатныхФормОбъект.Записать();
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РамкиТекстовыхПолейВФормахРазличногоЦветаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.РамкиТекстовыхПолейВФормахРазличногоЦвета), 2);
КонецПроцедуры

&НаКлиенте
Процедура РегионРегламентированногоУчетаПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.РегионРегламентированногоУчета), 2);
	ОбновитьРегионУчета();
	
КонецПроцедуры

&НаКлиенте
Процедура Русский(Команда)
	НаборКонстант.ТекущийЯзыкИнтерфейса = ПредопределенноеЗначение("Справочник.Языки.Русский");
	ВыбралиЯзык();
КонецПроцедуры

&НаКлиенте
Процедура СообщитьОСменеФункциональнойОпции(Знач ЭлементЗдесь = "")
	
	Если НЕ ПустаяСтрока(ЭлементЗдесь) Тогда
		ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + ЭлементЗдесь, 2);	
	КонецЕсли;
	
	Попытка 
		ЭтаФорма.Записать();
		Элементы.СобственныеЮридическиеЛица.Видимость = НаборКонстант.ВестиУчетСобственныхЮридическихЛиц;
		
	Исключение 	
		ТекстОписаниеОшибки = ОписаниеОшибки();
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ТекстОписаниеОшибки);
	КонецПопытки;
	
	ОбновитьИнтерфейс();
	
КонецПроцедуры // СообщитьОСменеФункциональнойОпции

&НаКлиенте
Процедура ТекстЗаголовкаОкнаПрограммыПриИзменении(Элемент)
	
	ТекстЗаголовкаОкнаПрограммы = ?(НаборКонстант.ДобавлятьИмяПользователяВЗаголовокОкна, "" + глТекущийПользователь + " ", "") + НаборКонстант.ТекстЗаголовкаОкнаПрограммы;
	
	Если ЗначениеЗаполнено(ТекстЗаголовкаОкнаПрограммы) Тогда
		попытка
			Выполнить(" УстановитьЗаголовокКлиентскогоПриложения(ТекстЗаголовкаОкнаПрограммы); ");
		исключение // 8.2!
			попытка
				Выполнить(" УстановитьЗаголовокПриложения(ТекстЗаголовкаОкнаПрограммы); ");
			исключение
			КонецПопытки;
		КонецПопытки;
		ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поменял заголовок приложения"), 2);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущийЯзыкИнтерфейсаПриИзменении(Элемент)
	ВыбралиЯзык();	
КонецПроцедуры

&НаКлиенте
Процедура Украинец(Команда)
	НаборКонстант.ТекущийЯзыкИнтерфейса = ПредопределенноеЗначение("Справочник.Языки.Украинский");
	ВыбралиЯзык();
КонецПроцедуры

&НаКлиенте
Процедура ФормироватьОписаниеТаблицОбъектовДляИхСписковПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ФормироватьОписаниеТаблицОбъектовДляИхСписков), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЯзыкПечатныхФормПриИзменении(Элемент)
	
	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Добавление текстов перевода..") + " " + СокрЛП(НаборКонстант.ТекущийЯзыкИнтерфейса), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЯзыкПечатныхФорм), 2);
	
	ОбщийМодульТекстСервер.ЗагрузитьТекстыОпределенногоЯзыкаИзМакета(НаборКонстант.ЯзыкПечатныхФорм);
	ОбновитьПовторноИспользуемыеЗначения();
	
	ПроверитьЧтоЯзыкИспользуется(НаборКонстант.ЯзыкПечатныхФорм);
	
КонецПроцедуры

&НаКлиенте
Процедура НаправитьВсеСообщенияПользователямОтСистемыВОдноОкноПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.НаправитьВсеСообщенияПользователямОтСистемыВОдноОкно), 2);
КонецПроцедуры
