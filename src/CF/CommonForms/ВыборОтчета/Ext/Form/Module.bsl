// sza140917-0242 отчет курьеру
// sza140204-0112
// sza131008-1738

&НаКлиенте
Процедура Деньги(Команда)
	ОткрытьФорму("ОбщаяФорма.Деньги");
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	ТекущаяСтраница = Элементы.ГруппаСтраниц.ТекущаяСтраница;
	Если НЕ ТекущаяСтраница = Неопределено Тогда
		СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
		СтраницаПанели  = СтраницыПанели.Индекс(ТекущаяСтраница);
		Если НЕ ЭтаФорма.ТекущийЭлемент = Неопределено Тогда
			Попытка
				ПоследнийОтчет = ЭтаФорма.ТекущийЭлемент.Имя;
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПечатьДнейРождения(Команда)
	ОбщийМодульКлиент.ПечатьДнейРождения(ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПоискСерииНоменклатуры(Команда)
	Выполнить(" ОткрытьФорму(ИмяНеобходимойФормы); ");
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзображенияОкнаФормы() // Когда окно уже нарисовано пользователю
	ЭтаФорма.Элементы.ФормаЗакрыть.Видимость = НЕ ЭтаФорма.Окно = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                         // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)            						// ПРИ ОТКРЫТИИ

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);

	Если ЗначениеЗаполнено(СтраницаПанели) Тогда
		СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
		ТекущаяСтраница = СтраницыПанели.Получить(СтраницаПанели);
		Если НЕ ТекущаяСтраница = Неопределено Тогда
			Элементы.ГруппаСтраниц.ТекущаяСтраница = ТекущаяСтраница;
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(ПоследнийОтчет) Тогда
		ЭлементОтчета = Элементы.Найти(ПоследнийОтчет);
		Если НЕ ЭлементОтчета = Неопределено Тогда
			ЭтаФорма.ТекущийЭлемент = ЭлементОтчета;
		КонецЕсли;
	КонецЕсли;

	ПодключитьОбработчикОжидания("ПослеИзображенияОкнаФормы", 0.3, ИСТИНА);

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)     // ПРИ СОЗДАНИИ НА СЕРВЕРЕ

	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
		ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);
	КонецЕсли;

	ВестиУчетПоКлиентам 	= ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам");
	ВестиУчетДвиженияДенег 	= ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетДвиженияДенег");
	ВестиУчетПоПоставщикам  = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоПоставщикам");
	ИспользоватьСложныйМеханизмЦен = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСложныйМеханизмЦен");

	Попытка
		Элементы.ОтчетОстаткиИОборотыОстаткиИОбороты.Видимость = НЕ ИспользоватьСложныйМеханизмЦен;
	Исключение // нет прав
	КонецПопытки;

	ВестиУчетОтветственныхЗаСредства = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетЗарплатыСотрудников")
	И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетСредствПредприятия");

	Попытка
		Выполнить(" Элементы.ОтчетОтветственностьЗаСредстваОткрыть1.Видимость = ВестиУчетОтветственныхЗаСредства; ");
	Исключение
	КонецПопытки;

	Элементы.ПоДеньгам.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетДвиженияДенег");
	Элементы.ПоВзаиморасчетамСКлиентами.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам");
	Элементы.ПоЗаработнойПлате.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетЗарплатыСотрудников");
	Элементы.ПоВзаиморасчетамСПоставщиками.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоПоставщикам");

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры
