//sza140917-0242 отчет курьеру
//sza140204-0112 
//sza131008-1738  
&НаКлиенте
Процедура Деньги(Команда)
	
	ФормаОстатоков = ПолучитьФорму("ОбщаяФорма.Деньги");
	ФормаОстатоков.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
		
	ТекущаяСтраница = Элементы.ГруппаСтраниц.ТекущаяСтраница;
	СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
	СтраницаПанели  = СтраницыПанели.Индекс(ТекущаяСтраница);
	
	Если НЕ этаформа.ТекущийЭлемент = Неопределено тогда
		Попытка
			ПоследнийОтчет = этаформа.ТекущийЭлемент.Имя;       	
		Исключение
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьДнейРождения(Команда)
	ОбщийМодульКлиент.ПечатьДнейРождения(ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                         // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)            						// ПРИ ОТКРЫТИИ
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	Если ЗначениеЗаполнено(СтраницаПанели)Тогда		
		СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
		ТекущаяСтраница = СтраницыПанели.получить(СтраницаПанели);
		Элементы.ГруппаСтраниц.ТекущаяСтраница = ТекущаяСтраница;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ПоследнийОтчет) Тогда
		этаформа.ТекущийЭлемент = Элементы.Найти(ПоследнийОтчет);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)     // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	ВестиУчетДвиженияДенег 	= ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетДвиженияДенег");
	Элементы.Декорация3.Видимость = ВестиУчетДвиженияДенег;
	Элементы.Декорация1.Видимость = ВестиУчетДвиженияДенег;
	
	ВестиУчетПоПоставщикам 		  = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоПоставщикам");
	Элементы.Декорация7.Видимость = ВестиУчетПоПоставщикам;
	
	ВестиУчетПоКлиентам 		  = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам");
	Элементы.Декорация6.Видимость = ВестиУчетПоКлиентам;
	
	ИспользоватьСложныйМеханизмЦен = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСложныйМеханизмЦен");
	Элементы.ОтчетОстаткиИОборотыОстаткиИОбороты.Видимость = НЕ ИспользоватьСложныйМеханизмЦен;
	
	ВестиУчетОтветственныхЗаСредства = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетЗарплатыСотрудников")
	И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетСредствПредприятия");
	
	//Элементы.ОтчетКартаКурьераОткрыть.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("УчитыватьИнформациюОДоставкеВДокументахРасхода") 
	//И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетЗарплатыСотрудников");
	
	Элементы.Декорация8.Видимость = ВестиУчетОтветственныхЗаСредства;
	Попытка
		Выполнить(" Элементы.ОтчетОбОтветственностиЗаСредстваОткрыть1.Видимость = ВестиУчетОтветственныхЗаСредства; ");
	Исключение
	КонецПопытки;
	
КонецПроцедуры
