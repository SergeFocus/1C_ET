// sza140917-0242 отчет курьеру
// sza140204-0112 
// sza131008-1738  
&НаКлиенте
Процедура Деньги(Команда)
	
	ФормаОстатоков = ПолучитьФорму("ОбщаяФорма.Деньги");
	ФормаОстатоков.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ТекущаяСтраница = Элементы.ГруппаСтраниц.ТекущаяСтраница;
	СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
	СтраницаПанели  = СтраницыПанели.Индекс(ТекущаяСтраница);
	
	Если НЕ ЭтаФорма.ТекущийЭлемент = Неопределено тогда
		Попытка
			ПоследнийОтчет = этаформа.ТекущийЭлемент.Имя;       	
		Исключение
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьДнейРождения(Команда)
	ОбщийМодульКлиент.ПечатьДнейРождения(ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                         // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)            						// ПРИ ОТКРЫТИИ
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	Если ЗначениеЗаполнено(СтраницаПанели) Тогда		
		СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
		ТекущаяСтраница = СтраницыПанели.получить(СтраницаПанели);
		Элементы.ГруппаСтраниц.ТекущаяСтраница = ТекущаяСтраница;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ПоследнийОтчет) Тогда
		ЭтаФорма.ТекущийЭлемент = Элементы.Найти(ПоследнийОтчет);
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ПослеИзображенияОкнаФормы", 0.3, ИСТИНА);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзображенияОкнаФормы() // Когда окно уже нарисовано пользователю
	ЭтаФорма.Элементы.ФормаЗакрыть.Видимость = НЕ ЭтаФорма.Окно = Неопределено;	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)     // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
		ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
	КонецЕсли;
	
	ВестиУчетДвиженияДенег 	= ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетДвиженияДенег");
	ВестиУчетПоПоставщикам  = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоПоставщикам");
	ВестиУчетПоКлиентам 	= ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам");
	
	ИспользоватьСложныйМеханизмЦен = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСложныйМеханизмЦен");
	Попытка
		Элементы.ОтчетОстаткиИОборотыОстаткиИОбороты.Видимость = НЕ ИспользоватьСложныйМеханизмЦен;
	Исключение // нет прав
	КонецПопытки;
	
	ВестиУчетОтветственныхЗаСредства = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетЗарплатыСотрудников")
	И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетСредствПредприятия");
	
	Попытка
		Выполнить(" Элементы.ОтчетОбОтветственностиЗаСредстваОткрыть1.Видимость = ВестиУчетОтветственныхЗаСредства; ");
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискСерииНоменклатуры(Команда)
	
	ФормаПоискаСерии = Неопределено;
	ИмяНеобходимойФормы = "ОбщаяФорма.ФормаПоискаСерии";
	Выполнить(" ФормаПоискаСерии = ПолучитьФорму(ИмяНеобходимойФормы); ");
	ФормаПоискаСерии.Открыть();
	
КонецПроцедуры
