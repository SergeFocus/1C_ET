// sza140423-0209  
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
// Процедура представляет обработчик события "Нажатие" кнопки
// "ОК" командной панели "ОсновныеДействияФормы".
// 
// Параметры:
//  Кнопка - <КнопкаКоманднойПанели>
//         - Кнопка, с которой связано данное событие (кнопка "ОК").
// 
&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	
	Параметры.ПараметрыНастройки.Добавить(Модель,     "Модель");
	Параметры.ПараметрыНастройки.Добавить(Порт,       "Порт");
	Параметры.ПараметрыНастройки.Добавить(Скорость,   "Скорость");
	Параметры.ПараметрыНастройки.Добавить(Четность,   "Четность");
	Параметры.ПараметрыНастройки.Добавить(БитыДанных, "БитыДанных");
	Параметры.ПараметрыНастройки.Добавить(СтопБиты,    "СтопБиты");

	ОчиститьСообщения();
	Закрыть(КодВозвратаДиалога.ОК);

КонецПроцедуры

// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере()

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Порт", Порт);
	времПараметрыУстройства.Вставить("Скорость", Скорость);
	времПараметрыУстройства.Вставить("Четность", 0);
	времПараметрыУстройства.Вставить("БитыДанных", 8);
	времПараметрыУстройства.Вставить("СтопБиты", 1);
	Если МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ПолучитьВерсиюДрайвера",
	                                                               ВходныеПараметры,
	                                                               ВыходныеПараметры,
	                                                               Идентификатор,
	                                                               времПараметрыУстройства) Тогда
		Драйвер = ВыходныеПараметры[0];
		Версия  = ВыходныеПараметры[1];
	Иначе
		Драйвер = ВыходныеПараметры[2];
		Версия  = НСтр("ru='Не определена'");
	КонецЕсли;

	Элементы.Драйвер.ЦветТекста = ?(Драйвер = НСтр("ru='Не установлен'"), ЦветОшибки, ЦветТекста);
	Элементы.Версия.ЦветТекста  = ?(Версия  = НСтр("ru='Не определена'"), ЦветОшибки, ЦветТекста);

	Элементы.УстановитьДрайвер.Доступность = Не (Драйвер = НСтр("ru='Установлен'"));

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

// Процедура - обработчик события "Перед открытием" формы.
// 
// Параметры:
//  Отказ                - <Булево>
//                       - Признак отказа от открытия формы. Если в теле
//                         процедуры-обработчика установить данному параметру
//                         значение ИСТИНА, открытие формы выполнено не будет.
//                         Значение по умолчанию: ЛОЖЬ 
// 
//  СтандартнаяОбработка - <Булево>
//                       - В данный параметр передается признак выполнения
//                         стандартной (системной) обработки события. Если в
//                         теле процедуры-обработчика установить данному
//                         параметру значение ЛОЖЬ, стандартная обработка
//                         события производиться не будет. Отказ от стандартной
//                         обработки не отменяет открытие формы.
//                         Значение по умолчанию: ИСТИНА 
// 
&НаКлиенте
Процедура ПриОткрытии(Отказ)                                                                    // ПРИ ОТКРЫТИИ	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	ОбновитьИнформациюОДрайвере();
	УстановитьДоступностьЭлементов();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест"
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Параметры.Свойство("Идентификатор", Идентификатор);
	Заголовок = НСтр("ru='ДП'") + " """ + Строка(Идентификатор) + """";

	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;

	СпПорт = Элементы.Порт.СписокВыбора;
	Для Номер = 1 По 32 Цикл
		СпПорт.Добавить(Номер, "COM" + Формат(Номер, "ЧЦ=2; ЧДЦ=0; ЧН=0; ЧГ=0"));
	КонецЦикла;
	
	СпМодель = Элементы.Модель.СписокВыбора;
	СпМодель.Добавить("Spark-PD-2001");

	СпСкорость = Элементы.Скорость.СписокВыбора;
	СпСкорость.Добавить(9600,   "9600");
    СпСкорость.Добавить(19200,  "19200");
	СпСкорость.Добавить(57600,  "57600");
	СпСкорость.Добавить(115200, "115200");
	
	СпЧетность = Элементы.Четность.СписокВыбора;
	СпЧетность.Добавить(0, НСтр("ru='Нет'"));
	СпЧетность.Добавить(1, НСтр("ru='Нечетность'"));
	СпЧетность.Добавить(2, НСтр("ru='Четность'"));
	СпЧетность.Добавить(3, НСтр("ru='Установлен'"));
	СпЧетность.Добавить(4, НСтр("ru='Сброшен'"));

	СпБитыДанных = Элементы.БитыДанных.СписокВыбора;
	СпБитыДанных.Добавить(7, "7 бит");
	СпБитыДанных.Добавить(8, "8 бит");

	СпСтопБиты = Элементы.СтопБиты.СписокВыбора;
	СпСтопБиты.Добавить(1, "1 бит");
	СпСтопБиты.Добавить(2, "2 бита");
	
	времМодель     = Неопределено;
	времПорт       = Неопределено;
	времСкорость   = Неопределено;
	времЧетность   = Неопределено;
	времБитыДанных = Неопределено;
	времСтопБиты   = Неопределено;
	
	Параметры.Свойство("Модель",          времМодель);
	Параметры.Свойство("Порт",            времПорт);
	Параметры.Свойство("Скорость",        времСкорость);
	Параметры.Свойство("Четность",        времЧетность);
	Параметры.Свойство("БитыДанных",      времБитыДанных);
	Параметры.Свойство("СтопБиты",        времСтопБиты);
	
	Модель          = ?(времМодель          = Неопределено, "Spark-PD-2001", времМодель);
	Порт            = ?(времПорт            = Неопределено,               1, времПорт);
	Скорость        = ?(времСкорость        = Неопределено,            9600, времСкорость);
	Четность        = ?(времЧетность        = Неопределено,               0, времЧетность);
	БитыДанных      = ?(времБитыДанных      = Неопределено,               7, времБитыДанных);
	СтопБиты        = ?(времСтопБиты        = Неопределено,               1, времСтопБиты);
	
	Элементы.ТестУстройства.Видимость    = (ПараметрыСеанса.РабочееМестоКлиента = Идентификатор.РабочееМесто);
	Элементы.УстановитьДрайвер.Видимость = (ПараметрыСеанса.РабочееМестоКлиента = Идентификатор.РабочееМесто);

КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)

	РезультатТеста = Неопределено;

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Порт", Порт);
	времПараметрыУстройства.Вставить("Скорость", Скорость);
	времПараметрыУстройства.Вставить("Четность", Четность);
	времПараметрыУстройства.Вставить("БитыДанных", БитыДанных);
	времПараметрыУстройства.Вставить("СтопБиты", СтопБиты);
	
	Результат = МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("CheckHealth",
	                                                                      ВходныеПараметры,
	                                                                      ВыходныеПараметры,
	                                                                      Идентификатор,
	                                                                      времПараметрыУстройства);
	ДополнительноеОписание = ?(ТипЗнч(ВыходныеПараметры) = Тип("Массив")
	                           И ВыходныеПараметры.Количество() >= 2,
	                           НСтр("ru = 'Дополнительное описание:'") + " " + ВыходныеПараметры[1],
	                           "");
	
	ТекстСообщения = ?(Результат,  НСтр("ru = 'Тест успешно выполнен.%ДополнительноеОписание%'"),
	                               НСтр("ru = 'Тест не пройден.%ДополнительноеОписание%'"));
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание),
	                             "", Символы.ПС + ДополнительноеОписание));
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементов()

	Элементы.Порт.Доступность       = ИСТИНА;
	Элементы.Скорость.Доступность   = ИСТИНА;
	Элементы.Четность.Доступность   = ИСТИНА;
	Элементы.БитыДанных.Доступность = ИСТИНА;
	Элементы.СтопБиты.Доступность   = ИСТИНА;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДрайвер(Команда)

	МенеджерОборудованияКлиент.УстановитьДрайвер(Идентификатор);
	ОбновитьИнформациюОДрайвере();

КонецПроцедуры



