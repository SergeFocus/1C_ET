// sza150523-0213
// sza150424-1736 
// sza150216-0210 
// sza141228-1420 
// sza141223-2051 
// sza141124-0008 
// sza140916-0319
// sza140914-1843
// sza140717-0246 
// sza140703-1740  заголовок счета
// sza140618-1714  
// sza130909-0305 : 

&НаКлиенте
Процедура Англичанин(Команда)
	НаборКонстант.ЯзыкПечатныхФорм = ПредопределенноеЗначение("Справочник.Языки.English");
	ВыбралиЯзык();
КонецПроцедуры

&НаКлиенте
Процедура БлокироватьИзмененияУсловийДоговораЕслиОнУжеУказанВДокументахПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура БлокироватьКарточкуНоменклатурыПослеУказанияЕеВДокументахПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляВыполненияРаботПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляДвиженияДенегПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляИнвентаризацииПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляКомплектацийПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляОказанияУслугЗаВремяПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляПеремещенияПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляПоступленияПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляРасходаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиДополнительнуюИнформациюДляУстановкиЦенПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетВалютПриИзменении(Элемент)
	
	ОбщийМодульКлиент.УстановитьЗначениеПараметраСеанса("ВестиУчетВалютВСеансе", НаборКонстант.ВестиУчетВалют);
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетДвиженияДенегПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетДенегВНесколькихХранилищахПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетЗаказовКлиентовПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетЗаказовПоставщикамПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетИнформацииОДоставкеВДокументахПоступленияПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетИнформацииОДоставкеВДокументахРасходаПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетНоменклатурыВРазрезеНоменклатурныхГруппПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетОказанияУслугЗаВремяПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетОказанияУслугЗаВремяСОпределеннымиПозициямиНомерамиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетОплатПоОтдельнымЗаказамПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетОтдельныхДоговоровСКонтрагентамиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПлановыхПоказателейПродажПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПоКлиентамПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.РазмерСкидкиНаДатаРождения.Видимость = НаборКонстант.ИспользоватьСкидки и НаборКонстант.ВестиУчетПоКлиентам;
	
	Если НЕ НаборКонстант.ВестиУчетПоКлиентам
		И НЕ НаборКонстант.ВестиУчетПоПоставщикам Тогда
		
		НаборКонстант.ВестиУчетОтдельныхДоговоровСКонтрагентами = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПоПоставщикамПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	
	Если НЕ НаборКонстант.ВестиУчетПоКлиентам
		И НЕ НаборКонстант.ВестиУчетПоПоставщикам Тогда
		
		НаборКонстант.ВестиУчетОтдельныхДоговоровСКонтрагентами = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПоСкладамПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПроизводителейНоменклатурыПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетРазмеровИВесаТоваровПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетРегионовПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетСерийНоменклатурыПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.ШтрихКодомМожетВыступатьСерияИлиКодПродукта.Видимость = НаборКонстант.ИспользоватьШтрихКоды И НаборКонстант.ВестиУчетСерийНоменклатуры;
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетСобственныхЮридическихЛицПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетСредствПредприятияПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВидСобытийПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВидСобытийПоУмолчанию), 2);
КонецПроцедуры

&НаКлиенте
Процедура ВидЦенДляРеализацииНаРабочемМестеОператораКассыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВидЦенРасходованияПоУмолчаниюПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(НаборКонстант.ВидЦенРасходованияПоУмолчанию) Тогда
		НаборКонстант.РеализаторНеМожетМенятьЦены = ЛОЖЬ;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВключитьМеханизмПодбораНоменклатурыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВПриходномДокументеНеЗаполнятьЗакупочнуюЦенуПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВторойВидЦенДляЭтикеткиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВторойВидЦенДляЭтикетки), 2);
КонецПроцедуры

&НаКлиенте
Процедура ВыбралиЯзык()
	
	Элементы.ГруппаПисателей.Видимость = НЕ ЗначениеЗаполнено(НаборКонстант.ЯзыкПечатныхФорм);
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Язык интерфейса по-умолчанию") + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЯзыкПечатныхФорм), 2);
	ОбщийМодульТекстСервер.ЗагрузитьТекстыОпределенногоЯзыкаИзМакета(НаборКонстант.ЯзыкПечатныхФорм, ИСТИНА);
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиДополнительнуюСтрокуЭтикеткиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВывестиДополнительнуюСтрокуЭтикетки), 2);
КонецПроцедуры

&НаКлиенте
Процедура ВывестиТекущийКурсВЗаголовкеПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВывестиТекущийКурсВЗаголовке), 2);
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьАртикулОтдельнойКолонкойПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВыводитьАртикулОтдельнойКолонкой), 2);	
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьВПечатиПеремещенияАртикулыИСуммыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВыводитьВПечатиПеремещенияАртикулыИСуммы), 2);
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьВРасходномДокументеАртикулВНаименованииЧерезЗапятуюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВыводитьВРасходномДокументеАртикулВНаименованииЧерезЗапятую), 2);
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьВРасходномДокументеЕдиницуИзмеренияОтдельнойКолонкойПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьВРасходномДокументеЧислоМестПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВыводитьВРасходномДокументеЧислоМест), 2);
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьДляНаборовНоменклатурыПоказыватьМаксимальныйОстатокПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВыводитьДляНаборовНоменклатурыПоказыватьМаксимальныйОстаток), 2);
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьКнопкуБыстройБлокировкиВоВсеФормыПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьСписокКлиентовСОтдельнымОкномГруппПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ВыводитьСписокКлиентовСОтдельнымОкномГрупп), 2);
КонецПроцедуры

&НаКлиенте
Процедура ГруппаНовыхКлиентовПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ГруппаНовыхКлиентовПоУмолчанию), 2);
КонецПроцедуры

&НаКлиенте
Процедура ДемонстрироватьОстатокТовараСУчетомДокВНепроведенныхПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДемонстрироватьПриВыбореНоменклатурыПриРасходованииИПеремещенииТолькоСОстаткамиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДетализироватьОтчетРуководителюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДляДокументовДемонстрироватьСамыеСвежиеСертификатыНоменклатурыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанныхПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФункцииПриемаИВыдачиОбъектаРаботДокументуВыполненияРаботПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДобавлятьИмяПользователяВЗаголовокОкнаПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ДобавлятьИмяПользователяВЗаголовокОкна), 2);
	
	ТекстЗаголовкаОкнаПрограммы = НаборКонстант.ТекстЗаголовкаОкнаПрограммы + ?(НаборКонстант.ДобавлятьИмяПользователяВЗаголовокОкна, " " + глТекущийПользователь, "");
	
	Если ЗначениеЗаполнено(ТекстЗаголовкаОкнаПрограммы) Тогда
		попытка
			Выполнить(" УстановитьЗаголовокКлиентскогоПриложения(ТекстЗаголовкаОкнаПрограммы); ");
		исключение // 8.2!
			попытка
				Выполнить(" УстановитьЗаголовокПриложения(ТекстЗаголовкаОкнаПрограммы); ");
			исключение
			КонецПопытки;
		КонецПопытки;
		ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поменял заголовок приложения"), 2);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавлятьТекущуюДатуИВремяВоВсеПечатныеФормы1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДоговорДолженБытьВыбранОбязательноИначеПрограммаВыберетДоговорПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяСтрокаЭтикеткиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ДополнительнаяСтрокаЭтикетки), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЕстьПринтерПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	ОбновитьИменаПринтеров();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЧтоНового()
	
	МакетЧтоНового = ПолучитьОбщийМакет("ЧтоНового");
	
	МассивНеобходимыхОбластей = Новый ТаблицаЗначений;
	МассивНеобходимыхОбластей.Колонки.Добавить("ИмяОбласти");
	
	Для Каждого Область Из МакетЧтоНового.Области Цикл
		
		ИмяОбласти = СтрЗаменить(Область.Имя, "Ш", "");
		Если НЕ ПустаяСтрока(ИмяОбласти) Тогда
			
			Попытка
				НомерОбласти = Число(ИмяОбласти);
				Если НомерОбласти > ЧислоВерсияПриИнсталляции Тогда
					СтрокаТаблицы = МассивНеобходимыхОбластей.Добавить();
					СтрокаТаблицы.ИмяОбласти = Область.Имя;
				КонецЕсли;
			Исключение
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ МассивНеобходимыхОбластей.Количество() = 0 Тогда
		
		Шапка = МакетЧтоНового.ПолучитьОбласть("Ш");
		ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
		ЧтоНового.Вывести(Шапка);
		Если НЕ ОбщийМодульПовтор.ПолнаяВерсия() Тогда
			ШапкаНеплатного = МакетЧтоНового.ПолучитьОбласть("ШП");	
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ШапкаНеплатного);
			ЧтоНового.Вывести(ШапкаНеплатного);
		КонецЕсли;
		
		МассивНеобходимыхОбластей.Сортировать("ИмяОбласти УБЫВ");
		Для Каждого ОбластьМассива Из МассивНеобходимыхОбластей Цикл
			Шапка = МакетЧтоНового.ПолучитьОбласть(ОбластьМассива.ИмяОбласти);
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ШапкаНеплатного);
			ЧтоНового.Вывести(Шапка);                   	               	
		КонецЦикла;
		
		Элементы.ЧтоНового.Видимость = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапретитьВозможностьРегистрироватьДополнительныеРасходыПриПриходованииТоваровПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЗапретитьИспользоватьОдинаковыеКодыИННПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЗапретитьНоменклатуруБезШтрихКодаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЗапретитьОдинаковыеНомераТелефоновУКлиентовИПоставщиковПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЗапретитьОдинаковыеНомераТелефоновУКлиентовИПоставщиков), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЗапретитьРазукомплектациюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ИндивидуальныйТекстВШапкеПечатнойФормыЗаказаКлиентаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ИндивидуальныйТекстВШапкеПечатнойФормыРасходаТовараПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДокументыВыполненияРаботПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДополнительнуюИнформациюДляОбъектовБазыДанныхПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДополнительныеУстаревшиеШтрихКодыНоменклатурыПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьИнструментРабочееМестоОператораКассыПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.ГруппаНастроекОператораКассы.Видимость = НаборКонстант.ИспользоватьИнструментРабочееМестоОператораКассы;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКомандуПечатиПочтовогоБланкаДляКонтрагентовПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКомандыИзмененийИЗаполненияДляТаблицыТоварыПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЛичныеНастройкиПользователейПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМеханизмЗаметокИНапоминанийПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМеханизмыПечатиНалоговойНакладнойДляУкраиныПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМеханизмыПечатиФормыТОРГ12ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтдельныеПоляАдресаИТелефонаВЗаказахКлиентовПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПечатьЭтикетокПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПодключаемоеОборудованиеПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРеквизитАртикулНоменклатурыПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.ПриИспользованииШтрихКодаЕслиНоменклатураНеНайденаПоШтрихКодуИскатьПоАртикулу.Видимость = НаборКонстант.ИспользоватьШтрихКоды И НаборКонстант.ИспользоватьПодключаемоеОборудование И НаборКонстант.ИспользоватьРеквизитАртикулНоменклатуры;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСкидкиПриИзменении(Элемент)
	Элементы.РазмерСкидкиНаДатаРождения.Видимость = НаборКонстант.ИспользоватьСкидки и НаборКонстант.ВестиУчетПоКлиентам;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСложныйМеханизмЦенПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьФИОКонтрагентовПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ИспользоватьФИОКонтрагентов), 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодомПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьШтрихКодыДляИдентификацииКонтрагентовПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьШтрихКодыПриИзменении(Элемент)
	
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.ШтрихКодомМожетВыступатьСерияИлиКодПродукта.Видимость = НаборКонстант.ИспользоватьШтрихКоды И НаборКонстант.ВестиУчетСерийНоменклатуры;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоНоменклатурыМожетБытьДробнымПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура Литр(Команда)
	
	НаборКонстант.НаименованиеОсновнойЕдиницыИзмеренияПоУмолчанию = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("л.");
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил основную единицу измерения") + " " + + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Литр"), 2);
	
КонецПроцедуры

&НаКлиенте
Процедура МасштабМакетаЧекаВПроцентахОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
	НаборКонстант.МасштабМакетаЧекаВПроцентах = 100;
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.МасштабМакетаЧекаВПроцентах), 2);
	
КонецПроцедуры

&НаКлиенте
Процедура МасштабМакетаЧекаВПроцентахПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.МасштабМакетаЧекаВПроцентах), 2);
КонецПроцедуры

&НаКлиенте
Процедура Метр(Команда)
	
	НаборКонстант.НаименованиеОсновнойЕдиницыИзмеренияПоУмолчанию = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("м.");
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил основную единицу измерения") + " " + + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Метр"), 2);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеЕдиницыМестаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.НаименованиеЕдиницыМеста), 2);
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеОсновнойЕдиницыИзмеренияПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПринтераШтрихКодов1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НалогообложениеНДСПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.НалогообложениеНДСПоУмолчанию), 2);
КонецПроцедуры

&НаКлиенте
Процедура НеВыводитьНаПечатьДанныеОСкидкеПриПечатиРасходногоДокумента1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеВыводитьНаПечатьДанныеОСкидкеПриПечатиРасходногоДокументаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеИспользоватьПеремещениеТовараЧерезСкладТоварВПутиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеОтправлятьСтатистикуАвторуПрограммыПриПервомЗапускеИОбновленииПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеПоказыватьКомандуДобавленияНоменклатурыСКоличествомПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеПроверятьУникальностьШтрихКодаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеРегистрироватьЦеныЗаСчетДокументовПоступленияПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура НеСворачиватьТоварыПоКоличествуВоВсехДокументахПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеСворачиватьТоварыПоКоличествуПриПриходованииТовараПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеСообщатьОПополненииТовараИлиДенегПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура НеСпрашиватьПодтверждениеПриВыходеИзПрограммыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ОбводитьРамкамиТекстовыеПоляВФормахПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
	
	Если НЕ НаборКонстант.ОбводитьРамкамиТекстовыеПоляВФормах
		И НаборКонстант.РамкиТекстовыхПолейВФормахРазличногоЦвета Тогда
		
		НаборКонстант.РамкиТекстовыхПолейВФормахРазличногоЦвета = ЛОЖЬ;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИменаПринтеров()
	
	Элементы.СтрогоеИмяНефискальногоПринтераЧеков.СписокВыбора.Очистить();
	Элементы.НаименованиеПринтераШтрихКодов1.СписокВыбора.Очистить();
	Элементы.НаименованиеПринтераШтрихКодов.СписокВыбора.Очистить();
	
	ИмяПринтера = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Принтер по-умолчанию");
	Элементы.СтрогоеИмяНефискальногоПринтераЧеков.СписокВыбора.Добавить("ПринтерПоУмолчанию", ИмяПринтера);
	Элементы.НаименованиеПринтераШтрихКодов1.СписокВыбора.Добавить("ПринтерПоУмолчанию", ИмяПринтера);
	Элементы.НаименованиеПринтераШтрихКодов.СписокВыбора.Добавить("ПринтерПоУмолчанию", ИмяПринтера);
	
	#Если Клиент Тогда 
		Попытка
			КОМОбъект =  Новый COMОбъект ("WScript.Network");
			Принтеры =  КОМОбъект.EnumPrinterConnections();
			шшш = 0;
			Пока шшш < Принтеры.Count()-1 Цикл
				ИмяПринтера = СокрЛП(Принтеры.Item(шшш+1));
				Элементы.СтрогоеИмяНефискальногоПринтераЧеков.СписокВыбора.Добавить(ИмяПринтера, ИмяПринтера);
				Элементы.НаименованиеПринтераШтрихКодов1.СписокВыбора.Добавить(ИмяПринтера, ИмяПринтера);
				Элементы.НаименованиеПринтераШтрихКодов.СписокВыбора.Добавить(ИмяПринтера, ИмяПринтера);
				шшш = шшш + 2;
			КонецЦикла;
			КОМОбъект = Неопределено;
		Исключение
			// ВебКлиент        ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
	#КонецЕсли 
	
КонецПроцедуры

&НаКлиенте
Процедура ОдинДокументПриходаИлиРасходаТовараМожетБытьОформленДляНесколькихЗаказовПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ОсновноеХранилищеДенег1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьПланированиеВДокументеВыполненияРаботПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьКомандыСнизуПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ОтображатьКомандыСнизу), 2);
КонецПроцедуры

&НаКлиенте
Процедура ОтправлятьПечатьДокументовИСправочниковСразуНаПринтер1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЖурналДоУказаннойДаты(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ОчиститьЖурналДоУказаннойДатыЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Очистить журнал") + " " + ?(ЗначениеЗаполнено(ДатаГраницыОчисткиЖурнала), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("до") + " " + Формат(ДатаГраницыОчисткиЖурнала, "ДФ=dd.MM.yyyy"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("за весь период")) + "?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЖурналДоУказаннойДатыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОчиститьЖурналДоУказаннойДатыНаСервере(ДатаГраницыОчисткиЖурнала);	
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОчиститьЖурналДоУказаннойДатыНаСервере(ДатаГраницыОчисткиЖурналаБК)
	
	ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Очистил журнал событий") + ?(ЗначениеЗаполнено(ДатаГраницыОчисткиЖурналаБК), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(" по") + " " + ДатаГраницыОчисткиЖурналаБК, ""), 2);
	
	Выборка = РегистрыСведений.ЖурналСобытий.Выбрать('00010101000000', ?(ЗначениеЗаполнено(ДатаГраницыОчисткиЖурналаБК), ДатаГраницыОчисткиЖурналаБК, КонецГода(ОбщийМодульСервисСервер.ПользователяТекущаяДата())));
	Пока Выборка.Следующий() Цикл
		Выборка.ПолучитьМенеджерЗаписи().Удалить();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ТекущаяСтраница = Элементы.ГруппаСтраниц.ТекущаяСтраница;
	СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
	СтраницаПанели  = СтраницыПанели.Индекс(ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьТекущиеИтоги(Команда)
	
	состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Пересчет итогов регистров.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
	ПересчитатьТекущиеИтогиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьТекущиеИтогиНаСервере()
	
	Для Каждого Рег Из Метаданные.РегистрыНакопления Цикл
		
		Если Рег.ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда
			
			РегистрыНакопления[Рег.Имя].ПересчитатьТекущиеИтоги();
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечататьРегламентированныйДокументРасходнойНакладнойПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПечататьЧекПриИзменении(Элемент)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
	Элементы.СтрогоеИмяНефискальногоПринтераЧеков.Видимость = НаборКонстант.ПечататьЧек;
	Если НаборКонстант.ПечататьЧек
		И НаборКонстант.МасштабМакетаЧекаВПроцентах = 0 Тогда
		
		НаборКонстант.МасштабМакетаЧекаВПроцентах = 100;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПисьмоАвторуОбОшибкеИлиСПожеланием(Команда)
	ОткрытьФорму("ОбщаяФорма.ПисьмоАвтору");
КонецПроцедуры

&НаКлиенте
Процедура ПоведениеПрограммыПриРасходеТоваровБезОстаткаПриИзменении(Элемент)
	ПроверитьДатуОграничения();
КонецПроцедуры

&НаКлиенте
Процедура ПоддерживатьИныеЯзыкиКромеРусскогоПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ПодсветитьФонПолейПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПодсистемаИЭДемонстрироватьКомандыИмпортаИЭкспортаВСправочникахИДокументахПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ПодсистемаИЭИмпортЭкспортПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ПоискИУдалениеПомеченныхЭлементовИДокументов(Команда)
	ПоискИУдалениеПомеченныхЭлементовИДокументовНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПоискИУдалениеПомеченныхЭлементовИДокументовНаСервере()
	
	Попытка
		УстановитьМонопольныйРежим(ИСТИНА);
		Помеченные = НайтиПомеченныеНаУдаление();		
		
		ПомеченныеКоличество = Помеченные.Количество();
		Если НЕ ПомеченныеКоличество = 0 Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ЗаметкиИНапоминания.Ссылка,
			|	ЗаметкиИНапоминания.Причина
			|ИЗ Справочник.ЗаметкиИНапоминания КАК ЗаметкиИНапоминания
			|ГДЕ ЗаметкиИНапоминания.СвязаноС = &Причина
			|	И ЗаметкиИНапоминания.Причина = &Причина";
			
			Для Каждого Помеченный Из Помеченные Цикл
				
				ПомеченныйСсылка = Помеченный.Ссылка;
				
				Отбор = Новый Структура;
				Отбор.Вставить("СсылкаНаОбъект", ПомеченныйСсылка);
				
				ЖурналСобытий = РегистрыСведений.ЖурналСобытий.Выбрать(,,Отбор);
				Пока ЖурналСобытий.Следующий() Цикл
					менз = ЖурналСобытий.ПолучитьМенеджерЗаписи();
					менз.Удалить();	
				КонецЦикла;
				
				
				Запрос.УстановитьПараметр("Причина", ПомеченныйСсылка);
				
				РезультатЗапроса = Запрос.Выполнить();
				Если НЕ РезультатЗапроса.Пустой() Тогда
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						
						ОбъектЗаметка = ВыборкаДетальныеЗаписи.ссылка.ПолучитьОбъект();
						Если ВыборкаДетальныеЗаписи.причина = ПомеченныйСсылка Тогда
							ОбъектЗаметка.Причина = Неопределено;
						Иначе
							ОбъектЗаметка.СвязаноС = Неопределено;
						КонецЕсли;
						ОбъектЗаметка.Записать();
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Найденные = 0;
			УдалитьОбъекты(Помеченные, ИСТИНА, Найденные);
			Для Каждого Ссылка Из Найденные Цикл
				СтрСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Объект не удален") + ": " + СокрЛП(Ссылка[0]);
				СтрСсылка = ", " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("используется в") + " " + СокрЛП(Ссылка[1]);
				Сообщить (СтрСообщения + СтрСсылка);
			КонецЦикла;
			УстановитьМонопольныйРежим(ЛОЖЬ);
			ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Очистил помеченные на удаление"), 2);
			ОбщегоНазначения.СообщитьПользователю(?(Найденные.Количество() = 0, "", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Остальные")) + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("помеченные на удаление объекты удалены. Всего") + ": " + ПомеченныеКоличество);
			
		Иначе
			ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Помеченных на удаление объектов нет."));
		КонецЕсли;
		
	Исключение
		ТекстОписаниеОшибки = ОписаниеОшибки();
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не удалось удалить помеченные на удаление объекты.") + Символы.ПС + ТекстОписаниеОшибки, СтатусСообщения.ОченьВажное);
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьКнопкуПечатиГарантийногоТалонаВРасходномДокументеПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьОкноВводаКурсовВалютКаждыйДеньПриЗапускеПрограммыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьПриСтартеСписокКлиентовУКоторыхСегодняЗавтраПослезавтраДеньРожденияПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьСуммуРасходногоДокументаТакжеВВалютеПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПользователямДоставлятьСообщенияНемедленноПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ПользователямДоставлятьСообщенияНемедленно), 2);	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПроверитьПодключениеОбработчикаОжидания();	
	ПроверитьВключитьВыключитьНапоминания();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьПовторноИспользуемыеЗначения();	
КонецПроцедуры

&НаКлиенте
Процедура ПочтовыйБланкА5ПовернутыйПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПочтовыйБланкАдресОтправительПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПочтовыйБланкИндексОтправительПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПочтовыйБланкТекстОтправительПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПочтовыйБланкТекстОценкаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПравовойСтатусПоставщикаПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПравовойСтатусПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПредлагатьВосстанавливатьВаловуюПриПроведенииПриходаЗаднимПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеДокументаТаблицыДанныхПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ПредставлениеДокументаТаблицыДанных), 2);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлятьСерииНоменклатурыВДокументахОтдельнымОкномПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлятьСправочникНоменклатурыБезБлокаГруппПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПриАвтоматическомПерепроведенииДокументовОтменитьПроверкиНаОтказПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                                  // ПРИ ЗАКРЫТИИ   	
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОбщийМодульСервисСервер.УстановитьПараметрыСеансаЭлементарнаяТорговля();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИспользованииШтрихКодаЕслиНоменклатураНеНайденаПоШтрихКодуИскатьПоАртикулуПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПримерФормулыДляАвтоНаименованиНоменклатурыНоменклатурнойГруппы(Команда)
	
	НаборКонстант.ФормулаАвтоНаименованияНоменклатурыНоменклатурнойГруппыПоУмолчанию = ПримерФормулыДляАвтоНаименованиНоменклатурыНоменклатурнойГруппыНаСервере();
	
КонецПроцедуры

&НаСервере
Функция   ПримерФормулыДляАвтоНаименованиНоменклатурыНоменклатурнойГруппыНаСервере()
	
	ПримерФормулы = " Номенклатура.НоменклатурнаяГруппа.Наименование + "" "" + Номенклатура.Производитель.Код + ""x"" + Формат(Цена, ""ЧЦ=9; ЧДЦ=0"") ";
	НаименованиеПример = "Наименование = Номенклатурная Группа, пробел,  Код Производителя, символ X, Цена";
	СсылкаНаПример = Справочники.ФормулыОписания.НайтиПоНаименованию(НаименованиеПример);
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаПример) Тогда
		
		НаименованиеПримерОбъект = Справочники.ФормулыОписания.СоздатьЭлемент();
		НаименованиеПримерОбъект.Родитель 		= Справочники.ФормулыОписания.ФормулыАвтоНаименованияНоменклатурыДляНоменклатурнойГруппы ;
		НаименованиеПримерОбъект.Наименование 	= НаименованиеПример;
		НаименованиеПримерОбъект.Формула 		= ПримерФормулы;
		НаименованиеПримерОбъект.Записать();
		СсылкаНаПример = НаименованиеПримерОбъект.Ссылка;
		
	КонецЕсли;
	Константы.ФормулаАвтоНаименованияНоменклатурыНоменклатурнойГруппыПоУмолчанию.Установить(СсылкаНаПример);
	
	Возврат СсылкаНаПример;
	
КонецФункции

&НаКлиенте
Процедура ПримерФормулыДляШтрихКода(Команда)
	
	НаборКонстант.ОсновнаяФормулаШтрихКодаНоменклатуры = установитьПримерФормулыДляШтрихКода();
	
КонецПроцедуры

&НаКлиенте
Процедура ПримерФормулыПреобразованияЦен(Команда)
	
	НаборКонстант.ОсновнаяФормулаПреобразованияЦен = ПримерФормулыПреобразованияЦенНаСервере();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция   ПримерФормулыПреобразованияЦенНаСервере()
	
	ПримерФормулы = " Цел(Цел(Цена + 1) * 2.5) ";
	НаименованиеПример = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Цена реализации") + " = (" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Целое число от Цены закупки") + " + 1) * 2.5 ";
	СсылкаНаПример = Справочники.ФормулыОписания.НайтиПоНаименованию(НаименованиеПример);
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаПример) Тогда
		
		НаименованиеПримерОбъект = Справочники.ФормулыОписания.СоздатьЭлемент();
		НаименованиеПримерОбъект.Родитель 		= Справочники.ФормулыОписания.ФормулыПреобразованияЦен ;
		НаименованиеПримерОбъект.Наименование 	= НаименованиеПример;
		НаименованиеПримерОбъект.Формула 		= ПримерФормулы;
		НаименованиеПримерОбъект.Записать();
		СсылкаНаПример = НаименованиеПримерОбъект.Ссылка;
		
	КонецЕсли;
	Константы.ОсновнаяФормулаПреобразованияЦен.Установить(СсылкаНаПример);
	
	Возврат СсылкаНаПример;
	
КонецФункции

&НаКлиенте
Процедура ПримерФормулыТекстаЭтикетки(Команда)
	НаборКонстант.ОсновнаяФормулаТекстаЭтикетки = ПримерФормулыТекстаЭтикеткиНаСервере();	
КонецПроцедуры

&НаСервереБезКонтекста
Функция   ПримерФормулыТекстаЭтикеткиНаСервере()
	
	ПримерФормулы = " Номенклатура.Наименование + "" "" + Лев(Номенклатура.НоменклатурнаяГруппа.Код, 2) + Лев(Номенклатура.Производитель.Код, 2) + ""x"" + Формат(Цена, ""ЧЦ=9; ЧДЦ=0"") ";
	НаименованиеПример = "Текст = Наименование, пробел,  Код Номенклатурной Группы, Код Производителя, символ X, Цена";
	СсылкаНаПример = Справочники.ФормулыОписания.НайтиПоНаименованию(НаименованиеПример);
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаПример) Тогда
		
		НаименованиеПримерОбъект = Справочники.ФормулыОписания.СоздатьЭлемент();
		НаименованиеПримерОбъект.Родитель 		= Справочники.ФормулыОписания.ФормулыТекстаЭтикетки ;
		НаименованиеПримерОбъект.Наименование 	= НаименованиеПример;
		НаименованиеПримерОбъект.Формула 		= ПримерФормулы;
		НаименованиеПримерОбъект.Записать();
		СсылкаНаПример = НаименованиеПримерОбъект.Ссылка;
		
	КонецЕсли;
	Константы.ОсновнаяФормулаТекстаЭтикетки.Установить(СсылкаНаПример);
	
	Возврат СсылкаНаПример;
	
КонецФункции

&НаКлиенте
Процедура ПриОтказеВДоступеВыводитьСообщениеПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                         // ПРИ ОТКРЫТИИ 
	
	Если НЕ Отказ Тогда
		Если НЕ глКонфигурацияВРаботе Тогда
			Элементы.ЗаказыИПланыПродаж.Видимость = ЛОЖЬ;
			Элементы.Изображения.Видимость        = ЛОЖЬ;
			Элементы.СотрудникРеализацииПоУмолчанию.Видимость   = ЛОЖЬ;
			Элементы.ВестиУчетСерийНоменклатуры.Видимость 		= ЛОЖЬ;
			Элементы.УчетСобственныхЮридическихЛиц.Видимость    = ЛОЖЬ;
			Элементы.СПодключаемоеОборудование.Видимость 		= ЛОЖЬ;
			Элементы.ГруппаУчетаСредствПредприятия.Видимость    = ЛОЖЬ;
			Элементы.ВключитьМеханизмПодбораНоменклатуры.Видимость 		   = ЛОЖЬ;
			Элементы.ШтрихКодомМожетВыступатьСерияИлиКодПродукта.Видимость = ЛОЖЬ;
			Элементы.УстанавливатьШтрихКодИзКарточкиНоменклатуры.Видимость = ЛОЖЬ;		
			Элементы.ВестиДополнительнуюИнформациюДляКомплектаций.Видимость= ЛОЖЬ;
			Элементы.ИспользоватьШтрихКодыДляИдентификацииКонтрагентов.Видимость 			 = ЛОЖЬ;
			Элементы.ПредставлятьСерииНоменклатурыВДокументахОтдельнымОкном.Видимость 		 = ЛОЖЬ;
			Элементы.ВестиУчетОказанияУслугЗаВремяСОпределеннымиПозициямиНомерами.Видимость  = ЛОЖЬ;		
			Элементы.ОстанавливатьСканированиеВДокументеПриНеНайденнойНоменклатуре.Видимость = ЛОЖЬ;		
		КонецЕсли;
		
		ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);		
		#Если НЕ ВебКлиент Тогда
			ЗаполнитьЧтоНового();
		#КонецЕсли
		
		Если ЗначениеЗаполнено(СтраницаПанели)Тогда
			
			попытка
				СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
				ТекущаяСтраница = СтраницыПанели.получить(СтраницаПанели);
				Элементы.ГруппаСтраниц.ТекущаяСтраница = ТекущаяСтраница;
			Исключение
			КонецПопытки;
			
		КонецЕсли;	
		
		Элементы.ГруппаНастроекОператораКассы.Видимость = НаборКонстант.ИспользоватьИнструментРабочееМестоОператораКассы;
		
		СменитьВидОкнаНастроекНаСервере();
		ОбновитьИменаПринтеров();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000150", ЭтаФорма, Отказ, );	
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		Если НЕ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьШтрихКоды")
			ИЛИ НЕ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом") Тогда
			
			Элементы.ФормулыШК.Видимость = ЛОЖЬ;
		КонецЕсли;
		
		ПолнаяВерсия = ОбщийМодульПовтор.ПолнаяВерсия();
		
		Если НЕ ОбщийМодульТекстСервер.ТекущийЯзыкРусский() Тогда
			Если НЕ ПолнаяВерсия Тогда
				Элементы.ДекорацияЛого.Видимость   = ЛОЖЬ;
				Элементы.ДекорацияЛогоET.Видимость = ЛОЖЬ;
				Элементы.ДекорацияЛогоETFree.Видимость = ИСТИНА;
				Элементы.ДекорацияЛогоФри.Видимость = ЛОЖЬ;
			Иначе
				Элементы.ДекорацияЛого.Видимость   = ЛОЖЬ;
				Элементы.ДекорацияЛогоET.Видимость = ИСТИНА;
				Элементы.ДекорацияЛогоETFree.Видимость = ЛОЖЬ;
				Элементы.ДекорацияЛогоФри.Видимость = ЛОЖЬ;
			КонецЕсли;
		Иначе
			Если НЕ ПолнаяВерсия Тогда
				Элементы.ДекорацияЛого.Видимость   = ЛОЖЬ;
				Элементы.ДекорацияЛогоET.Видимость = ЛОЖЬ;
				Элементы.ДекорацияЛогоETFree.Видимость = ЛОЖЬ;
				Элементы.ДекорацияЛогоФри.Видимость = ИСТИНА;
			Иначе
				Элементы.ДекорацияЛого.Видимость   = ИСТИНА;
				Элементы.ДекорацияЛогоET.Видимость = ЛОЖЬ;
				Элементы.ДекорацияЛогоETFree.Видимость = ЛОЖЬ;
				Элементы.ДекорацияЛогоФри.Видимость = ЛОЖЬ;
			КонецЕсли;
		КонецЕсли;
		
		ТекущийПользователь 				= ПараметрыСеанса.ТекущийПользователь;
		Элементы.ВерсияПрограммы.Заголовок 	= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Версия") + ": " + Метаданные.Версия;	
		Элементы.ГруппаПисателей.Видимость  = НЕ ЗначениеЗаполнено(НаборКонстант.ЯзыкПечатныхФорм);
		Элементы.ОписаниеПрограммыЭлементарнаяТорговля.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Описание программы v") + Метаданные.Версия;
		
		НаименованиеНашегоРегиона = ПредопределенноеЗначение("Справочник.Регионы.НашРегион").Наименование ;
		
		Элементы.МеханизмЛьготнойЦены.Видимость = ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВключитьМеханизмЛьготнойЦеныПоКоличествуПриПродаже");
		
		ВерсияПриИнсталляции = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВерсияПриИнсталляции");
		Попытка
			ЧислоВерсияПриИнсталляции = Число(Лев(ВерсияПриИнсталляции, 6));
		Исключение
			ЧислоВерсияПриИнсталляции = 0;
		КонецПопытки;
		
		Элементы.ЧтоНового.Видимость 	= ЛОЖЬ;		
		РегистрационныйКод 				= ОбщийМодульСервисСервер.РегистрационныйКод();		
		РабочаяДата 					= ОбщийМодульПовтор.ПолучитьПараметрСеанса("РабочаяДата");
		Элементы.СтрогоеИмяНефискальногоПринтераЧеков.Видимость = НаборКонстант.ПечататьЧек;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьДатуОграничения() 
	
	Если НЕ ЗначениеЗаполнено(НаборКонстант.ДатаСКоторойДействуетПоведениеОбОтрицательныхОстаткахТовара) 
		И НЕ НаборКонстант.ПоведениеПрограммыПриРасходеТоваровБезОстатка = Перечисления.ИгнорироватьРазрешитьЗапретить.Игнорировать Тогда
		
		НаборКонстант.ДатаСКоторойДействуетПоведениеОбОтрицательныхОстаткахТовара = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры // ПроверитьДатуОграничения

&НаКлиенте
Процедура ПроверитьНаличиеНовойВерсииКонфигурации(Команда)
	
	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет связь с сервером конфигурации.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Проверка наличия обновления"));
	ОбщегоНазначения.СообщитьПользователю(ПроверитьНаличиеНовойВерсииКонфигурацииНаСервере());
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция   ПроверитьНаличиеНовойВерсииКонфигурацииНаСервере()
	
	ВопросКСерверу = ОбщийМодульСервер.ЕстьНоваяВерсияПрограммы(ИСТИНА);
	Если ВопросКСерверу = Неопределено Тогда
		Возврат ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Нет связи с сервером автора конфигурации.");
		
	ИначеЕсли НЕ ПустаяСтрока(ВопросКСерверу.ВерсияНаСайте) Тогда
		Возврат ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("На сайте") + " http://www.ELTR.od.ua " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Доступна новая версия конфигурации") + ": " + ВопросКСерверу.ВерсияНаСайте + ?(ЗначениеЗаполнено(ВопросКСерверу.ПолныйТекстВерсии), Символы.ПС + ВопросКСерверу.ПолныйТекстВерсии, "");
		
	Иначе
		Возврат ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ваша версия конфигурации актуальная.");
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьФормулуАвтоНаименованияНоменклатуры(Команда)
	ПроверитьФормулуАвтоНаименованияНоменклатурыНаСервере(НаборКонстант.ФормулаАвтоНаименованияНоменклатурыНоменклатурнойГруппыПоУмолчанию);
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуАвтоНаименованияНоменклатурыНаСервере(ФормулаАвтоНаименованияНоменклатурыНоменклатурнойГруппыПоУмолчанию)
	
	Если ЗначениеЗаполнено(ФормулаАвтоНаименованияНоменклатурыНоменклатурнойГруппыПоУмолчанию) Тогда
		ОбщийМодульСервер.ПроверитьФормулу(ФормулаАвтоНаименованияНоменклатурыНоменклатурнойГруппыПоУмолчанию.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуТекстаЭтикетки(Команда)
	ПроверитьФормулуТекстаЭтикеткиНаСервере(НаборКонстант.ОсновнаяФормулаТекстаЭтикетки);
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуТекстаЭтикеткиНаСервере(ОсновнаяФормулаТекстаЭтикетки)
	
	Если ЗначениеЗаполнено(ОсновнаяФормулаТекстаЭтикетки) Тогда
		ОбщийМодульСервер.ПроверитьФормулу(ОсновнаяФормулаТекстаЭтикетки.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуФормированияЦены(Команда)
	ПроверитьФормулуФормированияЦеныНаСервере(НаборКонстант.ОсновнаяФормулаПреобразованияЦен);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверитьФормулуФормированияЦеныНаСервере(ОсновнаяФормулаПреобразованияЦен)
	
	Если ЗначениеЗаполнено(ОсновнаяФормулаПреобразованияЦен) Тогда
		ОбщийМодульСервер.ПроверитьФормулу(ОсновнаяФормулаПреобразованияЦен.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуШтрихКода(Команда)
	ПроверитьФормулуШтрихКодаНаСервере(НаборКонстант.ОсновнаяФормулаШтрихКодаНоменклатуры);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверитьФормулуШтрихКодаНаСервере(ОсновнаяФормулаШтрихКодаНоменклатуры)
	
	Если ЗначениеЗаполнено(ОсновнаяФормулаШтрихКодаНоменклатуры) Тогда
		ОбщийМодульСервер.ПроверитьФормулу(ОсновнаяФормулаШтрихКодаНоменклатуры.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверятьНаличиеНовойВерсииКонфигурацииПриЗапускеПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РабочаяДата1ПриИзменении(Элемент)
	
	ОбщийМодульКлиент.УстановитьЗначениеПараметраСеанса("РабочаяДата", РабочаяДата);
	
	Если ЗначениеЗаполнено(РабочаяДата) Тогда
		Выполнить(" УстановитьКраткийЗаголовокПриложения(Формат(РабочаяДата, ""ДФ='dd.MM.yy ЧЧ:мм'"")); ");		
	Иначе
		Выполнить(" УстановитьКраткийЗаголовокПриложения(""""); ");		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерСкидкиНаДатаРожденияПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РазмерШрифтаДополнительнойСтрокиЭтикеткиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.РазмерШрифтаДополнительнойСтрокиЭтикетки), 2);
КонецПроцедуры

&НаКлиенте
Процедура РазмещениеДополнительнойСтрокиЭтикеткиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.РазмещениеДополнительнойСтрокиЭтикетки), 2);
КонецПроцедуры

&НаКлиенте
Процедура РазмещениеТекстаСШтрихКодомНаЭтикетке1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьМеханизмРегистрацииРеализацииЗаСчетПериодическойИнвентаризацииСкладаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РамкиТекстовыхПолейВФормахРазличногоЦветаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РегистрироватьВидЦенПриПоступленииПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.РегистрироватьВидЦенПриПоступлении), 2);
КонецПроцедуры

&НаКлиенте
Процедура РегулироватьКоличествоНоменклатурыПоУмолчаниюДляУпаковок1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РегулироватьКоличествоНоменклатурыПоУмолчаниюДляУпаковокПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьАдресИТелефонКлиентаПрямоВДокументахРеализацииПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура РекомендуемыйМинимальныйОстатокТовараПриИзменении(Элемент)
	
	Если НаборКонстант.РекомендуемыйМинимальныйОстатокТовара = 0 Тогда
		НаборКонстант.ДатаСКоторойДействуетПоведениеОРекомендуемомОстаткеТовара = '00010101000000' ;
	Иначе
		НаборКонстант.ДатаСКоторойДействуетПоведениеОРекомендуемомОстаткеТовара = ОбщийМодульКлиент.ПользователяТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Русский(Команда)
	НаборКонстант.ЯзыкПечатныхФорм = ПредопределенноеЗначение("Справочник.Языки.Русский");
	ВыбралиЯзык();
КонецПроцедуры

&НаКлиенте
Процедура СкладДляОбъектовКлиентаПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура СменаУсловийУчетаНоменклатуры(Команда)
	ОткрытьФорму("Обработка.СменаУсловийУчета.Форма");
КонецПроцедуры

&НаКлиенте
Процедура СменитьВидОкнаНастроек(Команда)
	
	ВидГоризонтальный = НЕ ВидГоризонтальный;
	СменитьВидОкнаНастроекНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СменитьВидОкнаНастроекНаСервере()
	
	Если ВидГоризонтальный Тогда
		Элементы.ГруппаСтраниц.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;
	Иначе
		Элементы.ГруппаСтраниц.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСлеваГоризонтально;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздаватьГруппыНоменклатурыПоПервомуСловуИОтноситьКНимПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура СообщитьОСменеФункциональнойОпции(ЭлементЗдесь)
	
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + ЭлементЗдесь, 2);
	ЭтаФорма.Записать();
	ОбновитьИнтерфейс();
	
КонецПроцедуры // СообщитьОСменеФункциональнойОпции

&НаКлиенте
Процедура СообщатьОНеактуальностиВаловойИПредлагатьПерепроведениеПриВыходеПоследнегоПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьДоговораИзображениямиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьДокументыИзображениямиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьЗаметкиИзображениямиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьКлиентовИзображениямиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьНоменклатуруИзображениями1ПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьОрганизацииИзображениямиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьПоставщиковИзображениямиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьПроизводителейИзображениямиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СопровождатьСотрудниковИзображениямиПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникРеализацииПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура СрокОплатыВДняхДляДоговоровПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура СтраницаОбновленияКонфигурацииНажатие(Элемент)
	
	Если глВерсияПлатформы < 806010000 Тогда 
		Выполнить(" ЗапуститьПриложение(""http://www.ELTR.od.ua""); ");
		Иначе
	Выполнить(" НачатьЗапускПриложения(Неопределено, ""http://www.ELTR.od.ua""); ");	
КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтрогоеИмяНефискальногоПринтераЧековОчистка(Элемент, СтандартнаяОбработка)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.СтрогоеИмяНефискальногоПринтераЧеков), 2);
КонецПроцедуры

&НаКлиенте
Процедура СтрогоеИмяНефискальногоПринтераЧековПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ТекстВПодвалеДокументовПриПечати1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ТекстВШапкеДокументовПриПечати1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ТекстЗаголовкаОкнаПрограммыПриИзменении(Элемент)
	
	ТекстЗаголовкаОкнаПрограммы = НаборКонстант.ТекстЗаголовкаОкнаПрограммы + ?(НаборКонстант.ДобавлятьИмяПользователяВЗаголовокОкна, " " + глТекущийПользователь, "");
	
	Если ЗначениеЗаполнено(ТекстЗаголовкаОкнаПрограммы) Тогда
		попытка
			Выполнить(" УстановитьЗаголовокКлиентскогоПриложения(ТекстЗаголовкаОкнаПрограммы); ");
		исключение // 8.2!
			попытка
				Выполнить(" УстановитьЗаголовокПриложения(ТекстЗаголовкаОкнаПрограммы); ");
			исключение
			КонецПопытки;
		КонецПопытки;
		ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поменял заголовок приложения"), 2);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстЗаголовкаСчетаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ТипРаботПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ТипРаботПоУмолчанию), 2);
КонецПроцедуры

&НаКлиенте
Процедура ТипШтрихКодовПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ТретийВидЦенДляФормулПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ТретийВидЦенДляФормул), 2);
КонецПроцедуры

&НаКлиенте
Процедура Украинец(Команда)
	НаборКонстант.ЯзыкПечатныхФорм = ПредопределенноеЗначение("Справочник.Языки.Украинский");
	ВыбралиЯзык();
КонецПроцедуры

&НаКлиенте
Процедура Упаковка(Команда)
	
	НаборКонстант.НаименованиеОсновнойЕдиницыИзмеренияПоУмолчанию = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("уп.");
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил основную единицу измерения") + " " + + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Упаковка"), 2);
	
КонецПроцедуры

&НаКлиенте
Процедура Услуга(Команда)
	
	НаборКонстант.НаименованиеОсновнойЕдиницыИзмеренияПоУмолчанию = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("усл.");
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил основную единицу измерения") + " " + + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Услуга"), 2);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугаЗаВремяПоУмолчаниюПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.УслугаЗаВремяПоУмолчанию), 2);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметрыПоУмолчанию(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("УстановитьПараметрыПоУмолчаниюЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы готовы установить первоначальные настройки?"), РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметрыПоУмолчаниюЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОткрытьФорму("ОбщаяФорма.УстановкаПервоначальныхНастроек");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция   УстановитьПримерФормулыДляШтрихКода() 
	
	ПримерФормулы = " СокрЛП(Номенклатура.НоменклатурнаяГруппа.Код) + Номенклатура.Производитель.Код + ""x"" + СокрЛП(Формат(Цена, ""ЧЦ=9; ЧДЦ=0"")) ";
	НаименованиеПример = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Штрих-код") + " = " + ПримерФормулы;
	СсылкаНаПример = Справочники.ФормулыОписания.НайтиПоНаименованию(НаименованиеПример);
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаПример) Тогда
		
		НаименованиеПримерОбъект = Справочники.ФормулыОписания.СоздатьЭлемент();
		НаименованиеПримерОбъект.Родитель 		= ПредопределенноеЗначение("Справочник.ФормулыОписания.ФормулыШтрихКодаНоменклатуры");
		НаименованиеПримерОбъект.Наименование 	= НаименованиеПример;
		НаименованиеПримерОбъект.Формула 		= ПримерФормулы;
		НаименованиеПримерОбъект.Записать();
		СсылкаНаПример = НаименованиеПримерОбъект.Ссылка;
		
	КонецЕсли;
	
	Константы.ОсновнаяФормулаШтрихКодаНоменклатуры.Установить(СсылкаНаПример);
	
	Возврат СсылкаНаПример;
	
КонецФункции 

&НаКлиенте
Процедура ФорматЭтикетки1ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ФормулаДополнительнойСтрокиЭтикеткиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ФормулаДополнительнойСтрокиЭтикетки), 2);
КонецПроцедуры

&НаКлиенте
Процедура ФормулаНаименованияФайлаИзображенияПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ФормулаНаименованияФайлаИзображения), 2);
КонецПроцедуры

&НаКлиенте
Процедура ХранилищеДенегДляРабочегоМестаОператораКассыПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЧислоЗнаковПослеЗапятойДляКоличестваПриИзменении(Элемент)
	
	Если НаборКонстант.ЧислоЗнаковПослеЗапятойДляКоличества < 0 Тогда
		НаборКонстант.ЧислоЗнаковПослеЗапятойДляКоличества = 0;
	ИначеЕсли НаборКонстант.ЧислоЗнаковПослеЗапятойДляКоличества > 6 Тогда
		НаборКонстант.ЧислоЗнаковПослеЗапятойДляКоличества = 6;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихКодомМожетВыступатьСерияИлиКодПродуктаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура Штука(Команда)
	
	НаборКонстант.НаименованиеОсновнойЕдиницыИзмеренияПоУмолчанию = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("шт.");
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил основную единицу измерения") + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Штука"), 2);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПользовательПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЯзыкПечатныхФормПриИзменении(Элемент)
	ВыбралиЯзык();	
КонецПроцедуры
