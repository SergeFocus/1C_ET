//sza140517-0256  
//sza131023-0021 : 
&НаСервере
Процедура ВыгрузитьНаСервере(АдресФайла)		
	Результат.Записать(АдресФайла, ТипФайлаТабличногоДокумента.XLS97);	
КонецПроцедуры

&НаКлиенте
Процедура ОправитьПоEMAILКонтрагенту(Команда)
	
	Если Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что следует отправить Контрагенту") + ": " + Контрагент + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(" этот документ?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		
		ТекстСопровождения = "";
		ВвестиСтроку(ТекстСопровождения, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите текст сопровождающий сообщение") + ": ", 1020, ИСТИНА);
		
		ОправитьПоEMAILКонтрагентуНаСервере(ТекстСопровождения);	  	
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОправитьПоEMAILКонтрагентуНаСервере(Знач ТекстСопровождения)
	
	ОбщийМодульСервисСервер.ПисьмоКонтрагенту(Контрагент, Результат, ТекстСопровождения, НаименованиеДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоEMAILРуководителю(Команда)
	
	Если Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что следует отправить Руководителю?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		
		ТекстСопровождения = "";
		ВвестиСтроку(ТекстСопровождения, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите текст сопровождающий сообщение") + ": ", 1020, ИСТИНА);
		
		ОтправитьПоEMAILРуководителюНаСервере(ТекстСопровождения);	  	
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьПоEMAILРуководителюНаСервере(Знач ТекстСопровождения)	
	ОбщийМодульСервисСервер.ПисьмоКонтрагенту(Неопределено, Результат, ТекстСопровождения, НаименованиеДокумента);	
КонецПроцедуры

&насервереБезКонтекста
функция   ПолучитьОтносительныйАдресНаСервере();	
	Возврат ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПодсистемаИЭИмпортЭкспортОтносительныйАдресФайлов");	
КонецФункции

&НаКлиенте
Процедура ПриЗакрытии()                                        // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                   // ПРИ ОТКРЫТИИ
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	ПроверитьНеобходимостьДобавитьДату();
	
	Если параметры.СразуНаПечать
		ИЛИ ОбщийМодульКлиент.ПолучитьЗначениеНастройкиИлиКонстанты("ОтправлятьПечатьДокументовИСправочниковСразуНаПринтер") Тогда
		
		результат.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
	КонецЕсли;
	
	Если параметры.СразуЗакрыть Тогда
		отказ = ИСТИНА;
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьТекущуюСредуВыполнения() = 5 Тогда
		Элементы.ФормаГруппаНеДляВебКлиента.Видимость = ЛОЖЬ;
	КонецЕсли;
	
	Результат.КлючПараметровПечати = ВРЕГ(СтрЗаменить(ЭтаФорма.Заголовок, " ", ""));
	Результат.ИмяПараметровПечати = Результат.КлючПараметровПечати;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002100", ЭтаФорма, Отказ, );
	
	Если НЕ Отказ Тогда	
		Элементы.ФормаОправитьПоEMAILКонтрагенту.Видимость 	 = ЛОЖЬ;
		Элементы.ФормаОтправитьПоEMAILРуководителю.Видимость = ЛОЖЬ;
		
		ТабДок = параметры.ТабДок;
		Если НЕ ТабДок = Неопределено Тогда
			Результат.Вывести(ТабДок);
		КонецЕсли;
		
		Документ = параметры.Документ;
		Если ЗначениеЗаполнено(Документ) Тогда
			Контрагент = Документ.КлиентПоставщик;		
		Иначе
			Контрагент = Параметры.Контрагент;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Контрагент)
			И ЗначениеЗаполнено(Контрагент.ЭлектроннаяПочта)
			И НЕ ПустаяСтрока(ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ЭлектроннаяПочтаПользователь", ИСТИНА)) Тогда
			
			Элементы.ФормаОправитьПоEMAILКонтрагенту.Видимость 	 = ИСТИНА;
			Элементы.ФормаОтправитьПоEMAILРуководителю.Видимость = ИСТИНА;
			
		КонецЕсли;
		
		НаименованиеДокумента = параметры.НаименованиеДокумента;
		
		Если  ЗначениеЗаполнено(параметры.Документ)
			ИЛИ ЗначениеЗаполнено(Параметры.НаименованиеДокумента) Тогда
			
			Элементы.ГруппаКомандФормирования.Видимость = ЛОЖЬ;
		КонецЕсли;
		
		Элементы.ГруппаСуммВыделеныхЯчеек.Видимость = ЛОЖЬ;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьНеобходимостьДобавитьДату()
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ДобавлятьТекущуюДатуИВремяВоВсеПечатныеФормы") Тогда
		МакетДатыВремени = ПолучитьОбщийМакет("МакетДатыВремени");
		ТаблицаТекущейДатыВремени = МакетДатыВремени.ПолучитьОбласть("Ш");
		ТаблицаТекущейДатыВремени.Параметры.ТекущаяДатаИВремя = ТекущаяДата();
		результат.Вывести(ТаблицаТекущейДатыВремени);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетСуммыПоЯчейкам(ТабДок)
	
	СуммаЯчеек 		= 0;
	ВыделеноЯчеек 	= 0;
	КоличествоЧисел = 0;              
	
	СоответствиеЯчеек = Новый Соответствие;
	ОписаниеТипов = Новый ОписаниеТипов("Число");
	
	Для Каждого ВыделеннаяОбласть Из ТабДок.ВыделенныеОбласти Цикл 
		Для Индекс1 = ВыделеннаяОбласть.Лево По ВыделеннаяОбласть.Право Цикл 
			Для Индекс2 = ВыделеннаяОбласть.Верх По ВыделеннаяОбласть.Низ Цикл 
				
				Область = Результат.Область(Индекс2, Индекс1, Индекс2, Индекс1); 
				Значение = ОписаниеТипов.ПривестиЗначение(Область.Текст); 
				СоответствиеЯчеек.Вставить(Область.Имя, Значение); 
				ВыделеноЯчеек = ВыделеноЯчеек + 1;
				
			КонецЦикла; 
		КонецЦикла; 
	КонецЦикла;
	
	Для Каждого Ячейка Из СоответствиеЯчеек Цикл 
		Значение = Ячейка.Значение; 
		Если Значение <> 0 Тогда 
			СуммаЯчеек = СуммаЯчеек + Значение; 
			КоличествоЧисел = КоличествоЧисел + 1; 
		КонецЕсли; 
	КонецЦикла;
	
	Если КоличествоЧисел > 1 Тогда
		СреднееЗначение = СуммаЯчеек / КоличествоЧисел;
	Иначе
		СреднееЗначение = 0;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура РезультатПриАктивизацииОбласти(Элемент)
	
	РасчетСуммыПоЯчейкам(Результат);
	Элементы.ГруппаСуммВыделеныхЯчеек.Видимость = не КоличествоЧисел = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФайлФорматаExcel(Команда)
	
	АдресФайла = ПолучитьОтносительныйАдресНаСервере();
	
	ДиалогФильтр	 = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Файл Excel") + " (*.xls)|*.xls";
	ДиалогРасширение = "xls";
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбФайла.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите имя файла Excel");
	ДиалогВыбФайла.ПолноеИмяФайла			=	АдресФайла;
	ДиалогВыбФайла.Фильтр					=	ДиалогФильтр;
	ДиалогВыбФайла.Расширение				=	ДиалогРасширение;
	ДиалогВыбФайла.МножественныйВыбор		=	ЛОЖЬ;
	ДиалогВыбФайла.ПредварительныйПросмотр	=	ЛОЖЬ;
	ДиалогВыбФайла.ИндексФильтра			=	0;
	
	Если ДиалогВыбФайла.Выбрать() Тогда
		АдресФайла = ДиалогВыбФайла.ПолноеИмяФайла;
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет Выгрузка данных.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
		
		ВыгрузитьНаСервере(АдресФайла);
		
		ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выгрузил данные в файл") + ": " + АдресФайла, 2);
	КонецЕсли; 
	
КонецПроцедуры



