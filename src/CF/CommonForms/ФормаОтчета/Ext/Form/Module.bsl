// sza140517-0256
// sza131023-0021 :

&НаКлиенте
Процедура ВыводНадписиПоФормуле()

	ПроизвольнаяНадписьФормыВидно = ЛОЖЬ;

	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом") Тогда
		СтруктураФормулы = ОбщийМодульПовтор.НайтиФормулуДляНадписиНаФорме(ЭтаФорма.ИмяФормы);
		Если НЕ СтруктураФормулы = Неопределено Тогда
			Элементы.ОбновитьЗначениеПоФормулеНадписиФормы.Видимость = СтруктураФормулы.ВыводитьКнопкуОбновленияНадписи;

			Если СтруктураФормулы.ВыполнитьНаСервереСОбъектом Тогда
				Элементы.ПроизвольнаяНадписьФормы.Заголовок = ВыводНадписиПоФормулеНаСервере(СтруктураФормулы.Формула);
			Иначе
				Попытка
					Выполнить(" Элементы.ПроизвольнаяНадписьФормы.Заголовок = " + СтруктураФормулы.Формула + ";");
				Исключение
				КонецПопытки;
			КонецЕсли;

			ПроизвольнаяНадписьФормыВидно = ИСТИНА;
		КонецЕсли;
	КонецЕсли;

	Элементы.ПроизвольнаяНадписьФормы.Видимость = ПроизвольнаяНадписьФормыВидно;

КонецПроцедуры

&НаСервере
Функция   ВыводНадписиПоФормулеНаСервере(Знач Формула)

	Результат = "";
	Попытка
		Выполнить(" Результат = " + Формула + ";");
	Исключение
	КонецПопытки;

	Возврат Результат;

КонецФункции //ВыводНадписиПоФормулеНаСервере

&НаСервере
Процедура ВыгрузитьНаСервере(Знач АдресФайла, Знач ФорматПДФ = ЛОЖЬ)

	Если ФорматПДФ Тогда
		Результат.Записать(АдресФайла, ТипФайлаТабличногоДокумента.PDF);
	Иначе
		Результат.Записать(АдресФайла, ТипФайлаТабличногоДокумента.XLS97);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗначениеПоФормулеНадписиФормы(Команда)

	ВыводНадписиПоФормуле();

КонецПроцедуры

&НаКлиенте
Процедура ОправитьПоEMAILКонтрагенту(Команда)

	ПоказатьВопрос(Новый ОписаниеОповещения("ОправитьПоEMAILКонтрагентуЗавершение1", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что следует отправить Контрагенту") + ": " + Контрагент + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("этот документ?"), РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

&НаКлиенте
Процедура ОправитьПоEMAILКонтрагентуЗавершение(Строка, ДополнительныеПараметры) Экспорт

	ТекстСопровождения = ?(Строка = Неопределено, ДополнительныеПараметры.ТекстСопровождения, Строка);
	ОправитьПоEMAILКонтрагентуНаСервере(ТекстСопровождения);

КонецПроцедуры

&НаКлиенте
Процедура ОправитьПоEMAILКонтрагентуЗавершение1(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ТекстСопровождения = "";
		ПоказатьВводСтроки(Новый ОписаниеОповещения("ОправитьПоEMAILКонтрагентуЗавершение", ЭтаФорма, Новый Структура("ТекстСопровождения", ТекстСопровождения)), ТекстСопровождения, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите текст сопровождающий сообщение") + ": ", 1020, ИСТИНА);

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОправитьПоEMAILКонтрагентуНаСервере(Знач ТекстСопровождения)

	ОбщийМодульСервисСервер.ПисьмоКонтрагенту(Контрагент, Результат, ТекстСопровождения, НаименованиеДокумента);

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоEMAILРуководителю(Команда)

	ПоказатьВопрос(Новый ОписаниеОповещения("ОтправитьПоEMAILРуководителюЗавершение1", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что следует отправить Руководителю?"), РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоEMAILРуководителюЗавершение(Строка, ДополнительныеПараметры) Экспорт

	ТекстСопровождения = ?(Строка = Неопределено, ДополнительныеПараметры.ТекстСопровождения, Строка);
	ОтправитьПоEMAILРуководителюНаСервере(ТекстСопровождения);

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоEMAILРуководителюЗавершение1(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ТекстСопровождения = "";
		ПоказатьВводСтроки(Новый ОписаниеОповещения("ОтправитьПоEMAILРуководителюЗавершение", ЭтаФорма, Новый Структура("ТекстСопровождения", ТекстСопровождения)), ТекстСопровождения, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите текст сопровождающий сообщение") + ": ", 1020, ИСТИНА);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОтправитьПоEMAILРуководителюНаСервере(Знач ТекстСопровождения)

	ОбщийМодульСервисСервер.ПисьмоКонтрагенту(Неопределено, Результат, ТекстСопровождения, НаименованиеДокумента);

КонецПроцедуры

&НаСервереБезКонтекста
функция   ПолучитьОтносительныйАдресНаСервере();

	Возврат ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПодсистемаИЭИмпортЭкспортОтносительныйАдресФайлов");

КонецФункции

&НаКлиенте
Процедура ПослеИзображенияОкнаФормы() // Когда окно уже нарисовано пользователю
	ЭтаФорма.Элементы.ФормаЗакрыть.Видимость = НЕ ЭтаФорма.Окно = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()               // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)          // ПРИ ОТКРЫТИИ

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	ПроверитьНеобходимостьДобавитьДату();

	Если Параметры.СразуНаПечать
		ИЛИ ОбщийМодульКлиент.ПолучитьЗначениеНастройкиИлиКонстанты("ОтправлятьПечатьДокументовИСправочниковСразуНаПринтер") Тогда

		Результат.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
	КонецЕсли;

	Если Параметры.СразуЗакрыть Тогда
		Отказ = ИСТИНА;
	КонецЕсли;

	Если ОбщийМодульПовтор.ПолучитьТекущуюСредуВыполнения() = 5 Тогда
		Элементы.ФормаГруппаНеДляВебКлиента.Видимость = ЛОЖЬ;
	КонецЕсли;

	Результат.КлючПараметровПечати = ВРег(СтрЗаменить(ЭтаФорма.Заголовок, " ", ""));
	Результат.ИмяПараметровПечати  = Результат.КлючПараметровПечати;
	ВыводНадписиПоФормуле();
	ПодключитьОбработчикОжидания("ПослеИзображенияОкнаФормы", 0.3, ИСТИНА);

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002100", ЭтаФорма, Отказ, );

	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);
		КонецЕсли;

		Элементы.ФормаОправитьПоEMAILКонтрагенту.Видимость 	 = ЛОЖЬ;
		Элементы.ФормаОтправитьПоEMAILРуководителю.Видимость = ЛОЖЬ;
		ДокументДляПечати = Параметры.ДокументДляПечати;
		Если НЕ ДокументДляПечати = Неопределено Тогда
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ДокументДляПечати);
			Результат.Вывести(ДокументДляПечати);
		КонецЕсли;

		Документ = Параметры.Документ;

		Если ЗначениеЗаполнено(Документ) Тогда
			Контрагент = Документ.КлиентПоставщик;
		Иначе
			Контрагент = Параметры.Контрагент;
		КонецЕсли;

		Если ЗначениеЗаполнено(Контрагент)
			И ЗначениеЗаполнено(Контрагент.ЭлектроннаяПочта)
			И НЕ ПустаяСтрока(ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ЭлектроннаяПочтаПользователь", ИСТИНА)) Тогда

			Элементы.ФормаОправитьПоEMAILКонтрагенту.Видимость 	 = ИСТИНА;
			Элементы.ФормаОтправитьПоEMAILРуководителю.Видимость = ИСТИНА;
		КонецЕсли;

		НаименованиеДокумента = Параметры.НаименованиеДокумента;

		Если  ЗначениеЗаполнено(Параметры.Документ)
			ИЛИ ЗначениеЗаполнено(Параметры.НаименованиеДокумента) Тогда

			Элементы.ГруппаКомандФормирования.Видимость = ЛОЖЬ;
		КонецЕсли;

		Элементы.ГруппаСуммВыделенныхЯчеек.Видимость = ЛОЖЬ;
	КонецЕсли;

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПроверитьНеобходимостьДобавитьДату()

	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ДобавлятьТекущуюДатуИВремяВоВсеПечатныеФормы") Тогда
		МакетДатыВремени = ПолучитьОбщийМакет("МакетДатыВремени");
		ТаблицаТекущейДатыВремени = МакетДатыВремени.ПолучитьОбласть("Ш");
		ТаблицаТекущейДатыВремени.Параметры.ТекущаяДатаИВремя = ТекущаяДата();
		ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ТаблицаТекущейДатыВремени);
		Результат.Вывести(ТаблицаТекущейДатыВремени);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РасчетСуммыПоЯчейкам(ДокументДляПечати)

	СтруктураРасчетаСуммыЯчеек = ОбщийМодульКлиент.РасчетСуммыПоЯчейкам(ДокументДляПечати, Результат);
	СуммаЯчеек 		= СтруктураРасчетаСуммыЯчеек.СуммаЯчеек;
	ВыделеноЯчеек 	= СтруктураРасчетаСуммыЯчеек.ВыделеноЯчеек;
	КоличествоЧисел = СтруктураРасчетаСуммыЯчеек.КоличествоЧисел;
	СреднееЗначение = СтруктураРасчетаСуммыЯчеек.СреднееЗначение;

КонецПроцедуры

&НаКлиенте
Процедура РезультатПриАктивизацииОбласти(Элемент)

	РасчетСуммыПоЯчейкам(Результат);
	Элементы.ГруппаСуммВыделенныхЯчеек.Видимость = НЕ КоличествоЧисел = 0;

КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФайлPDF(Команда)

	АдресФайла = ПолучитьОтносительныйАдресНаСервере();
	ДиалогФильтр	 = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Файл PDF") + " (*.pdf)|*.pdf";
	ДиалогРасширение = "pdf";
	ДиалогДляВыбораФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогДляВыбораФайла.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите имя файла PDF");
	ДиалогДляВыбораФайла.ПолноеИмяФайла			=	АдресФайла;
	ДиалогДляВыбораФайла.Фильтр					=	ДиалогФильтр;
	ДиалогДляВыбораФайла.Расширение				=	ДиалогРасширение;
	ДиалогДляВыбораФайла.МножественныйВыбор		=	ЛОЖЬ;
	ДиалогДляВыбораФайла.ПредварительныйПросмотр=	ЛОЖЬ;
	ДиалогДляВыбораФайла.ИндексФильтра			=	0;

	ДиалогДляВыбораФайла.Показать(Новый ОписаниеОповещения("СохранитьВФайлPDFЗавершение", ЭтаФорма, Новый Структура("ДиалогДляВыбораФайла", ДиалогДляВыбораФайла)));

КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФайлPDFЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт

	ДиалогДляВыбораФайла = ДополнительныеПараметры.ДиалогДляВыбораФайла;

	Если (ВыбранныеФайлы <> Неопределено) Тогда
		АдресФайла = ДиалогДляВыбораФайла.ПолноеИмяФайла;
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет Выгрузка данных.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
		ВыгрузитьНаСервере(АдресФайла, ИСТИНА);
		ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выгрузил данные в файл") + ": " + АдресФайла, 2);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФайлФорматаExcel(Команда)

	АдресФайла = ПолучитьОтносительныйАдресНаСервере();
	ДиалогФильтр	 = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Файл Excel") + " (*.xls)|*.xls";
	ДиалогРасширение = "xls";
	ДиалогДляВыбораФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогДляВыбораФайла.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите имя файла Excel");
	ДиалогДляВыбораФайла.ПолноеИмяФайла			=	АдресФайла;
	ДиалогДляВыбораФайла.Фильтр					=	ДиалогФильтр;
	ДиалогДляВыбораФайла.Расширение				=	ДиалогРасширение;
	ДиалогДляВыбораФайла.МножественныйВыбор		=	ЛОЖЬ;
	ДиалогДляВыбораФайла.ПредварительныйПросмотр	=	ЛОЖЬ;
	ДиалогДляВыбораФайла.ИндексФильтра			=	0;
	ДиалогДляВыбораФайла.Показать(Новый ОписаниеОповещения("СохранитьВФайлФорматаExcelЗавершение", ЭтаФорма, Новый Структура("ДиалогДляВыбораФайла", ДиалогДляВыбораФайла)));

КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФайлФорматаExcelЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт

	ДиалогДляВыбораФайла = ДополнительныеПараметры.ДиалогДляВыбораФайла;

	Если (ВыбранныеФайлы <> Неопределено) Тогда
		АдресФайла = ДиалогДляВыбораФайла.ПолноеИмяФайла;
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет Выгрузка данных.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
		ВыгрузитьНаСервере(АдресФайла);
		ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выгрузил данные в файл") + ": " + АдресФайла, 2);
	КонецЕсли;

КонецПроцедуры
