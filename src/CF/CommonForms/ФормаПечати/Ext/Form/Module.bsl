// sza151002-0252 pdf
// sza140521-0019  
// sza131023-0021 : 

&НаСервере
Процедура ДобавитьДополнительныеДанныеПечатиОбъекта()
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьДополнительнуюИнформациюДляОбъектовБазыДанных", ИСТИНА) Тогда
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ЗначенияДополнительныхРеквизитовСрезПоследних.ДополнительныйРеквизит КАК ВидИнформации,
		|	ЗначенияДополнительныхРеквизитовСрезПоследних.ЗначениеРеквизита КАК Информация
		|ИЗ РегистрСведений.ЗначенияДополнительныхРеквизитов.СрезПоследних(, ОбъектВладелец = &ОбъектВладелец) КАК ЗначенияДополнительныхРеквизитовСрезПоследних";
	
	Запрос.УстановитьПараметр("ОбъектВладелец", ОбъектПечати);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			МакетДляПечати 	= ПолучитьОбщийМакет("ПрочиеОбластиПечати");
			МакетДляПечати.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
			
			ОбластьДопИнформации 	= МакетДляПечати.ПолучитьОбласть("СтрокаДопИнформации");
			ВыборкаДетальныеЗаписи 	= РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ОбластьДопИнформации.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьДопИнформации);
				Результат.Вывести(ОбластьДопИнформации);
			КонецЦикла;                                             	
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОправитьПоEMAILКонтрагенту(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ОправитьПоEMAILКонтрагентуЗавершение1", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что следует отправить Контрагенту") + ": " + Контрагент + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(" этот документ?"), РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОправитьПоEMAILКонтрагентуЗавершение1(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ТекстСопровождения = "";
		ПоказатьВводСтроки(Новый ОписаниеОповещения("ОправитьПоEMAILКонтрагентуЗавершение", ЭтаФорма, Новый Структура("ТекстСопровождения", ТекстСопровождения)), ТекстСопровождения, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите текст сопровождающий сообщение") + ": ", 1020, ИСТИНА);	  	
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОправитьПоEMAILКонтрагентуЗавершение(Строка, ДополнительныеПараметры) Экспорт
	
	ТекстСопровождения = ?(Строка = Неопределено, ДополнительныеПараметры.ТекстСопровождения, Строка);	
	
	ОправитьПоEMAILКонтрагентуНаСервере(ТекстСопровождения);

КонецПроцедуры

&НаСервере
Процедура ОправитьПоEMAILКонтрагентуНаСервере(Знач ТекстСопровождения)
	
	ОбщийМодульСервисСервер.ПисьмоКонтрагенту(Контрагент, Результат, ТекстСопровождения, НаименованиеДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоEMAILРуководителю(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ОтправитьПоEMAILРуководителюЗавершение1", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что следует отправить Руководителю?"), РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоEMAILРуководителюЗавершение1(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ТекстСопровождения = "";
		ПоказатьВводСтроки(Новый ОписаниеОповещения("ОтправитьПоEMAILРуководителюЗавершение", ЭтаФорма, Новый Структура("ТекстСопровождения", ТекстСопровождения)), ТекстСопровождения, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите текст сопровождающий сообщение") + ": ", 1020, ИСТИНА);	  	
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоEMAILРуководителюЗавершение(Строка, ДополнительныеПараметры) Экспорт
	
	ТекстСопровождения = ?(Строка = Неопределено, ДополнительныеПараметры.ТекстСопровождения, Строка);	
	
	ОтправитьПоEMAILРуководителюНаСервере(ТекстСопровождения);

КонецПроцедуры

&НаСервере
Процедура ОтправитьПоEMAILРуководителюНаСервере(Знач ТекстСопровождения)	
	ОбщийМодульСервисСервер.ПисьмоКонтрагенту(Неопределено, Результат, ТекстСопровождения, НаименованиеДокумента);	
КонецПроцедуры

&НаСервереБезКонтекста
функция   ПолучитьОтносительныйАдресНаСервере();	
	Возврат ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПодсистемаИЭИмпортЭкспортОтносительныйАдресФайлов");	
КонецФункции

&НаКлиенте
Процедура ПриЗакрытии()                                              // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                         // ПРИ ОТКРЫТИИ
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	ПроверитьНеобходимостьДобавитьДату();
	
	Если параметры.СразуНаПечать
		ИЛИ ОбщийМодульКлиент.ПолучитьЗначениеНастройкиИлиКонстанты("ОтправлятьПечатьДокументовИСправочниковСразуНаПринтер") Тогда
		
		результат.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ЛистА5Повернутый") Тогда
		Результат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		Результат.РазмерСтраницы = "A5";
	КонецЕсли;
	
	Если параметры.СразуЗакрыть Тогда
		отказ = ИСТИНА;
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьТекущуюСредуВыполнения() = 5 Тогда
		Элементы.ФормаГруппаНеДляВебКлиента.Видимость = ЛОЖЬ;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбъектПечати) Тогда
		ДобавитьДополнительныеДанныеПечатиОбъекта();
	КонецЕсли;
	
	ВыводНадписиПоФормуле();
	ПодключитьОбработчикОжидания("ПослеИзображенияОкнаФормы", 0.3, ИСТИНА);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзображенияОкнаФормы() // Когда окно уже нарисовано пользователю
	ЭтаФорма.Элементы.ФормаЗакрыть.Видимость = НЕ ЭтаФорма.Окно = Неопределено;	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗначениеПоФормулеНадписиФормы(Команда)
	ВыводНадписиПоФормуле();
КонецПроцедуры

&НаКлиенте
Процедура ВыводНадписиПоФормуле()
	
	ПроизвольнаяНадписьФормыВидно = ЛОЖЬ;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом") Тогда
		
		СтруктураФормулы = ОбщийМодульПовтор.ОпределитьНужнуюФормулуДляНадписиНаФорме(ЭтаФорма.ИмяФормы);
		Если НЕ СтруктураФормулы = Неопределено Тогда
			
			Элементы.ОбновитьЗначениеПоФормулеНадписиФормы.Видимость = СтруктураФормулы.ВыводитьКнопкуОбновленияНадписи;
			Если СтруктураФормулы.ВыполнитьНаСервереСОбъектом Тогда
				Элементы.ПроизвольнаяНадписьФормы.Заголовок = ВыводНадписиПоФормулеНаСервере(СтруктураФормулы.Формула);
			Иначе
				Попытка 
					Выполнить(" Элементы.ПроизвольнаяНадписьФормы.Заголовок = " + СтруктураФормулы.Формула + ";");
				Исключение 	
				КонецПопытки;	
			КонецЕсли;
			
			ПроизвольнаяНадписьФормыВидно = ИСТИНА;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ПроизвольнаяНадписьФормы.Видимость = ПроизвольнаяНадписьФормыВидно;
	
КонецПроцедуры

&НаСервере
Функция   ВыводНадписиПоФормулеНаСервере(Знач Формула)
	
	Результат = "";
	Попытка 
		Выполнить(" Результат = " + Формула + ";");
	Исключение 	
	КонецПопытки;	
	
	Возврат Результат;
	
КонецФункции //ВыводНадписиПоФормулеНаСервере

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002100", ЭтаФорма, Отказ, );
	
	Если НЕ Отказ Тогда	
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		Элементы.ФормаОправитьПоEMAILКонтрагенту.Видимость 	 = ЛОЖЬ;
		Элементы.ФормаОтправитьПоEMAILРуководителю.Видимость = ЛОЖЬ;
		НеПечататьНичегоДополнительно = параметры.НеПечататьНичегоДополнительно;
		ОбъектПечати = Параметры.ОбъектПечати;
		
		ТабДок = параметры.ТабДок;
		Если НЕ ТабДок = Неопределено Тогда
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ТабДок);
			Результат.Вывести(ТабДок);
		КонецЕсли;
		
		Контрагент 	= Неопределено;
		Документ 	= Параметры.Документ;
		
		Если ЗначениеЗаполнено(Документ) Тогда
			попытка
				Контрагент = Документ.КлиентПоставщик;		
			исключение
				Попытка 
					Контрагент = Документ.Клиент;
				Исключение 	
				КонецПопытки;
			конецпопытки;
			
		Иначе
			Контрагент = Параметры.Контрагент;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Контрагент)
			И ЗначениеЗаполнено(Контрагент.ЭлектроннаяПочта)
			И НЕ ПустаяСтрока(ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ЭлектроннаяПочтаОтправитель")) Тогда
			
			Элементы.ФормаОправитьПоEMAILКонтрагенту.Видимость 	 = ИСТИНА;
			Элементы.ФормаОтправитьПоEMAILРуководителю.Видимость = ИСТИНА; 			
		КонецЕсли;
		
		НаименованиеДокумента = параметры.НаименованиеДокумента;	
		Элементы.ГруппаСуммВыделеныхЯчеек.Видимость = ЛОЖЬ;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьНеобходимостьДобавитьДату()
	
	Если НЕ НеПечататьНичегоДополнительно
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ДобавлятьТекущуюДатуИВремяВоВсеПечатныеФормы") Тогда
		
		МакетДатыВремени = ПолучитьОбщийМакет("МакетДатыВремени");
		МакетДатыВремени.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
		ТаблицаТекущейДатыВремени = МакетДатыВремени.ПолучитьОбласть("Ш");
		ТаблицаТекущейДатыВремени.Параметры.ТекущаяДатаИВремя = ТекущаяДата();
		
		ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ТаблицаТекущейДатыВремени);
		Результат.Вывести(ТаблицаТекущейДатыВремени);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетСуммыПоЯчейкам(ТабДок)	
	
	СтруктураРасчетаСуммыЯчеек = ОбщийМодульКлиент.РасчетСуммыПоЯчейкам(ТабДок, Результат);	
	СуммаЯчеек 		= СтруктураРасчетаСуммыЯчеек.СуммаЯчеек;
	ВыделеноЯчеек 	= СтруктураРасчетаСуммыЯчеек.ВыделеноЯчеек;
	КоличествоЧисел = СтруктураРасчетаСуммыЯчеек.КоличествоЧисел;              
	СреднееЗначение = СтруктураРасчетаСуммыЯчеек.СреднееЗначение;
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатПриАктивизацииОбласти(Элемент)
	
	РасчетСуммыПоЯчейкам(Результат);
	Элементы.ГруппаСуммВыделеныхЯчеек.Видимость = не КоличествоЧисел = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФайлФорматаExcel(Команда)
	
#Если ВебКлиент Тогда 

            Если Не ПодключитьРасширениеРаботыСФайлами() Тогда 
                
                УстановитьРасширениеРаботыСФайлами();
                
				Если НЕ ПодключитьРасширениеРаботыСФайлами() Тогда
					ВызватьИсключение ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка. Ваш браузер не поддерживает работу с файлами.");
					КонеЦесли;
                
            КонецЕсли;
        #КонецЕсли	
	
	АдресФайла = ПолучитьОтносительныйАдресНаСервере();
	
	ДиалогФильтр	 = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Файл Excel") + " (*.xls)|*.xls";
	ДиалогРасширение = "xls";
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбФайла.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите имя файла Excel");
	ДиалогВыбФайла.ПолноеИмяФайла			=	АдресФайла;
	ДиалогВыбФайла.Фильтр					=	ДиалогФильтр;
	ДиалогВыбФайла.Расширение				=	ДиалогРасширение;
	ДиалогВыбФайла.ПолноеИмяФайла			=   "" + НаименованиеДокумента + ".xls";
	ДиалогВыбФайла.МножественныйВыбор		=	ЛОЖЬ;
	ДиалогВыбФайла.ПредварительныйПросмотр	=	ЛОЖЬ;
	ДиалогВыбФайла.ИндексФильтра			=	0;
	
	ДиалогВыбФайла.Показать(Новый ОписаниеОповещения("СохранитьВФайлФорматаExcelЗавершение", ЭтаФорма, Новый Структура("ДиалогВыбФайла", ДиалогВыбФайла))); 
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФайлФорматаExcelЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ДиалогВыбФайла = ДополнительныеПараметры.ДиалогВыбФайла; 	
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		АдресФайла = ДиалогВыбФайла.ПолноеИмяФайла;
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет Выгрузка данных.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
		
		ВыгрузитьНаСервере(АдресФайла);
		
		ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выгрузил данные в файл") + ": " + АдресФайла, 2);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	ПриПовторномОткрытииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриПовторномОткрытииНаСервере()
	
	Попытка
		ТабДок = параметры.ТабДок;
		Если НЕ ТабДок = Неопределено Тогда
			Результат.Очистить();
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ТабДок);
			Результат.Вывести(ТабДок);
		КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьНаСервере(Знач АдресФайла, Знач ФорматПДФ = ЛОЖЬ)
	
	Если ФорматПДФ Тогда
		Результат.Записать(АдресФайла, ТипФайлаТабличногоДокумента.PDF);	
	Иначе
		Результат.Записать(АдресФайла, ТипФайлаТабличногоДокумента.XLS97);	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФайлPDF(Команда)
	
#Если ВебКлиент Тогда 

            Если Не ПодключитьРасширениеРаботыСФайлами() Тогда 
                
                УстановитьРасширениеРаботыСФайлами();
                
				Если НЕ ПодключитьРасширениеРаботыСФайлами() Тогда
					ВызватьИсключение ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка. Ваш браузер не поддерживает работу с файлами.");
					КонеЦесли;
                
            КонецЕсли;
        #КонецЕсли	
	
	АдресФайла = ПолучитьОтносительныйАдресНаСервере();
	
	ДиалогФильтр	 = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Файл PDF") + " (*.pdf)|*.pdf";
	ДиалогРасширение = "pdf";
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбФайла.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите имя файла PDF");
	ДиалогВыбФайла.ПолноеИмяФайла			=	АдресФайла;
	ДиалогВыбФайла.Фильтр					=	ДиалогФильтр;
	ДиалогВыбФайла.Расширение				=	ДиалогРасширение;
	ДиалогВыбФайла.ПолноеИмяФайла			=   "" + НаименованиеДокумента + ".pdf";
	ДиалогВыбФайла.МножественныйВыбор		=	ЛОЖЬ;
	ДиалогВыбФайла.ПредварительныйПросмотр	=	ЛОЖЬ;
	ДиалогВыбФайла.ИндексФильтра			=	0;
	
	ДиалогВыбФайла.Показать(Новый ОписаниеОповещения("СохранитьВФайлPDFЗавершение", ЭтаФорма, Новый Структура("ДиалогВыбФайла", ДиалогВыбФайла))); 
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФайлPDFЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ДиалогВыбФайла = ДополнительныеПараметры.ДиалогВыбФайла;	
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		АдресФайла = ДиалогВыбФайла.ПолноеИмяФайла;
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет Выгрузка данных.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
		
		ВыгрузитьНаСервере(АдресФайла, ИСТИНА);
		
		ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выгрузил данные в файл") + ": " + АдресФайла, 2);
	КонецЕсли;
	
КонецПроцедуры

