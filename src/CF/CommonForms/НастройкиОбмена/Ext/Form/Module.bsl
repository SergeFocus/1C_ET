// sza151223-1449

&НаКлиенте
Процедура ВыполнитьРегистрациюВсехСуществующийОбъектов(Команда)

	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Перерегистрация всех объектов для обмена.."), ,ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
	Выполнить(" ОбменССайтомВызовСервера.ПеререгистрироватьВсеОбъекты(); ");

КонецПроцедуры

&НаКлиенте
Процедура ГруппаПроблемыЗагрузкиПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ГруппаПроблемыЗагрузки), 2);
КонецПроцедуры

&НаКлиенте
Процедура ИмпортЭкспортПакетноеИсполнение(Команда)
	ОткрытьФорму("Обработка.ИмпортЭкспортПакетноеИсполнение.Форма.ФормаСпискаЗадач");
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМагнитныеКартыКлиентовПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ИспользоватьМагнитныеКартыКлиентов), 2);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОбменССайтомПриИзменении(Элемент)

	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.ОбязательноВыполнитеРегистрациюВсехОбъектовЕслиТолькоВключилиОбменССайтами.Видимость = НаборКонстант.ИспользоватьОбменССайтом;

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПодключаемоеОборудованиеПриИзменении(Элемент)

	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	Элементы.ПриИспользованииШтрихКодаЕслиНоменклатураНеНайденаПоШтрихКодуИскатьПоАртикулу.Видимость = НаборКонстант.ИспользоватьШтрихКоды И НаборКонстант.ИспользоватьПодключаемоеОборудование И НаборКонстант.ИспользоватьРеквизитАртикулНоменклатуры;

КонецПроцедуры

&НаКлиенте
Процедура НоменклатурнаяГруппаСозданныхНаСайтеПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.НоменклатурнаяГруппаСозданныхНаСайте), 2);
КонецПроцедуры

&НаСервере
Процедура ОбновитьПовторноИспользуемыеЗначенияНаСервере()
	ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры

&НаСервере
Процедура ОправитьПоEMAILКонтрагентуНаСервере(Знач ТекстСопровождения, Знач Получатель)
	ОбщийМодульСервисСервер.ПисьмоКонтрагенту(, , ТекстСопровождения, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Письмо для проверки настроек почты в базе данных конфигурации Элементарная торговля"), ?(НЕ ЗначениеЗаполнено(Получатель), НаборКонстант.ЭлектроннаяПочтаОтправитель, Получатель));
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	ТекущаяСтраница = Элементы.ГруппаСтраницИЭ.ТекущаяСтраница;
	Если НЕ ТекущаяСтраница = Неопределено Тогда
		СтраницыПанели  = Элементы.ГруппаСтраницИЭ.ПодчиненныеЭлементы;
		СтраницаПанели  = СтраницыПанели.Индекс(ТекущаяСтраница);
	КонецЕсли;

	ТекущаяСтраница = Элементы.ГруппаСтраниц.ТекущаяСтраница;
	Если НЕ ТекущаяСтраница = Неопределено Тогда
		СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
		СтраницаПанелиГоризонт  = СтраницыПанели.Индекс(ТекущаяСтраница);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодсистемаИЭДемонстрироватьКомандыИмпортаИЭкспортаВСправочникахИДокументахПриИзменении(Элемент)
	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ПодсистемаИЭИмпортЭкспортПриИзменении(Элемент)

	Если НЕ НаборКонстант.ПодсистемаИЭИмпортЭкспорт Тогда
		НаборКонстант.ПодсистемаИЭДемонстрироватьКомандыИмпортаИЭкспортаВСправочникахИДокументах = ЛОЖЬ;
	КонецЕсли;

	СообщитьОСменеФункциональнойОпции(Элемент.Имя);
	ВестиУчетСобственныхЮридическихЛиц = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетСобственныхЮридическихЛиц");

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	ПроверитьПодключениеОбработчикаОжидания();
	ПроверитьВключитьВыключитьНапоминания();

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеДокументаТаблицыДанныхПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ПредставлениеДокументаТаблицыДанных), 2);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                         // ПРИ ЗАКРЫТИИ

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
	ОбновитьПовторноИспользуемыеЗначенияНаСервере();

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ОбщийМодульСервисСервер.УстановитьПараметрыСеансаЭлементарнаяТорговля(, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                    // ПРИ ОТКРЫТИИ

	Если НЕ Отказ Тогда
		Если НЕ ПолнаяВерсия Тогда
			Элементы.НастройкиEMAILДляОтправкиКонтрагентам.Видимость = ЛОЖЬ;
			Элементы.ПодключаемоеОборудование.Видимость = ЛОЖЬ;
		КонецЕсли;

		ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);

		#Если НЕ ВебКлиент Тогда
		#КонецЕсли

		Если ЗначениеЗаполнено(СтраницаПанели) Тогда
			СтраницыПанели  = Элементы.ГруппаСтраницИЭ.ПодчиненныеЭлементы;
			ТекущаяСтраница = СтраницыПанели.Получить(СтраницаПанели);
			Если НЕ ТекущаяСтраница = Неопределено Тогда
				Элементы.ГруппаСтраницИЭ.ТекущаяСтраница = ТекущаяСтраница;
			КонецЕсли;
		КонецЕсли;

		Если ЗначениеЗаполнено(СтраницаПанелиГоризонт) Тогда
			СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
			ТекущаяСтраница = СтраницыПанели.получить(СтраницаПанелиГоризонт);
			Если НЕ ТекущаяСтраница = Неопределено Тогда
				Элементы.ГруппаСтраниц.ТекущаяСтраница = ТекущаяСтраница;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)     // ПРИ СОЗДАНИИ НА СЕРВЕРЕ

	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000150", ЭтаФорма, Отказ, );

	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);
		КонецЕсли;

		ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
		Версия 				= Метаданные.Версия;
		ПолнаяВерсия 		= ОбщийМодульПовтор.ПолнаяВерсияКонфигурации();
		ВестиУчетСобственныхЮридическихЛиц = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетСобственныхЮридическихЛиц");
		Элементы.ОбменССайтом.Видимость = НаборКонстант.ПодсистемаИЭИмпортЭкспорт И ВестиУчетСобственныхЮридическихЛиц;
	КонецЕсли;

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОтправитьПисьмо(Команда)

	СообщитьОСменеФункциональнойОпции();
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ПроверитьОтправитьПисьмоЗавершение", ЭтаФорма, Новый Структура("получатель", получатель)), получатель, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите электронный адрес получателя") + ": ", 100, ЛОЖЬ);

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОтправитьПисьмоЗавершение(Строка, ДополнительныеПараметры) Экспорт

	Получатель = ?(Строка = Неопределено, ДополнительныеПараметры.получатель, Строка);

	Если (Строка <> Неопределено) Тогда
		ПоказатьВводСтроки(Новый ОписаниеОповещения("ПроверитьОтправитьПисьмоЗавершение2", ЭтаФорма, Новый Структура("ТекстСопровождения", ТекстСопровождения)), ТекстСопровождения, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите текст сопровождающий сообщение") + ": ", 1020, ИСТИНА);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОтправитьПисьмоЗавершение2(Строка1, ДополнительныеПараметры1) Экспорт

	ТекстСопровождения = ?(Строка1 = Неопределено, ДополнительныеПараметры1.ТекстСопровождения, Строка1);

	Если (Строка1 <> Неопределено) Тогда
		ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Отправил письмо для проверки настроек."), 2);
		ОправитьПоEMAILКонтрагентуНаСервере(ТекстСопровождения, получатель);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СброситьПодтвержденияРуководителя(Команда)

	НаборКонстант.ДатаНачалаПериодаПодтвержденнаяРуководителем 	  = '00010101';
	НаборКонстант.ДатаОкончанияПериодаПодтвержденнаяРуководителем = '00010101';

КонецПроцедуры

&НаКлиенте
Процедура СообщитьОСменеФункциональнойОпции(Знач ЭлементЗдесь = "")

	Если НЕ ПустаяСтрока(ЭлементЗдесь) Тогда
		ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + ЭлементЗдесь, 2);
	КонецЕсли;

	Попытка
		ЭтаФорма.Записать();
	Исключение
		ТекстОписаниеОшибки = ОписаниеОшибки();
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ТекстОписаниеОшибки);
	КонецПопытки;
	ОбновитьИнтерфейс();

КонецПроцедуры // СообщитьОСменеФункциональнойОпции

&НаКлиенте
Процедура УзлыОбмена(Команда)

	ИмяФормыПланаОбмена = "ПланОбмена.ОбменССайтом.ФормаСписка"; // Вынесено для бесплатной
	ОткрытьФорму(ИмяФормыПланаОбмена, , ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаPOP3ПередSMTPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЭлектроннаяПочтаPOP3ПередSMTP), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаАдресСервераIMAPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЭлектроннаяПочтаАдресСервераIMAP), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаАдресСервераPOP3ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаАдресСервераSMTPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаАутентификацияPOP3ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЭлектроннаяПочтаАутентификацияPOP3), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаАутентификацияSMTPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЭлектроннаяПочтаАутентификацияSMTP), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаИмяОтправителяПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаИспользоватьSSLIMAPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЭлектроннаяПочтаИспользоватьSSLIMAP), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаИспользоватьSSLPOP3ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЭлектроннаяПочтаИспользоватьSSLPOP3), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаИспользоватьSSLSMTPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЭлектроннаяПочтаИспользоватьSSLSMTP), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаКопироватьВТекстПисьмаСодержаниеДокументаПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаОтправительПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПарольIMAPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЭлектроннаяПочтаПарольIMAP), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПарольSMTPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПарольПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПодписьПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПользовательIMAPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЭлектроннаяПочтаПользовательIMAP), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПользовательSMTPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЭлектроннаяПочтаПользовательSMTP), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПользовательПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПортIMAPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЭлектроннаяПочтаПортIMAP), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПортPOP3ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПортSMTPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя, 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаТолькоЗащищеннаяАутентификацияIMAPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЭлектроннаяПочтаТолькоЗащищеннаяАутентификацияIMAP), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаТолькоЗащищеннаяАутентификацияPOP3ПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЭлектроннаяПочтаТолькоЗащищеннаяАутентификацияPOP3), 2);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаТолькоЗащищеннаяАутентификацияSMTPПриИзменении(Элемент)
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сменил") + " " + Элемент.Имя + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на") + " " + СокрЛП(НаборКонстант.ЭлектроннаяПочтаТолькоЗащищеннаяАутентификацияSMTP), 2);
КонецПроцедуры
