// sza151209-0227 
// sza150728-0410 
// sza150515-1749 ваучеры
// sza150430-0109 
// sza150114-1728
// sza141007-0205 бп
// sza140711-0020  локац
// sza140612-1423 : 
// sza140205-0304
&НаКлиенте
Процедура ВозвратТовараОтКлиентаПокупателя(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ВозвратТовараОтКлиентаПокупателяЗавершение", ЭтаФорма, Новый Структура("Клиент", Клиент)), Клиент, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Клиента, который возвращает товар") + ": ", тип("СправочникСсылка.Клиенты"));
        Возврат;
	КонецЕсли;
	
	ВозвратТовараОтКлиентаПокупателяФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ВозвратТовараОтКлиентаПокупателяЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Клиент = ?(Значение = Неопределено, ДополнительныеПараметры.Клиент, Значение);	
	
	ВозвратТовараОтКлиентаПокупателяФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ВозвратТовараОтКлиентаПокупателяФрагмент()
	
	Перем ПараметрыФормы;
	
	ПараметрыФормы = Новый Структура("КлиентПоставщик", Клиент);
	ОткрытьФорму("Документ.ПоступленияТовара.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ВозвратТоваровПоставщику(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоПоставщикам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ВозвратТоваровПоставщикуЗавершение", ЭтаФорма, Новый Структура("Поставщик", Поставщик)), Поставщик, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Поставщика для возврата товара") + ": ", тип("СправочникСсылка.Поставщики"));
        Возврат;
	КонецЕсли;
	
	ВозвратТоваровПоставщикуФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ВозвратТоваровПоставщикуЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Поставщик = ?(Значение = Неопределено, ДополнительныеПараметры.Поставщик, Значение);	
	
	ВозвратТоваровПоставщикуФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ВозвратТоваровПоставщикуФрагмент()
	
	Перем ПараметрыФормы;
	
	ПараметрыФормы = Новый Структура("КлиентПоставщик", Поставщик);
	ОткрытьФорму("Документ.РасходыТовара.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ВыполненияРабот(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ВыполненияРаботЗавершение", ЭтаФорма, Новый Структура("Клиент", Клиент)), Клиент, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Клиента") + ": ", тип("СправочникСсылка.Клиенты"));
        Возврат;
	КонецЕсли;
	
	ВыполненияРаботФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполненияРаботЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Клиент = ?(Значение = Неопределено, ДополнительныеПараметры.Клиент, Значение);	
	
	ВыполненияРаботФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ВыполненияРаботФрагмент()
	
	Перем ПараметрыФормы;
	
	ПараметрыФормы = Новый Структура("КлиентПоставщик", Клиент);
	ОткрытьФорму("Документ.ВыполненияРабот.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ВыполненияРаботБезПлана(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ВыполненияРаботБезПланаЗавершение", ЭтаФорма, Новый Структура("Клиент", Клиент)), Клиент, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Клиента") + ": ", тип("СправочникСсылка.Клиенты"));
        Возврат;
	КонецЕсли;
	
	ВыполненияРаботБезПланаФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполненияРаботБезПланаЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Клиент = ?(Значение = Неопределено, ДополнительныеПараметры.Клиент, Значение);	
	
	ВыполненияРаботБезПланаФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ВыполненияРаботБезПланаФрагмент()
	
	Перем ПараметрыФормы;
	
	ПараметрыФормы = Новый Структура("КлиентПоставщик", Клиент);
	ПараметрыФормы.Вставить("БезПлана", ИСТИНА);
	ОткрытьФорму("Документ.ВыполненияРабот.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьГруппуАналогов(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.ГруппыАналогов.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДоговор(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.Договора.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.Изображения.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПодразделение(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.Подразделения.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПозициюОказанияУслугЗаВремя(Команда)
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.ПозицииДляОказанияУслугЗаВремяНомера.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСериюНоменклатуры(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПоказатьВводЗначения(Новый ОписаниеОповещения("ДобавитьСериюНоменклатурыЗавершение", ЭтаФорма, Новый Структура("Номенклатура", Номенклатура)), Номенклатура, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите номенклатуру") + ": ", тип("СправочникСсылка.Номенклатура"));
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСериюНоменклатурыЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Номенклатура = ?(Значение = Неопределено, ДополнительныеПараметры.Номенклатура, Значение);	
	
	Если (Значение <> Неопределено) Тогда
		
		ПараметрыФормы = Новый Структура("Номенклатура", Номенклатура);
		ОткрытьФорму("Справочник.СерииНоменклатуры.ФормаОбъекта", ПараметрыФормы);	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСертификат(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.СертификатыГигиеническиеЗаключения.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСклад(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.Склады.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСотрудника(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.Сотрудники.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСпецификацию(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.Спецификации.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСредствоПредприятия(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.СредстваПредприятия.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказКлиента(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ЗаказКлиентаЗавершение", ЭтаФорма, Новый Структура("Клиент", Клиент)), Клиент, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Клиента (заказчика)") + ": ", тип("СправочникСсылка.Клиенты"));
        Возврат;
	КонецЕсли;
	
	ЗаказКлиентаФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказКлиентаЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Клиент = ?(Значение = Неопределено, ДополнительныеПараметры.Клиент, Значение);	
	
	ЗаказКлиентаФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ЗаказКлиентаФрагмент()
	
	Перем ИмяНеобходимойФормы, ПараметрыФормы;
	
	ПараметрыФормы = Новый Структура("КлиентПоставщик", Клиент);
	ИмяНеобходимойФормы = "Документ.РасходыТовара.Форма.ФормаДокументаЗаказ";
	ОткрытьФорму(ИмяНеобходимойФормы, ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ЗаказПоставщику(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоПоставщикам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ЗаказПоставщикуЗавершение", ЭтаФорма, Новый Структура("Поставщик", Поставщик)), Поставщик, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Поставщика для заказа") + ": ", тип("СправочникСсылка.Поставщики"));
        Возврат;
	КонецЕсли;
	
	ЗаказПоставщикуФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказПоставщикуЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Поставщик = ?(Значение = Неопределено, ДополнительныеПараметры.Поставщик, Значение);	
	
	ЗаказПоставщикуФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ЗаказПоставщикуФрагмент()
	
	Перем ИмяНеобходимойФормы, ПараметрыФормы;
	
	ПараметрыФормы = Новый Структура("КлиентПоставщик", Поставщик);
	ИмяНеобходимойФормы = "Документ.ПоступленияТовара.Форма.ФормаДокументаЗаказ";
	ОткрытьФорму(ИмяНеобходимойФормы, ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизиты()
	
	Если НЕ ЗначениеЗаполнено(склад) Тогда
		Склад = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("СкладПоУмолчанию");
		Если НЕ ЗначениеЗаполнено(Склад) Тогда
			Склад = ПредопределенноеЗначение("Справочник.Склады.ОсновнойСклад");
		КонецЕсли;		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Поставщик) Тогда
		Поставщик = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПоставщикПоУмолчанию");
		Если НЕ ЗначениеЗаполнено(Поставщик) Тогда
			Поставщик = ПредопределенноеЗначение("Справочник.Поставщики.ФизическоеЛицо");
		КонецЕсли;		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Клиент) Тогда
		Клиент = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("КлиентПоУмолчанию");
		Если НЕ ЗначениеЗаполнено(Клиент) Тогда
			Клиент = ПредопределенноеЗначение("Справочник.Клиенты.ФизическоеЛицо");
		КонецЕсли;		
	КонецЕсли;
	
	Если НЕ ИспользоватьРегистрациюПриемаИВыдачиДенегПрямоВДокументахРасходаИПрихода Тогда
		Элементы.ЗаказКлиентаСПредоплатой.Видимость = ЛОЖЬ;
		Элементы.ЗаказПоставщикуСПредоплатой.Видимость = ЛОЖЬ;
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ОтключитьПланированиеВДокументеВыполненияРабот") Тогда
		Элементы.ВыполненияРаботБезПлана.Видимость = ЛОЖЬ;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Инвентаризация(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоСкладам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ИнвентаризацияЗавершение", ЭтаФорма, Новый Структура("Склад", Склад)), Склад, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Склад инвентаризации") + ": ", тип("СправочникСсылка.Склады"));
        Возврат;
	КонецЕсли;
	
	ИнвентаризацияФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнвентаризацияЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Склад = ?(Значение = Неопределено, ДополнительныеПараметры.Склад, Значение);	
	
	ИнвентаризацияФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ИнвентаризацияФрагмент()
	
	Перем ПараметрыФормы;
	
	ПараметрыФормы = Новый Структура("Склад", Склад);;
	ОткрытьФорму("Документ.Инвентаризации.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура КомплектацияПоСпецификациям(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПоказатьВводЗначения(Новый ОписаниеОповещения("КомплектацияПоСпецификациямЗавершение", ЭтаФорма, Новый Структура("Спецификация", Спецификация)), Спецификация, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите спецификацию") + ": ", тип("СправочникСсылка.Спецификации"));
	
КонецПроцедуры

&НаКлиенте
Процедура КомплектацияПоСпецификациямЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Спецификация = ?(Значение = Неопределено, ДополнительныеПараметры.Спецификация, Значение);	
	
	ПараметрыФормы = Новый Структура("Спецификация", Спецификация);
	ИмяНеобходимойФормы = "Документ.Комплектация.Форма.ФормаДокумента";
	ОткрытьФорму(ИмяНеобходимойФормы, ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура КорректировкаВводОстатков(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Документ.КорректировкиИРегистрацияОстатков.Форма.ФормаДокумента", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура КорректировкаВзаимозачетовДолгаКонтрагентов(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Документ.КорректировкиИРегистрацияОстатков.Форма.ФормаДокументаВзаимоЗачетаДолгаКонтрагентов", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура НачислениеИВыдачаЗаработнойПлаты(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("РасчетЗП", ИСТИНА);
	ОткрытьФорму("Документ.ДвиженияДенег.Форма.ФормаДокумента", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйКлиент(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.Клиенты.ФормаОбъекта", ПараметрыФормы, неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйОбъектКлиента(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("НовыйОбъектКлиентаЗавершение", ЭтаФорма, Новый Структура("Клиент", Клиент)), Клиент, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Клиента") + ": ", тип("СправочникСсылка.Клиенты"));
        Возврат;
	КонецЕсли;
	
	НовыйОбъектКлиентаФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйОбъектКлиентаЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Клиент = ?(Значение = Неопределено, ДополнительныеПараметры.Клиент, Значение);	
	
	НовыйОбъектКлиентаФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура НовыйОбъектКлиентаФрагмент()
	
	Перем ПараметрыФормы;
	
	ПараметрыФормы = Новый Структура("Клиент", Клиент);
	ОткрытьФорму("Справочник.ОбъектыКлиентов.ФормаОбъекта", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура НовыйПоставщик(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.Поставщики.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйПроизводитель(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.Производители.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйРегион(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.Регионы.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура Номенклатура(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбменВалют(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("ОбменВалют", ИСТИНА);
	ОткрытьФорму("Документ.ДвиженияДенег.Форма.ФормаДокумента", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОказаниеУслугЗаВремя(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ОказаниеУслугЗаВремяЗавершение", ЭтаФорма, Новый Структура("Клиент", Клиент)), Клиент, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Клиента") + ": ", тип("СправочникСсылка.Клиенты"));
        Возврат;
	КонецЕсли;
	
	ОказаниеУслугЗаВремяФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ОказаниеУслугЗаВремяЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Клиент = ?(Значение = Неопределено, ДополнительныеПараметры.Клиент, Значение);	
	
	ОказаниеУслугЗаВремяФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ОказаниеУслугЗаВремяФрагмент()
	
	Перем ПараметрыФормы;
	
	ПараметрыФормы = Новый Структура("Клиент", Клиент);
	ОткрытьФорму("Документ.ОказанияУслугЗаВремя.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ОплатаПоставщику(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоПоставщикам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ОплатаПоставщикуЗавершение", ЭтаФорма, Новый Структура("Поставщик", Поставщик)), Поставщик, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Поставщика для оплаты") + ": ", тип("СправочникСсылка.Поставщики"));
        Возврат;
	КонецЕсли;
	
	ОплатаПоставщикуФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатаПоставщикуЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Поставщик = ?(Значение = Неопределено, ДополнительныеПараметры.Поставщик, Значение);	
	
	ОплатаПоставщикуФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ОплатаПоставщикуФрагмент()
	
	Перем ПараметрыФормы;
	
	ПараметрыФормы = Новый Структура("КлиентПоставщик", Поставщик);
	ПараметрыФормы.Вставить("ЭтоРасход", ИСТИНА);
	ОткрытьФорму("Документ.ДвиженияДенег.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ОприходованиеТовараНеОтПоставщика(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Документ.ПоступленияТовара.Форма.ФормаДокумента", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетыКомиссионеров(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ОтчетыКомиссионеровЗавершение", ЭтаФорма, Новый Структура("Клиент", Клиент)), Клиент, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Комиссионера") + ":", тип("СправочникСсылка.Клиенты"));
        Возврат;
	КонецЕсли;
	
	ОтчетыКомиссионеровФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетыКомиссионеровЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Клиент = ?(Значение = Неопределено, ДополнительныеПараметры.Клиент, Значение);	
	
	ОтчетыКомиссионеровФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ОтчетыКомиссионеровФрагмент()
	
	Перем ИмяНеобходимойФормы, ПараметрыФормы;
	
	ПараметрыФормы = Новый Структура("Комиссионер", Клиент);
	ИмяНеобходимойФормы = "Документ.ОтчетыКомиссионеров.Форма.ФормаДокумента";
	ОткрытьФорму(ИмяНеобходимойФормы, ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ТекущаяСтраница = Элементы.ГруппаСтраниц.ТекущаяСтраница;
	СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
	СтраницаПанели  = СтраницыПанели.Индекс(ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеремещениеТоваров(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоСкладам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ПеремещениеТоваровЗавершение", ЭтаФорма, Новый Структура("Склад", Склад)), Склад, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Склад, откуда перемещается товар") + ": ", тип("СправочникСсылка.Склады"));
        Возврат;
	КонецЕсли;
	
	ПеремещениеТоваровФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеремещениеТоваровЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Склад = ?(Значение = Неопределено, ДополнительныеПараметры.Склад, Значение);	
	
	ПеремещениеТоваровФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ПеремещениеТоваровФрагмент()
	
	Перем ПараметрыФормы;
	
	ПараметрыФормы = Новый Структура("Склад", Склад);;
	ОткрытьФорму("Документ.ПеремещенияТовара.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ПланДоходовИРасходов(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ИмяНеобходимойФормы = "Документ.ПланыДоходовИРасходовДенег.Форма.ФормаДокумента";
	ОткрытьФорму(ИмяНеобходимойФормы, ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланПродаж(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ИмяНеобходимойФормы = "Документ.ПланыПродаж.Форма.ФормаДокумента";
	ОткрытьФорму(ИмяНеобходимойФормы, ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоступлениеОплатыОтКлиента(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ПоступлениеОплатыОтКлиентаЗавершение", ЭтаФорма, Новый Структура("Клиент", Клиент)), Клиент, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Клиента (плательщика)") + ": ", тип("СправочникСсылка.Клиенты"));
        Возврат;
	КонецЕсли;
	
	ПоступлениеОплатыОтКлиентаФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоступлениеОплатыОтКлиентаЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Клиент = ?(Значение = Неопределено, ДополнительныеПараметры.Клиент, Значение);	
	
	ПоступлениеОплатыОтКлиентаФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ПоступлениеОплатыОтКлиентаФрагмент()
	
	Перем ПараметрыФормы;
	
	ПараметрыФормы = Новый Структура("КлиентПоставщик", Клиент);
	ПараметрыФормы.Вставить("ЭтоРасход", ЛОЖЬ);
	ОткрытьФорму("Документ.ДвиженияДенег.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ПриобретениеТоваровУслуг(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоПоставщикам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ПриобретениеТоваровУслугЗавершение", ЭтаФорма, Новый Структура("Поставщик", Поставщик)), Поставщик, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Поставщика товаров, услуг") + ": ", тип("СправочникСсылка.Поставщики"));
        Возврат;
	КонецЕсли;
	
	ПриобретениеТоваровУслугФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриобретениеТоваровУслугЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Поставщик = ?(Значение = Неопределено, ДополнительныеПараметры.Поставщик, Значение);	
	
	ПриобретениеТоваровУслугФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ПриобретениеТоваровУслугФрагмент()
	
	Перем ПараметрыФормы;
	
	ПараметрыФормы = Новый Структура("КлиентПоставщик", Поставщик);
	ОткрытьФорму("Документ.ПоступленияТовара.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(СтраницаПанели)Тогда
		
		Попытка
			СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
			ТекущаяСтраница = СтраницыПанели.получить(СтраницаПанели);
			Элементы.ГруппаСтраниц.ТекущаяСтраница = ТекущаяСтраница;
		Исключение
		КонецПопытки;	
	КонецЕсли;
	
	ЗаполнитьРеквизиты();
	
	ПодключитьОбработчикОжидания("ПослеИзображенияОкнаФормы", 0.3, ИСТИНА);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзображенияОкнаФормы() // Когда окно уже нарисовано пользователю
	ЭтаФорма.Элементы.ФормаЗакрыть.Видимость = НЕ ЭтаФорма.Окно = Неопределено;	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
	ИспользоватьРегистрациюПриемаИВыдачиДенегПрямоВДокументахРасходаИПрихода = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьРегистрациюПриемаИВыдачиДенегПрямоВДокументахРасходаИПрихода");
	ИспользоватьРегионыДляУчетаСтранАЛокацииГородов = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьРегионыДляУчетаСтранАЛокацииГородов");
	
	Если ИспользоватьРегионыДляУчетаСтранАЛокацииГородов Тогда
		Элементы.ДобавитьНовыйПереводЭлементаИнтерфейса.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса");
		Элементы.НовыйРегион.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Добавить Страну");
		Элементы.НоваяЛокация.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Добавить Город");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочееВыбытиеДенег(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("ЭтоРасход", ИСТИНА);
	ОткрытьФорму("Документ.ДвиженияДенег.Форма.ФормаДокумента", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочееПоступлениеДенег(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Документ.ДвиженияДенег.Форма.ФормаДокумента", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура РеализацияКлиентуЧастномуЛицу(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("КлиентПоставщик", ПредопределенноеЗначение("Справочник.Клиенты.ФизическоеЛицо"));
	ОткрытьФорму("Документ.РасходыТовара.Форма.ФормаДокумента", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура РеализацияТоваровУслуг(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("РеализацияТоваровУслугЗавершение", ЭтаФорма, Новый Структура("Клиент", Клиент)), Клиент, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Клиента (покупателя)") + ": ", тип("СправочникСсылка.Клиенты"));
        Возврат;
	КонецЕсли;
	
	РеализацияТоваровУслугФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура РеализацияТоваровУслугЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Клиент = ?(Значение = Неопределено, ДополнительныеПараметры.Клиент, Значение);	
	
	РеализацияТоваровУслугФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура РеализацияТоваровУслугФрагмент()
	
	Перем ПараметрыФормы;
	
	ПараметрыФормы = Новый Структура("КлиентПоставщик", Клиент);
	ОткрытьФорму("Документ.РасходыТовара.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура РеестрДвиженияДенег(Команда)
	
	ПараметрыФормыРеестра = Новый Структура;
	ОткрытьФорму("Документ.ДвиженияДенег.Форма.РеестрДвиженияДенег", ПараметрыФормыРеестра);
	
КонецПроцедуры

&НаКлиенте
Процедура СписаниеТовара(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДляСписания", ИСТИНА);
	ОткрытьФорму("Документ.РасходыТовара.Форма.ФормаДокумента", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановкаЦен(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Документ.УстановкиЦен.Форма.ФормаДокумента", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура НоваяЛокация(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Регион = ПредопределенноеЗначение("Справочник.Регионы.НашРегион");	
	ПоказатьВводЗначения(Новый ОписаниеОповещения("НоваяЛокацияЗавершение", ЭтаФорма, Новый Структура("Регион", Регион)), Регион, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите") + " " + ?(ИспользоватьРегионыДляУчетаСтранАЛокацииГородов, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Страну"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Регион")), тип("СправочникСсылка.Регионы"));
	
КонецПроцедуры

&НаКлиенте
Процедура НоваяЛокацияЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Регион = ?(Значение = Неопределено, ДополнительныеПараметры.Регион, Значение);	
	
	ПараметрыФормы = Новый Структура("Регион", Регион);
	ОткрытьФорму("Справочник.Локации.ФормаОбъекта", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура НовыйКлиентВыбратьТоварЗаказ(Команда)
	
	НовыйКонтрагент = ОбщийМодульСервер.СоздатьНовыйИлиНайтиЭлементДокумент(ИСТИНА, "Клиенты", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Новый Клиент"));
	ПараметрыФормы = Новый Структура("Ключ", НовыйКонтрагент);
	ФормаКонтрагента = ПолучитьФорму("Справочник.Клиенты.ФормаОбъекта", ПараметрыФормы, НовыйКонтрагент);
	ФормаКонтрагента.ОткрытьМодально();	
	
	Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	ПоказатьВводЗначения(Новый ОписаниеОповещения("НовыйКлиентВыбратьТоварЗаказЗавершение1", ЭтаФорма, Новый Структура("НовыйКонтрагент, Номенклатура", НовыйКонтрагент, Номенклатура)), Номенклатура, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Товар или Услугу"));
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйКлиентВыбратьТоварЗаказЗавершение1(Значение, ДополнительныеПараметры) Экспорт
	
	НовыйКонтрагент = ДополнительныеПараметры.НовыйКонтрагент;
	Номенклатура = ?(Значение = Неопределено, ДополнительныеПараметры.Номенклатура, Значение);	
	
	Если (Значение <> Неопределено) Тогда 
		Если ЗначениеЗаполнено(Номенклатура) Тогда		
			
			Количество = 1;
			
			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("КоличествоНоменклатурыМожетБытьДробным") Тогда
				ПоказатьВводЧисла(Новый ОписаниеОповещения("НовыйКлиентВыбратьТоварЗаказЗавершениеКолво", ЭтаФорма, Новый Структура("НовыйКонтрагент, Количество", НовыйКонтрагент, Количество)), Количество, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Количество"), 15, ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ЧислоЗнаковПослеЗапятойДляКоличества"));
				Возврат;
			Иначе
				ПоказатьВводЧисла(Новый ОписаниеОповещения("НовыйКлиентВыбратьТоварЗаказЗавершение", ЭтаФорма, Новый Структура("НовыйКонтрагент, Количество", НовыйКонтрагент, Количество)), Количество, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Количество"), 12);
				Возврат;
			КонецЕсли;		
			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НовыйКлиентВыбратьТоварЗаказЗавершениеКолво(Число, ДополнительныеПараметры) Экспорт
	
	НовыйКонтрагент = ДополнительныеПараметры.НовыйКонтрагент;
	Количество = ?(Число = Неопределено, ДополнительныеПараметры.Количество, Число);
	
	РезультатНеОтменен = (Число <> Неопределено);
	
	НовыйКлиентВыбратьТоварЗаказФрагмент(Количество, НовыйКонтрагент, РезультатНеОтменен);

КонецПроцедуры

&НаКлиенте
Процедура НовыйКлиентВыбратьТоварЗаказЗавершение(Число, ДополнительныеПараметры) Экспорт
	
	НовыйКонтрагент = ДополнительныеПараметры.НовыйКонтрагент;
	Количество = ?(Число = Неопределено, ДополнительныеПараметры.Количество, Число);
	
	РезультатНеОтменен = (Число <> Неопределено);
	
	НовыйКлиентВыбратьТоварЗаказФрагмент(Количество, НовыйКонтрагент, РезультатНеОтменен);

КонецПроцедуры

&НаКлиенте
Процедура НовыйКлиентВыбратьТоварЗаказФрагмент(Знач Количество, Знач НовыйКонтрагент, Знач РезультатНеОтменен)
	
	Перем ИмяНеобходимойФормы, ПараметрыФормы, ФормаДокумента;
	
	Если РезультатНеОтменен Тогда
		ПараметрыФормы = Новый Структура("КлиентПоставщик", НовыйКонтрагент);
		ПараметрыФормы.Вставить("Номенклатура", Номенклатура);
		ПараметрыФормы.Вставить("Количество", Количество);		
		ИмяНеобходимойФормы = "Документ.РасходыТовара.Форма.ФормаДокументаЗаказ";
		ФормаДокумента = ПолучитьФорму(ИмяНеобходимойФормы, ПараметрыФормы);
		ФормаДокумента.Открыть();	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НовыйКлиентВыбратьТоварПродажа(Команда)
	
	НовыйКонтрагент = ОбщийМодульСервер.СоздатьНовыйИлиНайтиЭлементДокумент(ИСТИНА, "Клиенты", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Новый Клиент"));
	ПараметрыФормы = Новый Структура("Ключ", НовыйКонтрагент);
	ФормаКонтрагента = ПолучитьФорму("Справочник.Клиенты.ФормаОбъекта", ПараметрыФормы, НовыйКонтрагент);
	ФормаКонтрагента.ОткрытьМодально();	
	
	Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	ПоказатьВводЗначения(Новый ОписаниеОповещения("НовыйКлиентВыбратьТоварПродажаЗавершение2", ЭтаФорма, Новый Структура("НовыйКонтрагент, Номенклатура", НовыйКонтрагент, Номенклатура)), Номенклатура, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Товар или Услугу"));
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйКлиентВыбратьТоварПродажаЗавершение2(Значение, ДополнительныеПараметры) Экспорт
	
	НовыйКонтрагент = ДополнительныеПараметры.НовыйКонтрагент;
	Номенклатура = ?(Значение = Неопределено, ДополнительныеПараметры.Номенклатура, Значение);	
	
	Если (Значение <> Неопределено) Тогда
		Если ЗначениеЗаполнено(Номенклатура) Тогда		
			
			Количество = 1;
			
			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("КоличествоНоменклатурыМожетБытьДробным") Тогда
				ПоказатьВводЧисла(Новый ОписаниеОповещения("НовыйКлиентВыбратьТоварПродажаЗавершение1", ЭтаФорма, Новый Структура("НовыйКонтрагент, Количество", НовыйКонтрагент, Количество)), Количество, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Количество"), 15, ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ЧислоЗнаковПослеЗапятойДляКоличества"));
				Возврат;
			Иначе
				ПоказатьВводЧисла(Новый ОписаниеОповещения("НовыйКлиентВыбратьТоварПродажаЗавершение", ЭтаФорма, Новый Структура("НовыйКонтрагент, Количество", НовыйКонтрагент, Количество)), Количество, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Количество"), 12);
				Возврат;
			КонецЕсли;		
			
			НовыйКлиентВыбратьТоварПродажаФрагмент(Количество, НовыйКонтрагент, ИСТИНА);
			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НовыйКлиентВыбратьТоварПродажаЗавершение1(Число, ДополнительныеПараметры) Экспорт
	
	НовыйКонтрагент = ДополнительныеПараметры.НовыйКонтрагент;
	Количество = ?(Число = Неопределено, ДополнительныеПараметры.Количество, Число);
	
	РезультатНеОтменен = (Число <> Неопределено);
	
	НовыйКлиентВыбратьТоварПродажаФрагмент(Количество, НовыйКонтрагент, РезультатНеОтменен);

КонецПроцедуры

&НаКлиенте
Процедура НовыйКлиентВыбратьТоварПродажаЗавершение(Число, ДополнительныеПараметры) Экспорт
	
	НовыйКонтрагент = ДополнительныеПараметры.НовыйКонтрагент;
	Количество = ?(Число = Неопределено, ДополнительныеПараметры.Количество, Число);
	
	РезультатНеОтменен = (Число <> Неопределено);
	
	НовыйКлиентВыбратьТоварПродажаФрагмент(Количество, НовыйКонтрагент, РезультатНеОтменен);

КонецПроцедуры

&НаКлиенте
Процедура НовыйКлиентВыбратьТоварПродажаФрагмент(Знач Количество, Знач НовыйКонтрагент, Знач РезультатНеОтменен)
	
	Перем ПараметрыФормы, ФормаДокумента;
	
	Если РезультатНеОтменен Тогда
		ПараметрыФормы = Новый Структура("КлиентПоставщик", НовыйКонтрагент);
		ПараметрыФормы.Вставить("Номенклатура", Номенклатура);
		ПараметрыФормы.Вставить("Количество", Количество);		
		ФормаДокумента = ПолучитьФорму("Документ.РасходыТовара.Форма.ФормаДокумента", ПараметрыФормы);
		ФормаДокумента.Открыть();	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНаправлениеДеятельности(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.НаправленияДеятельности.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПроизвольнуюПечатнуюФорму(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.ПроизвольныеПечатныеФормы.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНовыйПереводЭлементаИнтерфейса(Команда)
	
	ПараметрыФормыЗаписи = Новый Структура("ЭтоЭлементИнтерфейса", ИСТИНА);
	ОткрытьФорму("РегистрСведений.ТекстыНаДругихЯзыках.ФормаЗаписи", ПараметрыФормыЗаписи, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНовыйПеревод(Команда)
	
	ПараметрыФормыЗаписи = Новый Структура("ЭтоЭлементИнтерфейса", ЛОЖЬ);
	ОткрытьФорму("РегистрСведений.ТекстыНаДругихЯзыках.ФормаЗаписи", ПараметрыФормыЗаписи, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВаучер(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.Ваучеры.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьЦеныПоставщика(Команда)
	
	ЭтаФорма.Закрыть();
	ПараметрыФормы = Новый Структура("ДляЦенПоставщика", ИСТИНА);
	ОткрытьФорму("Документ.УстановкиЦен.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьУпаковкуИлиФормуТоваров(Команда)
	
	ЭтаФорма.Закрыть();
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.УпаковкаИлиФорма.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКатегориюКонтрагентов(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.КатегорииКонтрагентов.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВидСобытий(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.ВидыСобытий.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСобытие(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Документ.События.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВнутреннийЗаказ(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоСкладам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ДобавитьВнутреннийЗаказЗавершение", ЭтаФорма, Новый Структура("Склад", Склад)), Склад, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Склад, куда заказывается товар") + ": ", тип("СправочникСсылка.Склады"));
        Возврат;
	КонецЕсли;
	
	ДобавитьВнутреннийЗаказФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВнутреннийЗаказЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Склад = ?(Значение = Неопределено, ДополнительныеПараметры.Склад, Значение);	
	
	ДобавитьВнутреннийЗаказФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВнутреннийЗаказФрагмент()
	
	Перем ПараметрыФормы;
	
	ПараметрыФормы = Новый Структура("Склад", Склад);;
	ОткрытьФорму("Документ.ВнутренниеЗаказы.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура СоздатьТендер(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Документ.Тендеры.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВидДеятельности(Команда)
	
	Если НЕ ЭтаФорма.Окно = Неопределено Тогда
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.ВидыДеятельности.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры
