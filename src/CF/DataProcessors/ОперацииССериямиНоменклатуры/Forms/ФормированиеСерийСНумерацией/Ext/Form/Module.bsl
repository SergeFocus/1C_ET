// sza150525-2339 для ваучера
// sza140610-0359
// sza140112-0516 :

&НаКлиенте
Процедура ВсегоНомеровПриИзменении(Элемент)

	КонечныйНомерСерии = НачальныйНомерСерии + ВсегоНомеров - 1;
	ОбновитьПримерыСерий();

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьШагНомера(Команда)

	НачальныйНомерСерии = КонечныйНомерСерии + 1;
	КонечныйНомерСерии = НачальныйНомерСерии + ВсегоНомеров;
	ОбновитьПримерыСерий();

КонецПроцедуры

&НаКлиенте
Процедура ДобавлятьЛидирующиеНулиПриИзменении(Элемент)
	ОбновитьПримерыСерий();
КонецПроцедуры

&НаКлиенте
Процедура КонечныйНомерСерииПриИзменении(Элемент)

	ВсегоНомеров = КонечныйНомерСерии - НачальныйНомерСерии - 1;
	ОбновитьПримерыСерий();

КонецПроцедуры

&НаКлиенте
Процедура НачальныйНомерСерииПриИзменении(Элемент)

	КонечныйНомерСерии = НачальныйНомерСерии + ВсегоНомеров - 1;
	ОбновитьПримерыСерий();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПримерыСерий()

	ЛидирующиеНули = "";

	Если ДобавлятьЛидирующиеНули Тогда
		сч = 0;
		ДлинаНачальногоНомера = СтрДлина(формат(НачальныйНомерСерии, "ЧДЦ=; ЧРГ=' '; ЧГ=0"));
		ДлинаКонечногоНомера  = СтрДлина(формат(КонечныйНомерСерии, "ЧДЦ=; ЧРГ=' '; ЧГ=0"));

		пока сч < (ДлинаНачальногоНомера - ДлинаНачальногоНомера) Цикл
			сч = сч + 1;
			ЛидирующиеНули = ЛидирующиеНули + "0";
		КонецЦикла;
	КонецЕсли;

	ПримерПервогоНомераСерии = ПрефиксАвтоНумерации + ЛидирующиеНули + формат(НачальныйНомерСерии, "ЧДЦ=; ЧРГ=' '; ЧГ=0") + ПостфиксАвтоНумерации;
	ПримерПоследнегоНомераСерии = ПрефиксАвтоНумерации + формат(КонечныйНомерСерии, "ЧДЦ=; ЧРГ=' '; ЧГ=0") + ПостфиксАвтоНумерации;

КонецПроцедуры // ОбновитьПримерыСерий

&НаКлиенте
Процедура ПостфиксАвтоНумерацииПриИзменении(Элемент)
	ОбновитьПримерыСерий();
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксАвтоНумерацииПриИзменении(Элемент)
	ОбновитьПримерыСерий();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);

	Если ВсегоНомеров = 0 Тогда
		ВсегоНомеров = КонечныйНомерСерии - НачальныйНомерСерии;
	КонецЕсли;

	Если ВсегоНомеров = 0 Тогда
		ВсегоНомеров = 1;
		КонечныйНомерСерии = НачальныйНомерСерии + ВсегоНомеров;
	КонецЕсли;

	ОбновитьПримерыСерий();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа(?(Параметры.ДляВаучера, "000610", "000300"), ЭтаФорма, Отказ, );

	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);
		КонецЕсли;

		Если Параметры.ДляВаучера Тогда
			ЭтаФорма.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Формирование номеров ваучеров за счет авто-нумерации");
			Элементы.ФормаСформироватьСерииСогласноУсловиям.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Формировать серии согласно условиям");
			Элементы.НоменклатураДляДобавленияСерий.Заголовок 		  = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Тип ваучеров");
			НоменклатураДляДобавленияСерий 					= Параметры.ТипВаучера;
			Элементы.НачальныйНомерСерии.Заголовок 			= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Начальный номер ваучеров");
			Элементы.КонечныйНомерСерии.Заголовок  			= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Конечный номер ваучеров");
			Элементы.ПримерПервогоНомераСерии.Заголовок 	= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Пример первого номера ваучера");
			Элементы.ПримерПоследнегоНомераСерии.Заголовок  = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Пример последнего номера ваучера");
			НоминалПроцент = Параметры.НоминалПроцент;
			ТипВаучераСкидочнаяКартаПроцент = НоменклатураДляДобавленияСерий = ПредопределенноеЗначение("Перечисление.ТипыВаучера.СкидочнаяКартаПроцент");
			ТипВаучераСкидочнаяКартаСумма	= НоменклатураДляДобавленияСерий = ПредопределенноеЗначение("Перечисление.ТипыВаучера.СкидочнаяКартаСумма");
			ТипВаучераПодарочнаяКарта 		= НоменклатураДляДобавленияСерий = ПредопределенноеЗначение("Перечисление.ТипыВаучера.ПодарочнаяКарта");
			ТипВаучераНакопительнаяКарта 	= НоменклатураДляДобавленияСерий = ПредопределенноеЗначение("Перечисление.ТипыВаучера.НакопительнаяКарта");
			Элементы.НоминалПроцент.Видимость = ИСТИНА;

			Если ТипВаучераСкидочнаяКартаПроцент Тогда
				Элементы.НоминалПроцент.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Процент скидки");
			ИначеЕсли ТипВаучераСкидочнаяКартаСумма Тогда
				Элементы.НоминалПроцент.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сумма скидки");
			ИначеЕсли ТипВаучераПодарочнаяКарта Тогда
				Элементы.НоминалПроцент.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Номинал");
			ИначеЕсли ТипВаучераНакопительнаяКарта Тогда
				Элементы.НоминалПроцент.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Накоплено");
				Элементы.НоминалПроцент.Видимость = ЛОЖЬ;
			Иначе
				Элементы.НоминалПроцент.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Номинал или процент");
				Элементы.НоминалПроцент.Видимость = ЛОЖЬ;
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(Параметры.Номенклатура) Тогда
			НоменклатураДляДобавленияСерий = Параметры.Номенклатура;
		КонецЕсли;
	КонецЕсли;

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСерииСогласноУсловиям(Команда)

	Если ВсегоНомеров > 9998 Тогда
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Номеров серий слишком много!"));
	Иначе
		СтруктураВозврат = Новый Структура;
		СтруктураВозврат.Вставить("ПрефиксАвтоНумерации", ПрефиксАвтоНумерации);
		СтруктураВозврат.Вставить("НачальныйНомерСерии", НачальныйНомерСерии);
		СтруктураВозврат.Вставить("КонечныйНомерСерии", КонечныйНомерСерии);
		СтруктураВозврат.Вставить("ПостфиксАвтоНумерации", ПостфиксАвтоНумерации);
		СтруктураВозврат.Вставить("ДобавлятьЛидирующиеНули", ДобавлятьЛидирующиеНули);
		СтруктураВозврат.Вставить("НоменклатураДляДобавленияСерий", НоменклатураДляДобавленияСерий);
		СтруктураВозврат.Вставить("НоминалПроцент", НоминалПроцент);
		Закрыть(СтруктураВозврат);
	КонецЕсли;

КонецПроцедуры
