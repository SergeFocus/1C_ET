// sza160323-0223

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
		ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);
	КонецЕсли;

	ОсновнаяВалюта = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
	Поставщик = ПредопределенноеЗначение("Справочник.Поставщики.ФизическоеЛицо");
	Клиент = ПредопределенноеЗначение("Справочник.Клиенты.ФизическоеЛицо");
	ОстатокДенег = ОбщийМодульСервер.ПолучитьОстатокДенег(, , , , ИСТИНА);

	ТекущийПользователь = ОбщийМодульПовтор.ПолучитьПараметрСеанса("ТекущийПользователь");
	ОписаниеДоступа = ОбщийМодульПовтор.ПолучитьУровеньДоступа("000150", ТекущийПользователь);
	Если НЕ ОписаниеДоступа.УровеньДоступа = Перечисления.УровниДоступа.ПолныйДоступ Тогда
		Элементы.Обработки.Видимость = ЛОЖЬ;
		Элементы.Настройки.Видимость = ЛОЖЬ;
	КонецЕсли;

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОстаток(Команда)
	ОстатокДенег = ОбщийМодульСервер.ПолучитьОстатокДенег(, , , , ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура Вернуть(Команда)

	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоПоставщикам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ВозвратТоваровПоставщикуЗавершение", ЭтаФорма, Новый Структура("Поставщик", Поставщик)), Поставщик, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Поставщика для возврата товара") + ": ", тип("СправочникСсылка.Поставщики"));

		Возврат;
	Иначе
		ВозвратТоваровПоставщикуФрагмент();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВозвратТоваровПоставщикуФрагмент()

	ПараметрыФормы = Новый Структура("КлиентПоставщик", Поставщик);
	ОткрытьФорму("Документ.РасходыТовара.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ВозвратОт(Команда)

	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ВозвратТовараОтКлиентаПокупателяЗавершение", ЭтаФорма, Новый Структура("Клиент", Клиент)), Клиент, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Клиента, который возвращает товар") + ": ", тип("СправочникСсылка.Клиенты"));

		Возврат;
	Иначе
		ВозвратТовараОтКлиентаПокупателяФрагмент();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВозвратТовараОтКлиентаПокупателяЗавершение(Значение, ДополнительныеПараметры) Экспорт

	Клиент = ?(Значение = Неопределено, ДополнительныеПараметры.Клиент, Значение);
	ВозвратТовараОтКлиентаПокупателяФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьРаботу(Команда)

	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ВыполненияРаботЗавершение", ЭтаФорма, Новый Структура("Клиент", Клиент)), Клиент, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Клиента") + ": ", тип("СправочникСсылка.Клиенты"));

		Возврат;
	Иначе
		ВыполненияРаботФрагмент();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыполненияРаботФрагмент()

	ПараметрыФормы = Новый Структура("КлиентПоставщик", Клиент);
	ОткрытьФорму("Документ.ВыполненияРабот.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура Документы(Команда)
	ОткрытьФорму("ОбщаяФорма.ВыборДокумента");
КонецПроцедуры

&НаКлиенте
Процедура Справочники(Команда)
	ОткрытьФорму("ОбщаяФорма.ВыборСправочника");
КонецПроцедуры

&НаКлиенте
Процедура Отчеты(Команда)
	ОткрытьФорму("ОбщаяФорма.ВыборОтчета");
КонецПроцедуры

&НаКлиенте
Процедура Обработки(Команда)
	ОткрытьФорму("ОбщаяФорма.ВыборОбработки");
КонецПроцедуры

&НаКлиенте
Процедура Клиенты(Команда)
	ОткрытьФорму("Справочник.Клиенты.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура Номенклатура(Команда)
	ОткрытьФорму("Справочник.Номенклатура..ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура Комплектовать(Команда)
	ПоказатьВводЗначения(Новый ОписаниеОповещения("КомплектацияПоСпецификациямЗавершение", ЭтаФорма, Новый Структура("Спецификация", Спецификация)), Спецификация, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите спецификацию") + ": ", тип("СправочникСсылка.Спецификации"));
КонецПроцедуры

&НаКлиенте
Процедура КомплектацияПоСпецификациямЗавершение(Значение, ДополнительныеПараметры) Экспорт

	Спецификация = ?(Значение = Неопределено, ДополнительныеПараметры.Спецификация, Значение);
	ПараметрыФормы = Новый Структура("Спецификация", Спецификация);
	ИмяНеобходимойФормы = "Документ.Комплектация.Форма.ФормаДокумента";
	ОткрытьФорму(ИмяНеобходимойФормы, ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура Купить(Команда)

	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоПоставщикам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ПриобретениеТоваровУслугЗавершение", ЭтаФорма, Новый Структура("Поставщик", Поставщик)), Поставщик, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Поставщика товаров, услуг") + ": ", тип("СправочникСсылка.Поставщики"));

		Возврат;
	Иначе
		ПриобретениеТоваровУслугФрагмент();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриобретениеТоваровУслугФрагмент()

	ПараметрыФормы = Новый Структура("КлиентПоставщик", Поставщик);
	ОткрытьФорму("Документ.ПоступленияТовара.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
	ОткрытьФорму("ОбщаяФорма.НастройкиБазыДанных");
КонецПроцедуры

&НаКлиенте
Процедура ОтдатьДеньги(Команда)

	ПараметрыФормы = Новый Структура("ЭтоРасход", ИСТИНА);
	ОткрытьФорму("Документ.ДвиженияДенег.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура Переместить(Команда)

	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоСкладам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ПеремещениеТоваровЗавершение", ЭтаФорма, Новый Структура("Склад", Склад)), Склад, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Склад, откуда перемещается товар") + ": ", тип("СправочникСсылка.Склады"));

        Возврат;
	Иначе
		ПеремещениеТоваровФрагмент();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПеремещениеТоваровФрагмент()

	ПараметрыФормы = Новый Структура("Склад", Склад);;
	ОткрытьФорму("Документ.ПеремещенияТовара.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ПринятьДеньги(Команда)

	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Документ.ДвиженияДенег.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура Продать(Команда)

	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("РеализацияТоваровУслугЗавершение", ЭтаФорма, Новый Структура("Клиент", Клиент)), Клиент, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Клиента (покупателя)") + ": ", тип("СправочникСсылка.Клиенты"));

        Возврат;
	Иначе
		РеализацияТоваровУслугФрагмент();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РеализацияТоваровУслугФрагмент()

	ПараметрыФормы = Новый Структура("КлиентПоставщик", Клиент);
	ОткрытьФорму("Документ.РасходыТовара.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура Событие(Команда)

	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Документ.События.ФормаОбъекта", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ВозвратТовараОтКлиентаПокупателяФрагмент()

	ПараметрыФормы = Новый Структура("КлиентПоставщик", Клиент);
	ОткрытьФорму("Документ.ПоступленияТовара.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура Списать(Команда)

	ПараметрыФормы = Новый Структура("ДляСписания", ИСТИНА);
	ОткрытьФорму("Документ.РасходыТовара.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура УслугаЗаВремя(Команда)

	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам", ИСТИНА) Тогда
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ОказаниеУслугЗаВремяЗавершение", ЭтаФорма, Новый Структура("Клиент", Клиент)), Клиент, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите Клиента") + ": ", тип("СправочникСсылка.Клиенты"));

        Возврат;
	Иначе
		ОказаниеУслугЗаВремяФрагмент();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОказаниеУслугЗаВремяЗавершение(Значение, ДополнительныеПараметры) Экспорт

	Клиент = ?(Значение = Неопределено, ДополнительныеПараметры.Клиент, Значение);
	ОказаниеУслугЗаВремяФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ОказаниеУслугЗаВремяФрагмент()

	ПараметрыФормы = Новый Структура("Клиент", Клиент);
	ОткрытьФорму("Документ.ОказанияУслугЗаВремя.Форма.ФормаДокумента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	ПодключитьОбработчикОжидания("ПослеИзображенияОкнаФормы", 0.3, ИСТИНА);

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура РеализацияТоваровУслугЗавершение(Значение, ДополнительныеПараметры) Экспорт

	Клиент = ?(Значение = Неопределено, ДополнительныеПараметры.Клиент, Значение);
	РеализацияТоваровУслугФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ВыполненияРаботЗавершение(Значение, ДополнительныеПараметры) Экспорт

	Клиент = ?(Значение = Неопределено, ДополнительныеПараметры.Клиент, Значение);
	ВыполненияРаботФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ПриобретениеТоваровУслугЗавершение(Значение, ДополнительныеПараметры) Экспорт

	Поставщик = ?(Значение = Неопределено, ДополнительныеПараметры.Поставщик, Значение);
	ПриобретениеТоваровУслугФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ВозвратТоваровПоставщикуЗавершение(Значение, ДополнительныеПараметры) Экспорт

	Поставщик = ?(Значение = Неопределено, ДополнительныеПараметры.Поставщик, Значение);
	ВозвратТоваровПоставщикуФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ПеремещениеТоваровЗавершение(Значение, ДополнительныеПараметры) Экспорт

	Склад = ?(Значение = Неопределено, ДополнительныеПараметры.Склад, Значение);
	ПеремещениеТоваровФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ПослеИзображенияОкнаФормы() // Когда окно уже нарисовано пользователю
	ЭтаФорма.Элементы.Закрыть.Видимость = НЕ ЭтаФорма.Окно = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ПростаяПродажа(Команда)

	ПараметрыФормы = Новый Структура("Клиент", Клиент);
	ОткрытьФорму("Обработка.ОбычныеОперации.Форма.ПростаяПродажа", ПараметрыФормы);

КонецПроцедуры
