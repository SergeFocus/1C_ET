// sza160324-0138
// sza160323-0418

&НаКлиенте
Перем ТекСтр;

&НаКлиенте
Процедура ЧастныйПокупатель(Команда)

	Клиент = ПредопределенноеЗначение("Справочник.Клиенты.ФизическоеЛицо");
	ПриСменеКонтрагента();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("001800", ЭтаФорма, Отказ, Объект);

	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);
		КонецЕсли;

		ВестиУчетПоСкладам = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоСкладам");
		ИспользоватьРегистрациюПриемаИВыдачиДенегПрямоВДокументахРасходаИПрихода = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьРегистрациюПриемаИВыдачиДенегПрямоВДокументахРасходаИПрихода");
		ОсновнаяВалюта = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
		ВключитьМеханизмПодбораНоменклатуры = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВключитьМеханизмПодбораНоменклатуры");
		ИспользоватьПодключаемоеОборудование = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьПодключаемоеОборудование");

		Если ЗначениеЗаполнено(Параметры.Клиент) Тогда
			Клиент = Параметры.Клиент;
		ИначеЕсли НЕ ЗначениеЗаполнено(Клиент) Тогда
			Клиент = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("КлиентПоУмолчанию");
		КонецЕсли;

		Если НЕ Параметры.Дата = '00010101000000' Тогда
			Дата = Параметры.Дата;
		Иначе
			Дата = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
		КонецЕсли;

		Если ЗначениеЗаполнено(Параметры.ВидЦен) Тогда
			ВидЦен = Параметры.ВидЦен;
		ИначеЕсли НЕ ЗначениеЗаполнено(ВидЦен) Тогда
			ВидЦен = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВидЦенРасходованияПоУмолчанию");
		КонецЕсли;

		Если ЗначениеЗаполнено(ВидЦен) Тогда
			ВалютаЦены = ВидЦен.ВалютаЦены;
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ВалютаЦены) Тогда
			ВалютаЦены = ОсновнаяВалюта;
		КонецЕсли;

		БылаВалюта = ВалютаЦены;

		Если ЗначениеЗаполнено(Параметры.Организация) Тогда
			Организация = Параметры.Организация;
		ИначеЕсли НЕ ЗначениеЗаполнено(Организация) Тогда
			Организация = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ОрганизацияПоУмолчанию");
			Если НЕ ЗначениеЗаполнено(Организация) Тогда
				Организация = ПредопределенноеЗначение("Справочник.Организации.ОсновноеПредприятие");
			КонецЕсли;
		КонецЕсли;

		Если ЗначениеЗаполнено(Параметры.ХранилищеДенег) Тогда
			ХранилищеДенег = Параметры.ХранилищеДенег;
		ИначеЕсли НЕ ЗначениеЗаполнено(ХранилищеДенег) Тогда
			ХранилищеДенег = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ОсновноеХранилищеДенег");
		КонецЕсли;

		Валюта = ХранилищеДенег.Валюта;
		Если НЕ ЗначениеЗаполнено(Валюта) Тогда
			Валюта = ОсновнаяВалюта;
		КонецЕсли;

		Если ЗначениеЗаполнено(Параметры.Склад) Тогда
			Склад = Параметры.Склад;
		Иначе
			Склад = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("СкладПоУмолчанию");
			Если НЕ ЗначениеЗаполнено(Склад) Тогда
				Склад = ПредопределенноеЗначение("Справочник.Склады.ОсновнойСклад");
			КонецЕсли;
		КонецЕсли;

		Элементы.ГруппаДанныхКлиента.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам");
		Элементы.ВыберитеХранилищеДенегОплаты.Видимость = ИспользоватьРегистрациюПриемаИВыдачиДенегПрямоВДокументахРасходаИПрихода;
		Элементы.ПараметрыОплаты.Видимость = ИспользоватьРегистрациюПриемаИВыдачиДенегПрямоВДокументахРасходаИПрихода;
		Элементы.ТоварыПодборНоменклатуры.Видимость = ВключитьМеханизмПодбораНоменклатуры;

		ОбновитьЧастыйСпрос();
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.ТоварыКоличество);
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.ИтогоКоличество, , ИСТИНА);
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.ПоследнийДокументРеализацииТовараВКоличестве, , ИСТИНА);
	КонецЕсли;

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЧастыйСпрос()

	ТоварыЧастогоСпроса = ОбщийМодульПовтор.ПолучитьСписокНоменклатурыБыстрогоСпроса(ЛОЖЬ).Выгрузить();

	Если НЕ ТоварыЧастогоСпроса.Количество() = 0 Тогда
		ПоказыватьКнопкиДобавленияНоменклатурыЧастогоСпроса = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПоказыватьКнопкиДобавленияНоменклатурыЧастогоСпроса");
		Если ПоказыватьКнопкиДобавленияНоменклатурыЧастогоСпроса Тогда
			ЭлементыТоварыЧастогоСпроса  = Элементы.ГруппаКомандНоменклатурыЧастогоСпроса;
			НоваяДекорация = Элементы.найти("ЗаголовокЧастогоСпроса");

			Если НоваяДекорация = Неопределено Тогда
				НоваяДекорация = Элементы.Добавить("ЗаголовокЧастогоСпроса", тип("ДекорацияФормы"), элементыТоварыЧастогоСпроса);
				НоваяДекорация.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Частый спрос") + ": ";
			КонецЕсли;

			ЭлементыТоварыЧастогоСпроса.Видимость  = ИСТИНА;
		Иначе
			ЭлементыТоварыЧастогоСпроса  = Элементы.ТоварыЧастогоСпроса;
		КонецЕсли;

		Для Каждого Товар Из ТоварыЧастогоСпроса Цикл
			Позиция 	 = Товар.Позиция;
			Комментарий  = Товар.Комментарий;
			Номенклатура = Товар.Номенклатура;
			КомандаФормы = Команды.Найти("К" + позиция);

			Если КомандаФормы  = Неопределено Тогда
				КомандаФормы  = Команды.Добавить("К" + позиция);
				КомандаФормы.Действие = "ПроцедураОбработкиНажатия";
				Если Позиция < 10 Тогда
					КомандаФормы.СочетаниеКлавиш = Новый СочетаниеКлавиш(Клавиша["_" + СокрЛП(Позиция)], , ИСТИНА, ИСТИНА);
				КонецЕсли;

				Если ЗначениеЗаполнено(Комментарий) Тогда
					КомандаФормы.Подсказка = Комментарий;
				Иначе
					ВозможноеПредставление = ОбщийМодульПовтор.ПолучитьПредставлениеНаЯзыке(Номенклатура, , ИСТИНА);
					Если НЕ ВозможноеПредставление = Неопределено Тогда
						Представление = ВозможноеПредставление;
					Иначе
						Представление = СокрЛП(Номенклатура);
					КонецЕсли;

					КомандаФормы.Подсказка = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Добавить") + " " + Представление;
				КонецЕсли;

				НоваяКнопка = Элементы.Найти("КФ" + Позиция);

				Если НоваяКнопка = Неопределено Тогда
					НоваяКнопка = Элементы.Добавить("КФ" + Позиция, Тип("КнопкаФормы"), ЭлементыТоварыЧастогоСпроса);
					НоваяКнопка.Заголовок = СокрЛП(Номенклатура);
					НоваяКнопка.ИмяКоманды = "К" + Позиция;
				КонецЕсли;
			КонецЕсли;

		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПозицияИзСпискаЧастогоСпроса(Команда)

	СписокНоменклатурыЧастогоСпроса = ОбщийМодульПовтор.ПолучитьСписокНоменклатурыБыстрогоСпроса();

	Если СписокНоменклатурыЧастогоСпроса.Количество() = 0 Тогда
		ФормаМенеджераПозицийЧастогоСпроса = ПолучитьФорму("РегистрСведений.НоменклатураЧастогоСпроса.ФормаСписка");
		ФормаМенеджераПозицийЧастогоСпроса.ОткрытьМодально();
		ОбновитьЧастыйСпрос();
	Иначе
		РаботаетВыборЧастогоСпроса = ИСТИНА;
		Попытка
			Выполнить(" Элементы.ТоварыНоменклатура.ИсторияВыбораПриВводе = ИсторияВыбораПриВводе.НеИспользовать; ");
		Исключение // старая 1С
		КонецПопытки;

		Элементы.Товары.ДобавитьСтроку();
		ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
		ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ПозицияИзСпискаЧастогоСпросаЗавершение", ЭтаФорма, Новый Структура("ТекущиеДанные", ТекущиеДанные)), СписокНоменклатурыЧастогоСпроса, ТекущиеДанные.Номенклатура);

		Возврат;
	КонецЕсли;

	ПозицияИзСпискаЧастогоСпросаФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ПозицияИзСпискаЧастогоСпросаЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт

	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	Номенклатура = ВыбранныйЭлемент;
	Если НЕ Номенклатура = Неопределено Тогда
		ТекущиеДанные.Номенклатура = Номенклатура.Значение;
		Элементы.Товары.ЗакончитьРедактированиеСтроки(ЛОЖЬ);
		ПриИзмененииНоменклатуры();
	Иначе
		Элементы.Товары.ЗакончитьРедактированиеСтроки(ИСТИНА);
	КонецЕсли;

	Попытка
		Выполнить(" Элементы.ТоварыНоменклатура.ИсторияВыбораПриВводе = ИсторияВыбораПриВводе.Авто; ");
	Исключение // старая 1С
	КонецПопытки;

	ПозицияИзСпискаЧастогоСпросаФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ПозицияИзСпискаЧастогоСпросаФрагмент()
	РаботаетВыборЧастогоСпроса = ЛОЖЬ;
КонецПроцедуры

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	ПриСменеКонтрагента();
КонецПроцедуры

&НаКлиенте
Процедура ПриСменеКонтрагента(Знач БезСеревера = ЛОЖЬ)

	Элементы.ЧастныйПокупатель.Видимость = НЕ Клиент = ПредопределенноеЗначение("Справочник.Клиенты.ФизическоеЛицо");
	ПоказатьДолгКлиентаПоставщика();
	Если НЕ БезСеревера Тогда
		КлиентПриИзмененииНаСервере();
	КонецЕсли;
	ПересчитатьДокументНаКлиенте();

КонецПроцедуры

&НаСервере
Процедура КлиентПриИзмененииНаСервере()

	Если ЗначениеЗаполнено(Клиент) Тогда

		Если ЗначениеЗаполнено(Клиент.ВидЦен) Тогда
			ВидЦен = Клиент.ВидЦен;
			ВалютаЦены = ВидЦен.ВалютаЦены;

			Если НЕ БылаВалюта = Неопределено
				И ЗначениеЗаполнено(ВалютаЦены)
				И НЕ БылаВалюта = ВалютаЦены Тогда

				ПересчитатьЦеныВТаблице();
			КонецЕсли;
		КонецЕсли;

		Если (НЕ ЗначениеЗаполнено(Склад)
			ИЛИ Склад = ПредопределенноеЗначение("Справочник.Склады.ОсновнойСклад"))
			И ЗначениеЗаполнено(Клиент.Склад) Тогда

			Склад = Клиент.Склад;
		КонецЕсли;

		Если ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВестиУчетОтдельныхДоговоровСКонтрагентамиПС")
			И НЕ ЗначениеЗаполнено(Договор)
			ИЛИ НЕ Договор.КлиентПоставщик = Клиент Тогда

			Договор = ОбщийМодульСервер.НайтиДоговорПоПараметрам(Организация, Клиент, Дата, ВидЦен);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);

	Если ИспользоватьПодключаемоеОборудование
		И МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда

		ОписаниеОшибки = "" ;
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		ПоддерживаемыеТипыВО.Добавить("ДисплейПокупателя");

		Если НЕ МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении оборудования произошла ошибка") + ": " + ОписаниеОшибки + ".";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(Клиент) Тогда
		ПриСменеКонтрагента();
	КонецЕсли;

	ПодключитьОбработчикОжидания("ПослеИзображенияОкнаФормы", 0.3, ИСТИНА);

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                                  // ПРИ ЗАКРЫТИИ

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);

	Если ИспользоватьПодключаемоеОборудование Тогда
		ПоддерживаемыеТипыВО = Новый Массив ();
		ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		ПоддерживаемыеТипыВО.Добавить("ДисплейПокупателя");
		МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДолгКлиентаПоставщика()

	ТекущийДолгКлиента = ОбщийМодульСервер.ПолучитьДолгКлиентаПоставщика(Клиент, Дата, Договор, ЛОЖЬ, ОсновнаяВалюта);
	Элементы.ОписаниеДолгаКлиента.Видимость = НЕ ТекущийДолгКлиента = 0 И НЕ Клиент = ПредопределенноеЗначение("Справочник.Клиенты.ФизическоеЛицо");

КонецПроцедуры

&НаКлиенте
Процедура ДатаОткрытие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = ЛОЖЬ;
	Дата = ОбщийМодульКлиент.ПользователяТекущаяДата();

КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьДокументНаКлиенте()

	ИтогоКоличество = Объект.Товары.Итог("Количество");
	ИтогоСумма = Объект.Товары.Итог("Сумма");

КонецПроцедуры

&НаКлиенте
Процедура СуммаПоРеализации(Команда)

	Если ИспользоватьРегистрациюПриемаИВыдачиДенегПрямоВДокументахРасходаИПрихода Тогда
		ПоступилоДенег = ОбщийМодульСервер.ПоКурсу(ТекущийДолгКлиента, ВалютаЦены, , Дата) + Объект.Товары.Итог("Сумма");
		Валюта = ВалютаЦены;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВидЦенПриИзменении(Элемент)

	ВалютаЦены = ОбщийМодульСервер.ПолучитьЗначениеРеквизита(ВидЦен, "ВалютаЦены");

	Если НЕ БылаВалюта = Неопределено
		И ЗначениеЗаполнено(ВалютаЦены)
		И НЕ БылаВалюта = ВалютаЦены Тогда

		БылаВалюта = ВалютаЦены;
	КонецЕсли;

	ПересчитатьЦеныВТаблице();

КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()

	Если ЗначениеЗаполнено(Организация) Тогда
		Если ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВестиУчетОтдельныхДоговоровСКонтрагентамиПС") Тогда
			Если ЗначениеЗаполнено(Договор) Тогда
				Если НЕ Договор.Организация = Организация Тогда
					Договор = ПредопределенноеЗначение("Справочник.Договора.ПустаяСсылка");
				КонецЕсли;
			КонецЕсли;

			Если НЕ ЗначениеЗаполнено(Договор)
				И ЗначениеЗаполнено(Клиент) Тогда

				Договор = ОбщийМодульСервер.НайтиДоговорПоПараметрам(Организация, Клиент, Дата, ВидЦен);
			КонецЕсли;
		КонецЕсли;

		Если ВестиУчетПоСкладам
			И НЕ ЗначениеЗаполнено(Склад) Тогда

			Склад = Организация.Склад;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	ДоговорПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДоговорПриИзмененииНаСервере()

	Если ЗначениеЗаполнено(Договор) Тогда // насильно
		Если НЕ Клиент = Договор.КлиентПоставщик Тогда
			Клиент = Договор.КлиентПоставщик;
			КлиентПриИзмененииНаСервере();
		КонецЕсли;

		Если НЕ Организация = Договор.Организация Тогда
			Организация = Договор.Организация;
			ОрганизацияПриИзмененииНаСервере();
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ХранилищеДенег)
			И ЗначениеЗаполнено(Договор.ХранилищеДенег) Тогда

			ХранилищеДенег = Договор.ХранилищеДенег;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	ПриИзмененииНоменклатуры();
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииНоменклатуры(ТекущиеДанные = Неопределено)

	Если ТекущиеДанные = Неопределено Тогда
		ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	КонецЕсли;

	Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
		Если ТекущиеДанные.Количество <= 0 Тогда
			ТекущиеДанные.Количество = 1;
		КонецЕсли;
		ТекущиеДанные.Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(ТекущиеДанные.Номенклатура, ВидЦен, Дата, ЛОЖЬ, ТекущиеДанные.Количество, Договор);
		ТекущиеДанные.Сумма = ТекущиеДанные.Количество * ТекущиеДанные.Цена;
	КонецЕсли;

	ПересчитатьДокументНаКлиенте();

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	глВремяПоследнегоСобытия = ТекущаяДата();
	ПересчитатьДокументНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные.Количество <= 0 Тогда
		ТекущиеДанные.Количество = 1;
	КонецЕсли;
	ТекущиеДанные.Сумма = ТекущиеДанные.Количество * ТекущиеДанные.Цена;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные.Количество <= 0 Тогда
		ТекущиеДанные.Количество = 1;
	КонецЕсли;
	ТекущиеДанные.Цена = ТекущиеДанные.Сумма / ТекущиеДанные.Количество;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанные.Сумма = ТекущиеДанные.Количество * ТекущиеДанные.Цена;

КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Валюта)
		И НЕ БылаВалюта = Неопределено
		И НЕ БылаВалюта = Валюта Тогда

		ПоступилоДенег = ОбщийМодульСервер.ПоКурсу(ПоступилоДенег, Валюта, БылаВалюта, Дата);

		БылаВалюта = Валюта;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПересчитатьЦеныВТаблице()

	Для Каждого СтрокаТовара Из Объект.Товары Цикл
		СтрокаТовара.Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(СтрокаТовара.Номенклатура, ВидЦен, Дата, ЛОЖЬ, СтрокаТовара.Количество, Договор);
		СтрокаТовара.Сумма = СтрокаТовара.Количество * СтрокаТовара.Цена;
	КонецЦикла;

	ИтогоКоличество = Объект.Товары.Итог("Количество");
	ИтогоСумма = Объект.Товары.Итог("Сумма");

КонецПроцедуры

&НаКлиенте
Процедура ХранилищеДенегПриИзменении(Элемент)

	Валюта = ОбщийМодульСервер.ПолучитьЗначениеРеквизита(ХранилищеДенег, "Валюта");

	Если ЗначениеЗаполнено(Валюта)
		И НЕ БылаВалюта = Неопределено
		И НЕ БылаВалюта = Валюта Тогда

		ПоступилоДенег = ОбщийМодульСервер.ПоКурсу(ПоступилоДенег, Валюта, БылаВалюта, Дата);

		БылаВалюта = Валюта;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда

		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[1] = Неопределено Тогда
				ТекКод = Параметр[0];
			Иначе
				ТекКод = Параметр[1][1];
			КонецЕсли;

			ОбработатьПолученныйШтрихкодНаКлиенте(ТекКод);
		ИначеЕсли ИмяСобытия = "TracksData" Тогда
			ПолученКодИзСМК(Параметр);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПолученныйШтрихкодНаКлиенте(Знач ТекКод)

	РезультатСтруктура = ОбработатьПолученныйШтрихкодНаСервере(ТекКод);

	Если РезультатСтруктура.Результат = 2 Тогда
		ПриСменеКонтрагента(ИСТИНА);
	ИначеЕсли РезультатСтруктура.Результат = 3 Тогда

	КонецЕсли;

	Если НЕ РезультатСтруктура.Результат = Неопределено Тогда
		ПересчитатьДокументНаКлиенте();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция   ОбработатьПолученныйШтрихкодНаСервере(Знач ТекКод, Количество = 1)

	РезультатСтруктура = Новый Структура("Результат", Неопределено);

	РезультатОбработки = ОбщийМодульТоварСервер.НайтиНоменклатуруПоШтрихКоду(ТекКод, ИСТИНА, , Дата);
	Если ЗначениеЗаполнено(РезультатОбработки.Номенклатура) Тогда
		ДобавитьПозициюНоменклатуры(РезультатОбработки);
		СтрокаДисплеяПокупателя = СокрЛП(РезультатОбработки.Номенклатура);
		РезультатСтруктура.Результат = 1;
	Иначе
		ОстановитьПоиск = ЛОЖЬ;

		Если НЕ ОстановитьПоиск
			И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьШтрихКодыДляИдентификацииКонтрагентов") Тогда

			РезультатОбработки = ОбщийМодульСервер.НайтиКонтрагентаПоШтрихКоду(ТекКод);

			Если ЗначениеЗаполнено(РезультатОбработки) Тогда
				Клиент = РезультатОбработки;
				КлиентПриИзмененииНаСервере();
				ОстановитьПоиск = ИСТИНА;
				РезультатСтруктура.Результат = 2;
			КонецЕсли;
		КонецЕсли;

		Если НЕ ОстановитьПоиск
			И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетСобственныхЮридическихЛиц") Тогда

			РезультатОбработки = ОбщийМодульСервер.НайтиКонтрагентаПоШтрихКоду(ТекКод, , , ИСТИНА);

			Если ЗначениеЗаполнено(РезультатОбработки) Тогда
				Организация = РезультатОбработки;
				ОрганизацияПриИзмененииНаСервере();
				ОстановитьПоиск = ИСТИНА;
				РезультатСтруктура.Результат = 3;
			КонецЕсли;
		КонецЕсли;

		Если НЕ ОстановитьПоиск Тогда
			ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Объект по штрих-коду не найден") + " (" + ТекКод + ").");
			РезультатСтруктура.Результат = Неопределено;
		КонецЕсли;
	КонецЕсли;

	Возврат РезультатСтруктура;

КонецФункции

&НаСервере
Процедура ДобавитьПозициюНоменклатуры(Знач НоменклатураСтруктура, Знач НеСтановитсяНаЭтуСтроку = ЛОЖЬ, Знач МножительКоличества = 1)

	СерияНоменклатуры = Неопределено;
	Если ТипЗнч(НоменклатураСтруктура) = Тип("СправочникСсылка.Номенклатура") Тогда
		Номенклатура = НоменклатураСтруктура;
		Количество 	 = МножительКоличества * ОбщийМодульСервер.ПолучитьКоличествоПоУмолчанию(НоменклатураСтруктура);
		Цена 		 = 0;
		ЦенаЕсть 	 = ЛОЖЬ;
	Иначе
		Номенклатура = НоменклатураСтруктура.Номенклатура;
		Количество 	 = НоменклатураСтруктура.Количество * МножительКоличества * ОбщийМодульСервер.ПолучитьКоличествоПоУмолчанию(НоменклатураСтруктура.Номенклатура);
		Цена 		 = 0;
		ЦенаЕсть 	 = НоменклатураСтруктура.Свойство("Цена", Цена);
	КонецЕсли;

	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Номенклатура", Номенклатура);
	СтрокаТовара = Объект.Товары.НайтиСтроки(ПараметрыОтбора);

	Если СтрокаТовара.Количество() = 0 Тогда
		СтрокаТовара = Объект.Товары.Добавить();
		СтрокаТовара.Номенклатура 	  = Номенклатура;
	Иначе
		СтрокаТовара = СтрокаТовара[0];
	КонецЕсли;

	СтрокаТовара.Количество = СтрокаТовара.Количество + Количество;

	Если ЦенаЕсть Тогда
		СтрокаТовара.Цена = Цена;
	Иначе
		СтрокаТовара.Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(СтрокаТовара.Номенклатура, ВидЦен, Дата, ЛОЖЬ, СтрокаТовара.Количество, Договор);
	КонецЕсли;

	СтрокаТовара.Сумма = СтрокаТовара.Количество * СтрокаТовара.Цена;

	Если НЕ НеСтановитсяНаЭтуСтроку Тогда
		Элементы.Товары.ТекущаяСтрока  = СтрокаТовара.ПолучитьИдентификатор();
		Элементы.Товары.ТекущийЭлемент = Элементы.ТоварыКоличество;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПолученКодИзСМК(Параметр)

	Если Параметр[1][3] <> Неопределено Тогда
		МКод = Параметр[1][3][0].ДанныеДорожек[0].ЗначениеПоля;
	Иначе
		МКод = Параметр[0];
	КонецЕсли;

	ПолучитьКлиентаНаСервере(МКод);

КонецПроцедуры

&НаСервере
Процедура ПолучитьКлиентаНаСервере(Знач МКод)

	ОпределенныйКлиент = ПодключаемоеОборудованиеДСервер.НайтиКлиентаПоМК(МКод);
	Если НЕ ОпределенныйКлиент = Неопределено Тогда
		Клиент = ОпределенныйКлиент;
	Иначе
		Клиент = ПредопределенноеЗначение("Справочник.Клиенты.ПустаяСсылка");
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Клиент не найден") + ": " + МКод);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Продать(Команда)
	ОтправитьНаПродажу();
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНаПродажу(Знач НеПроводить = ЛОЖЬ)

	ДокументНеПроводить = НеПроводить;

	Если Объект.Товары.Количество() = 0 Тогда
		ПоказатьПредупреждение(Неопределено, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не указаны товары для реализации!"), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Внимание"));
	Иначе

		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетДвиженияДенег")
			И ПоступилоДенег = 0
			И НЕ ИтогоСумма = 0 Тогда

			ПоказатьВопрос(Новый ОписаниеОповещения("ПродатьЗавершение", ЭтотОбъект), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Клиент оплатил") + ": " + Формат(ИтогоСумма, "ЧЦ=15; ЧДЦ=2") + " " + СокрЛП(ВалютаЦены) + " ?", РежимДиалогаВопрос.ДаНет);
			Возврат;
		КонецЕсли;

		ПродатьФрагмент();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПродатьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПоступилоДенег = ИтогоСумма;
		Валюта = ВалютаЦены;
	КонецЕсли;

	ПродатьФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ПродатьФрагмент()

	ПродатьНаСервере();
	ПоказатьДолгКлиентаПоставщика();
	ПересчитатьДокументНаКлиенте();

КонецПроцедуры

&НаСервере
Процедура ПродатьНаСервере()

	ВидДокумента = "";

	Если ЗначениеЗаполнено(ТекущийДокумент) Тогда
		ДокументРеализации = ТекущийДокумент.ПолучитьОбъект();
	Иначе
		ДокументРеализации = Документы.РасходыТовара.СоздатьДокумент();
	КонецЕсли;

	Если ЗначениеЗаполнено(Клиент) Тогда
		Если НЕ ПоступилоДенег = 0 Тогда
			ВидДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Реализация");
		Иначе
			ВидДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Расход");
		КонецЕсли;
	Иначе
		ВидДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Списание");
	КонецЕсли;

	//	ДокументРеализации.Адрес
	ДокументРеализации.Валюта = Валюта;
	//ДокументРеализации.ВаучерНакопления
	//ДокументРеализации.ВаучерСкидки
	//ДокументРеализации.Ваучеры
	ДокументРеализации.ВидДокумента = ВидДокумента;
	ДокументРеализации.ВидЦен = ВидЦен;
	ДокументРеализации.Дата = Дата;
	//ДокументРеализации.ДатаОповещения
	//ДокументРеализации.ДатаОтправки
	//ДокументРеализации.ДатаОтсрочки
	//ДокументРеализации.ДатаОтчетаПоКомиссии
	//ДокументРеализации.ДатаСчета
	ДокументРеализации.Договор = Договор;
	//ДокументРеализации.ДокументСторно
	//ДокументРеализации.ЗаказДатаПлана
	//ДокументРеализации.ЗаказДатаФакта
	ДокументРеализации.ЗаказКлиента = ЗаказКлиента;
	//ДокументРеализации.ЗаказНомерПриРегистрации
	//ДокументРеализации.ЗаказОплачен
	//ДокументРеализации.ЗаказСогласован
	//ДокументРеализации.КлиентОповещен
	ДокументРеализации.КлиентПоставщик = Клиент;
	ДокументРеализации.Комментарий = Комментарий;
	ДокументРеализации.Курс = ОбщийМодульСервер.ПолучитьТекущийКурс(Валюта, Дата);
	//ДокументРеализации.НалогообложениеНДС
	//ДокументРеализации.НаправлениеДеятельности
	//ДокументРеализации.НеПроводить
	//ДокументРеализации.Номер
	//ДокументРеализации.НомерСчета
	//ДокументРеализации.ОбменДанными
	ДокументРеализации.Оплаты.Очистить();
	ДокументРеализации.Организация = Организация;
	//ДокументРеализации.ОтветственныйЗаДоставку
	//ДокументРеализации.ПартияПриобретения
	//ДокументРеализации.ПередачаДляКомиссионнойТорговли
	//ДокументРеализации.ПКОНапечатан
	//ДокументРеализации.ПланОплаты
	ДокументРеализации.ПоступилоДенег = ПоступилоДенег;
	//ДокументРеализации.ПредметСделки
	//ДокументРеализации.ПроТовары
	ДокументРеализации.Склад = Склад;
	//ДокументРеализации.Сотрудник
	//ДокументРеализации.СпособДоставки
	//ДокументРеализации.Статус
	//ДокументРеализации.Сторный
	//ДокументРеализации.ТалонТрек
	//ДокументРеализации.Телефон
	//ДокументРеализации.ТовараВКоличестве
	//ДокументРеализации.ТовараНаСумму
	//ДокументРеализации.ТовараНаСуммуВВалюте
	//ДокументРеализации.ТоварОтправлен
	ДокументРеализации.Товары.Загрузить(Объект.Товары.Выгрузить());
	Если ЗначениеЗаполнено(ХранилищеДенег) Тогда
	ДокументРеализации.ХранилищеДенег = ХранилищеДенег;
Иначе
	ДокументРеализации.ХранилищеДенег = ОбщийМодульСервер.НайтиХранилищеПоПараметрам(Валюта, , , ИСТИНА);
	КонецЕсли;

	ДокументРеализации.ЭтоЗаказ = ЛОЖЬ;

	ДокументРеализации.ПодготовкаКПроведению(ЛОЖЬ);

	Попытка
		Если ДокументНеПроводить Тогда
			ДокументРеализации.Записать(РежимЗаписиДокумента.Запись);
		Иначе
			ДокументРеализации.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
		КонецЕсли;

		ПоследнийДокументРеализации = ДокументРеализации.Ссылка;
		ТекущийДокумент = Неопределено;
		Элементы.ГруппаТекущегоДокумента.Видимость = ЛОЖЬ;
		Объект.Товары.Очистить();
		ИтогоСумма = 0;
		ИтогоКоличество = 0;
		ПоступилоДенег = 0;
		Дата = ОбщийМодульСервисСервер.ПользователяТекущаяДата();

		Если НЕ Клиент = ПредопределенноеЗначение("Справочник.Клиенты.ФизическоеЛицо") Тогда
			Клиент = ПредопределенноеЗначение("Справочник.Клиенты.ПустаяСсылка");
			КлиентПриИзмененииНаСервере();
		КонецЕсли;
	Исключение
		ТекстОписаниеОшибки = ОписаниеОшибки();
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка проведения продажи") + ": " + ТекстОписаниеОшибки);
	КонецПопытки;

	ДокументНеПроводить = ЛОЖЬ;

КонецПроцедуры

&НаКлиенте
Процедура ВводШтрихКода(Команда)

	ШтрихКод = "";
	ПоказатьВводЗначения(Новый ОписаниеОповещения("ВводШтрихКодаЗавершение", ЭтотОбъект, Новый Структура("ШтрихКод", ШтрихКод)), ШтрихКод, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите штрихкод"));

КонецПроцедуры

&НаКлиенте
Процедура ВводШтрихКодаЗавершение(Значение, ДополнительныеПараметры) Экспорт

	ШтрихКод = ?(Значение = Неопределено, ДополнительныеПараметры.ШтрихКод, Значение);

	Если (Значение <> Неопределено) Тогда
		Если НЕ ПустаяСтрока(ШтрихКод) Тогда
			ОбработатьПолученныйШтрихкодНаКлиенте(ШтрихКод);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КлиентОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	ОбщийМодульКлиент.ПоискОшибкиПриВводеТекстаПользователем("Клиенты", ДанныеВыбора, Текст, Клиент);
	ПриСменеКонтрагента();

КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	Если ТекСтр = Неопределено Тогда
		ТекСтр = Элементы.Товары.ТекущиеДанные;
	КонецЕсли;

	ОбщийМодульКлиент.ПоискОшибкиПриВводеТекстаПользователем("Номенклатура", ДанныеВыбора, Текст, ТекСтр.Номенклатура, Клиент);

	Если ЗначениеЗаполнено(ДанныеВыбора) Тогда
		ПриИзмененииНоменклатуры(ТекСтр) 	;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = НЕ РаботаетВыборЧастогоСпроса;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	Если ТекСтр = Неопределено Тогда
		ТекСтр = Элементы.Товары.ТекущиеДанные;
	КонецЕсли;

	СтандартнаяОбработка = ЛОЖЬ;
	ПараметрыФормы = Новый Структура;

	Если ЗначениеЗаполнено(ВидЦен) Тогда
		ПараметрыФормы.Вставить("ВидЦен", ВидЦен);
	КонецЕсли;

	Если ВестиУчетПоСкладам
		И ЗначениеЗаполнено(Склад) Тогда

		ПараметрыФормы.Вставить("ОтборПоСкладу", Склад);
	КонецЕсли;

	ПараметрыФормы.Вставить("ВызовИзРасходаТовара", ИСТИНА);
	ПараметрыФормы.Вставить("КлиентПоставщик", Клиент);
	ПараметрыФормы.Вставить("ОтборПоДате", Дата);
	СтрокаТовара = ТекСтр;

	Если ОбщийМодульПовтор.ПолучитьТекущуюСредуВыполнения() = 1 Тогда
		ПараметрыФормы.Вставить("ТекущаяСтрока", СтрокаТовара.Номенклатура);
	КонецЕсли;

	ФормаВыбора = ПолучитьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыФормы);
	Номенклатура = ФормаВыбора.ОткрытьМодально();
	Если ЗначениеЗаполнено(Номенклатура) Тогда

		ТекСтр.Номенклатура = Номенклатура;
		ПриИзмененииНоменклатуры(ТекСтр);
		Элементы.Товары.ЗакончитьРедактированиеСтроки(ЛОЖЬ);
		Элементы.Товары.ТекущийЭлемент = Элементы.ТоварыКоличество;
	Иначе
		Элементы.Товары.ЗакончитьРедактированиеСтроки(ИСТИНА);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = НЕ РаботаетВыборЧастогоСпроса;
КонецПроцедуры

&НаКлиенте
Процедура ПодборНоменклатуры(Команда)

	ПараметрыФормы = Новый Структура("Дата", Дата);
	ПараметрыФормы.Вставить("ВидЦен", ВидЦен);
	ПараметрыФормы.Вставить("Добавление", ЛОЖЬ);
	ПараметрыФормы.Вставить("Договор", Договор);
	ПараметрыФормы.Вставить("Склад", Склад);
	ПараметрыФормы.Вставить("Товары", Объект.Товары);
	ПараметрыФормы.Вставить("КлиентПоставщик", Клиент);
	ИмяНеобходимойФормы = "Справочник.Номенклатура.Форма.ФормаПодбора";
	ОткрытьФорму(ИмяНеобходимойФормы, ПараметрыФормы, Элементы.Товары);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПолноценныйДокументРеализации(Команда)

	ОтправитьНаПродажу(ИСТИНА);

	Если ЗначениеЗаполнено(ПоследнийДокументРеализации) Тогда
		ПоказатьЗначение(Неопределено, ПоследнийДокументРеализации);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеИзображенияОкнаФормы() // Когда окно уже нарисовано пользователю
	ЭтаФорма.Элементы.Закрыть.Видимость = НЕ ЭтаФорма.Окно = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ПроцедураОбработкиНажатия(Элемент)

	Позиция = Число(СтрЗаменить(Элемент.Имя, "К", ""));
	ДобавлениеЧастогоСпроса(Позиция);

КонецПроцедуры

&НаСервере
Процедура ДобавлениеЧастогоСпроса(Знач Позиция)
	ДобавитьПозициюНоменклатуры(ОбщийМодульПовтор.ПолучитьНоменклатуруЧастогоСпроса(Позиция));
КонецПроцедуры

&НаКлиенте
Процедура ТоварыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Объект.Товары.Очистить();
		Для Каждого Подбор Из ВыбранноеЗначение Цикл
			Строка = Объект.Товары.Добавить();
			Строка.Номенклатура = Подбор.Номенклатура;
			Строка.Количество   = Подбор.Количество;
			Строка.Цена  		= Подбор.Цена;
			Строка.Сумма 		= Подбор.Сумма;
			Строка.ОСтроке 		= Подбор.ОСтроке;
		КонецЦикла;
	КонецЕсли;

	ПересчитатьДокументНаКлиенте();

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	ТекСтр = Элементы.Товары.ТекущиеДанные;
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьПредыдущуюПродажу(Команда)

	Если ЗначениеЗаполнено(ПоследнийДокументРеализации) Тогда
		ПрочитатьПредыдущуюПродажуНаСервере(ПоследнийДокументРеализации);
		ПоследнийДокументРеализации = Неопределено;
		ПриСменеКонтрагента();
		ПересчитатьДокументНаКлиенте();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПрочитатьПредыдущуюПродажуНаСервере(Знач ПоследнийДокументРеализации)

	ТекущийДокумент = ПоследнийДокументРеализации;
	Объект.Товары.Загрузить(ТекущийДокумент.Товары.Выгрузить());
	Дата 	= ТекущийДокумент.Дата;
	Клиент 	= ТекущийДокумент.КлиентПоставщик;
	Склад 	= ТекущийДокумент.Склад;
	ВидЦен 	= ТекущийДокумент.ВидЦен;

	Если ЗначениеЗаполнено(ВидЦен) Тогда
		ВалютаЦены = ВидЦен.ВалютаЦены;
	Иначе
		ВалютаЦены = ОсновнаяВалюта;
	КонецЕсли;

	Организация = ТекущийДокумент.Организация;
	Договор 	= ТекущийДокумент.Договор;
	Валюта 		= ТекущийДокумент.Валюта;
	Комментарий = ТекущийДокумент.Комментарий;
	ХранилищеДенег 	= ТекущийДокумент.ХранилищеДенег;
	ЗаказКлиента 	= ТекущийДокумент.ЗаказКлиента;
	ПоступилоДенег 	= ТекущийДокумент.ПоступилоДенег;

	Элементы.ГруппаТекущегоДокумента.Видимость = ИСТИНА;

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСуществующийДокументРеализации(Команда)

	ДокументРеализации = ПредопределенноеЗначение("Документ.РасходыТовара.ПустаяСсылка");
	ПоказатьВводЗначения(Новый ОписаниеОповещения("ЗагрузитьСуществующийДокументРеализацииЗавершение", ЭтотОбъект, Новый Структура("ДокументРеализации", ДокументРеализации)), ДокументРеализации, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите документ реализации"), Тип("ДокументСсылка.РасходыТовара"));

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСуществующийДокументРеализацииЗавершение(Значение, ДополнительныеПараметры) Экспорт

	ДокументРеализации = ?(Значение = Неопределено, ДополнительныеПараметры.ДокументРеализации, Значение);

	Если ЗначениеЗаполнено(ДокументРеализации) Тогда
		ПрочитатьПредыдущуюПродажуНаСервере(ДокументРеализации);
		ПоследнийДокументРеализации = Неопределено;
		ПриСменеКонтрагента();
		ПересчитатьДокументНаКлиенте();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПродатьИНапечатать(Команда)

	ОтправитьНаПродажу();
	Если ЗначениеЗаполнено(ПоследнийДокументРеализации) Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ОбъектПечати", ПоследнийДокументРеализации);
		ПараметрыФормы.Вставить("Документ", ПоследнийДокументРеализации);
		ФормаПечати = ПолучитьФорму("ОбщаяФорма.ФормаПечати", ПараметрыФормы);

		Печать(ФормаПечати.Результат, ПоследнийДокументРеализации);

		ФормаПечати.Результат.ОтображатьСетку = ЛОЖЬ;
		ФормаПечати.Результат.Защита = ИСТИНА;
		ФормаПечати.Результат.ТолькоПросмотр = ИСТИНА;
		ФормаПечати.Результат.ОтображатьЗаголовки = ЛОЖЬ;
		ФормаПечати.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("печать: Расход товара");
		ФормаПечати.Открыть();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура Печать(ДокументДляПечати, Знач ПараметрКоманды)

	ДокументДляПечати.ИмяПараметровПечати  = "ДокРеализация" + СокрЛП(ИмяКомпьютера());
	ДокументДляПечати.КлючПараметровПечати = ДокументДляПечати.ИмяПараметровПечати;
	ДокументДляПечати.Очистить();
	ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напечатал Расход товара"), 2);
	Документы.РасходыТовара.Печать(ДокументДляПечати, ПараметрКоманды);

КонецПроцедуры

ТекСтр = Неопределено;
