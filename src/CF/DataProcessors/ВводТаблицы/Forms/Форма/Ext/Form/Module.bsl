// sza150728-1440

&НаКлиенте
Процедура ЗагрузитьДанныеИзЭтойТаблицы(Команда)
	
	ИдетПробел   = 0;
	СчетчикСтрок = 1;
	
	Пока СчетчикСтрок < 99999 Цикл
		ОбластьСЯчейкой = ТаблицаДанных.Область(СчетчикСтрок, НомерКолонкиКотораяЗаполненаОбязательно); 
		Если ПустаяСтрока(СокрЛП(ОбластьСЯчейкой.Текст)) Тогда
			ИдетПробел = ИдетПробел + 1;
			Если ИдетПробел > ДоступноеЧислоПробелов Тогда
				Прервать;
			КонецЕсли;
		Иначе
			ИдетПробел = 0;
		КонецЕсли;
		
		СчетчикСтрок = СчетчикСтрок + 1;	
	КонецЦикла;
	
	ПараметрыЭтойТаблицы = Новый Структура("СписокКолонокТаблицы, ТаблицаДанных, СчетчикСтрок, ВыполнитьПрограмму, НоменклатураПредставлена, ТипПоляСоставногоВида, ТипыКолонок", СписокКолонокТаблицы, ТаблицаДанных, СчетчикСтрок, ВыполнитьПрограмму, НоменклатураПредставлена, ТипПоляСоставногоВида, ТипыКолонок);
	Закрыть(ПараметрыЭтойТаблицы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПримерПрограммы(Команда)
	ВыполнитьПрограмму = " СтрокаТаблицы.Сумма = СтрокаТаблицы.Количество * СтрокаТаблицы.Цена; ";
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	Если НомерКолонкиКотораяЗаполненаОбязательно = 0 
		ИЛИ НомерКолонкиКотораяЗаполненаОбязательно > ВсегоКолонок Тогда
		
		НомерКолонкиКотораяЗаполненаОбязательно = 1;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ОтображениеПолучателя) Тогда
		ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + ": " + ОтображениеПолучателя;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РазделПолучателяТаблицы = "Документы";
	ТипПолучателяТаблицы    = Параметры.ТипПолучателяТаблицы;
	НаименованиеТаблицы     = Параметры.НаименованиеТаблицы;
	ИсходнаяТаблицаДанных   = Параметры.ИсходнаяТаблицаДанных;
	
	Разделитель = Найти(ТипПолучателяТаблицы, ".");
	Если НЕ Разделитель = 0 Тогда
		РазделПолучателяТаблицы = Лев(ТипПолучателяТаблицы, Разделитель - 1);
		СокрИмяФормы = Прав(ТипПолучателяТаблицы, СтрДлина(ТипПолучателяТаблицы) - Разделитель);
		Разделитель2 = Найти(СокрИмяФормы, ".");
		ТипПолучателяТаблицы = Лев(СокрИмяФормы, Разделитель2 - 1);
	КонецЕсли;
	
	РазделПолучателяТаблицы = СтрЗаменить(РазделПолучателяТаблицы, "Документ", "Документы");
	РазделПолучателяТаблицы = СтрЗаменить(РазделПолучателяТаблицы, "Справочник", "Справочники");
	РазделПолучателяТаблицы = СтрЗаменить(РазделПолучателяТаблицы, "Обработка", "Обработки");
	
	ТаблицаПоМетаданным = Метаданные[РазделПолучателяТаблицы][ТипПолучателяТаблицы].ТабличныеЧасти[НаименованиеТаблицы];
	
	Сплошная = Новый Линия(ТипЛинииРисункаТабличногоДокумента.Сплошная, 1);
	ЖирныйШрифт = Новый Шрифт(, , ИСТИНА,);
	ЕстьНоменклатура = ЛОЖЬ;
	ЕстьСоставной    = ЛОЖЬ;
	
	ВсегоКолонок = 1;
	Для Каждого РеквизитТаблицы Из ТаблицаПоМетаданным.Реквизиты Цикл
		
		СписокКолонокТаблицы.Добавить(РеквизитТаблицы.Имя, РеквизитТаблицы.Синоним);
		
		ТипТут = РеквизитТаблицы.Тип.Типы()[0];
		Если ТипТут = тип("Строка") Тогда
			ТипыКолонок.Добавить("Строка");	
			
		ИначеЕсли типтут = тип("Булево") Тогда
			ТипыКолонок.Добавить("Булево");	
			
		ИначеЕсли типтут = тип("Число") Тогда
			ТипыКолонок.Добавить("Число");
			
		ИначеЕсли типтут = тип("Дата") Тогда
			ТипыКолонок.Добавить("Дата");
			
		Иначе
			НайденыМета = Метаданные.НайтиПоТипу(ТипТут);
			Если НЕ НайденыМета = Неопределено Тогда
				ТипыКолонок.Добавить(Метаданные.НайтиПоТипу(РеквизитТаблицы.Тип.Типы()[0]).Имя);
			Иначе
				ТипыКолонок.Добавить(NULL);
			КонецЕсли;                
			
		КонецЕсли;
		
		Если РеквизитТаблицы.Имя = "Номенклатура" Тогда
			ЕстьНоменклатура = ИСТИНА;
		КонецЕсли;
		
		Если НЕ РеквизитТаблицы.Тип.Типы().Количество() = 1 Тогда
			ЕстьСоставной = ИСТИНА;
		КонецЕсли;
		
		ОбластьЗаголовка = ТаблицаДанных.Область(1, ВсегоКолонок);  // "R1C" + Формат(СчетчикКолонок, "ЧРГ=' '; ЧГ=0")
		ОбластьЗаголовка.Текст = РеквизитТаблицы.Синоним;
		ОбластьЗаголовка.АвтоВысотаСтроки = ИСТИНА;
		ОбластьЗаголовка.ШиринаКолонки = СтрДлина(РеквизитТаблицы.Синоним);
		ОбластьЗаголовка.Шрифт = ЖирныйШрифт;
		
		Для СчетчикСтрок = 1 по 10 Цикл
			ОбластьСЯчейкой = ТаблицаДанных.Область(СчетчикСтрок, ВсегоКолонок);  
			ОбластьСЯчейкой.ГраницаСправа = Сплошная;
		КонецЦикла;
		
		ВсегоКолонок = ВсегоКолонок + 1;
	КонецЦикла;
	
	СчетчикСтрок = 2;
	Для Каждого СтрокаТаблицы Из ИсходнаяТаблицаДанных Цикл
		СчетчикКолонок = 1;
		Для Каждого РеквизитТаблицы Из ТаблицаПоМетаданным.Реквизиты Цикл
			ОбластьСЯчейкой = ТаблицаДанных.Область(СчетчикСтрок, СчетчикКолонок);  	
			ОбластьСЯчейкой.Текст = СтрокаТаблицы[РеквизитТаблицы.Имя];
			СчетчикКолонок = СчетчикКолонок + 1;
		КонецЦикла;
		СчетчикСтрок = СчетчикСтрок + 1;
	КонецЦикла;
	
	ВсегоКолонок = ВсегоКолонок - 1;
	
	Элементы.НоменклатураПредставлена.Видимость = ЕстьНоменклатура;
	Элементы.ТипПоляСоставногоВида.Видимость    = ЕстьСоставной;
	
	ОтображениеПолучателя = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Таблица") + " " + ОбщийМодульСервисСервер.ПолучитьКрасивоеНаименованиеОбъекта(НаименованиеТаблицы) + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("для") + " " + ОбщийМодульСервисСервер.ПолучитьКрасивоеНаименованиеОбъекта(ТипПолучателяТаблицы);
	
КонецПроцедуры
