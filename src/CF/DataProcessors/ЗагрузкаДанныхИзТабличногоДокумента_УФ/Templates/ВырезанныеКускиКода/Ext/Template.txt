Вырезанные куски кода

// Функция возвращает скелет таблицы значений для заполнения его настройками
//&НаСервере
//Функция ПолучитьШаблонТаблицыНастроекКолонок()
//	
//	ТипБулево = Новый ОписаниеТипов("Булево");
//	ТипЧисло  = Новый ОписаниеТипов("Число");
//	ТипСтрока = Новый ОписаниеТипов("Строка");
//	
//	Результат = Новый ТаблицаЗначений;
//	Результат.Колонки.Добавить("Пометка", ТипБулево);
//	Результат.Колонки.Добавить("ИмяРеквизита", ТипСтрока);
//	Результат.Колонки.Добавить("ПолеПоиска", ТипБулево);
//	Результат.Колонки.Добавить("ОписаниеТипов");
//	Результат.Колонки.Добавить("РежимЗагрузки", ТипСтрока);
//	Результат.Колонки.Добавить("НомерКолонки", ТипЧисло);
//	Результат.Колонки.Добавить("ЗначениеПоУмолчанию");
//	Результат.Колонки.Добавить("ИскатьПо", ТипСтрока);
//	Результат.Колонки.Добавить("СвязьПоВладельцу");
//	Результат.Колонки.Добавить("СвязьПоТипу", ТипСтрока);
//	Результат.Колонки.Добавить("ЭлементСвязиПоТипу", ТипЧисло);
//	Результат.Колонки.Добавить("Выражение", ТипСтрока);
//	
//	Возврат Результат;
//КонецФункции

// Функция формирует список значений с текущими настройками загрузки
//&НаСервере
//Функция ПолучитьСтруктуруНастроек()
//	
//	МетаданныеОбъекта = ПолучитьМетаданныеИсточника();
//	
//	Если МетаданныеОбъекта = Неопределено Тогда
//		Возврат Неопределено;
//	КонецЕсли;
//	
//	ВидОбъекта     = МетаданныеОбъекта.ПолноеИмя();
//	
//	СписокШапка = Новый Структура;
//	ТаблицаНастройки = ПолучитьШаблонТаблицыНастроекКолонок();
//	
//	СписокШапка.Вставить("РежимЗагрузки", Объект.РежимЗагрузки);
//	
//	СписокШапка.Вставить("ТипОбъектаСправочника",		Объект.ТипОбъектаСправочника);
//	СписокШапка.Вставить("СсылкаИсточника",				Объект.СсылкаИсточника);
//	СписокШапка.Вставить("ТабличнаяЧастьИсточника",		Объект.ТабличнаяЧастьИсточника);
//	СписокШапка.Вставить("ИмяВидаРегистра",				Объект.ИмяВидаРегистра);
//	СписокШапка.Вставить("НеСоздаватьНовыхЭлементов",	Объект.НеСоздаватьНовыхЭлементов);
//	СписокШапка.Вставить("ЗамещатьСуществующиеЗаписи",	Объект.ЗамещатьСуществующиеЗаписи);
//	СписокШапка.Вставить("РучнаяНумерацияКолонокТабличногоДокумента", Объект.РучнаяНумерацияКолонокТабличногоДокумента);
//	СписокШапка.Вставить("ПерваяСтрокаДанныхТабличногоДокумента", Объект.ПерваяСтрокаДанныхТабличногоДокумента);
//	
//	СписокШапка.Вставить("ПередЗаписьюОбъекта",		Объект.ПередЗаписьюОбъекта);
//	СписокШапка.Вставить("ПриЗаписиОбъекта",		Объект.ПриЗаписиОбъекта);
//	СписокШапка.Вставить("ПослеДобавленияСтроки",	Объект.ПослеДобавленияСтроки);
//	
//	//СписокШапка.Добавить(Объект.РежимЗагрузки,"РежимЗагрузки");
//	//
//	////СписокШапка.Добавить(ВидОбъекта, "ВидОбъекта");
//	//СписокШапка.Добавить(Объект.ТипОбъектаСправочника, "ТипОбъектаСправочника");
//	//СписокШапка.Добавить(Объект.СсылкаИсточника, "СсылкаИсточника");
//	//СписокШапка.Добавить(Объект.ТабличнаяЧастьИсточника, "ТабличнаяЧастьИсточника");
//	//СписокШапка.Добавить(Объект.ИмяВидаРегистра, "ИмяВидаРегистра");
//	//СписокШапка.Добавить(Объект.НеСоздаватьНовыхЭлементов, "НеСоздаватьНовыхЭлементов");
//	//СписокШапка.Добавить(Объект.ЗамещатьСуществующиеЗаписи, "ЗамещатьСуществующиеЗаписи");
//	//СписокШапка.Добавить(Объект.РучнаяНумерацияКолонокТабличногоДокумента, "РучнаяНумерацияКолонокТабличногоДокумента");
//	//СписокШапка.Добавить(Объект.ПерваяСтрокаДанныхТабличногоДокумента, "ПерваяСтрокаДанныхТабличногоДокумента");
//	//
//	//СписокШапка.Добавить(Объект.ПередЗаписьюОбъекта,	"ПередЗаписьюОбъекта");
//	//СписокШапка.Добавить(Объект.ПриЗаписиОбъекта,		"ПриЗаписиОбъекта");
//	//СписокШапка.Добавить(Объект.ПослеДобавленияСтроки,	"ПослеДобавленияСтроки");
//	//
//	ТЗ = РеквизитФормыВЗначение("ТаблицаЗагружаемыхРеквизитов");
//	
//	Для каждого ЗагружаемыйРеквизит Из ТЗ Цикл
//		СтрокаНастройки = ТаблицаНастройки.Добавить();
//		ЗаполнитьЗначенияСвойств(СтрокаНастройки, ЗагружаемыйРеквизит);
//	КонецЦикла;
//	
//	Результат = Новый Структура;
//	Результат.Вставить("Шапка", СписокШапка);
//	Результат.Вставить("НастройкиКолонок", ТаблицаНастройки);

//	Возврат Результат;
//	
//КонецФункции

// Процедура восстанавливает настройки из списка значений
//&НаСервере
//Процедура ВосстановитьНастройкиИзСписка(СписокЗначений)
//	Если СписокЗначений = Неопределено Тогда
//		Возврат;
//	КонецЕсли;
//	
//	РеквизитыШапки = Неопределено;
//	ТаблицаНастройки = Неопределено;
//	Для каждого ЭлСписка Из СписокЗначений Цикл
//	
//		Если ЭлСписка.Представление = "Шапка" Тогда
//			РеквизитыШапки = ЭлСписка.Значение;
//		ИначеЕсли ЭлСписка.Представление = "НастройкиКолонок" Тогда
//			ТаблицаНастройки = ЭлСписка.Значение;
//		КонецЕсли;
//	
//	КонецЦикла;
//	
//	Если НЕ РеквизитыШапки = Неопределено Тогда
//		// Создаем соответствие из списка
//		СписокШапки = Новый Соответствие;
//		Для каждого ЭлСписка Из РеквизитыШапки Цикл
//			СписокШапки.Вставить(ЭлСписка.Представление, ЭлСписка.Значение);
//		КонецЦикла;
//		Объект.РежимЗагрузки = СписокШапки["РежимЗагрузки"];
//		Если Объект.РежимЗагрузки = 0 Тогда
//			Объект.ТипОбъектаСправочника = СписокШапки["ТипОбъектаСправочника"];
//		ИначеЕсли Объект.РежимЗагрузки = 1 Тогда
//			Объект.СсылкаИсточника =  СписокШапки["СсылкаИсточника"];
//			Объект.ТабличнаяЧастьИсточника = СписокШапки["ТабличнаяЧастьИсточника"];
//		ИначеЕсли Объект.РежимЗагрузки = 2 Тогда
//			Объект.ИмяВидаРегистра = СписокШапки["ИмяВидаРегистра"];
//		КонецЕсли; 
//		Объект.НеСоздаватьНовыхЭлементов = СписокШапки["НеСоздаватьНовыхЭлементов"];
//		Объект.ЗамещатьСуществующиеЗаписи = СписокШапки["ЗамещатьСуществующиеЗаписи"];
//		Объект.РучнаяНумерацияКолонокТабличногоДокумента = СписокШапки["РучнаяНумерацияКолонокТабличногоДокумента"];
//		Объект.ПерваяСтрокаДанныхТабличногоДокумента = СписокШапки["ПерваяСтрокаДанныхТабличногоДокумента"];
//	
//		Объект.ПередЗаписьюОбъекта = СписокШапки["ПередЗаписьюОбъекта"];
//		Объект.ПриЗаписиОбъекта = СписокШапки["ПриЗаписиОбъекта"];
//		Объект.ПослеДобавленияСтроки = СписокШапки["ПослеДобавленияСтроки"];
//		
//		Если НЕ ТаблицаНастройки = Неопределено Тогда
//			СтруктураУмолчаний = Новый Структура;
//			Для Каждого Стр Из ТаблицаНастройки Цикл
//				СтруктураУмолчанияРеквизита = Новый Структура;
//				СтруктураУмолчанияРеквизита.Вставить("ИмяРеквизита",		Стр.ИмяРеквизита);
//				СтруктураУмолчанияРеквизита.Вставить("Пометка",				Стр.Пометка);
//				СтруктураУмолчанияРеквизита.Вставить("ПолеПоиска",			Стр.ПолеПоиска);
//				СтруктураУмолчанияРеквизита.Вставить("ОписаниеТипов",		Стр.ОписаниеТипов);
//				СтруктураУмолчанияРеквизита.Вставить("РежимЗагрузки",		Стр.РежимЗагрузки);
//				СтруктураУмолчанияРеквизита.Вставить("НомерКолонки",		Стр.НомерКолонки);
//				СтруктураУмолчанияРеквизита.Вставить("ЗначениеПоУмолчанию",	Стр.ЗначениеПоУмолчанию);
//				
//				Если Стр.РежимЗагрузки = "Вычислять" Тогда
//					СтруктураУмолчанияРеквизита.Вставить("Выражение",		Стр.Выражение);
//				Иначе
//					СтруктураУмолчанияРеквизита.Вставить("ИскатьПо",		Стр.ИскатьПо);
//					СтруктураУмолчанияРеквизита.Вставить("СвязьПоВладельцу",Стр.СвязьПоВладельцу);
//					СтруктураУмолчанияРеквизита.Вставить("СвязьПоТипу",		Стр.СвязьПоТипу);
//					СтруктураУмолчанияРеквизита.Вставить("ЭлементСвязиПоТипу",мПривестиКЧислу(Стр.ЭлементСвязиПоТипу));
//				КонецЕсли;
//				
//				СтруктураУмолчаний.Вставить(Стр.ИмяРеквизита,СтруктураУмолчанияРеквизита);
//			 КонецЦикла;
//		КонецЕсли;
//		
//	КонецЕсли;
//	
//	МетаданныеИсточника = ПолучитьМетаданныеИсточника();
//	
//	ТЗ = РеквизитФормыВЗначение("ТаблицаЗагружаемыхРеквизитов");
//	
//	ТЗ.Очистить();
//	
//	Если      Объект.РежимЗагрузки = 0 Тогда
//		ЗаполнитьНастройкиКолонокСправочника(ТЗ);
//	ИначеЕсли Объект.РежимЗагрузки = 1 Тогда
//		ЗаполнитьНастройкиКолонокТабличнойЧасти(ТЗ);
//	ИначеЕсли Объект.РежимЗагрузки = 2 Тогда
//		ЗаполнитьНастройкиКолонокРегистраСведений(ТЗ);
//	КонецЕсли;
//	
//	Если Не СтруктураУмолчаний = Неопределено Тогда
//		
//		НомерКолонкиОформления = 0;
//		НомерКолонки = 1;
//		Для каждого КлючИЗначение Из СтруктураУмолчаний Цикл
//			Колонка = КлючИЗначение.Значение;
//			ЗагружаемыйРеквизит = ТЗ.Найти(Колонка.ИмяРеквизита,"ИмяРеквизита");
//			Если Не ЗагружаемыйРеквизит = Неопределено Тогда
//				Индекс = ТЗ.Индекс(ЗагружаемыйРеквизит);
//				Если Индекс >= НомерКолонкиОформления Тогда
//					ЗаполнитьЗначенияСвойств(ЗагружаемыйРеквизит, Колонка);
//					
//					ТЗ.Сдвинуть(ЗагружаемыйРеквизит, НомерКолонкиОформления - Индекс);
//					Если Колонка.Пометка Тогда
//						ЗагружаемыйРеквизит.НомерКолонки = НомерКолонки;
//						НомерКолонки = НомерКолонки + 1;
//					КонецЕсли;
//					НомерКолонкиОформления = НомерКолонкиОформления + 1;
//					
//				КонецЕсли;
//			КонецЕсли;
//				
//		КонецЦикла;
//		
//	Иначе
//		 
//		
//		НомерКолонки = 1;
//		Для каждого ЗагружаемыйРеквизит Из ТЗ Цикл
//			
//			ЗагружаемыйРеквизит.Пометка      = Истина;
//			ЗагружаемыйРеквизит.НомерКолонки = НомерКолонки;
//			НомерКолонки = НомерКолонки + 1;
//			
//		КонецЦикла;
//		
//	КонецЕсли;
//	
//	Для каждого ЗагружаемыйРеквизит Из ТЗ Цикл
//		Если ЗагружаемыйРеквизит.РежимЗагрузки = "Вычислять" Тогда
//			ЗагружаемыйРеквизит.ПредставлениеДопУсловий = ЗагружаемыйРеквизит.Выражение;
//		Иначе
//			ЗагружаемыйРеквизит.ПредставлениеДопУсловий = ?(ПустаяСтрока(ЗагружаемыйРеквизит.ИскатьПо), "", "Искать по "+ЗагружаемыйРеквизит.ИскатьПо)
//										+?(ПустаяСтрока(ЗагружаемыйРеквизит.СвязьПоВладельцу), "", " по владельцу "+ЗагружаемыйРеквизит.СвязьПоВладельцу);
//		КонецЕсли; 
//	КонецЦикла; 
//	
//	ЗначениеВРеквизитФормы(ТЗ, "ТаблицаЗагружаемыхРеквизитов");
//	
//КонецПроцедуры

//&НаСервере
//Процедура УстановитьТекущиеНастройки(СписокНастроек, Пометка, Представление, СтруктураНастроек)
//	
//КонецПроцедуры
