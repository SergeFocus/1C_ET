// sza151103-0508 только добавил
//sza080221
//sza.od.ua
Перем РезультатыАнализаВирт;
Перем МассивИменСправочников;
Процедура КнопкаВыполнитьНажатие(Кнопка) //анализ
	ПодготовитьсяКАнализу();
	МассивИменСправочников.Очистить();
	Если ЭтаФорма.ЭлементыФормы.Показатели.ВыделенныеСтроки.Количество() >1 Тогда
		ВыполнитьАнализ(Истина,Ложь,,); //для выделенных показателей
	ИначеЕсли Показатели.Количество() >0 ТОгда
		ВыполнитьАнализ(Ложь,Ложь,,); //для всех показателей
	Иначе 
		ПоказатьПредупреждение(Новый ОписаниеОповещения("КнопкаВыполнитьНажатиеЗавершение", ЭтаФорма), "Показатели для анализа не выбраны!.",0,"Ошибка!");
        Возврат;
	КонецЕсли;
	КнопкаВыполнитьНажатиеФрагмент();
КонецПроцедуры

Процедура КнопкаВыполнитьНажатиеЗавершение(ДополнительныеПараметры) Экспорт
	
	КнопкаВыполнитьНажатиеФрагмент();

КонецПроцедуры

Процедура КнопкаВыполнитьНажатиеФрагмент()
	
	ОтобразитьРезультаты();

КонецПроцедуры
Процедура ОтобразитьРезультаты()
	РезультатыАнализа.Загрузить(РезультатыАнализаВирт);	
	С=ЭтаФорма.ЭлементыФормы.Панель1.Страницы.Страница2 ;
	ЭтаФорма.ЭлементыФормы.Панель1.ТекущаяСтраница=С ;
	Если Желтых >0 Тогда ЭтаФорма.ЭлементыФормы.Желтых.Видимость	=Истина ;
	КонецЕсли;
	Если Красных >0 Тогда ЭтаФорма.ЭлементыФормы.Красных.Видимость	=Истина ;
	КонецЕсли;
	Если Зеленых >0 Тогда ЭтаФорма.ЭлементыФормы.Зеленых.Видимость	=Истина ;
	КонецЕсли;
КонецПроцедуры
Процедура ПодготовитьсяКАнализу()
	ЭтаФорма.ЭлементыФормы.Желтых.Видимость	=Ложь ;
	ЭтаФорма.ЭлементыФормы.Красных.Видимость	=Ложь ;
	ЭтаФорма.ЭлементыФормы.Зеленых.Видимость	=Ложь ;
	РезультатыАнализаВирт = новый ТаблицаЗначений; //подготовка виртуальной таблицы
	Для каждого ИмяКолонки Из ЭтотОбъект.метаданные().ТабличныеЧасти.РезультатыАнализа.Реквизиты Цикл
		РезультатыАнализаВирт .Колонки.Добавить(СокрЛП(ИмяКолонки.Имя));
	КонецЦикла; 
	Зеленых=0;	Красных=0;	Желтых=0;
КонецПроцедуры
Процедура ВыполнитьАнализ(ДляВыделенныхСтрок,ИспользоватьДатыПоказателей,ИспользоватьДатуНачала,ИспользоватьДатуОкончания) 
	Если ДляВыделенныхСтрок Тогда
		ПереченьПоказателей			=ЭтаФорма.ЭлементыФормы.Показатели.ВыделенныеСтроки ;
	Иначе ПереченьПоказателей	=Показатели;	
	КонецЕсли;
	Для каждого Показатель Из ПереченьПоказателей Цикл  		
		Если Показатель.ИспользоватьПоказатель Тогда
			Если НЕ ИспользоватьДатыПоказателей Тогда
				Если ВРЕГ(Лев(Показатель.ТипПоказателя,1))="С" Тогда 
					ИспользоватьДатуОкончания	=КонецДня(КонецПериодаИзучения); //у справочников запрос выполняется один раз и сразу для даты окончания периода
				Иначе
					ИспользоватьДатуНачала		=НачалоДня(Показатель.НачалоПериодаИзучения);					
					ИспользоватьДатуОкончания	=КонецДня(Показатель.КонецПериодаИзучения); 	
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ИспользоватьДатуОкончания) Тогда
				ИспользоватьДатуОкончания	=КонецДня(КонецПериодаИзучения); //для диаграммы необходима в любом случае там дата - измерение
			КонецЕсли;
			состояние("Анализ показателя "+Показатель.Наименование+" с "+Формат(ИспользоватьДатуНачала,"ДФ=dd.MM.yyyy")+" по "+Формат(ИспользоватьДатуОкончания,"ДФ=dd.MM.yyyy"));
			ЗапросПоказателя=Новый Запрос;
			// Можно ускорить запросив лишь первые
			//		Если Показатель.ЧислоОбъектовПоказателя >0 Тогда
			//			НеобходимоЧисло=" ПЕРВЫЕ "+сокрлп(Показатель.ЧислоОбъектовПоказателя);
			//		иначе НеобходимоЧисло="";
			//		КонецЕсли;
			НеобходимоЧисло="";			
			Если ЗначениеЗаполнено(Показатель.РеквизитОбъектаПоказателя) Тогда //Если необходим, отбор по реквизиту
				ИмяРеквизитаОбъектаПоказателя=СокрЛП(Показатель.РеквизитОбъектаПоказателя);
			Иначе ИмяРеквизитаОбъектаПоказателя="";
			КонецЕсли;
			Если ВРЕГ(Лев(Показатель.ТипПоказателя,1))="Р" Тогда
				ИмяВыбораРеквизитаОбъектаПоказателя="*"; //регистру не угадаешь 
			Иначе ИмяВыбораРеквизитаОбъектаПоказателя="Ссылка"; //Одно уникальное Поле выбора				
			КонецЕсли;
			Если ЗначениеЗаполнено(Показатель.ОбъектПоказателя) Тогда
				ТипСтрока=лев(сокрлп(типзнч(Показатель.объектпоказателя)),Найти(сокрлп(типзнч(Показатель.объектпоказателя))," ")-1);
				ИмяОбъектаПоказателя =Показатель.объектпоказателя.метаданные().имя;
			иначеесли ЗначениеЗаполнено(Показатель.ТипПоказателя) тогда
				Если ВРЕГ(Лев(Показатель.ТипПоказателя,1))="Р" Тогда
					ТипСтрока=лев(СокрЛП(Показатель.ТипПоказателя),найти(СокрЛП(Показатель.ТипПоказателя),".")-1);
					ТипСтрока="Регистр"+Прав(ТипСтрока,СтрДлина(ТипСтрока)-8);
				Иначе ТипСтрока=лев(СокрЛП(Показатель.ТипПоказателя),найти(СокрЛП(Показатель.ТипПоказателя),".")-2);
				КонецЕсли;
				ИмяОбъектаПоказателя=прав(СокрЛП(Показатель.ТипПоказателя),стрдлина(СокрЛП(Показатель.ТипПоказателя))-найти(СокрЛП(Показатель.ТипПоказателя),"."));
			КонецЕсли;			
			ЗапросПоказателя.Текст= "ВЫБРАТЬ  "+НеобходимоЧисло+ " "+ИмяОбъектаПоказателя+ "."+ИмяВыбораРеквизитаОбъектаПоказателя+ " ИЗ "+ ТипСтрока+"."+ИмяОбъектаПоказателя+" КАК "+ИмяОбъектаПоказателя;
			ТекстУсловия=""; //Формируем строку текста запроса
			ПропуститьПоказатель=Ложь;
			Если ВРЕГ(ТипСтрока)="ДОКУМЕНТ" Тогда
				Если ИмяОбъектаПоказателя="ЧекККМ" ТОгда //с этим объектом УПП невозможно работать
					ПропуститьПоказатель=Истина;
				Иначе
					Если ЗначениеЗаполнено(Показатель.НачалоПериодаИзучения) Тогда
						ТекстУсловия=ТекстУсловия+"И "+ИмяОбъектаПоказателя+".Дата >= &НачалоПериодаИзучения ";
						ЗапросПоказателя.УстановитьПараметр("НачалоПериодаИзучения",ИспользоватьДатуНачала);
					КонецЕсли;
					Если ЗначениеЗаполнено(Показатель.КонецПериодаИзучения) Тогда
						ТекстУсловия=ТекстУсловия+"И "+ИмяОбъектаПоказателя+".Дата <= &КонецПериодаИзучения ";
						ЗапросПоказателя.УстановитьПараметр("КонецПериодаИзучения",ИспользоватьДатуОкончания);
					КонецЕсли;	
				КонецЕсли;	
			ИначеЕсли ВРЕГ(ТипСтрока)="РЕГИСТРСВЕДЕНИЙ" Тогда //сработает только для периодических
				ЭтотР=метаданные.РегистрыСведений.Найти(ИмяОбъектаПоказателя);
				если НЕ ЭтотР=Неопределено И НЕ СокрЛП(ЭтотР.ПериодичностьРегистраСведений)="Непериодический" Тогда
					Если ЗначениеЗаполнено(Показатель.НачалоПериодаИзучения) Тогда
						ТекстУсловия=ТекстУсловия+"И "+ИмяОбъектаПоказателя+".Период >= &НачалоПериодаИзучения ";
						ЗапросПоказателя.УстановитьПараметр("НачалоПериодаИзучения",ИспользоватьДатуНачала);
					КонецЕсли;
					Если ЗначениеЗаполнено(Показатель.КонецПериодаИзучения) Тогда
						ТекстУсловия=ТекстУсловия+"И "+ИмяОбъектаПоказателя+".Период <= &КонецПериодаИзучения ";
						ЗапросПоказателя.УстановитьПараметр("КонецПериодаИзучения",ИспользоватьДатуОкончания);
					КонецЕсли;	
				КонецЕсли;
			ИначеЕсли ВРЕГ(ТипСтрока)="РЕГИСТРНАКОПЛЕНИЯ" Тогда //сработает только для периодических
				ЭтотР=метаданные.РегистрыНакопления.Найти(ИмяОбъектаПоказателя);
				если НЕ ЭтотР=Неопределено Тогда
					Если ЗначениеЗаполнено(Показатель.НачалоПериодаИзучения) Тогда
						ТекстУсловия=ТекстУсловия+"И "+ИмяОбъектаПоказателя+".Период >= &НачалоПериодаИзучения ";
						ЗапросПоказателя.УстановитьПараметр("НачалоПериодаИзучения",ИспользоватьДатуНачала);
					КонецЕсли;
					Если ЗначениеЗаполнено(Показатель.КонецПериодаИзучения) Тогда
						ТекстУсловия=ТекстУсловия+"И "+ИмяОбъектаПоказателя+".Период <= &КонецПериодаИзучения ";
						ЗапросПоказателя.УстановитьПараметр("КонецПериодаИзучения",ИспользоватьДатуОкончания);
					КонецЕсли;	
				КонецЕсли;
			Иначе //запросы к справочникам не повторяются для периодов - это безсмысленно - устанавливается дата конца интервала 
				Если МассивИменСправочников.Найти(Показатель.Наименование)=Неопределено  Тогда
					МассивИменСправочников.Добавить(Показатель.Наименование);
				Иначе ПропуститьПоказатель=Истина;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ПропуститьПоказатель ТОгда
				Если ЗначениеЗаполнено(Показатель.ЗначениеРеквизитаОбъектаПоказателя) Тогда
					ТекстУсловия=ТекстУсловия+"И "+ ИмяОбъектаПоказателя+"."+ИмяРеквизитаОбъектаПоказателя+" = &"+ИмяРеквизитаОбъектаПоказателя;
					ЗапросПоказателя.УстановитьПараметр(ИмяРеквизитаОбъектаПоказателя,Показатель.ЗначениеРеквизитаОбъектаПоказателя);
				КонецЕсли;
				Если НЕ ТекстУсловия="" Тогда //Добавляем условия
					ЗапросПоказателя.Текст=ЗапросПоказателя.Текст+" ГДЕ "+Прав(ТекстУсловия,СтрДлина(ТекстУсловия)-1);
				КонецЕсли;
				ВзЗапросПоказателя	=ЗапросПоказателя.Выполнить();
				НовыйРезультат			=РезультатыАнализаВирт.Добавить();
				НовыйРезультат.Наименование		=Показатель.Наименование;	
				НовыйРезультат.ПериодАнализа	=ИспользоватьДатуОкончания;
				НовыйРезультат.Эталон					=Показатель.ЧислоОбъектовПоказателя;
				Если Не ВзЗапросПоказателя.Пустой() Тогда
					РезЗапросПоказателя			=ВзЗапросПоказателя.Выбрать();
					НовыйРезультат.Результат	=РезЗапросПоказателя.Количество();
					Если Показатель.ЧислоОбъектовПоказателя >0 Тогда //ПроцентИсполнения
						НовыйРезультат.ПроцентИсполнения=НовыйРезультат.Результат/(Показатель.ЧислоОбъектовПоказателя/100);
					иначе НовыйРезультат.ПроцентИсполнения=200	;
					КонецЕсли;				
					Если Показатель.СчитатьВсеУвеличенияНормойПоказателя И НовыйРезультат.ПроцентИсполнения >100 Тогда
						СостоялсяПоЗеленому=Истина;	//Увеличение - норма
					Иначе СостоялсяПоЗеленому=Ложь; //далее проверка на зеленый диапазон
						если Показатель.ПроцентЗеленогоОтклоненияПоказателя >0 Тогда
							если НовыйРезультат.ПроцентИсполнения >100 Тогда
								НовыйРезультат.ВПлюс=Истина;
								Если (НовыйРезультат.ПроцентИсполнения-Показатель.ПроцентЗеленогоОтклоненияПоказателя) > 100  Тогда
								иначе СостоялсяПоЗеленому=Истина;
								КонецЕсли;
							иначе НовыйРезультат.ВПлюс=Ложь;					
								Если (НовыйРезультат.ПроцентИсполнения+Показатель.ПроцентЗеленогоОтклоненияПоказателя)  < 100  Тогда
								иначе СостоялсяПоЗеленому=Истина;
								КонецЕсли;
							КонецЕсли;								
						КонецЕсли;	
					КонецЕсли;
					Если СостоялсяПоЗеленому ИЛИ НовыйРезультат.Результат=Показатель.ЧислоОбъектовПоказателя Тогда
						НовыйРезультат.Исполнен=1; //зеленый
						Зеленых=Зеленых+1;
					иначеесли Показатель.ПроцентЖелтогоОтклоненияПоказателя >0 Тогда //далее проверка на желтый диапазон
						если НовыйРезультат.ПроцентИсполнения >100 Тогда
							НовыйРезультат.ВПлюс=Истина;
							Если (НовыйРезультат.ПроцентИсполнения-Показатель.ПроцентЖелтогоОтклоненияПоказателя) > 100  Тогда
								Красных=Красных+1;
							иначе НовыйРезультат.Исполнен=2;Желтых=Желтых+1;
							КонецЕсли;
						иначе НовыйРезультат.ВПлюс=Ложь;					
							Если (НовыйРезультат.ПроцентИсполнения+Показатель.ПроцентЖелтогоОтклоненияПоказателя) < 100  Тогда
								Красных=Красных+1;
							иначе НовыйРезультат.Исполнен=2;Желтых=Желтых+1;
							КонецЕсли;
						КонецЕсли;			
					иначе Красных=Красных+1;
					КонецЕсли;
				Иначеесли Показатель.ЧислоОбъектовПоказателя=0 тогда
					НовыйРезультат.Исполнен						=1; //зеленый
					НовыйРезультат.ПроцентИсполнения	=100	;
					Зеленых=Зеленых+1; //и должен был быть пуст				
				Иначе Красных=Красных+1; //запрос пуст - красный
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры //ВыполнитьАнализ

Процедура ВыбПериодНажатие(Элемент) //выбор периода
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачалоПериодаИзучения, ?(КонецПериодаИзучения='0001-01-01', КонецПериодаИзучения, КонецДня(КонецПериодаИзучения)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачалоПериодаИзучения = НастройкаПериода.ПолучитьДатуНачала();
		КонецПериодаИзучения = НастройкаПериода.ПолучитьДатуОкончания();
		ИзменятьЛиПоказатели();
	КонецЕсли;
КонецПроцедуры

Процедура ПоказателиОбъектПоказателяПриИзменении(Элемент)
	ТекСтрока=ЭтаФорма.ЭлементыФормы.Показатели.ТекущаяСтрока;	//Подстановка нужной строки в ТипПоказателя
	Если ЗначениеЗаполнено(ТекСтрока.ОбъектПоказателя) или НЕ типзнч(ТекСтрока.ОбъектПоказателя)=Неопределено  Тогда
		ТипСтрока=лев(сокрлп(типзнч(ТекСтрока.объектпоказателя)),Найти(сокрлп(типзнч(ТекСтрока.объектпоказателя))," ")-1);
		Если ВРЕГ(ТипСтрока)="ДОКУМЕНТ" Тогда ТипСтрока=ТипСтрока+"ы";
		Иначе ТипСтрока=ТипСтрока+"и";
		конецЕсли;
		Попытка ТекСтрока.ТипПоказателя = ТипСтрока+"."+ТекСтрока.объектпоказателя.метаданные().имя;
			Если НЕ ЗначениеЗаполнено(ТекСтрока.Наименование) Тогда Обозвать(ТекСтрока);
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

Процедура Обозвать(ТекСтрока) //редкая попытка самостоятельного расчета имени показателя
	Если ЗначениеЗаполнено(ТекСтрока.ОбъектПоказателя) Тогда
		ТекСтрока.Наименование=СокрЛП(ТекСтрока.объектпоказателя.метаданные().имя);
	Иначе 	ТекСтрока.Наименование=прав(СокрЛП(ТекСтрока.ТипПоказателя),стрдлина(СокрЛП(ТекСтрока.ТипПоказателя))-найти(СокрЛП(ТекСтрока.ТипПоказателя),"."));
	КонецЕсли;
	если ЗначениеЗаполнено(ТекСтрока.РеквизитОбъектаПоказателя) тогда
		ТекСтрока.Наименование= ТекСтрока.Наименование+", где "+СокрЛП(ТекСтрока.РеквизитОбъектаПоказателя);	
	КонецЕсли;
	если ЗначениеЗаполнено(ТекСтрока.ЗначениеРеквизитаОбъектаПоказателя) тогда
		ТекСтрока.Наименование= ТекСтрока.Наименование+"="+СокрЛП(ТекСтрока.ЗначениеРеквизитаОбъектаПоказателя);	
	КонецЕсли;
КонецПроцедуры //Обозвать

Процедура ПоказателиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда		//Новый показатель
		ТекСтрока=ЭтаФорма.ЭлементыФормы.Показатели.ТекущаяСтрока;
		ТекСтрока.ИспользоватьПоказатель 								= Истина;
		ТекСтрока.ПроцентЖелтогоОтклоненияПоказателя		=ПроцентЖелтогоОтклонения;
		ТекСтрока.ПроцентЗеленогоОтклоненияПоказателя		=ПроцентЗеленогоОтклонения;
		ТекСтрока.СчитатьВсеУвеличенияНормойПоказателя	=СчитатьВсеУвеличенияНормой;
	КонецЕсли;
КонецПроцедуры

Процедура ПоказателиЗначениеРеквизитаОбъектаПоказателяПриИзменении(Элемент)
	ТекСтрока=ЭтаФорма.ЭлементыФормы.Показатели.ТекущаяСтрока;
	Если НЕ ЗначениеЗаполнено(ТекСтрока.Наименование) Тогда Обозвать(ТекСтрока);
	КонецЕсли;
КонецПроцедуры

Процедура ПоказателиРеквизитОбъектаПоказателяПриИзменении(Элемент)
	ТекСтрока=ЭтаФорма.ЭлементыФормы.Показатели.ТекущаяСтрока;
	Если НЕ ЗначениеЗаполнено(ТекСтрока.Наименование) Тогда Обозвать(ТекСтрока);
	КонецЕсли;
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000950", ЭтаФорма, Отказ);
	
	Если НЕ Отказ Тогда
		
		Если ПроцентЖелтогоОтклонения=0 Тогда		//данные по умолчанию
			ПроцентЖелтогоОтклонения	=33.33;
			ПроцентЗеленогоОтклонения	=5;
		КонецЕсли;	
КонецЕсли;

КонецПроцедуры

Процедура РезультатыАнализаПриПолученииДанных(Элемент, ОформленияСтрок)
	Для Каждого ОформлениеСтроки ИЗ ОформленияСтрок Цикл
		ЯчейкаСтроки	=ОформлениеСтроки.ячейки; 			
		ДанныеСтроки	=ОформлениеСтроки.данныестроки; 			
		Если ДанныеСтроки.ВПлюс Тогда //расчет цветовой разницы
			ЦД=ДанныеСтроки.ПроцентИсполнения-100	;
		Иначе ЦД=100-ДанныеСтроки.ПроцентИсполнения;
		КонецЕсли;
		Если ЦД >100 Тогда ЦД=100;
		ИначеЕсли ЦД <0 Тогда ЦД=0;
		КонецЕсли;
		Если ДанныеСтроки.Исполнен=0 Тогда //в градациях для красного
			КрасныйЦвет				=255;			ГрадацияКрасного	=0;
			ЗеленыйЦвет				=200;			ГрадацияЗеленого	=1;
			СинийЦвет					=200;			ГрадацияСинего		=1;
		иначеесли ДанныеСтроки.Исполнен=1 Тогда //в градациях для зеленого
			Если НЕ ДанныеСтроки.ПроцентЗеленогоОтклоненияПоказателя =0 Тогда
				ЗеленаяБаза = ДанныеСтроки.ПроцентЗеленогоОтклоненияПоказателя/100;
				ЦД=ЦД/ЗеленаяБаза;
			КонецЕсли;
			КрасныйЦвет				=200;			ГрадацияКрасного	=1;
			ЗеленыйЦвет				=255;			ГрадацияЗеленого	=0;
			СинийЦвет					=200;			ГрадацияСинего		=1;
		иначе 
			Если НЕ ДанныеСтроки.ПроцентЖелтогоОтклоненияПоказателя =0 Тогда
				ЖелтаяБаза = ДанныеСтроки.ПроцентЖелтогоОтклоненияПоказателя/100;
				ЦД=ЦД/ЖелтаяБаза;
			КонецЕсли;			//в градациях для желтого
			КрасныйЦвет				=255;			ГрадацияКрасного	=0;
			ЗеленыйЦвет				=255;			ГрадацияЗеленого	=0;
			СинийЦвет					=200;			ГрадацияСинего		=1;
		КонецЕсли;
		Если ЦД >100 Тогда ЦД=100;
		ИначеЕсли ЦД <0 Тогда ЦД=0;
		КонецЕсли;
		ЦД=ЦД*2;
		ЕЕЦвет=Новый Цвет(КрасныйЦвет-ГрадацияКрасного*ЦД,ЗеленыйЦвет-ГрадацияЗеленого*ЦД,СинийЦвет-ГрадацияСинего*ЦД);
		ЯчейкаСтроки.Результат.ЦветФона=ЕЕЦвет;
	КонецЦикла;  //по оформлению строк
КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)	//сбор показателей (автоматический подбор показателей по базе данных)
	Если Показатели.Количество() =0 или Вопрос("Очистить текущую таблицу показателей?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда		
		ПоказателиВирт = новый ТаблицаЗначений; //вирт таблица
		Для каждого ИмяКолонки Из ЭтотОбъект.метаданные().ТабличныеЧасти.Показатели.Реквизиты Цикл
			ПоказателиВирт .Колонки.Добавить(СокрЛП(ИмяКолонки.Имя));
		КонецЦикла; 
		состояние("Идет анализ документов..");
		ПриставкаНазвания="Число док. ";		
		ТекстУсловия=""; //сбор текста условия запроса
		Если ЗначениеЗаполнено(НачалоПериодаИзучения) Тогда
			ТекстУсловия=ТекстУсловия+"И ДОК.Дата >= &НачалоПериодаИзучения ";
		КонецЕсли;
		Если ЗначениеЗаполнено(КонецПериодаИзучения) Тогда
			ТекстУсловия=ТекстУсловия+"И ДОК.Дата <= &КонецПериодаИзучения ";
		КонецЕсли;
		Если НЕ ТекстУсловия="" Тогда
			ТекстУсловия=Прав(ТекстУсловия,СтрДлина(ТекстУсловия)-1);
		КонецЕсли;
		ТекДата=ТекущаяДата();		
		Для Каждого ДокументИзМетаданных Из Метаданные.Документы Цикл
			Если НЕ ДокументИзМетаданных.Имя="ЧекККМ" ТОгда //С этим объектом УПП невозможно работать
				ЗапросПоказателя = Новый Запрос;
				Если ЗначениеЗаполнено(НачалоПериодаИзучения) Тогда
					ЗапросПоказателя.УстановитьПараметр("НачалоПериодаИзучения",НачалоДня(НачалоПериодаИзучения));
				КонецЕсли;
				Если ЗначениеЗаполнено(КонецПериодаИзучения) Тогда
					ЗапросПоказателя.УстановитьПараметр("КонецПериодаИзучения",КонецДня(КонецПериодаИзучения));
				КонецЕсли;
				ЗапросПоказателя.Текст= "ВЫБРАТЬ ДОК.Ссылка ИЗ Документ."+ ДокументИзМетаданных.Имя+" КАК ДОК ";
				Если НЕ ТекстУсловия="" Тогда
					ЗапросПоказателя.Текст=ЗапросПоказателя.Текст+" ГДЕ "+ТекстУсловия;
				КонецЕсли;
				ВзЗапросПоказателя=ЗапросПоказателя.Выполнить();
				Если Не ВзЗапросПоказателя.Пустой() ИЛИ ВключатьПоказателиСНулевымЧисломДокументовИСправочников Тогда					
					НовыйПоказатель=ПоказателиВирт .Добавить();
					Если Не ВзЗапросПоказателя.Пустой() ТОгда 
						РезЗапросПоказателя=ВзЗапросПоказателя.Выбрать();
						НовыйПоказатель.ЧислоОбъектовПоказателя						=РезЗапросПоказателя.Количество();
						НовыйПоказатель.ПроцентЖелтогоОтклоненияПоказателя	=ПроцентЖелтогоОтклонения;
						НовыйПоказатель.ПроцентЗеленогоОтклоненияПоказателя	=ПроцентЗеленогоОтклонения;
					КонецЕсли;
					НовыйПоказатель.СчитатьВсеУвеличенияНормойПоказателя	=СчитатьВсеУвеличенияНормой;
					НовыйПоказатель.ИспользоватьПоказатель		=Истина;
					НовыйПоказатель.Зарегистрирован						=ТекДата;
					НовыйПоказатель.КонецПериодаИзучения			=КонецПериодаизучения;
					НовыйПоказатель.НачалоПериодаИзучения			=НачалоПериодаИзучения;
					НовыйПоказатель.Наименование							=ПриставкаНазвания+СокрЛП(ДокументИзМетаданных.синоним);
					НовыйПоказатель.ТипПоказателя							="Документы."+ДокументИзМетаданных.Имя;			
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		состояние("Идет анализ справочников..");
		ПриставкаНазвания="Число элт. ";
		Для Каждого СправочникИзМетаданных Из Метаданные.Справочники Цикл
			ЗапросПоказателя = Новый Запрос;
			ЗапросПоказателя.Текст= "ВЫБРАТЬ СПР.Ссылка ИЗ Справочник."+ СправочникИзМетаданных.Имя+" КАК СПР";
			ВзЗапросПоказателя=ЗапросПоказателя.Выполнить();			
			Если Не ВзЗапросПоказателя.Пустой() ИЛИ ВключатьПоказателиСНулевымЧисломДокументовИСправочников Тогда
				НовыйПоказатель=ПоказателиВирт.Добавить();
				Если Не ВзЗапросПоказателя.Пустой() Тогда
					РезЗапросПоказателя=ВзЗапросПоказателя.Выбрать();
					НовыйПоказатель.ЧислоОбъектовПоказателя						=РезЗапросПоказателя.Количество();
					НовыйПоказатель.ПроцентЖелтогоОтклоненияПоказателя	=ПроцентЖелтогоОтклонения;
					НовыйПоказатель.ПроцентЗеленогоОтклоненияПоказателя	=ПроцентЗеленогоОтклонения;
				КонецЕсли;
				НовыйПоказатель.Наименование						=ПриставкаНазвания+СокрЛП(СправочникИзМетаданных.синоним);
				НовыйПоказатель.СчитатьВсеУвеличенияНормойПоказателя=СчитатьВсеУвеличенияНормой;
				НовыйПоказатель.Зарегистрирован					=ТекДата;
				НовыйПоказатель.ИспользоватьПоказатель	=Истина;
				НовыйПоказатель.ТипПоказателя						="Справочники."+СправочникИзМетаданных.Имя;		
			КонецЕсли;
		КонецЦикла;  		
		состояние("Идет анализ регистров накопления..");
		ПриставкаНазвания="Движений по ";
		ТекстУсловия="";		//сбор тектса условия запроса
		Если ЗначениеЗаполнено(НачалоПериодаИзучения) Тогда
			ТекстУсловия=ТекстУсловия+"И РС.Период >= &НачалоПериодаИзучения ";
		КонецЕсли;
		Если ЗначениеЗаполнено(КонецПериодаИзучения) Тогда
			ТекстУсловия=ТекстУсловия+"И РС.Период <= &КонецПериодаИзучения ";
		КонецЕсли;
		Если НЕ ТекстУсловия="" Тогда
			ТекстУсловия=Прав(ТекстУсловия,СтрДлина(ТекстУсловия)-1);
		КонецЕсли;		
		Для Каждого РегистрИзМетаданных Из Метаданные.РегистрыНакопления Цикл
			ЗапросПоказателя = Новый Запрос;
			Если ЗначениеЗаполнено(НачалоПериодаИзучения) Тогда
				ЗапросПоказателя.УстановитьПараметр("НачалоПериодаИзучения",НачалоДня(НачалоПериодаИзучения));
			КонецЕсли;
			Если ЗначениеЗаполнено(КонецПериодаИзучения) Тогда
				ЗапросПоказателя.УстановитьПараметр("КонецПериодаИзучения",КонецДня(КонецПериодаИзучения));
			КонецЕсли;
			ЗапросПоказателя.Текст= "ВЫБРАТЬ * ИЗ РегистрНакопления."+ РегистрИзМетаданных.Имя+" КАК РС ";
			Если НЕ ТекстУсловия="" Тогда
				ЗапросПоказателя.Текст=ЗапросПоказателя.Текст+" ГДЕ "+ТекстУсловия;
			КонецЕсли;
			ВзЗапросПоказателя=ЗапросПоказателя.Выполнить();
			Если Не ВзЗапросПоказателя.Пустой() ИЛИ ВключатьПоказателиСНулевымЧисломДокументовИСправочников ТОгда
				НовыйПоказатель=ПоказателиВирт .Добавить();			
				Если Не ВзЗапросПоказателя.Пустой() Тогда
					РезЗапросПоказателя=ВзЗапросПоказателя.Выбрать();
					НовыйПоказатель.ЧислоОбъектовПоказателя						=РезЗапросПоказателя.Количество();
					НовыйПоказатель.ПроцентЖелтогоОтклоненияПоказателя	=ПроцентЖелтогоОтклонения;
					НовыйПоказатель.ПроцентЗеленогоОтклоненияПоказателя	=ПроцентЗеленогоОтклонения;
				КонецЕсли;
				НовыйПоказатель.Зарегистрирован						=ТекДата;
				НовыйПоказатель.ИспользоватьПоказатель		=Истина;
				НовыйПоказатель.КонецПериодаИзучения			=КонецПериодаизучения;
				НовыйПоказатель.НачалоПериодаИзучения			=НачалоПериодаИзучения;
				НовыйПоказатель.ТипПоказателя							="РегистрыНакопления."+РегистрИзМетаданных.Имя;
				НовыйПоказатель.СчитатьВсеУвеличенияНормойПоказателя=СчитатьВсеУвеличенияНормой;
				НовыйПоказатель.Наименование							=ПриставкаНазвания+СокрЛП(РегистрИзМетаданных.синоним);	
			КонецЕсли;
		КонецЦикла;
		состояние("Идет анализ регистров сведений..");
		ПриставкаНазвания="Записей в ";
		Для Каждого РегистрИзМетаданных Из Метаданные.РегистрыСведений Цикл
			ЗапросПоказателя = Новый Запрос;
			ЗапросПоказателя.Текст= "ВЫБРАТЬ * ИЗ РегистрСведений."+ РегистрИзМетаданных.Имя+" КАК РС ";
			если НЕ СокрЛП(РегистрИзМетаданных.ПериодичностьРегистраСведений)="Непериодический" Тогда
				Если ЗначениеЗаполнено(НачалоПериодаИзучения) Тогда
					ЗапросПоказателя.УстановитьПараметр("НачалоПериодаИзучения",НачалоДня(НачалоПериодаИзучения));
				КонецЕсли;
				Если ЗначениеЗаполнено(КонецПериодаИзучения) Тогда
					ЗапросПоказателя.УстановитьПараметр("КонецПериодаИзучения",КонецДня(КонецПериодаИзучения));
				КонецЕсли;	
				Если НЕ ТекстУсловия="" Тогда
					ЗапросПоказателя.Текст=ЗапросПоказателя.Текст+" ГДЕ "+ТекстУсловия;
				КонецЕсли;
			КонецЕсли;
			ВзЗапросПоказателя=ЗапросПоказателя.Выполнить();
			Если Не ВзЗапросПоказателя.Пустой() ИЛИ ВключатьПоказателиСНулевымЧисломДокументовИСправочников ТОгда
				НовыйПоказатель=ПоказателиВирт .Добавить();
				Если Не ВзЗапросПоказателя.Пустой() Тогда
					РезЗапросПоказателя=ВзЗапросПоказателя.Выбрать();
					НовыйПоказатель.ЧислоОбъектовПоказателя						=РезЗапросПоказателя.Количество();
					НовыйПоказатель.ПроцентЖелтогоОтклоненияПоказателя	=ПроцентЖелтогоОтклонения;
					НовыйПоказатель.ПроцентЗеленогоОтклоненияПоказателя	=ПроцентЗеленогоОтклонения;
				КонецЕсли;
				НовыйПоказатель.Зарегистрирован					=ТекДата;
				НовыйПоказатель.ИспользоватьПоказатель	=Истина;
				НовыйПоказатель.КонецПериодаИзучения		=КонецПериодаизучения;
				НовыйПоказатель.НачалоПериодаИзучения		=НачалоПериодаИзучения;
				НовыйПоказатель.ТипПоказателя						="РегистрыСведений."+РегистрИзМетаданных.Имя;
				НовыйПоказатель.СчитатьВсеУвеличенияНормойПоказателя=СчитатьВсеУвеличенияНормой;
				НовыйПоказатель.Наименование						=ПриставкаНазвания+СокрЛП(РегистрИзМетаданных.синоним);	
			КонецЕсли;
		КонецЦикла;
		Показатели.Загрузить(ПоказателиВирт);	
		С=ЭтаФорма.ЭлементыФормы.Панель1.Страницы.Страница1 ;//переход на страницу с показателями
		ЭтаФорма.ЭлементыФормы.Панель1.ТекущаяСтраница=С ;
	КонецЕсли;
КонецПроцедуры

Процедура Кнопка2Нажатие(Элемент)
	ИзменитьИнтервалПоказателей();
КонецПроцедуры

Процедура ИзменитьИнтервалПоказателей()	//установка периода анализа показателей документов
	Для каждого Показатель Из Показатели Цикл
		Если ЗначениеЗаполнено(Показатель.НачалоПериодаИзучения) ИЛИ ВРЕГ(Лев(Показатель.ТипПоказателя,3))="ДОК" Тогда
			Показатель.НачалоПериодаИзучения=НачалоПериодаИзучения;
		КонецЕсли;	
		Если ЗначениеЗаполнено(Показатель.КонецПериодаИзучения) ИЛИ ВРЕГ(Лев(Показатель.ТипПоказателя,3))="ДОК" Тогда
			Показатель.КонецПериодаИзучения=КонецПериодаИзучения;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры // ИзменитьИнтервалПоказателей()

Процедура Кнопка3Нажатие(Элемент)
	Для каждого Показатель Из Показатели Цикл //установить желтый диапазон для всех
		Показатель.ПроцентЖелтогоОтклоненияПоказателя=ПроцентЖелтогоОтклонения;	
		Если Показатель.ПроцентЗеленогоОтклоненияПоказателя>Показатель.ПроцентЖелтогоОтклоненияПоказателя Тогда Показатель.ПроцентЗеленогоОтклоненияПоказателя =ПроцентЖелтогоОтклонения;		
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Кнопка4Нажатие(Элемент)
	Для каждого Показатель Из Показатели Цикл //установить зеленый диапазон для всех
		Показатель.ПроцентЗеленогоОтклоненияПоказателя=ПроцентЗеленогоОтклонения;	
		Если Показатель.ПроцентЗеленогоОтклоненияПоказателя>Показатель.ПроцентЖелтогоОтклоненияПоказателя Тогда Показатель.ПроцентЖелтогоОтклоненияПоказателя =ПроцентЗеленогоОтклонения;		
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Кнопка5Нажатие(Элемент)
	Для каждого Показатель Из Показатели Цикл //установить признак, что выше нормы=норма всем показателям
		Показатель.СчитатьВсеУвеличенияНормойПоказателя=СчитатьВсеУвеличенияНормой;	
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель1Очистить(Кнопка)
	Если показатели.Количество() >0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("КоманднаяПанель1ОчиститьЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы согласны очистить таблицу показателей?"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1ОчиститьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Показатели.Очистить();	
	КонецЕсли;

КонецПроцедуры

Процедура ПоказателиТипПоказателяОткрытие(Элемент, СтандартнаяОбработка) //подбор типа показателя из доступных
	ТекСтрока=ЭтаФорма.ЭлементыФормы.Показатели.ТекущаяСтрока;
	СтандартнаяОбработка=Ложь;
	формик=получитьформу("ФормаКодировки");	
	Если ТаблицаДоступныхМетаданных.Количество()=0 Тогда
		Состояние("Подготовка таблицы доступных объектов базы данных..");
		Для Каждого ЭлементМетаданных Из Метаданные.Документы Цикл
			тд=ТаблицаДоступныхМетаданных.Добавить();
			тд.кодировка	="Документы."+СокрЛП(ЭлементМетаданных.Имя);
		КонецЦикла;
		Для Каждого ЭлементМетаданных Из Метаданные.Справочники Цикл
			тд=ТаблицаДоступныхМетаданных.Добавить();
			тд.кодировка	="Справочники."+СокрЛП(ЭлементМетаданных.Имя);
		КонецЦикла;
		Для Каждого ЭлементМетаданных Из Метаданные.РегистрыНакопления Цикл
			тд=ТаблицаДоступныхМетаданных.Добавить();
			тд.кодировка	="РегистрыНакопления."+СокрЛП(ЭлементМетаданных.Имя);
		КонецЦикла;
		Для Каждого ЭлементМетаданных Из Метаданные.РегистрыСведений Цикл
			тд=ТаблицаДоступныхМетаданных.Добавить();
			тд.кодировка	="РегистрыСведений."+СокрЛП(ЭлементМетаданных.Имя);
		КонецЦикла;
	КонецЕсли;
	формик.сейчас=СокрЛП(ТекСтрока.ТипПоказателя);	
	формик.ТабличноеПоле1=ТаблицаДоступныхМетаданных;
	Кодировка=формик.ОткрытьМодально();
	если не сокрлп(Кодировка)="" тогда
		ТекСтрока.ТипПоказателя=Кодировка;		//редкая попытка самостоятельного расчета имени показателя
		Если ЗначениеЗаполнено(ТекСтрока.ОбъектПоказателя) Тогда
			ТекСтрока.Наименование=СокрЛП(ТекСтрока.объектпоказателя.метаданные().имя);
		Иначе 	ТекСтрока.Наименование=прав(СокрЛП(ТекСтрока.ТипПоказателя),стрдлина(СокрЛП(ТекСтрока.ТипПоказателя))-найти(СокрЛП(ТекСтрока.ТипПоказателя),"."));
		КонецЕсли;
		если ЗначениеЗаполнено(ТекСтрока.РеквизитОбъектаПоказателя) тогда
			ТекСтрока.Наименование= ТекСтрока.Наименование+", где "+СокрЛП(ТекСтрока.РеквизитОбъектаПоказателя);	
		КонецЕсли;
		если ЗначениеЗаполнено(ТекСтрока.ЗначениеРеквизитаОбъектаПоказателя) тогда
			ТекСтрока.Наименование= ТекСтрока.Наименование+"="+СокрЛП(ТекСтрока.ЗначениеРеквизитаОбъектаПоказателя);	
		КонецЕсли;
	конецесли;
КонецПроцедуры

Процедура ОсновныеДействияФормыЗаписьДБФ(Кнопка) //запись таблицы покаателей в файл ДБФ
	АдресБазы="C:\szGREDAY.DBF";
	ДиалогФильтр			= "Файл dbf (*.DBF)|*.dbf";
	ДиалогРасширение	= "dbf";
	ДиалогФыбораФайла1 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогФыбораФайла1.Заголовок								=	"Выберите файл для записи:";
	ДиалогФыбораФайла1.ПолноеИмяФайла				=	АдресБазы; //АДРЕС
	ДиалогФыбораФайла1.Фильтр									=	ДиалогФильтр;
	ДиалогФыбораФайла1.Расширение							=	ДиалогРасширение;
	ДиалогФыбораФайла1.МножественныйВыбор		=	Ложь;
	ДиалогФыбораФайла1.ПредварительныйПросмотр	=	Ложь;
	ДиалогФыбораФайла1.ИндексФильтра					=	0;
	ДиалогФыбораФайла1.ПроверятьСуществованиеФайла	=	Ложь;
	Если ДиалогФыбораФайла1.Выбрать() Тогда
		Состояние("Идет запись файла..");
		АдресБазы= ДиалогФыбораФайла1.ПолноеИмяФайла;	
		БазаДБФДБФ=новый XBase;
		БазаДБФДБФ.поля.Добавить("USE","N",1,0); 
		БазаДБФДБФ.поля.Добавить("ZRO","S",40,0); 
		БазаДБФДБФ.поля.Добавить("KMP","S",254,0);
		БазаДБФДБФ.поля.Добавить("EPI","D",8,0);
		БазаДБФДБФ.поля.Добавить("NAM","S",80,0);
		БазаДБФДБФ.поля.Добавить("SPI","D",8,0);
		БазаДБФДБФ.поля.Добавить("PYD","N",8,2);
		БазаДБФДБФ.поля.Добавить("PGD","N",8,2);
		БазаДБФДБФ.поля.Добавить("ROP","S",80,0);
		БазаДБФДБФ.поля.Добавить("SUM","N",1,0);
		БазаДБФДБФ.поля.Добавить("TIP","S",80,0);
		БазаДБФДБФ.поля.Добавить("COP","N",14,0);
		БазаДБФДБФ.Кодировка=КодировкаXBase.OEM;
		БазаДБФДБФ.СоздатьФайл(АдресБазы);
		Для каждого Показатель Из Показатели Цикл
			БазаДБФДБФ.Добавить();
			БазаДБФДБФ.USE 	= показатель.ИспользоватьПоказатель;
			//	БазаДБФДБФ.ZRO = показатель.ЗначениеРеквизитаОбъектаПоказателя.Код;
			БазаДБФДБФ.KMP = Показатель.КомментарийПоказателя;
			БазаДБФДБФ.EPI 	= Показатель.КонецПериодаИзучения;
			БазаДБФДБФ.NAM = Показатель.Наименование;
			БазаДБФДБФ.SPI 	= Показатель.НачалоПериодаИзучения;
			БазаДБФДБФ.PYD 	= Показатель.ПроцентЖелтогоОтклоненияПоказателя;
			БазаДБФДБФ.PGD = Показатель.ПроцентЗеленогоОтклоненияПоказателя;
			БазаДБФДБФ.ROP = Показатель.РеквизитОбъектаПоказателя;
			БазаДБФДБФ.SUM = Показатель.СчитатьВсеУвеличенияНормойПоказателя;
			БазаДБФДБФ.TIP 	= Показатель.ТипПоказателя;
			БазаДБФДБФ.COP 	= Показатель.ЧислоОбъектовПоказателя;
			БазаДБФДБФ.Записать();
		конеццикла;  //записи ДБФ
		БазаДБФДБФ.ЗакрытьФайл();
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыПроитатьДБФ(Кнопка) //чтение таблицы показателей из файла ДБФ
	АдресБазы="C:\szGREDAY.DBF";
	ДиалогФильтр			= "Файл текста (*.DBF)|*.dbf";
	ДиалогРасширение	= "dbf";
	ДиалогФыбораФайла1 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогФыбораФайла1.Заголовок								=	"Выберите файл для импорта:";
	ДиалогФыбораФайла1.ПолноеИмяФайла				=	АдресБазы; //АДРЕС
	ДиалогФыбораФайла1.Фильтр									=	ДиалогФильтр;
	ДиалогФыбораФайла1.Расширение							=	ДиалогРасширение;
	ДиалогФыбораФайла1.МножественныйВыбор		=	Ложь;
	ДиалогФыбораФайла1.ПредварительныйПросмотр	=	Ложь;
	ДиалогФыбораФайла1.ИндексФильтра					=	0;
	ДиалогФыбораФайла1.ПроверятьСуществованиеФайла	=	Истина;
	Если ДиалогФыбораФайла1.Выбрать() Тогда Отмена=Ложь;
		Если Показатели.Количество() >0 Тогда //теблица сейчас не пустая
			КВД=Вопрос("Нажмите ДА, если нужно пополнить текущий список показателей или НЕТ, чтобы заменить текущий список показателей!?", РежимДиалогаВопрос.ДаНетОтмена);
			Если КВД=КодВозвратаДиалога.НЕт Тогда Показатели.Очистить();
			ИначеЕсли КВД=КодВозвратаДиалога.Отмена Тогда Отмена=Истина;
			КонецЕсли;
		КонецЕсли;
		Если Не Отмена Тогда Состояние("Идет чтение файла..");
			Попытка
				АдресБазы= ДиалогФыбораФайла1.ПолноеИмяФайла;
				БазаДБФ=новый XBase;
				БазаДБФ.ОткрытьФайл(АдресБазы);
				Если БазаДБФ.Первая() Тогда
					Пока Истина Цикл
						НовыйПоказатель=Показатели.Добавить();
						//	НовыйПоказатель.ЗначениеРеквизитаОбъектаПоказателя		= БазаДБФ.ZRO ;
						НовыйПоказатель.ИспользоватьПоказатель		= БазаДБФ.USE ;
						НовыйПоказатель.КомментарийПоказателя		= БазаДБФ.KMP ;
						НовыйПоказатель.КонецПериодаИзучения			= БазаДБФ.EPI ;
						НовыйПоказатель.Наименование							= БазаДБФ.NAM ;
						НовыйПоказатель.НачалоПериодаИзучения			= БазаДБФ.SPI ;
						НовыйПоказатель.РеквизитОбъектаПоказателя	= БазаДБФ.ROP ;
						НовыйПоказатель.ТипПоказателя							= БазаДБФ.TIP ;
						НовыйПоказатель.ЧислоОбъектовПоказателя	= БазаДБФ.COP ;						 
						НовыйПоказатель.ПроцентЖелтогоОтклоненияПоказателя		= БазаДБФ.PYD ;
						НовыйПоказатель.ПроцентЗеленогоОтклоненияПоказателя		= БазаДБФ.PGD ;					
						НовыйПоказатель.СчитатьВсеУвеличенияНормойПоказателя	= БазаДБФ.SUM ;
						Если НЕ БазаДБФ.Следующая() Тогда Прервать;
						Конецесли;
					КонецЦикла;
				Иначе Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("База данных ДБФ пустая!"));
				Конецесли;
				БазаДБФ.ЗакрытьФайл();		
			Исключение 
				ПоказатьПредупреждение(Неопределено, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При попытки чтения данных из ДБФ произошла ошибка") + ": " + Символы.ПС+ОписаниеОшибки(), 0, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка!!"));
			КонецПопытки;
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

Процедура КонецПериодаИзученияПриИзменении(Элемент) //дергаем дату конца
	Если НачалоПериодаИзучения > КонецПериодаИзучения Тогда НачалоПериодаИзучения = КонецПериодаИзучения ;		
	КонецЕсли;
	ИзменятьЛиПоказатели();
КонецПроцедуры

Процедура НачалоПериодаИзученияПриИзменении(Элемент)  //дергаем дату начала
	Если НачалоПериодаИзучения > КонецПериодаИзучения Тогда КонецПериодаИзучения =НачалоПериодаИзучения ;		
	КонецЕсли;
	ИзменятьЛиПоказатели();	
КонецПроцедуры

Процедура КоманднаяПанель2ОтобратьТолькоКрасные(Кнопка)	//отобрать только красные результаты
	если НЕ ЭтаФорма.ЭлементыФормы.РезультатыАнализа.ОтборСтрок.Исполнен.использование Тогда
		ЭтаФорма.ЭлементыФормы.РезультатыАнализа.ОтборСтрок.Исполнен.значение=0 ;
		ЭтаФорма.ЭлементыФормы.РезультатыАнализа.ОтборСтрок.Исполнен.использование=истина;
	Иначе ЭтаФорма.ЭлементыФормы.РезультатыАнализа.ОтборСтрок.Исполнен.использование=Ложь;		
	КонецЕсли;
КонецПроцедуры

Процедура ПроцентЖелтогоОтклоненияПриИзменении(Элемент) //дерагем процент желтого
	Если ПроцентЗеленогоОтклонения >ПроцентЖелтогоОтклонения Тогда ПроцентЗеленогоОтклонения =ПроцентЖелтогоОтклонения;		
	КонецЕсли;
КонецПроцедуры

Процедура ПроцентЗеленогоОтклоненияПриИзменении(Элемент) //дерагем процент зеленого
	Если ПроцентЗеленогоОтклонения >ПроцентЖелтогоОтклонения Тогда ПроцентЖелтогоОтклонения=ПроцентЗеленогоОтклонения ;		
	КонецЕсли;
КонецПроцедуры

Процедура ПоказателиПроцентЖелтогоОтклоненияПоказателяПриИзменении(Элемент) //дерагем процент желтого в таблице
	ТекСтрока=ЭтаФорма.ЭлементыФормы.Показатели.ТекущаяСтрока;
	Если ТекСтрока.ПроцентЗеленогоОтклоненияПоказателя>ТекСтрока.ПроцентЖелтогоОтклоненияПоказателя Тогда ТекСтрока.ПроцентЗеленогоОтклоненияПоказателя =ТекСтрока.ПроцентЖелтогоОтклоненияПоказателя;		
	КонецЕсли;
КонецПроцедуры

Процедура ПоказателиПроцентЗеленогоОтклоненияПоказателяПриИзменении(Элемент) //дерагем процент зеленого в таблице
	ТекСтрока=ЭтаФорма.ЭлементыФормы.Показатели.ТекущаяСтрока;
	Если ТекСтрока.ПроцентЗеленогоОтклоненияПоказателя>ТекСтрока.ПроцентЖелтогоОтклоненияПоказателя Тогда ТекСтрока.ПроцентЖелтогоОтклоненияПоказателя=ТекСтрока.ПроцентЗеленогоОтклоненияПоказателя ;		
	КонецЕсли;  
КонецПроцедуры

Процедура КоманднаяПанель2УстановитьНормой(Кнопка) //установка нормы для показателей прямо из таблицы результатов
	ВыделенныеСтроки=этаформа.элементыформы.результатыанализа.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() =0 Тогда
		ПоказатьПредупреждение(Неопределено, "Не выбраны строки результатов, норма показателей которых должна быть установлена по результату!.",0,"Ошибка!");
	Иначе
		Если Вопрос("Вы согласны изменить НОРМУ для "+СокрЛП(ВыделенныеСтроки.Количество())+" показателей по выбранным строкам результата?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда	
			Для каждого ПоказательРезультат Из ВыделенныеСтроки Цикл
				ЭтотПоказатель=Показатели.Найти(ПоказательРезультат.Наименование,"Наименование");
				Если НЕ ЭтотПоказатель=Неопределено  Тогда
					ЭтотПоказатель.ЧислоОбъектовПоказателя=ПоказательРезультат.Результат;
				Иначе Сообщить("Показатель с наименованием "+СокрЛП(ПоказательРезультат.Наименование)+" не найден! Удивительная ошибка, ведь в результатах он есть.");
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1Действие9(Кнопка)	//выполнить анализ, но для периода (из шапки)
	ПодготовитьсяКАнализу();
	ТекДатаЦикла=НачалоДня(НачалоПериодаИзучения);
	Если ЭтаФорма.ЭлементыФормы.Показатели.ВыделенныеСтроки.Количество() = 0 Тогда
		ДляВыделенных=Ложь;		//все показатели
	ИначеЕсли ЭтаФорма.ЭлементыФормы.Показатели.ВыделенныеСтроки.Количество() > 1 Тогда
		ДляВыделенных=Истина; //только выделенные показатели
	Иначе 
		Если Вопрос("Выполнить ежедневный анализ только для выделенного показателя (ДА) или для всех (НЕТ)?", РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да Тогда
			ДляВыделенных=Истина; //только выделенные показатели
		Иначе ДляВыделенных=Ложь;		//все показатели
		КонецЕсли;
	КонецЕсли;
	Если НЕ ДляВыделенных И Показатели.Количество()=0 Тогда 
		ПоказатьПредупреждение(Неопределено, "Показатели для анализа не выбраны!.",0,"Ошибка!");
	Иначе МассивИменСправочников.Очистить();
		Пока ТекДатаЦикла <= КонецПериодаИзучения Цикл
			Если НЕ ПропускатьПриАнализеЗаПериодВыходныеДни ИЛИ ДеньНедели(ТекДатаЦикла) <6 Тогда
				ВыполнитьАнализ(ДляВыделенных,Истина,ТекДатаЦикла,КонецДня(ТекДатаЦикла));			
			КонецЕсли;
			ТекДатаЦикла =ТекДатаЦикла +24*3600;	 //плюс сутки
		КонецЦикла;	
		ЭтаФорма.ЭлементыФормы.РезультатыАнализа.Колонки.ПериодАнализа.Видимость=Истина ;
		ОтобразитьРезультаты();	
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1ВыделитьДокументы(Кнопка) 	//выбрать только документы в табл показателей
	ЭтаФорма.ЭлементыФормы.Показатели.ВыделенныеСтроки.Очистить(); 
	Для каждого Показатель Из Показатели Цикл
		Если Лев(Показатель.ТипПоказателя,3)="Док" Тогда
			ЭтаФорма.ЭлементыФормы.Показатели.ВыделенныеСтроки.Добавить(Показатель);
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель1ВыбратьСправочники(Кнопка) 	//выбрать только справочники в табл показателей
	ЭтаФорма.ЭлементыФормы.Показатели.ВыделенныеСтроки.Очистить(); 
	Для каждого Показатель Из Показатели Цикл
		Если Лев(Показатель.ТипПоказателя,3)="Спр" Тогда
			ЭтаФорма.ЭлементыФормы.Показатели.ВыделенныеСтроки.Добавить(Показатель);
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель2Действие6(Кнопка)	// диаграмма по результатам
	ФормаДиаграммы=ПолучитьФорму("ФормаДиаграммы");
	ВыделенныеСтроки=ЭтаФорма.ЭлементыФормы.РезультатыАнализа.ВыделенныеСтроки;
	ТаблицаВыделенныхРезультатов=Новый ТаблицаЗначений;
	ТаблицаВыделенныхРезультатов.Колонки.Добавить("Наименование");
	ТаблицаВыделенныхРезультатов.Колонки.Добавить("ПроцентИсполнения");
	ТаблицаВыделенныхРезультатов.Колонки.Добавить("ПериодАнализа");
	Если ВыделенныеСтроки.Количество() >1 Тогда
		ТаблицаДляДиаграммы=ВыделенныеСтроки; //для выделенных результатов
	Иначе ТаблицаДляДиаграммы=РезультатыАнализа;				//для всех результатов
	КонецЕсли;
	Для каждого ВыделенныйРезультат Из ТаблицаДляДиаграммы Цикл	
		СтрокаТаблицыВыделенныхРезультатов=ТаблицаВыделенныхРезультатов.Добавить();
		СтрокаТаблицыВыделенныхРезультатов.Наименование			=ВыделенныйРезультат.Наименование;
		СтрокаТаблицыВыделенныхРезультатов.ПроцентИсполнения	=ВыделенныйРезультат.ПроцентИсполнения;
		СтрокаТаблицыВыделенныхРезультатов.ПериодАнализа			=ВыделенныйРезультат.ПериодАнализа;
	КонецЦикла;
	Если ТаблицаВыделенныхРезультатов.Количество() >0 И (ТаблицаВыделенныхРезультатов.Количество() <101 ИЛИ Вопрос("Строк диаграммы более 100. Все равно построить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да) ТОГДА
		ФормаДиаграммы.РезультатыВирт=ТаблицаВыделенныхРезультатов;
		ФормаДиаграммы.Открыть();	
	КонецЕсли;
КонецПроцедуры

Процедура ИзменятьЛиПоказатели() //дергали даты - не зря ли?
	Если Показатели.Количество() >0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ИзменятьЛиПоказателиЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Изменить период сбора показателей, согласно установленному интервалу?"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли; 
КонецПроцедуры

Процедура ИзменятьЛиПоказателиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ИзменитьИнтервалПоказателей();
	КонецЕсли;

КонецПроцедуры

Процедура ПоказателиРеквизитОбъектаПоказателяОткрытие(Элемент, СтандартнаяОбработка) //подбор доступных реквизитов
	ТекСтрока=ЭтаФорма.ЭлементыФормы.Показатели.ТекущаяСтрока;
	СтандартнаяОбработка=Ложь;
	если ЗначениеЗаполнено(ТекСтрока.ТипПоказателя) ТОгда
		формик=получитьформу("ФормаКодировки");	
		ТаблицаДоступныхРеквизитов= Новый ТаблицаЗначений;
		ТаблицаДоступныхРеквизитов.Колонки.Добавить("Кодировка");
		СимволТут=Лев(ВРЕГ(СокрЛП(ТекСтрока.ТипПоказателя)),9);
		НаименованиеТипа=прав(СокрЛП(ТекСтрока.ТипПоказателя),стрдлина(СокрЛП(ТекСтрока.ТипПоказателя))-найти(СокрЛП(ТекСтрока.ТипПоказателя),"."));
		Пропустить=Ложь;
		Если СимволТут="ДОКУМЕНТЫ" Тогда
			Для каждого РеквизитТипа Из метаданные.документы[НаименованиеТипа].реквизиты Цикл
				тд=ТаблицаДоступныхРеквизитов.Добавить();
				тд.кодировка	=СокрЛП(РеквизитТипа.Имя);			
			КонецЦикла;
		иначеЕсли СимволТут="СПРАВОЧНИ" Тогда
			Для каждого РеквизитТипа Из метаданные.Справочники[НаименованиеТипа].реквизиты Цикл
				тд=ТаблицаДоступныхРеквизитов.Добавить();
				тд.кодировка	=СокрЛП(РеквизитТипа.Имя);			
			КонецЦикла;
		ИначеЕсли СимволТут="РЕГИСТРЫС" Тогда
			Для каждого РеквизитТипа Из метаданные.РегистрыСведений[НаименованиеТипа].реквизиты Цикл
				тд=ТаблицаДоступныхРеквизитов.Добавить();
				тд.кодировка	=СокрЛП(РеквизитТипа.Имя);			
			КонецЦикла;
			Для каждого РеквизитТипа Из метаданные.РегистрыСведений[НаименованиеТипа].Измерения Цикл
				тд=ТаблицаДоступныхРеквизитов.Добавить();
				тд.кодировка	=СокрЛП(РеквизитТипа.Имя);			
			КонецЦикла;
			Для каждого РеквизитТипа Из метаданные.РегистрыСведений[НаименованиеТипа].Ресурсы Цикл
				тд=ТаблицаДоступныхРеквизитов.Добавить();
				тд.кодировка	=СокрЛП(РеквизитТипа.Имя);			
			КонецЦикла;
		ИначеЕсли СимволТут="РЕГИСТРЫН" Тогда
			Для каждого РеквизитТипа Из метаданные.РегистрыНакопления[НаименованиеТипа].реквизиты Цикл
				тд=ТаблицаДоступныхРеквизитов.Добавить();
				тд.кодировка	=СокрЛП(РеквизитТипа.Имя);			
			КонецЦикла;
			Для каждого РеквизитТипа Из метаданные.РегистрыНакопления[НаименованиеТипа].Измерения Цикл
				тд=ТаблицаДоступныхРеквизитов.Добавить();
				тд.кодировка	=СокрЛП(РеквизитТипа.Имя);			
			КонецЦикла;
			Для каждого РеквизитТипа Из метаданные.РегистрыНакопления[НаименованиеТипа].Ресурсы Цикл
				тд=ТаблицаДоступныхРеквизитов.Добавить();
				тд.кодировка	=СокрЛП(РеквизитТипа.Имя);			
			КонецЦикла;
		Иначе 
			Пропустить=Истина;
			ПоказатьПредупреждение(Новый ОписаниеОповещения("ПоказателиРеквизитОбъектаПоказателяОткрытиеЗавершение", ЭтаФорма, Новый Структура("НаименованиеТипа, пропустить, ТаблицаДоступныхРеквизитов, ТекСтрока, формик", НаименованиеТипа, пропустить, ТаблицаДоступныхРеквизитов, ТекСтрока, формик)), "Тип показателя не определен для данной строки!.",0,"Ошибка!");
            Возврат;					
		КонецЕсли;
		
		ПоказателиРеквизитОбъектаПоказателяОткрытиеФрагмент(НаименованиеТипа, пропустить, ТаблицаДоступныхРеквизитов, ТекСтрока, формик);

	иначе 
		ПоказатьПредупреждение(Неопределено, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Тип показателя в данной строке не указан!"), 0, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Невозможно получить список реквизитов!"));
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказателиРеквизитОбъектаПоказателяОткрытиеЗавершение(ДополнительныеПараметры) Экспорт
	
	НаименованиеТипа = ДополнительныеПараметры.НаименованиеТипа;
	пропустить = ДополнительныеПараметры.пропустить;
	ТаблицаДоступныхРеквизитов = ДополнительныеПараметры.ТаблицаДоступныхРеквизитов;
	ТекСтрока = ДополнительныеПараметры.ТекСтрока;
	формик = ДополнительныеПараметры.формик;	
	
	ПоказателиРеквизитОбъектаПоказателяОткрытиеФрагмент(НаименованиеТипа, пропустить, ТаблицаДоступныхРеквизитов, ТекСтрока, формик);

КонецПроцедуры

Процедура ПоказателиРеквизитОбъектаПоказателяОткрытиеФрагмент(Знач НаименованиеТипа, Знач пропустить, Знач ТаблицаДоступныхРеквизитов, Знач ТекСтрока, Знач формик)
	
	Перем Кодировка, ОбластьЭтихМетаданных;
	
	если не пропустить тогда
		формик.сейчас=СокрЛП(ТекСтрока.РеквизитОбъектаПоказателя);	
		формик.ТабличноеПоле1=ТаблицаДоступныхРеквизитов;
		Кодировка=формик.ОткрытьМодально();
		если не сокрлп(Кодировка)="" тогда			
			ТекСтрока.РеквизитОбъектаПоказателя=Кодировка;			
			ОбластьЭтихМетаданных=Лев(СокрЛП(ТекСтрока.ТипПоказателя),найти(СокрЛП(ТекСтрока.ТипПоказателя),".")-1);
			попытка //для регистров приходится учитывать измеренияи ресурсы
				попытка
					ТекСтрока.ЗначениеРеквизитаОбъектаПоказателя=Метаданные[ОбластьЭтихМетаданных][НаименованиеТипа].Реквизиты[Кодировка].тип.привестизначение();
				исключение
					ТекСтрока.ЗначениеРеквизитаОбъектаПоказателя=Метаданные[ОбластьЭтихМетаданных][НаименованиеТипа].Измерения[Кодировка].тип.привестизначение();
				конецпопытки
			исключение
				ТекСтрока.ЗначениеРеквизитаОбъектаПоказателя=Метаданные[ОбластьЭтихМетаданных][НаименованиеТипа].Ресурсы[Кодировка].тип.привестизначение();
			конецпопытки;
		КонецЕсли;                    	
	КонецЕсли;

КонецПроцедуры

МассивИменСправочников=Новый Массив;
ТаблицаДоступныхМетаданных.Колонки.Добавить("Кодировка");