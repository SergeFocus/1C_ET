//sza131228-0452 : 
//sza131003-1845 : 
перем 	укр, рус, анг, рум, бел, кит, бол, каз, пол, нем, тай;	


Процедура КнопкаВыполнитьНажатие(Кнопка)
	ВыгрузитьВсеТекстыНаРусскомДляПеревода();
КонецПроцедуры

Процедура ВыгрузитьВсеТекстыНаРусскомДляПеревода()
	
	АдресФайла = ПолучитьОтносительныйАдресНаСервере();
	
	ДиалогФильтр	 = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Файл текста") + " (*.*)|*.*";
	ДиалогРасширение = "*";
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбФайла.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите файл для выгрузки текстов для перевода:");
	ДиалогВыбФайла.ПолноеИмяФайла			=	АдресФайла; //АДРЕС
	ДиалогВыбФайла.Фильтр					=	ДиалогФильтр;
	ДиалогВыбФайла.Расширение				=	ДиалогРасширение;
	ДиалогВыбФайла.МножественныйВыбор		=	Ложь;
	ДиалогВыбФайла.ПредварительныйПросмотр	=	Ложь;
	ДиалогВыбФайла.ИндексФильтра			=	0;
	
	Если ДиалогВыбФайла.Выбрать() Тогда
		АдресФайла = ДиалогВыбФайла.ПолноеИмяФайла;
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет Выгрузка данных.. ..Ждите!"));
		ВыгрузитьТекстыДляПеревода(АдресФайла);
	КонецЕсли; //когда файл АдресФайла выбран
	
КонецПроцедуры

процедура ВыгрузитьТекстыДляПеревода(АдресФайла)
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТекстыНаДругихЯзыках.ТекстНаРусском
	|ИЗ
	|	РегистрСведений.ТекстыНаДругихЯзыках КАК ТекстыНаДругихЯзыках
	|ГДЕ
	|	ТекстыНаДругихЯзыках.ТекстНаЯзыке = &ТекстНаЯзыке";
	
	Запрос.УстановитьПараметр("ТекстНаЯзыке", "");
	
	РезультатЗапроса = Запрос.Выполнить();
	если не РезультатЗапроса.Пустой() тогда
		
		записьвфайл = новый ЗаписьТекста(АдресФайла);
		записьвфайл1 = новый ЗаписьТекста(АдресФайла + "ONBASE");
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			записьвфайл.ЗаписатьСтроку(ВыборкаДетальныеЗаписи.ТекстНаРусском);
			записьвфайл1.ЗаписатьСтроку(ВыборкаДетальныеЗаписи.ТекстНаРусском);
		КонецЦикла;
		записьвфайл.Закрыть();
		записьвфайл1.Закрыть();
	конецесли;
	
	сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Переведите файл:") + " " + АдресФайла);
	
конецпроцедуры

функция   ПолучитьОтносительныйАдресНаСервере();
	
	попытка
		Возврат Константы.ПодсистемаИЭИмпортЭкспортОтносительныйАдресФайлов.Получить();
	исключение
		Возврат "";
	конецпопытки;
	
КонецФункции

Процедура ОчиститьВсеЗаписиОТекстахНаВсехЯзыкахНажатие(Элемент)
	
	Если Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы готовы все очистить?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		РСНЗ = РегистрыСведений.ТекстыНаДругихЯзыках.СоздатьНаборЗаписей();
		РСНЗ.Записать(Истина);
		
		РСНЗ = РегистрыСведений.ЗначенияНаДругихЯзыках.СоздатьНаборЗаписей();
		РСНЗ.Записать(Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
КонецПроцедуры

Процедура ПриЗакрытии()                                                  // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

Процедура ЗагрузитьПереводВсехСообщенийИзФайловНажатие(Элемент)
	
	АдресФайла = ПолучитьОтносительныйАдресНаСервере();
	
	ДиалогФильтр = "*.*";
	ДиалогРасширение = "*";
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбФайла.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите файл перевода:");
	ДиалогВыбФайла.ПолноеИмяФайла			=	АдресФайла; //АДРЕС
	ДиалогВыбФайла.Фильтр					=	ДиалогФильтр;
	ДиалогВыбФайла.Расширение				=	ДиалогРасширение;
	ДиалогВыбФайла.МножественныйВыбор		=	Ложь;
	ДиалогВыбФайла.ПроверятьСуществованиеФайла = истина;
	ДиалогВыбФайла.ПредварительныйПросмотр	=	Ложь;
	ДиалогВыбФайла.ИндексФильтра			=	0;
	
	Если ДиалогВыбФайла.Выбрать() Тогда
		АдресФайла = ДиалогВыбФайла.ПолноеИмяФайла;
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет Загрузка данных.. ..Ждите!"));
		ЗагрузитьТекстыПеревода(АдресФайла);
	КонецЕсли; //когда файл АдресФайла выбран
	
КонецПроцедуры

процедура ЗагрузитьТекстыПеревода(АдресФайла)
	
	язык = справочники.Языки.ПустаяСсылка();
	если ВвестиЗначение(язык, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите язык загрузки:"), тип("СправочникСсылка.Языки")) тогда
		ЧтениеФайла = новый ЧтениеТекста(АдресФайла, КодировкаТекста.UTF8 );
		ЧтениеФайлаРус = новый ЧтениеТекста(АдресФайла + "ONBASE", КодировкаТекста.UTF8 );
		
		Строкафайла = ЧтениеФайла.ПрочитатьСтроку();
		пока НЕ строкафайла= неопределено цикл
			
			Рус = ЧтениеФайлаРус.ПрочитатьСтроку();
			если не Рус = "" тогда
				ОбщийМодульТекстСервер.СоздатьЗаписьОТексте(Рус , язык, СтрокаФайла, Истина);
			КонецЕсли;
			
			Строкафайла = ЧтениеФайла.ПрочитатьСтроку();
		конеццикла ;
		чтениефайла.Закрыть();
	конецесли;
	
конецпроцедуры

Процедура УдалитьЯвноЛишниеЗаписиТекстовНажатие(Элемент)
	
	рся = регистрысведений.ТекстыНаДругихЯзыках.Выбрать();
	пока рся.Следующий() Цикл
		
		Если Лишнее(рся.ТекстНаЯзыке, рся.язык) 
			или лишнее(рся.ТекстНаРусском, рус)  Тогда
			
			мз = рся.ПолучитьМенеджерЗаписи();
			мз.Удалить();
			
		КонецЕсли;
		
	конеццикла;
	
КонецПроцедуры

функция   Лишнее(ТекстНаЯзыке, язык)
	
	результат = ложь;
	
	ТекстНаЯзыкеВрег = врег(ТекстНаЯзыке);
	
	если не найти(ТекстНаЯзыкеВрег, "ЧЦ =") = 0 
		или не найти(ТекстНаЯзыке, "СправочникСсылка.") = 0 
		или не найти(ТекстНаЯзыке, "СправочникОбъект.") = 0 
		или не найти(ТекстНаЯзыке, "Справочники.") = 0 
		или не найти(ТекстНаЯзыке, "Справочник.") = 0 
		или не найти(ТекстНаЯзыке, "Перечисление.") = 0 
		или не найти(ТекстНаЯзыке, "Отчет.") = 0 
		или не найти(ТекстНаЯзыке, "ОбщийМакет.") = 0 
		или не найти(ТекстНаЯзыке, "Документ.") = 0 
		или не найти(ТекстНаЯзыке, "; БИ=") = 0 
		или не найти(ТекстНаЯзыке, "ru='") = 0 
		или не найти(ТекстНаЯзыке, "естьNull(") = 0 
		или не найти(ТекстНаЯзыкеВрег, "ЧЦ=") = 0 
		или не найти(ТекстНаЯзыкеВрег, "ЧГ =") = 0 
		или не найти(ТекстНаЯзыкеВрег, "ЧГ=") = 0 
		или не найти(ТекстНаЯзыкеВрег, "ФОРМАТ(") = 0 
		или не найти(ТекстНаЯзыкеВрег, "ФОРМАТ (") = 0 
		или не найти(ТекстНаЯзыкеВрег, "СТРОКА (") = 0 
		или не найти(ТекстНаЯзыкеВрег, "СТРОКА(") = 0 
		или не найти(ТекстНаЯзыкеВрег, "НСТР(") = 0 
		или не найти(ТекстНаЯзыкеВрег, "?(") = 0 
		или не найти(ТекстНаЯзыкеВрег, "? (") = 0 
		или не найти(ТекстНаЯзыкеВрег, ");") = 0 
		или не найти(ТекстНаЯзыкеВрег, "СОКРЛП") = 0 
		или не найти(ТекстНаЯзыкеВрег, "РЯДОК(") = 0 
		или не найти(ТекстНаЯзыкеВрег, " + ") = 0 
		или не найти(ТекстНаЯзыкеВрег, "ADDIN.") = 0 
		или не найти(ТекстНаЯзыкеВрег, "RU = '") = 0 
		или не найти(ТекстНаЯзыкеВрег, "ДФ =") = 0 
		или не найти(ТекстНаЯзыкеВрег, "ДФ=") = 0 
		или не найти(ТекстНаЯзыкеВрег, "ЧН=") = 0
		или не найти(ТекстНаЯзыкеВрег, "ЧН =") = 0 тогда
		
		результат = истина;
		
	иначеесли не язык = кит тогда
		
		если Язык = укр 
			или язык = рус 
			или язык = бел 
			или язык = бол 
			или язык = каз тогда
			
			если неткириллицы(ТекстНаЯзыке) тогда
				результат = истина;
			конецесли;
			
		иначеесли не язык = тай 
			и не язык = кит тогда
			//если Язык = анг , рум, нем, пол
			если нетлатиницы(ТекстНаЯзыке) тогда
				результат = истина;
			конецесли;
			
		конецесли;
		
	конецесли;
	
	возврат результат;
	
КонецФункции	

функция   неткириллицы(текст)
	
	текст1 = ПодсистемаИЭИмпортЭкспортФС.ПеревестиСтрокуВЛатинскиеСимволы(	текст, ложь, ложь, ложь);
	если текст = текст1 тогда
		возврат истина;
	иначе
		возврат ложь;
	конецесли;
	
конецфункции

функция   нетлатиницы(текст)
	
	текст1 = ПодсистемаИЭИмпортЭкспортФС.ПривестиКСимволамНаРусском(	текст, ложь);
	если текст = текст1 тогда
		возврат истина;
	иначе
		возврат ложь;
	конецесли;
	
конецфункции

Процедура ОценитьФайлПереводаВыброситьЛишнееИРазбитьПо500СтрокНажатие(Элемент)
	
	АдресФайла = ПолучитьОтносительныйАдресНаСервере();
	
	ДиалогФильтр = "*.*";
	ДиалогРасширение = "*";
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбФайла.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите файл перевода:");
	ДиалогВыбФайла.ПолноеИмяФайла			=	АдресФайла; //АДРЕС
	ДиалогВыбФайла.Фильтр					=	ДиалогФильтр;
	ДиалогВыбФайла.Расширение				=	ДиалогРасширение;
	ДиалогВыбФайла.МножественныйВыбор		=	Ложь;
	ДиалогВыбФайла.ПроверятьСуществованиеФайла = истина;
	ДиалогВыбФайла.ПредварительныйПросмотр	=	Ложь;
	ДиалогВыбФайла.ИндексФильтра			=	0;
	
	Если ДиалогВыбФайла.Выбрать() Тогда
		АдресФайла = ДиалогВыбФайла.ПолноеИмяФайла;
		Каталог = ДиалогВыбФайла.Каталог;
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет оценка данных.. ..Ждите!"));
		ЗагрузитьпроверитьТекстыПеревода(АдресФайла, Каталог);
	КонецЕсли; //когда файл АдресФайла выбран
	
КонецПроцедуры

процедура ЗагрузитьпроверитьТекстыПеревода(АдресФайла, Каталог)
	
	сч = 0;
	счетфайлов = 100;
	файлПо500 = новый ЗаписьТекста(Каталог + "/_for_translate" + счетфайлов + ".txt");
	файлПо500ONBASE = новый ЗаписьТекста(Каталог + "/_for_translate" + счетфайлов + ".txtONBASE");
	язык = справочники.Языки.ПустаяСсылка();
	массивтекстов = новый массив;
	языкбыл = рус;
	
	если ВвестиЗначение(язык, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите язык будущей загрузки:"), тип("СправочникСсылка.Языки")) тогда
		
		если ВвестиЗначение(языкбыл, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите язык источник перевода:"), тип("СправочникСсылка.Языки")) тогда
			
			ЧтениеФайла = новый ЧтениеТекста(АдресФайла, КодировкаТекста.UTF8 );
			ЧтениеФайлаРус = новый ЧтениеТекста(АдресФайла + "ONBASE", КодировкаТекста.UTF8 );
			
			Строкафайла = ЧтениеФайла.ПрочитатьСтроку();
			пока НЕ строкафайла= неопределено цикл
				
				Рустрока = ЧтениеФайлаРус.ПрочитатьСтроку();
				если не Рустрока = ""
					и не Лишнее(Рустрока, языкбыл) тогда
					//					и не Лишнее(Строкафайла, язык) 
					//	ОбщийМодульТекстСервер.СоздатьЗаписьОТексте(Рус , язык, СтрокаФайла, Истина);
					СтрокаОтвета = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(Рустрока, язык);
					если СтрокаОтвета = Рустрока 
						и массивтекстов.Найти(Строкафайла) = Неопределено тогда
						
						массивтекстов.Добавить(Строкафайла);
						файлПо500.ЗаписатьСтроку(Строкафайла);
						файлПо500ONBASE.ЗаписатьСтроку(Рустрока);
						
						сч =сч+1;
						если сч = 500 тогда
							сч = 0;
							файлПо500.Закрыть();
							файлПо500ONBASE.Закрыть();
							счетфайлов = счетфайлов + 1;
							файлПо500 = новый ЗаписьТекста(Каталог + "/_for_translate" + счетфайлов + ".txt");
							файлПо500ONBASE = новый ЗаписьТекста(Каталог + "/_for_translate" + счетфайлов + ".txtONBASE");
						конецесли;
						
					КонецЕсли;
				КонецЕсли;
				
				Строкафайла = ЧтениеФайла.ПрочитатьСтроку();
			конеццикла ;
			чтениефайла.Закрыть();
			
			файлПо500.Закрыть();
			файлПо500ONBASE.Закрыть();
		конецесли;
	конецесли;
	
конецпроцедуры

укр = справочники.Языки.Український;
рус = справочники.Языки.Русский;
анг = справочники.Языки.English;
рум = справочники.Языки.Румынский;
бел = справочники.Языки.Белорусский;
кит = справочники.Языки.Китайский;

каз = Справочники.Языки.Казахский ;
нем = Справочники.Языки.Немецкий ;
пол = Справочники.Языки.Польский ;
бол = Справочники.Языки.Болгарский ;

тай = Справочники.Языки.Тайский ;