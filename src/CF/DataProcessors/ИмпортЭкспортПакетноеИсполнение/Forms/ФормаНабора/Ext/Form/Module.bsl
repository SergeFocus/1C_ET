// sza140420-2056
// sza140228-1423
// sza120227-1452 Администратор: ашч
// sza110322-1651
// sza110224-0857 ТипОбъектаОперации
// sza110216-1658 ОбъектОбмена
// sza110209-1650
// sza110204-1155 fix
// sza110110-1430
// sza101118-1326
// sza101117-1617
// sza101115-1620
// sza101114-2348

&НаКлиенте
Процедура АдресФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	Если ЗначениеЗаполнено(Объект.ШаблонШапки) Тогда
		СтруктураДиалогФильтр = ПодсистемаИЭ.СтруктураДиалогФильтр(Объект.ШаблонШапки);
		ДиалогРасширение = СтруктураДиалогФильтр.ДиалогРасширение;
		ДиалогФильтр = СтруктураДиалогФильтр.ДиалогФильтр;
		ДиалогДляВыбораФайла 	= Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогДляВыбораФайла.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите файл") + ": ";
		ДиалогДляВыбораФайла.ПолноеИмяФайла			=	Объект.АдресФайла;
		ДиалогДляВыбораФайла.Фильтр					=	ДиалогФильтр;
		ДиалогДляВыбораФайла.Расширение				=	ДиалогРасширение;
		ДиалогДляВыбораФайла.МножественныйВыбор		=	ЛОЖЬ;
		ДиалогДляВыбораФайла.ПредварительныйПросмотр	=	ИСТИНА;
		ДиалогДляВыбораФайла.ИндексФильтра			=	0;
		ДиалогДляВыбораФайла.ПроверятьСуществованиеФайла	=	ЛОЖЬ;

		Если ДиалогДляВыбораФайла.Выбрать() Тогда
			Объект.АдресФайла= ДиалогДляВыбораФайла.ПолноеИмяФайла;
			Попытка
				ПодсистемаИЭ.КонстантыПодсистемаИЭУстановить(Объект.АдресФайла);
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура БезОграниченияПоПериодуПриИзменении(Элемент)

	ОбновитьДоступностьДатПериода(Элементы);

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьДанныеПоШаблону(ШаблонФайла, Т = "", ДополнительныйПараметр = Неопределено) Экспорт

	Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала)
		И НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда

		ПериодДляДокументов = "";
	Иначе
		ПериодДляДокументов = Новый Структура;
		ПериодДляДокументов.Вставить("ДатаНачала", Объект.ДатаНачала);
		ПериодДляДокументов.Вставить("ДатаОкончания", Объект.ДатаОкончания);
	КонецЕсли;

	СтруктураИмпортаЭкспорта = ПодсистемаИЭКлиент.СоздатьСтруктуруВызоваИмпЭкспОперации(
	Объект.ОбъектОперации,
	Объект.ШаблонШапки,
	ИСТИНА,
	Объект.АдресФайла,
	"С",
	?(ЗначениеЗаполнено(Объект.ОбъектОперации), "", "ПакетНабораИсточниковНоОбъектНеВыбран"),
	ПериодДляДокументов,
	ДополнительныйПараметр);
	СтруктураИмпортаЭкспорта.ДатаАктуальности = Объект.ДатаАктуальности;

	Если Лев(Объект.ТипОбъектаОперации, 1) = "Д" Тогда
		ТипМета = "ДокументСсылка";
		Элементы.ПериодДляОтбораДокументов.Видимость = ИСТИНА;
	Иначе
		ТипМета = "СправочникСсылка";
		Элементы.ПериодДляОтбораДокументов.Видимость = ЛОЖЬ;
	КонецЕсли;

	ТипОбъектаОперации = Прав(Объект.ТипОбъектаОперации, стрДлина(Объект.ТипОбъектаОперации) - 1);
	СтруктураИмпортаЭкспорта.ТипМетаОбъектаОбмена = ТипМета;
	СтруктураИмпортаЭкспорта.ТипОбъектаОперации = ТипОбъектаОперации;
	МассивШаблонТаблицы = Новый Массив;
	МассивИмяТаблицыШаблонаФайла = Новый Массив;
	МассивАдресТаблицы = Новый Массив;

	Для Каждого ШаблонТаблицы Из Объект.ШаблоныТаблиц Цикл
		Если ШаблонТаблицы.Обмен Тогда
			МассивШаблонТаблицы.Добавить(ШаблонТаблицы.ШаблонТаблицы);
			МассивИмяТаблицыШаблонаФайла.Добавить(ШаблонТаблицы.ИмяТаблицыШаблонаФайла);
			МассивАдресТаблицы.Добавить(ШаблонТаблицы.АдресФайла);
		КонецЕсли;

	КонецЦикла;

	СтруктураДопТаблиц = Новый Структура;
	СтруктураДопТаблиц.Вставить("ШаблонТаблицы", МассивШаблонТаблицы);
	СтруктураДопТаблиц.Вставить("ИмяТаблицыШаблонаФайла", МассивИмяТаблицыШаблонаФайла);
	СтруктураДопТаблиц.Вставить("АдресФайла", МассивАдресТаблицы);
	СтруктураИмпортаЭкспорта.СтруктураДопТаблиц = СтруктураДопТаблиц;
	СтруктураИмпортаЭкспорта.ЧислоДопТаблиц = Объект.ШаблоныТаблиц.Количество();

	Если ЗначениеЗаполнено(Объект.ОбъектОперации) Тогда
		СтруктураИмпортаЭкспорта.ОбъектОперации = Объект.ОбъектОперации;
	Иначе
		СтруктураИмпортаЭкспорта.ОбъектОперации = Объект; // Новый(Тип(ТипМета + "." + ТипОбъектаОперации));
	КонецЕсли;

	СтруктураИмпортаЭкспорта.РежимТестирования = Объект.РежимТестирования;
	ПодсистемаИЭКлиент.ИмпортЭкспортОбработкаОбмена(СтруктураИмпортаЭкспорта);

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВыгрузкуДанных(Команда)

	Если НЕ ЗначениеЗаполнено(Объект.ШаблонШапки) Тогда
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не указан шаблон шапки!"), Объект, "ШаблонШапки");
	Иначе
		Если ЗначениеЗаполнено(Объект.ТипОбъектаОперации) ИЛИ ЗначениеЗаполнено(Объект.ОбъектОперации) Тогда

			ВыгрузитьДанныеПоШаблону(Объект.ШаблонШапки, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите файл выгрузки Данных"), "ПакетНабораИсточников");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗагрузкуДанных(Команда)

	Если НЕ ЗначениеЗаполнено(Объект.ШаблонШапки) Тогда
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не указан шаблон шапки!"), Объект, "ШаблонШапки");
	Иначе
		Если ЗначениеЗаполнено(Объект.ТипОбъектаОперации) ИЛИ ЗначениеЗаполнено(Объект.ОбъектОперации) Тогда

			ЗагрузитьДанныеПоШаблону(Объект.ШаблонШапки, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите файл загрузки Данных"), "ПакетНабораИсточников");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)

	Если Объект.ДатаОкончания < Объект.ДатаНачала Тогда
		Объект.ДатаОкончания = Объект.ДатаНачала;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)

	Если Объект.ДатаОкончания < Объект.ДатаНачала Тогда
		Объект.ДатаНачала = Объект.ДатаОкончания ;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеПоШаблону(ШаблонФайла, Т = "", ДополнительныйПараметр = Неопределено) Экспорт

	Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала)
		И НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда

		ПериодДляДокументов = "";
	Иначе
		ПериодДляДокументов = Новый Структура;
		ПериодДляДокументов.Вставить("ДатаНачала", Объект.ДатаНачала);
		ПериодДляДокументов.Вставить("ДатаОкончания", Объект.ДатаОкончания);
	КонецЕсли;

	СтруктураИмпортаЭкспорта = ПодсистемаИЭКлиент.СоздатьСтруктуруВызоваИмпЭкспОперации(
	Объект.ОбъектОперации,
	Объект.ШаблонШапки,
	ЛОЖЬ,
	Объект.АдресФайла,
	"С",
	?(ЗначениеЗаполнено(Объект.ОбъектОперации), "", "ПакетНабораИсточниковНоОбъектНеВыбран"),
	ПериодДляДокументов,
	ДополнительныйПараметр);
	СтруктураИмпортаЭкспорта.ДатаАктуальности = Объект.ДатаАктуальности;
	СтруктураИмпортаЭкспорта.ТипОбъектаОперации = СокрЛП(Объект.ТипОбъектаОперации);
	МассивШаблонТаблицы = Новый Массив;
	МассивИмяТаблицыШаблонаФайла = Новый Массив;
	МассивАдресТаблицы = Новый Массив;

	Для Каждого ШаблонТаблицы Из Объект.ШаблоныТаблиц Цикл
		Если ШаблонТаблицы.Обмен Тогда
			МассивШаблонТаблицы.Добавить(ШаблонТаблицы.ШаблонТаблицы);
			МассивИмяТаблицыШаблонаФайла.Добавить(ШаблонТаблицы.ИмяТаблицыШаблонаФайла);
			МассивАдресТаблицы.Добавить(ШаблонТаблицы.АдресФайла);
		КонецЕсли;

	КонецЦикла;

	СтруктураДопТаблиц = Новый Структура;
	СтруктураДопТаблиц.Вставить("ШаблонТаблицы", МассивШаблонТаблицы);
	СтруктураДопТаблиц.Вставить("ИмяТаблицыШаблонаФайла", МассивИмяТаблицыШаблонаФайла);
	СтруктураДопТаблиц.Вставить("АдресФайла", МассивАдресТаблицы);
	СтруктураИмпортаЭкспорта.СтруктураДопТаблиц = СтруктураДопТаблиц;
	СтруктураИмпортаЭкспорта.ЧислоДопТаблиц = Объект.ШаблоныТаблиц.Количество();

	Если ЗначениеЗаполнено(Объект.ОбъектОперации) Тогда
		СтруктураИмпортаЭкспорта.ОбъектОперации = Объект.ОбъектОперации;
	Иначе
		Если Лев(Объект.ТипОбъектаОперации, 1) = "Д" Тогда

			ТипМета = "ДокументСсылка";
			Элементы.ПериодДляОтбораДокументов.Видимость = ИСТИНА;
		Иначе
			ТипМета = "СправочникСсылка";
			Элементы.ПериодДляОтбораДокументов.Видимость = ЛОЖЬ;
		КонецЕсли;

		ТипОбъектаОперации = Прав(Объект.ТипОбъектаОперации, стрДлина(Объект.ТипОбъектаОперации) - 1);
		СтруктураИмпортаЭкспорта.ОбъектОперации = Новый(Тип(ТипМета + "." + ТипОбъектаОперации));
	КонецЕсли;

	СтруктураИмпортаЭкспорта.РежимТестирования = Объект.РежимТестирования;
	ПодсистемаИЭКлиент.ИмпортЭкспортОбработкаОбмена(СтруктураИмпортаЭкспорта);

КонецПроцедуры

Процедура ЗаполнитьТаблицыОбъектОперации()

	Объект.ШаблоныТаблиц.Очистить();
	Если ЗначениеЗаполнено(Объект.ТипОбъектаОперации) Тогда
		Если Лев(Объект.ТипОбъектаОперации, 1) = "Д" Тогда
			ТипМета = "Документы";
			Элементы.ПериодДляОтбораДокументов.Видимость = ИСТИНА;
		Иначе
			ТипМета = "Справочники";
			Элементы.ПериодДляОтбораДокументов.Видимость = ЛОЖЬ;
		КонецЕсли;

		ТипОбъектаОперации = Прав(Объект.ТипОбъектаОперации, стрДлина(Объект.ТипОбъектаОперации) - 1);

		Для Каждого ТабличнаяЧасть Из Метаданные[ТипМета][ТипОбъектаОперации].ТабличныеЧасти Цикл
			НовыйШаблонТаблицы = Объект.ШаблоныТаблиц.Добавить();
			НовыйШаблонТаблицы.ИмяТаблицыШаблонаФайла = ТабличнаяЧасть.Имя;
		КонецЦикла;
	ИначеЕсли ЗначениеЗаполнено(Объект.ОбъектОперации) Тогда
		Для Каждого ТабличнаяЧасть Из Объект.ОбъектОперации.Метаданные().ТабличныеЧасти Цикл
			НовыйШаблонТаблицы = Объект.ШаблоныТаблиц.Добавить();
			НовыйШаблонТаблицы.ИмяТаблицыШаблонаФайла = ТабличнаяЧасть.Имя;

		КонецЦикла;
	КонецЕсли;

	ПодобратьШаблоныДляОбъектаИТаблицы();

КонецПроцедуры // ЗаполнитьТаблицыОбъектОперации()

&НаКлиенте
Процедура ОбновитьДоступностьДатПериода(Элементы) Экспорт

	Если Объект.БезОграниченияПоПериоду Тогда
		Объект.ДатаНачала = '00010101000000';
		Объект.ДатаОкончания = '00010101000000';
		Элементы.ДатаНачала.Доступность = ЛОЖЬ;
		Элементы.ДатаОкончания.Доступность = ЛОЖЬ;
		Элементы.ДатаНачала1.Доступность = ЛОЖЬ;
		Элементы.ДатаОкончания1.Доступность = ЛОЖЬ;
	Иначе
		Элементы.ДатаНачала.Доступность = ИСТИНА;
		Элементы.ДатаОкончания.Доступность = ИСТИНА;
		Элементы.ДатаНачала1.Доступность = ИСТИНА;
		Элементы.ДатаОкончания1.Доступность = ИСТИНА;
	КонецЕсли;

КонецПроцедуры // ОбновитьДоступностьДатПериода

&НаКлиенте
Процедура ОбъектОперацииПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.ОбъектОперации) Тогда
		Объект.ТипОбъектаОперации = ТипВыбранногоОбъекта();
		ЗаполнитьТаблицыОбъектОперации();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПодобратьШаблоныДляОбъектаИТаблицы()

	Если ЗначениеЗаполнено(Объект.ТипОбъектаОперации) Тогда
		ТипОбъектаОперации = Прав(Объект.ТипОбъектаОперации, стрДлина(Объект.ТипОбъектаОперации) - 1);
	ИначеЕсли ЗначениеЗаполнено(Объект.ОбъектОперации) Тогда
		ТипОбъектаОперации = Объект.ОбъектОперации.Метаданные().Имя;
	КонецЕсли;

	Объект.ШаблонШапки = Справочники.ПодсистемаИЭШаблоны.НайтиПоНаименованию(ТипОбъектаОперации);

	Если ЗначениеЗаполнено(Объект.ШаблонШапки) Тогда
		Объект.АдресФайла = Объект.ШаблонШапки.АдресФайла;
	КонецЕсли;

	Для Каждого ТабличнаяЧасть Из Объект.ШаблоныТаблиц Цикл
		ТабличнаяЧасть.ШаблонТаблицы = Справочники.ПодсистемаИЭШаблоны.НайтиПоНаименованию(ТипОбъектаОперации + " " +ТабличнаяЧасть.ИмяТаблицыШаблонаФайла);
		Если ЗначениеЗаполнено(ТабличнаяЧасть.ШаблонТаблицы) Тогда
			ТабличнаяЧасть.АдресФайла = ТабличнаяЧасть.ШаблонТаблицы.АдресФайла;
			ТабличнаяЧасть.Обмен = ИСТИНА;
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // ПодобратьШаблоныДляОбъектаИТаблицы()

&НаСервере
Процедура ПолучитьСписокТипов()

	Элементы.ТипОбъектаОперации.СписокВыбора.Очистить();

	Для Каждого ТипОбъекта Из Метаданные.Справочники Цикл
		Элементы.ТипОбъектаОперации.СписокВыбора.Добавить("С" + ТипОбъекта.Имя, "Справочник " + ТипОбъекта.Синоним);
	КонецЦикла;

	Для Каждого ТипОбъекта Из Метаданные.Документы Цикл
		Элементы.ТипОбъектаОперации.СписокВыбора.Добавить("Д" + ТипОбъекта.Имя, "Документы " + ТипОбъекта.Синоним);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);

		Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
			Объект.ДатаНачала = НачалоМесяца(ТекущаяДата());
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
			Объект.ДатаОкончания = ТекущаяДата();
		КонецЕсли;

		ПолучитьСписокТипов();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002700", ЭтаФорма, Отказ, );

		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);
		КонецЕсли;

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры

&НаСервере
Функция ТипВыбранногоОбъекта() // Экспорт

	Возврат Объект.ОбъектОперации.Метаданные().Имя;

КонецФункции // ТипВыбранногоОбъекта

&НаКлиенте
Процедура ТипОбъектаОперацииПриИзменении(Элемент)
	ЗаполнитьТаблицыОбъектОперации();
КонецПроцедуры

&НаКлиенте
Процедура ШаблонШапкиПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.ШаблонШапки) и НЕ ЗначениеЗаполнено(Объект.АдресФайла) Тогда
		Объект.АдресФайла = ПодсистемаИЭ.ПолучитьАдресФайлаШаблона(Объект.ШаблонШапки);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ШаблоныТаблицАдресФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ТекСтрока = Элементы.ШаблоныТаблиц.ТекущиеДанные;

	Если ЗначениеЗаполнено(ТекСтрока.ШаблонТаблицы) Тогда
		СтруктураДиалогФильтр = ПодсистемаИЭ.СтруктураДиалогФильтр(ТекСтрока.ШаблонТаблицы);
		ДиалогРасширение = СтруктураДиалогФильтр.ДиалогРасширение;
		ДиалогФильтр = СтруктураДиалогФильтр.ДиалогФильтр;
		ДиалогДляВыбораФайла 	= Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогДляВыбораФайла.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите файл") + ": ";
		ДиалогДляВыбораФайла.ПолноеИмяФайла			=	ТекСтрока.АдресФайла;
		ДиалогДляВыбораФайла.Фильтр					=	ДиалогФильтр;
		ДиалогДляВыбораФайла.Расширение				=	ДиалогРасширение;
		ДиалогДляВыбораФайла.МножественныйВыбор		=	ЛОЖЬ;
		ДиалогДляВыбораФайла.ПредварительныйПросмотр	=	ИСТИНА;
		ДиалогДляВыбораФайла.ИндексФильтра			=	0;
		ДиалогДляВыбораФайла.ПроверятьСуществованиеФайла	=	ЛОЖЬ;

		Если ДиалогДляВыбораФайла.Выбрать() Тогда
			ТекСтрока.АдресФайла= ДиалогДляВыбораФайла.ПолноеИмяФайла;
			Попытка
				ПодсистемаИЭ.КонстантыПодсистемаИЭУстановить(ТекСтрока.АдресФайла);
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ШаблоныТаблицШаблонТаблицыПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Элементы.ШаблоныТаблиц.ТекущиеДанные.ШаблонТаблицы) Тогда
		Элементы.ШаблоныТаблиц.ТекущиеДанные.Обмен = ИСТИНА;
		Если НЕ ЗначениеЗаполнено(Элементы.ШаблоныТаблиц.ТекущиеДанные.АдресФайла) Тогда
			Элементы.ШаблоныТаблиц.ТекущиеДанные.АдресФайла = ПодсистемаИЭ.ПолучитьАдресФайлаШаблона(Элементы.ШаблоныТаблиц.ТекущиеДанные.ШаблонТаблицы);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры
