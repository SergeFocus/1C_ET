//sza140420-2056 SZA: 
//sza140228-1423 SZA: 
//sza120227-1452 Администратор: ашч
//sza110322-1651 
//sza110224-0857 ТипОбъектаОперации
//sza110216-1658 ОбъектОбмена
//sza110209-1650 
//sza110204-1155 fix
//sza110110-1430      
//sza101118-1326       
//sza101117-1617       
//sza101115-1620       
//sza101114-2353       
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
		Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
			Объект.ДатаНачала = НачалоМесяца(ТекущаяДата());
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
			Объект.ДатаОкончания = ТекущаяДата();
		КонецЕсли;
		
		ПолучитьСписокТипов();	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗагрузкуДанных(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.ШаблонШапки) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не указан шаблон шапки!");
		Сообщение.Поле = "ШаблонШапки";
		Сообщение.УстановитьДанные(Объект);
		Сообщение.Сообщить();
	Иначе
		Если ЗначениеЗаполнено(Объект.ТипОбъектаОперации) ИЛИ ЗначениеЗаполнено(Объект.ОбъектОперации) Тогда
			ЗагрузитьДанныеПоШаблону(Объект.ШаблонШапки, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите файл загрузки Данных"), "ПакетНабораИсточников"); 
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокТипов()
	
	Элементы.ТипОбъектаОперации.СписокВыбора.Очистить();
	Для Каждого ТипОбъекта из Метаданные.Справочники Цикл 	
		Элементы.ТипОбъектаОперации.СписокВыбора.Добавить("С" + ТипОбъекта.Имя, "Справочник " + ТипОбъекта.Синоним);
	КонецЦикла;
	Для Каждого ТипОбъекта из Метаданные.Документы Цикл 	
		Элементы.ТипОбъектаОперации.СписокВыбора.Добавить("Д" + ТипОбъекта.Имя, "Документы " + ТипОбъекта.Синоним);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура БезОграниченияПоПериодуПриИзменении(Элемент)
	ОбновитьДоступностьДатПериода(Элементы);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВыгрузкуДанных(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.ШаблонШапки) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не указан шаблон шапки!");
		Сообщение.Поле = "ШаблонШапки";
		Сообщение.УстановитьДанные(Объект);
		Сообщение.Сообщить();
	Иначе
		Если ЗначениеЗаполнено(Объект.ТипОбъектаОперации) ИЛИ ЗначениеЗаполнено(Объект.ОбъектОперации) Тогда
			ВыгрузитьДанныеПоШаблону(Объект.ШаблонШапки, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите файл выгрузки Данных"), "ПакетНабораИсточников"); 
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектОперацииПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ОбъектОперации) Тогда  		
		Объект.ТипОбъектаОперации = ТипВыбранногоОбъекта();		
		ЗаполнитьТаблицыОбъектОперации();		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ТипВыбранногоОбъекта() //Экспорт
	Возврат Объект.ОбъектОперации.Метаданные().Имя;
КонецФункции //ТипВыбранногоОбъекта

Процедура ЗаполнитьТаблицыОбъектОперации()
	
	Объект.ШаблоныТаблиц.Очистить();
	
	Если ЗначениеЗаполнено(Объект.ТипОбъектаОперации) Тогда
		Если Лев(Объект.ТипОбъектаОперации, 1) = "Д" Тогда
			ТипМета = "Документы";
			Элементы.ПериодДляОтбораДокументов.Видимость = Истина;
		Иначе
			ТипМета = "Справочники";
			Элементы.ПериодДляОтбораДокументов.Видимость = Ложь;
		КонецЕсли;
		ТипОбъектаОперации = Прав(Объект.ТипОбъектаОперации, стрДлина(Объект.ТипОбъектаОперации) - 1);
		Для каждого ТабличнаяЧасть Из Метаданные[ТипМета][ТипОбъектаОперации].ТабличныеЧасти Цикл 	
			НовыйШаблонТаблицы = Объект.ШаблоныТаблиц.Добавить();
			НовыйШаблонТаблицы.ИмяТаблицыШаблонаФайла = ТабличнаяЧасть.Имя;
		КонецЦикла;
		
	ИначеЕсли ЗначениеЗаполнено(Объект.ОбъектОперации) Тогда
		Для каждого ТабличнаяЧасть Из Объект.ОбъектОперации.Метаданные().ТабличныеЧасти Цикл 	
			НовыйШаблонТаблицы = Объект.ШаблоныТаблиц.Добавить();
			НовыйШаблонТаблицы.ИмяТаблицыШаблонаФайла = ТабличнаяЧасть.Имя;
		КонецЦикла; 		
	КонецЕсли;
	
	ПодобратьШаблоныДляОбъектаИТаблицы();
	
КонецПроцедуры //ЗаполнитьТаблицыОбъектОперации()

&НаСервере
Процедура ПодобратьШаблоныДляОбъектаИТаблицы()
	Если ЗначениеЗаполнено(Объект.ТипОбъектаОперации) Тогда
		ТипОбъектаОперации = Прав(Объект.ТипОбъектаОперации, стрДлина(Объект.ТипОбъектаОперации) - 1);
	ИначеЕсли ЗначениеЗаполнено(Объект.ОбъектОперации) Тогда
		ТипОбъектаОперации = Объект.ОбъектОперации.Метаданные().Имя;
	КонецЕсли;
	Объект.ШаблонШапки = Справочники.ПодсистемаИЭИмпортЭкспортФСШаблоны.НайтиПоНаименованию(ТипОбъектаОперации) ;	
	Если ЗначениеЗаполнено(Объект.ШаблонШапки) Тогда
		Объект.АдресФайла = Объект.ШаблонШапки.АдресФайла;
	КонецЕсли;
	Для каждого ТабличнаяЧасть Из Объект.ШаблоныТаблиц Цикл
		ТабличнаяЧасть.ШаблонТаблицы = Справочники.ПодсистемаИЭИмпортЭкспортФСШаблоны.НайтиПоНаименованию(ТипОбъектаОперации + " " +ТабличнаяЧасть.ИмяТаблицыШаблонаФайла) ;
		Если ЗначениеЗаполнено(ТабличнаяЧасть.ШаблонТаблицы) Тогда
			ТабличнаяЧасть.АдресФайла = ТабличнаяЧасть.ШаблонТаблицы.АдресФайла;
			ТабличнаяЧасть.Обмен = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры //ПодобратьШаблоныДляОбъектаИТаблицы()

&НаКлиенте
Процедура ШаблоныТаблицШаблонТаблицыПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элементы.ШаблоныТаблиц.ТекущиеДанные.ШаблонТаблицы) Тогда
		Элементы.ШаблоныТаблиц.ТекущиеДанные.Обмен = Истина;		
		Если НЕ ЗначениеЗаполнено(Элементы.ШаблоныТаблиц.ТекущиеДанные.АдресФайла) Тогда
			Элементы.ШаблоныТаблиц.ТекущиеДанные.АдресФайла = ПодсистемаИЭИмпортЭкспортФС.ПолучитьАресФайлаШаблона(Элементы.ШаблоныТаблиц.ТекущиеДанные.ШаблонТаблицы);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//sza101114-2348       
&НаКлиенте
Процедура ОбновитьДоступностьДатПериода(Элементы) Экспорт
	
	Если Объект.БезОграниченияПоПериоду Тогда
		Объект.ДатаНачала = '00010101000000';
		Объект.ДатаОкончания = '00010101000000';
		Элементы.ДатаНачала.Доступность = ложь;
		Элементы.ДатаОкончания.Доступность = ложь;
		Элементы.ДатаНачала1.Доступность = ложь;
		Элементы.ДатаОкончания1.Доступность = ложь;
	Иначе
		Элементы.ДатаНачала.Доступность = Истина;
		Элементы.ДатаОкончания.Доступность = Истина;
		Элементы.ДатаНачала1.Доступность = Истина;
		Элементы.ДатаОкончания1.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры //ОбновитьДоступностьДатПериода

&НаКлиенте
процедура ЗагрузитьДанныеПоШаблону(ШаблонФайла, Т = "", ДополнительныйПараметр = неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала) 
		И НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		
		ПериодДляДокументов = "";
		
	Иначе
		ПериодДляДокументов = Новый Структура;
		ПериодДляДокументов.Вставить("ДатаНачала", Объект.ДатаНачала);
		ПериодДляДокументов.Вставить("ДатаОкончания", Объект.ДатаОкончания);
	КонецЕсли;
	
	СтруктураИмпортаЭкспорта = ПодсистемаИЭИмпортЭкспортФСКлиент.СоздатьСтруктуруВызоваИмпЭкспОперации(
	Объект.ОбъектОперации, 
	Объект.ШаблонШапки, 
	Ложь, 
	Объект.АдресФайла, 
	"С", 
	?(ЗначениеЗаполнено(Объект.ОбъектОперации), "", "ПакетНабораИсточниковНоОбъектНеВыбран"),
	ПериодДляДокументов,
	ДополнительныйПараметр);
	СтруктураИмпортаЭкспорта.ДатаАктуальности = Объект.ДатаАктуальности;
	СтруктураИмпортаЭкспорта.ТипОбъектаОперации = СокрЛП(Объект.ТипОбъектаОперации);
	МассивШаблонТаблицы = Новый Массив;
	МассивИмяТаблицыШаблонаФайла = Новый Массив;
	МассивАдресТаблицы = Новый Массив;
	Для каждого ШаблонТаблицы Из Объект.ШаблоныТаблиц Цикл    
		Если ШаблонТаблицы.Обмен Тогда
			МассивШаблонТаблицы.Добавить(ШаблонТаблицы.ШаблонТаблицы);
			МассивИмяТаблицыШаблонаФайла.Добавить(ШаблонТаблицы.ИмяТаблицыШаблонаФайла);
			МассивАдресТаблицы.Добавить(ШаблонТаблицы.АдресФайла);
		КонецЕсли;
	КонецЦикла; 
	СтруктураДопТаблиц = Новый Структура;
	СтруктураДопТаблиц.Вставить("ШаблонТаблицы", МассивШаблонТаблицы);
	СтруктураДопТаблиц.Вставить("ИмяТаблицыШаблонаФайла", МассивИмяТаблицыШаблонаФайла);
	СтруктураДопТаблиц.Вставить("АдресФайла", МассивАдресТаблицы);
	СтруктураИмпортаЭкспорта.СтруктураДопТаблиц = СтруктураДопТаблиц;
	СтруктураИмпортаЭкспорта.ЧислоДопТаблиц = Объект.ШаблоныТаблиц.Количество();
	
	Если ЗначениеЗаполнено(Объект.ОбъектОперации) Тогда
		СтруктураИмпортаЭкспорта.ОбъектОперации = Объект.ОбъектОперации;
	Иначе
		Если Лев(Объект.ТипОбъектаОперации, 1) = "Д" Тогда
			ТипМета = "ДокументСсылка";
			Элементы.ПериодДляОтбораДокументов.Видимость = Истина;
		Иначе
			ТипМета = "СправочникСсылка";
			Элементы.ПериодДляОтбораДокументов.Видимость = Ложь;
		КонецЕсли;
		ТипОбъектаОперации = Прав(Объект.ТипОбъектаОперации, стрДлина(Объект.ТипОбъектаОперации) - 1);
		СтруктураИмпортаЭкспорта.ОбъектОперации = Новый(Тип(ТипМета + "." + ТипОбъектаОперации)); 
	КонецЕсли;
	СтруктураИмпортаЭкспорта.РежимТестирования = Объект.РежимТестирования;
	
	ПодсистемаИЭИмпортЭкспортФСКлиент.ИмпортЭкспортОбработкаОбмена(СтруктураИмпортаЭкспорта);
	
КонецПроцедуры

&НаКлиенте
процедура ВыгрузитьДанныеПоШаблону(ШаблонФайла, Т = "", ДополнительныйПараметр = неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала) 
		И НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		
		ПериодДляДокументов = "";
		
	Иначе
		ПериодДляДокументов = Новый Структура;
		ПериодДляДокументов.Вставить("ДатаНачала", Объект.ДатаНачала);
		ПериодДляДокументов.Вставить("ДатаОкончания", Объект.ДатаОкончания);
	КонецЕсли;
	
	СтруктураИмпортаЭкспорта = ПодсистемаИЭИмпортЭкспортФСКлиент.СоздатьСтруктуруВызоваИмпЭкспОперации(
	Объект.ОбъектОперации, 
	Объект.ШаблонШапки, 
	Истина, 
	Объект.АдресФайла, 
	"С",
	?(ЗначениеЗаполнено(Объект.ОбъектОперации), "", "ПакетНабораИсточниковНоОбъектНеВыбран"),
	ПериодДляДокументов,
	ДополнительныйПараметр);
	СтруктураИмпортаЭкспорта.ДатаАктуальности = Объект.ДатаАктуальности;
	Если Лев(Объект.ТипОбъектаОперации, 1) = "Д" Тогда
		ТипМета = "ДокументСсылка";
		Элементы.ПериодДляОтбораДокументов.Видимость = Истина;
	Иначе
		ТипМета = "СправочникСсылка";
		Элементы.ПериодДляОтбораДокументов.Видимость = Ложь;
	КонецЕсли;
	ТипОбъектаОперации = Прав(Объект.ТипОбъектаОперации, стрДлина(Объект.ТипОбъектаОперации) - 1);
	СтруктураИмпортаЭкспорта.ТипМетаОбъектаОбмена = ТипМета;
	СтруктураИмпортаЭкспорта.ТипОбъектаОперации = ТипОбъектаОперации;
	
	МассивШаблонТаблицы = Новый Массив;
	МассивИмяТаблицыШаблонаФайла = Новый Массив;
	МассивАдресТаблицы = Новый Массив;
	Для каждого ШаблонТаблицы Из Объект.ШаблоныТаблиц Цикл    
		Если ШаблонТаблицы.Обмен Тогда
			МассивШаблонТаблицы.Добавить(ШаблонТаблицы.ШаблонТаблицы);
			МассивИмяТаблицыШаблонаФайла.Добавить(ШаблонТаблицы.ИмяТаблицыШаблонаФайла);
			МассивАдресТаблицы.Добавить(ШаблонТаблицы.АдресФайла);
		КонецЕсли;
	КонецЦикла; 
	СтруктураДопТаблиц = Новый Структура;
	СтруктураДопТаблиц.Вставить("ШаблонТаблицы", МассивШаблонТаблицы);
	СтруктураДопТаблиц.Вставить("ИмяТаблицыШаблонаФайла", МассивИмяТаблицыШаблонаФайла);
	СтруктураДопТаблиц.Вставить("АдресФайла", МассивАдресТаблицы);
	СтруктураИмпортаЭкспорта.СтруктураДопТаблиц = СтруктураДопТаблиц;
	СтруктураИмпортаЭкспорта.ЧислоДопТаблиц = Объект.ШаблоныТаблиц.Количество();
	
	Если ЗначениеЗаполнено(Объект.ОбъектОперации) Тогда
		СтруктураИмпортаЭкспорта.ОбъектОперации = Объект.ОбъектОперации;
	Иначе
		СтруктураИмпортаЭкспорта.ОбъектОперации = Объект; //Новый(Тип(ТипМета + "." + ТипОбъектаОперации)); 
	КонецЕсли;
	СтруктураИмпортаЭкспорта.РежимТестирования = Объект.РежимТестирования;
	
	ПодсистемаИЭИмпортЭкспортФСКлиент.ИмпортЭкспортОбработкаОбмена(СтруктураИмпортаЭкспорта);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.ШаблонШапки) Тогда
		СтруктураДиалогФильтр = ПодсистемаИЭИмпортЭкспортФС.СтруктураДиалогФильтр(Объект.ШаблонШапки);
		ДиалогРасширение = СтруктураДиалогФильтр.ДиалогРасширение;
		ДиалогФильтр = СтруктураДиалогФильтр.ДиалогФильтр;
		ДиалогФыбораФайла1 	= Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогФыбораФайла1.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите файл :");
		ДиалогФыбораФайла1.ПолноеИмяФайла			=	Объект.АдресФайла;
		ДиалогФыбораФайла1.Фильтр					=	ДиалогФильтр;
		ДиалогФыбораФайла1.Расширение				=	ДиалогРасширение;
		ДиалогФыбораФайла1.МножественныйВыбор		=	Ложь;
		ДиалогФыбораФайла1.ПредварительныйПросмотр	=	ИСТИНА;
		ДиалогФыбораФайла1.ИндексФильтра			=	0;
		ДиалогФыбораФайла1.ПроверятьСуществованиеФайла	=	ЛОЖЬ;
		Если ДиалогФыбораФайла1.Выбрать() Тогда
			Объект.АдресФайла= ДиалогФыбораФайла1.ПолноеИмяФайла;
			Попытка 
				ПодсистемаИЭИмпортЭкспортФС.КонстантыПодсистемаИЭИмпортЭкспортФСУстановить(Объект.АдресФайла);
			Исключение 	
			КонецПопытки;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныТаблицАдресФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекСтрока = Элементы.ШаблоныТаблиц.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрока.ШаблонТаблицы) Тогда
		СтруктураДиалогФильтр = ПодсистемаИЭИмпортЭкспортФС.СтруктураДиалогФильтр(ТекСтрока.ШаблонТаблицы);
		ДиалогРасширение = СтруктураДиалогФильтр.ДиалогРасширение;
		ДиалогФильтр = СтруктураДиалогФильтр.ДиалогФильтр;
		ДиалогФыбораФайла1 	= Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогФыбораФайла1.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите файл :");
		ДиалогФыбораФайла1.ПолноеИмяФайла			=	ТекСтрока.АдресФайла;
		ДиалогФыбораФайла1.Фильтр					=	ДиалогФильтр;
		ДиалогФыбораФайла1.Расширение				=	ДиалогРасширение;
		ДиалогФыбораФайла1.МножественныйВыбор		=	Ложь;
		ДиалогФыбораФайла1.ПредварительныйПросмотр	=	ИСТИНА;
		ДиалогФыбораФайла1.ИндексФильтра			=	0;
		ДиалогФыбораФайла1.ПроверятьСуществованиеФайла	=	ЛОЖЬ;
		Если ДиалогФыбораФайла1.Выбрать() Тогда
			ТекСтрока.АдресФайла= ДиалогФыбораФайла1.ПолноеИмяФайла;
			Попытка 
				ПодсистемаИЭИмпортЭкспортФС.КонстантыПодсистемаИЭИмпортЭкспортФСУстановить(ТекСтрока.АдресФайла);
			Исключение 	
			КонецПопытки;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонШапкиПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ШаблонШапки) и НЕ ЗначениеЗаполнено(Объект.АдресФайла) Тогда
		Объект.АдресФайла = ПодсистемаИЭИмпортЭкспортФС.ПолучитьАресФайлаШаблона(Объект.ШаблонШапки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	Если Объект.ДатаОкончания < Объект.ДатаНачала Тогда
		Объект.ДатаОкончания = Объект.ДатаНачала;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	Если Объект.ДатаОкончания < Объект.ДатаНачала Тогда
		Объект.ДатаНачала = Объект.ДатаОкончания ;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТипОбъектаОперацииПриИзменении(Элемент)
	ЗаполнитьТаблицыОбъектОперации();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002700", ЭтаФорма, Отказ, );	
КонецПроцедуры
