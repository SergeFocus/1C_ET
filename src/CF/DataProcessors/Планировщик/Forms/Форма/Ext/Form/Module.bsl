

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	
	ЭлементыПланировщика = Планировщик.Элементы;
	ЭлементыПланировщика.Очистить();
	
	ИзмеренияПланировщика = Планировщик.Измерения;
	ИзмеренияПланировщика.Очистить();
	
		ИзмерениеВидЗаписи = ИзмеренияПланировщика.Добавить("ВидЗаписи");		
		
	ЭлементыПланировщика = Планировщик.Элементы;
	
	Если ПоказыватьСобытия 
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетСобытий")
		И НЕ ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000971") Тогда
		
		НазваниеЭлементаБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Событие");
		НазваниеСпискаЭлементовБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("События");
		
		КартинкаЗаписи = БиблиотекаКартинок.ДокументСобытие;
		ЦветФона = Новый Цвет(255, 215, 255);
		
		ИзмерениеВидЗаписи.Элементы.Добавить(НазваниеСпискаЭлементовБлока);
		
		СоответствиеЗначений = Новый Соответствие;
		СоответствиеЗначений.Вставить("ВидЗаписи", НазваниеСпискаЭлементовБлока);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	События.Ссылка,
		               |	События.Дата КАК ДатаНачала,
		               |	События.ДатаОкончания КАК ДатаОкончания,
		               |	События.Проведен КАК НеАктуальный,
		               |	События.Наименование
		               |ИЗ Документ.События КАК События
		               |ГДЕ События.Дата >= &ДатаНачала
		               |	И События.ДатаОкончания <= &ДатаОкончания";
					   
					   Если ТолькоСобственныеСобытия Тогда
						   Запрос.Текст = Запрос.Текст + " И События.Сотрудник = &Сотрудник ";
						   Запрос.Параметры.Вставить("Сотрудник", ОбщийМодульПовтор.ПолучитьТекущегоСотрудника());
					   КонецЕсли;
					   
					   Запрос.Параметры.Вставить("ДатаНачала", НачалоПериодаОтображения);
					   Запрос.Параметры.Вставить("ДатаОкончания", КонецПериодаОтображения);
					   
					   РезультатЗапроса = Запрос.Выполнить();
					   Если НЕ РезультатЗапроса.Пустой() Тогда
						   ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						   
						   Пока ВыборкаДетальныеЗаписи.Следующий() Цикл	
							   
							   Если ВыборкаДетальныеЗаписи.ДатаНачала = '00010101000000' Тогда
								   ДатаНачалаСобытия = НачалоПериодаОтображения;
							   Иначе
								   ДатаНачалаСобытия = ВыборкаДетальныеЗаписи.ДатаНачала;
							   КонецЕсли;
							   
							   Если ВыборкаДетальныеЗаписи.ДатаОкончания = '00010101000000'
								   ИЛИ ВыборкаДетальныеЗаписи.ДатаОкончания < ДатаНачалаСобытия Тогда
								   
								   ДатаОкончанияСобытия = ДатаНачалаСобытия + 300;
							   Иначе
								   ДатаОкончанияСобытия = ВыборкаДетальныеЗаписи.ДатаОкончания;
							   КонецЕсли;				
							   
							   НовыйЭлемент = ЭлементыПланировщика.Добавить(ДатаНачалаСобытия, ДатаОкончанияСобытия);
							   НовыйЭлемент.Текст 		= "" + ВыборкаДетальныеЗаписи.Наименование;
							   НовыйЭлемент.Картинка 	= КартинкаЗаписи;
							   НовыйЭлемент.Подсказка 	= НазваниеЭлементаБлока + " " + Формат(ВыборкаДетальныеЗаписи.ДатаНачала, "ДФ='dd.MM.yy ЧЧ:мм'");
							   НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
							   НовыйЭлемент.Удаленный 	= ВыборкаДетальныеЗаписи.НеАктуальный;
							   НовыйЭлемент.ЦветФона 	= ЦветФона;
							   НовыйЭлемент.Значение 	= ВыборкаДетальныеЗаписи.Ссылка;
							   
						   КонецЦикла;	
		КонецЕсли;
	КонецЕсли;
	
	Если ПоказыватьЗаметкиИНапоминания 
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьМеханизмЗаметокИНапоминаний")
		И НЕ ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000100") Тогда
		
		НазваниеЭлементаБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напоминание");
		НазваниеСпискаЭлементовБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напоминания");
		
		КартинкаЗаписи = БиблиотекаКартинок.СправочникЗаметки;
		ЦветФона = Новый Цвет(255, 255, 215);
		
		ИзмерениеВидЗаписи.Элементы.Добавить(НазваниеСпискаЭлементовБлока);
		
		СоответствиеЗначений = Новый Соответствие;
		СоответствиеЗначений.Вставить("ВидЗаписи", НазваниеСпискаЭлементовБлока);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ЗаметкиИНапоминания.Ссылка,
		               |	ЗаметкиИНапоминания.Дата КАК ДатаНачала,
		               |	НЕ ЗаметкиИНапоминания.Актуально КАК НеАктуальный,
		               |	ЗаметкиИНапоминания.Дата КАК ДатаОкончания
		               |ИЗ Справочник.ЗаметкиИНапоминания КАК ЗаметкиИНапоминания
		               |ГДЕ ЗаметкиИНапоминания.ТипЗаметки = &ТипЗаметки
		               |	И ЗаметкиИНапоминания.Дата >= &ДатаНачала
		               |	И ЗаметкиИНапоминания.Дата <= &ДатаОкончания";
		
		Запрос.Параметры.Вставить("ДатаНачала", НачалоПериодаОтображения);
		Запрос.Параметры.Вставить("ДатаОкончания", КонецПериодаОтображения);
		
		Запрос.Параметры.Вставить("ТипЗаметки", Перечисления.ТипыЗаметок.Напоминание);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл				
				
				НовыйЭлемент = ЭлементыПланировщика.Добавить(ВыборкаДетальныеЗаписи.ДатаНачала, ВыборкаДетальныеЗаписи.ДатаОкончания);
				НовыйЭлемент.Текст 		= "" + ВыборкаДетальныеЗаписи.Ссылка;
				НовыйЭлемент.Картинка 	= КартинкаЗаписи;
				НовыйЭлемент.Подсказка 	= НазваниеЭлементаБлока + " " + Формат(ВыборкаДетальныеЗаписи.ДатаНачала, "ДФ='dd.MM.yy ЧЧ:мм'");
				НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
				НовыйЭлемент.Удаленный 	= ВыборкаДетальныеЗаписи.НеАктуальный;
				НовыйЭлемент.ЦветФона 	= ЦветФона;
				НовыйЭлемент.Значение 	= ВыборкаДетальныеЗаписи.Ссылка;
				
			КонецЦикла;		
		КонецЕсли;
	КонецЕсли;
	
	Если ПоказыватьЖурналДействийПользователя 
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьЖурналированиеСобытий")
		И НЕ ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000100") Тогда
		
		НазваниеЭлементаБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Действие");
		НазваниеСпискаЭлементовБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Действия");
		
		КартинкаЗаписи = БиблиотекаКартинок.ЖурналРегистрации;
		ЦветФона = Новый Цвет(215, 255, 255);
		
		ИзмерениеВидЗаписи.Элементы.Добавить(НазваниеСпискаЭлементовБлока);
		
		СоответствиеЗначений = Новый Соответствие;
		СоответствиеЗначений.Вставить("ВидЗаписи", НазваниеСпискаЭлементовБлока);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ЖурналСобытий.Период КАК ДатаНачала,
		               |	ЖурналСобытий.Период КАК ДатаОкончания,
		               |	ЖурналСобытий.Описание КАК Ссылка,
		               |	ЛОЖЬ КАК НеАктуальный
		               |ИЗ РегистрСведений.ЖурналСобытий КАК ЖурналСобытий
		               |ГДЕ ЖурналСобытий.Период МЕЖДУ &ДатаНачала И &ДатаОкончания";
		
		Запрос.Параметры.Вставить("ДатаНачала", НачалоПериодаОтображения);
		Запрос.Параметры.Вставить("ДатаОкончания", КонецПериодаОтображения);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл				
				
				НовыйЭлемент = ЭлементыПланировщика.Добавить(ВыборкаДетальныеЗаписи.ДатаНачала, ВыборкаДетальныеЗаписи.ДатаОкончания);
				НовыйЭлемент.Текст = "" + ВыборкаДетальныеЗаписи.Ссылка;
				НовыйЭлемент.Картинка = КартинкаЗаписи;
				НовыйЭлемент.Подсказка = НазваниеЭлементаБлока + " " + Формат(ВыборкаДетальныеЗаписи.ДатаНачала, "ДФ='dd.MM.yy ЧЧ:мм'");
				НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
				НовыйЭлемент.Удаленный = ВыборкаДетальныеЗаписи.НеАктуальный;
				НовыйЭлемент.ЦветФона = ЦветФона;
				НовыйЭлемент.Значение = ВыборкаДетальныеЗаписи.Ссылка;
				
			КонецЦикла;		
		КонецЕсли;
	КонецЕсли;
	
	Если ПоказыватьДниРождения
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам")
		И НЕ ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000500") Тогда
		
		НазваниеЭлементаБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("День рождения");
		НазваниеСпискаЭлементовБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Дни рождения");
		
		КартинкаЗаписи = БиблиотекаКартинок.ЗнакДатаРождения;
		ЦветФона = Новый Цвет(225, 225, 255);
		
		ИзмерениеВидЗаписи.Элементы.Добавить(НазваниеСпискаЭлементовБлока);
		
		СоответствиеЗначений = Новый Соответствие;
		СоответствиеЗначений.Вставить("ВидЗаписи", НазваниеСпискаЭлементовБлока);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	Клиенты.Ссылка,
		               |	Клиенты.ДатаРождения,
		               |	Клиенты.ПометкаУдаления КАК НеАктуальный
		               |ИЗ Справочник.Клиенты КАК Клиенты
		               |ГДЕ Клиенты.ЭтоГруппа = ЛОЖЬ
		               |	И Клиенты.ДатаРождения <> &ПустаяДата";
		
		Запрос.Параметры.Вставить("ПустаяДата", '00010101');
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				ТекстЭлементаБлока = НазваниеЭлементаБлока + " " + СокрЛП(ВыборкаДетальныеЗаписи.Ссылка) + " " + Формат(ВыборкаДетальныеЗаписи.ДатаРождения, "ДФ='dd.MM.yy'");
				
				ДатаРождения = ВыборкаДетальныеЗаписи.ДатаРождения;
				ДатаРождения = Дата(Год(ТекущаяДата()), Месяц(ДатаРождения), День(ДатаРождения));
				ДатаОкончания = КонецДня(ДатаРождения);
				
				НовыйЭлемент = ЭлементыПланировщика.Добавить(ДатаРождения, ДатаОкончания);
				НовыйЭлемент.Текст = ТекстЭлементаБлока;
				НовыйЭлемент.Картинка = КартинкаЗаписи;
				НовыйЭлемент.Подсказка = ТекстЭлементаБлока;
				НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
				НовыйЭлемент.Удаленный = ВыборкаДетальныеЗаписи.НеАктуальный;
				НовыйЭлемент.ЦветФона = ЦветФона;
				НовыйЭлемент.Значение = ВыборкаДетальныеЗаписи.Ссылка;
				
				ДатаРождения = ВыборкаДетальныеЗаписи.ДатаРождения;
				ДатаРождения = Дата(Год(ТекущаяДата()) - 1, Месяц(ДатаРождения), День(ДатаРождения));
				ДатаОкончания = КонецДня(ДатаРождения);
				
				НовыйЭлемент = ЭлементыПланировщика.Добавить(ДатаРождения, ДатаОкончания);
				НовыйЭлемент.Текст = ТекстЭлементаБлока;
				НовыйЭлемент.Картинка = КартинкаЗаписи;
				НовыйЭлемент.Подсказка = ТекстЭлементаБлока;
				НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
				НовыйЭлемент.Удаленный = ВыборкаДетальныеЗаписи.НеАктуальный;
				НовыйЭлемент.ЦветФона = ЦветФона;
				НовыйЭлемент.Значение = ВыборкаДетальныеЗаписи.Ссылка;
				
				ДатаРождения = ВыборкаДетальныеЗаписи.ДатаРождения;
				ДатаРождения = Дата(Год(ТекущаяДата()) + 1, Месяц(ДатаРождения), День(ДатаРождения));
				ДатаОкончания = КонецДня(ДатаРождения);
				
				НовыйЭлемент = ЭлементыПланировщика.Добавить(ДатаРождения, ДатаОкончания);
				НовыйЭлемент.Текст = ТекстЭлементаБлока;
				НовыйЭлемент.Картинка = КартинкаЗаписи;
				НовыйЭлемент.Подсказка = ТекстЭлементаБлока;
				НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
				НовыйЭлемент.Удаленный = ВыборкаДетальныеЗаписи.НеАктуальный;
				НовыйЭлемент.ЦветФона = ЦветФона;
				НовыйЭлемент.Значение = ВыборкаДетальныеЗаписи.Ссылка;
				
			КонецЦикла;		
		КонецЕсли;
	КонецЕсли;
	
	// разные права	
	Если ПоказыватьДниРождения
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоПоставщикам")
		И НЕ ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000650") Тогда
		
		НазваниеЭлементаБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("День рождения");
		НазваниеСпискаЭлементовБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Дни рождения");
		
		КартинкаЗаписи = БиблиотекаКартинок.ЗнакДатаРождения;
		ЦветФона = Новый Цвет(225, 245, 215);
		
		Если ИзмерениеВидЗаписи.Элементы.Найти(НазваниеСпискаЭлементовБлока) = Неопределено Тогда
			ИзмерениеВидЗаписи.Элементы.Добавить(НазваниеСпискаЭлементовБлока);	
		КонецЕсли;
		
		СоответствиеЗначений = Новый Соответствие;
		СоответствиеЗначений.Вставить("ВидЗаписи", НазваниеСпискаЭлементовБлока);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Поставщики.Ссылка,
		|	Поставщики.ДатаРождения,
		|	Поставщики.ПометкаУдаления
		               |ИЗ Справочник.Поставщики КАК Поставщики
		               |ГДЕ Поставщики.ЭтоГруппа = ЛОЖЬ
		               |	И Поставщики.ДатаРождения <> &ПустаяДата";
		
		Запрос.Параметры.Вставить("ПустаяДата", '00010101');
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				ТекстЭлементаБлока = НазваниеЭлементаБлока + " " + СокрЛП(ВыборкаДетальныеЗаписи.Ссылка) + " " + Формат(ВыборкаДетальныеЗаписи.ДатаРождения, "ДФ='dd.MM.yy'");
				
				ДатаРождения = ВыборкаДетальныеЗаписи.ДатаРождения;
				ДатаРождения = Дата(Год(ТекущаяДата()), Месяц(ДатаРождения), День(ДатаРождения));
				ДатаОкончания = КонецДня(ДатаРождения);
				
				НовыйЭлемент = ЭлементыПланировщика.Добавить(ДатаРождения, ДатаОкончания);
				НовыйЭлемент.Текст = ТекстЭлементаБлока;
				НовыйЭлемент.Картинка = КартинкаЗаписи;
				НовыйЭлемент.Подсказка = ТекстЭлементаБлока;
				НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
				НовыйЭлемент.Удаленный = ВыборкаДетальныеЗаписи.НеАктуальный;
				НовыйЭлемент.ЦветФона = ЦветФона;
				НовыйЭлемент.Значение = ВыборкаДетальныеЗаписи.Ссылка;
				
				ДатаРождения = ВыборкаДетальныеЗаписи.ДатаРождения;
				ДатаРождения = Дата(Год(ТекущаяДата()) - 1, Месяц(ДатаРождения), День(ДатаРождения));
				ДатаОкончания = КонецДня(ДатаРождения);
				
				НовыйЭлемент = ЭлементыПланировщика.Добавить(ДатаРождения, ДатаОкончания);
				НовыйЭлемент.Текст = ТекстЭлементаБлока;
				НовыйЭлемент.Картинка = КартинкаЗаписи;
				НовыйЭлемент.Подсказка = ТекстЭлементаБлока;
				НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
				НовыйЭлемент.Удаленный = ВыборкаДетальныеЗаписи.НеАктуальный;
				НовыйЭлемент.ЦветФона = ЦветФона;
				НовыйЭлемент.Значение = ВыборкаДетальныеЗаписи.Ссылка;
				
				ДатаРождения = ВыборкаДетальныеЗаписи.ДатаРождения;
				ДатаРождения = Дата(Год(ТекущаяДата()) + 1, Месяц(ДатаРождения), День(ДатаРождения));
				ДатаОкончания = КонецДня(ДатаРождения);
				
				НовыйЭлемент = ЭлементыПланировщика.Добавить(ДатаРождения, ДатаОкончания);
				НовыйЭлемент.Текст = ТекстЭлементаБлока;
				НовыйЭлемент.Картинка = КартинкаЗаписи;
				НовыйЭлемент.Подсказка = ТекстЭлементаБлока;
				НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
				НовыйЭлемент.Удаленный = ВыборкаДетальныеЗаписи.НеАктуальный;
				НовыйЭлемент.ЦветФона = ЦветФона;
				НовыйЭлемент.Значение = ВыборкаДетальныеЗаписи.Ссылка;
				
			КонецЦикла;		
		КонецЕсли;
	КонецЕсли;
	
	Если ПоказыватьДниРожденияСотрудников
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетЗарплатыСотрудников")
		И НЕ ОбщийМодульСервисСервер.ПроверитьОтказДоступа("001400") Тогда
		
		НазваниеЭлементаБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("День рождения сотрудника");
		НазваниеСпискаЭлементовБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Дни рождения сотрудника");
		
		КартинкаЗаписи = БиблиотекаКартинок.СправочникСотрудники;
		ЦветФона = Новый Цвет(225, 255, 225);
		
		ИзмерениеВидЗаписи.Элементы.Добавить(НазваниеСпискаЭлементовБлока);
		
		СоответствиеЗначений = Новый Соответствие;
		СоответствиеЗначений.Вставить("ВидЗаписи", НазваниеСпискаЭлементовБлока);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	Сотрудники.Ссылка,
		               |	Сотрудники.ДатаРождения,
		               |	Сотрудники.ПометкаУдаления КАК НеАктуальный
		               |ИЗ Справочник.Сотрудники КАК Сотрудники
		               |ГДЕ Сотрудники.ДатаРождения <> &ПустаяДата";
		
		Запрос.Параметры.Вставить("ПустаяДата", '00010101');
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				ТекстЭлементаБлока = НазваниеЭлементаБлока + " " + СокрЛП(ВыборкаДетальныеЗаписи.Ссылка) + " " + Формат(ВыборкаДетальныеЗаписи.ДатаРождения, "ДФ='dd.MM.yy'");
				
				ДатаРождения = ВыборкаДетальныеЗаписи.ДатаРождения;
				ДатаРождения = Дата(Год(ТекущаяДата()), Месяц(ДатаРождения), День(ДатаРождения));
				ДатаОкончания = КонецДня(ДатаРождения);
				
				НовыйЭлемент = ЭлементыПланировщика.Добавить(ДатаРождения, ДатаОкончания);
				НовыйЭлемент.Текст = ТекстЭлементаБлока;
				НовыйЭлемент.Картинка = КартинкаЗаписи;
				НовыйЭлемент.Подсказка = ТекстЭлементаБлока;
				НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
				НовыйЭлемент.Удаленный = ВыборкаДетальныеЗаписи.НеАктуальный;
				НовыйЭлемент.ЦветФона = ЦветФона;
				НовыйЭлемент.Значение = ВыборкаДетальныеЗаписи.Ссылка;
				
				ДатаРождения = ВыборкаДетальныеЗаписи.ДатаРождения;
				ДатаРождения = Дата(Год(ТекущаяДата()) - 1, Месяц(ДатаРождения), День(ДатаРождения));
				ДатаОкончания = КонецДня(ДатаРождения);
				
				НовыйЭлемент = ЭлементыПланировщика.Добавить(ДатаРождения, ДатаОкончания);
				НовыйЭлемент.Текст = ТекстЭлементаБлока;
				НовыйЭлемент.Картинка = КартинкаЗаписи;
				НовыйЭлемент.Подсказка = ТекстЭлементаБлока;
				НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
				НовыйЭлемент.Удаленный = ВыборкаДетальныеЗаписи.НеАктуальный;
				НовыйЭлемент.ЦветФона = ЦветФона;
				НовыйЭлемент.Значение = ВыборкаДетальныеЗаписи.Ссылка;
				
				ДатаРождения = ВыборкаДетальныеЗаписи.ДатаРождения;
				ДатаРождения = Дата(Год(ТекущаяДата()) + 1, Месяц(ДатаРождения), День(ДатаРождения));
				ДатаОкончания = КонецДня(ДатаРождения);
				
				НовыйЭлемент = ЭлементыПланировщика.Добавить(ДатаРождения, ДатаОкончания);
				НовыйЭлемент.Текст = ТекстЭлементаБлока;
				НовыйЭлемент.Картинка = КартинкаЗаписи;
				НовыйЭлемент.Подсказка = ТекстЭлементаБлока;
				НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
				НовыйЭлемент.Удаленный = ВыборкаДетальныеЗаписи.НеАктуальный;
				НовыйЭлемент.ЦветФона = ЦветФона;
				НовыйЭлемент.Значение = ВыборкаДетальныеЗаписи.Ссылка;
				
			КонецЦикла;		
		КонецЕсли;
	КонецЕсли;
	
	Если ПоказыватьВнутренниеЗаказы
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетВнутреннихЗаказов")
		И НЕ ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000320") Тогда
		
		НазваниеЭлементаБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Внутренний заказ");
		НазваниеСпискаЭлементовБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Внутренние заказы");
		
		КартинкаЗаписи = БиблиотекаКартинок.ДокументВнутреннийЗаказ;
		ЦветФона = Новый Цвет(225, 225, 225);
		
		ИзмерениеВидЗаписи.Элементы.Добавить(НазваниеСпискаЭлементовБлока);
		
		СоответствиеЗначений = Новый Соответствие;
		СоответствиеЗначений.Вставить("ВидЗаписи", НазваниеСпискаЭлементовБлока);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ВнутренниеЗаказы.Ссылка,
		               |	ВнутренниеЗаказы.Выполнен КАК НеАктуальный,
		               |	ВнутренниеЗаказы.Дата КАК ДатаНачала,
		               |	ВнутренниеЗаказы.Дата КАК ДатаОкончания
		               |ИЗ Документ.ВнутренниеЗаказы КАК ВнутренниеЗаказы
		               |ГДЕ ВнутренниеЗаказы.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		               |	И ВнутренниеЗаказы.Проведен = ИСТИНА";
		
		Запрос.Параметры.Вставить("ДатаНачала", НачалоПериодаОтображения);
		Запрос.Параметры.Вставить("ДатаОкончания", КонецПериодаОтображения);		
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				НовыйЭлемент = ЭлементыПланировщика.Добавить(ВыборкаДетальныеЗаписи.ДатаНачала, ВыборкаДетальныеЗаписи.ДатаОкончания);
				НовыйЭлемент.Текст = "" + ВыборкаДетальныеЗаписи.Ссылка;
				НовыйЭлемент.Картинка = КартинкаЗаписи;
				НовыйЭлемент.Подсказка = НазваниеЭлементаБлока + " " + Формат(ВыборкаДетальныеЗаписи.ДатаНачала, "ДФ='dd.MM.yy ЧЧ:мм'");
				НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
				НовыйЭлемент.Удаленный = ВыборкаДетальныеЗаписи.НеАктуальный;
				НовыйЭлемент.ЦветФона = ЦветФона;
				НовыйЭлемент.Значение = ВыборкаДетальныеЗаписи.Ссылка;
				
			КонецЦикла;		
		КонецЕсли;
	КонецЕсли;
	
	Если ПоказыватьВыполненияРабот
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьДокументыВыполненияРабот")
		И НЕ ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000690") Тогда
		
		НазваниеЭлементаБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выполнение работ");
		НазваниеСпискаЭлементовБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выполнения работ");
		
		КартинкаЗаписи = БиблиотекаКартинок.ДокументВыполненияРабот;
		ЦветФона = Новый Цвет(225, 225, 225);
		
		ИзмерениеВидЗаписи.Элементы.Добавить(НазваниеСпискаЭлементовБлока);
		
		СоответствиеЗначений = Новый Соответствие;
		СоответствиеЗначений.Вставить("ВидЗаписи", НазваниеСпискаЭлементовБлока);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ВыполненияРабот.Ссылка,
		               |	ВыполненияРабот.Дата КАК ДатаНачала,
		               |	НЕ ВыполненияРабот.Актуален КАК НеАктуальный,
		               |	ВыполненияРабот.Дата КАК ДатаОкончания
		               |ИЗ Документ.ВыполненияРабот КАК ВыполненияРабот
		               |ГДЕ ВыполненияРабот.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		               |	И ВыполненияРабот.Проведен = ИСТИНА";
		
		Запрос.Параметры.Вставить("ДатаНачала", НачалоПериодаОтображения);
		Запрос.Параметры.Вставить("ДатаОкончания", КонецПериодаОтображения);		
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				НовыйЭлемент = ЭлементыПланировщика.Добавить(ВыборкаДетальныеЗаписи.ДатаНачала, ВыборкаДетальныеЗаписи.ДатаОкончания);
				НовыйЭлемент.Текст = "" + ВыборкаДетальныеЗаписи.Ссылка;
				НовыйЭлемент.Картинка = КартинкаЗаписи;
				НовыйЭлемент.Подсказка = НазваниеЭлементаБлока + " " + Формат(ВыборкаДетальныеЗаписи.ДатаНачала, "ДФ='dd.MM.yy ЧЧ:мм'");
				НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
				НовыйЭлемент.Удаленный = ВыборкаДетальныеЗаписи.НеАктуальный;
				НовыйЭлемент.ЦветФона = ЦветФона;
				НовыйЭлемент.Значение = ВыборкаДетальныеЗаписи.Ссылка;
				
			КонецЦикла;		
		КонецЕсли;
	КонецЕсли;
	
	Если ПоказыватьОказаниеУслугЗаВремя
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетОказанияУслугЗаВремя")
		И НЕ ОбщийМодульСервисСервер.ПроверитьОтказДоступа("001290") Тогда
		
		НазваниеЭлементаБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Оказание услуг за время");
		НазваниеСпискаЭлементовБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Услуги за время");
		
		КартинкаЗаписи = БиблиотекаКартинок.ДокументУслугиЗаВремя;
		ЦветФона = Новый Цвет(255, 205, 255);
		
		ИзмерениеВидЗаписи.Элементы.Добавить(НазваниеСпискаЭлементовБлока);
		
		СоответствиеЗначений = Новый Соответствие;
		СоответствиеЗначений.Вставить("ВидЗаписи", НазваниеСпискаЭлементовБлока);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ОказанияУслугЗаВремя.Ссылка,
		               |	НЕ ОказанияУслугЗаВремя.УслугаОказана КАК НеАктуальный,
		               |	ОказанияУслугЗаВремя.ДатаНачалаОказанияУслуг КАК ДатаНачала,
		               |	ОказанияУслугЗаВремя.ДатаОкончанияОказанияУслуг КАК ДатаОкончания
		               |ИЗ Документ.ОказанияУслугЗаВремя КАК ОказанияУслугЗаВремя
		               |ГДЕ ОказанияУслугЗаВремя.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		               |	И ОказанияУслугЗаВремя.Проведен = ИСТИНА";
		
		Запрос.Параметры.Вставить("ДатаНачала", НачалоПериодаОтображения);
		Запрос.Параметры.Вставить("ДатаОкончания", КонецПериодаОтображения);		
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				НовыйЭлемент = ЭлементыПланировщика.Добавить(ВыборкаДетальныеЗаписи.ДатаНачала, ВыборкаДетальныеЗаписи.ДатаОкончания);
				НовыйЭлемент.Текст = "" + ВыборкаДетальныеЗаписи.Ссылка;
				НовыйЭлемент.Картинка = КартинкаЗаписи;
				НовыйЭлемент.Подсказка = НазваниеЭлементаБлока + " " + Формат(ВыборкаДетальныеЗаписи.ДатаНачала, "ДФ='dd.MM.yy ЧЧ:мм'");
				НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
				НовыйЭлемент.Удаленный = ВыборкаДетальныеЗаписи.НеАктуальный;
				НовыйЭлемент.ЦветФона = ЦветФона;
				НовыйЭлемент.Значение = ВыборкаДетальныеЗаписи.Ссылка;
				
			КонецЦикла;		
		КонецЕсли;
	КонецЕсли;
	
	Если ПоказыватьДокументыРеализации
		И НЕ ОбщийМодульСервисСервер.ПроверитьОтказДоступа("001800") Тогда
		
		НазваниеЭлементаБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Реализация");
		НазваниеСпискаЭлементовБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Продажи");
		
		КартинкаЗаписи = БиблиотекаКартинок.ЗнакМинусКрасный;
		ЦветФона = Новый Цвет(255, 205, 205);
		
		ИзмерениеВидЗаписи.Элементы.Добавить(НазваниеСпискаЭлементовБлока);
		
		СоответствиеЗначений = Новый Соответствие;
		СоответствиеЗначений.Вставить("ВидЗаписи", НазваниеСпискаЭлементовБлока);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	РасходыТовара.Ссылка,
		               |	РасходыТовара.Дата КАК ДатаНачала,
		               |	РасходыТовара.Дата КАК ДатаОкончания,
		               |	НЕ РасходыТовара.Проведен КАК НеАктуальный
		               |ИЗ Документ.РасходыТовара КАК РасходыТовара
		               |ГДЕ РасходыТовара.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		               |	И РасходыТовара.ЭтоЗаказ = ЛОЖЬ";
		
		Запрос.Параметры.Вставить("ДатаНачала", НачалоПериодаОтображения);
		Запрос.Параметры.Вставить("ДатаОкончания", КонецПериодаОтображения);		
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				НовыйЭлемент = ЭлементыПланировщика.Добавить(ВыборкаДетальныеЗаписи.ДатаНачала, ВыборкаДетальныеЗаписи.ДатаОкончания);
				НовыйЭлемент.Текст = "" + ВыборкаДетальныеЗаписи.Ссылка;
				НовыйЭлемент.Картинка = КартинкаЗаписи;
				НовыйЭлемент.Подсказка = НазваниеЭлементаБлока + " " + Формат(ВыборкаДетальныеЗаписи.ДатаНачала, "ДФ='dd.MM.yy ЧЧ:мм'");
				НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
				НовыйЭлемент.Удаленный = ВыборкаДетальныеЗаписи.НеАктуальный;
				НовыйЭлемент.ЦветФона = ЦветФона;
				НовыйЭлемент.Значение = ВыборкаДетальныеЗаписи.Ссылка;
				
			КонецЦикла;		
		КонецЕсли;
	КонецЕсли;
	
	Если ПоказыватьЗаказыКлиентов
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетЗаказовКлиентов")
		И НЕ ОбщийМодульСервисСервер.ПроверитьОтказДоступа("001850") Тогда
	
		НазваниеЭлементаБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заказ");
		НазваниеСпискаЭлементовБлока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заказы");
		
		КартинкаЗаписи = БиблиотекаКартинок.ДокументЗаказКлиента;
		ЦветФона = Новый Цвет(255, 235, 235);
		
		ИзмерениеВидЗаписи.Элементы.Добавить(НазваниеСпискаЭлементовБлока);
		
		СоответствиеЗначений = Новый Соответствие;
		СоответствиеЗначений.Вставить("ВидЗаписи", НазваниеСпискаЭлементовБлока);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	РасходыТовара.Ссылка,
		               |	РасходыТовара.Дата КАК ДатаНачала,
		               |	РасходыТовара.Дата КАК ДатаОкончания,
		               |	НЕ РасходыТовара.Проведен КАК НеАктуальный
		               |ИЗ Документ.РасходыТовара КАК РасходыТовара
		               |ГДЕ РасходыТовара.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		               |	И РасходыТовара.ЭтоЗаказ = ИСТИНА";
		
		Запрос.Параметры.Вставить("ДатаНачала", НачалоПериодаОтображения);
		Запрос.Параметры.Вставить("ДатаОкончания", КонецПериодаОтображения);		
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				НовыйЭлемент = ЭлементыПланировщика.Добавить(ВыборкаДетальныеЗаписи.ДатаНачала, ВыборкаДетальныеЗаписи.ДатаОкончания);
				НовыйЭлемент.Текст = "" + ВыборкаДетальныеЗаписи.Ссылка;
				НовыйЭлемент.Картинка = КартинкаЗаписи;
				НовыйЭлемент.Подсказка = НазваниеЭлементаБлока + " " + Формат(ВыборкаДетальныеЗаписи.ДатаНачала, "ДФ='dd.MM.yy ЧЧ:мм'");
				НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
				НовыйЭлемент.Удаленный = ВыборкаДетальныеЗаписи.НеАктуальный;
				НовыйЭлемент.ЦветФона = ЦветФона;
				НовыйЭлемент.Значение = ВыборкаДетальныеЗаписи.Ссылка;
				
			КонецЦикла;		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПериодПланировщика()
	
	Планировщик.НачалоПериодаОтображения = ПериодОтображения.ДатаНачала;
	Планировщик.КонецПериодаОтображения = ПериодОтображения.ДатаОкончания;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСоставПланировщика()
	
	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заполняется таблица.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
	ЗаполнитьНаСервере();	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьПериодичностьПриИзменении(Элемент)	
	ОтобразитьПериодичность();		
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьПериодичность()
	
	//!! нет перевода
	Если ОтображатьПериодичность = "Часы" Тогда
		Планировщик.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Час;
	ИначеЕсли ОтображатьПериодичность = "Недели" Тогда
		Планировщик.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Неделя;
	ИначеЕсли ОтображатьПериодичность = "Месяцы" Тогда
		Планировщик.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Месяц;
	ИначеЕсли ОтображатьПериодичность = "Минуты" Тогда
		Планировщик.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Минута;
	ИначеЕсли ОтображатьПериодичность = "Кварталы" Тогда
		Планировщик.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Квартал;
	ИначеЕсли ОтображатьПериодичность = "Годы" Тогда
		Планировщик.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Год;
	Иначе
		Планировщик.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.День;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтображенияДатаНачалаПриИзменении(Элемент)
	
	ОбновитьПериодПланировщика();
	ОбновитьСоставПланировщика();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтображенияДатаОкончанияПриИзменении(Элемент)
	
	ОбновитьПериодПланировщика();
	ОбновитьСоставПланировщика();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтображенияПриИзменении(Элемент)
	
	ОбновитьПериодПланировщика();
	ОбновитьСоставПланировщика();
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередНачаломБыстрогоРедактирования(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередНачаломРедактирования(Элемент, НовыйЭлемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередСозданием(Элемент, Начало, Конец, Значения, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередУдалением(Элемент, Отказ)
	Отказ = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Дата, Значения)
	СтандартнаяОбработка = ЛОЖЬ;
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПриАктивизации(Элемент, СтандартнаяОбработка)
	
	Попытка
		СтандартнаяОбработка = ЛОЖЬ;
		ПоказатьЗначение(Неопределено, Элемент.ВыделенныеЭлементы[0].Значение);	
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПриОкончанииРедактирования(Элемент, НовыйЭлемент, ОтменаРедактирования)
	ОтменаРедактирования = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПриСменеТекущегоПериодаОтображения(Элемент, ТекущиеПериодыОтображения, СтандартнаяОбработка)
	
	Если Планировщик.КонецПериодаОтображения > КонецПериодаОтображения Тогда
		КонецПериодаОтображения = Планировщик.КонецПериодаОтображения;
		ПериодОтображения.ДатаОкончания = Планировщик.КонецПериодаОтображения;
		
		ОбновитьСоставПланировщика()
	КонецЕсли;
	
	Если Планировщик.НачалоПериодаОтображения < НачалоПериодаОтображения Тогда
		НачалоПериодаОтображения = Планировщик.НачалоПериодаОтображения;
		ПериодОтображения.ДатаНачала = Планировщик.НачалоПериодаОтображения;
		
		ОбновитьСоставПланировщика()
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Дата, Значения)
	СтандартнаяОбработка = ЛОЖЬ;
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьВнутренниеЗаказыПриИзменении(Элемент)
	ОбновитьСоставПланировщика();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьВыполненияРаботПриИзменении(Элемент)
	ОбновитьСоставПланировщика();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьДниРожденияПриИзменении(Элемент)
	ОбновитьСоставПланировщика();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьДокументыРеализацииПриИзменении(Элемент)
	ОбновитьСоставПланировщика();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьЖурналДействийПользователяПриИзменении(Элемент)
	ОбновитьСоставПланировщика();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьЗаказыКлиентовПриИзменении(Элемент)
	ОбновитьСоставПланировщика();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьЗаметкиИНапоминанияПриИзменении(Элемент)
	ОбновитьСоставПланировщика();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьОказаниеУслугЗаВремяПриИзменении(Элемент)
	ОбновитьСоставПланировщика();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьСобытияПриИзменении(Элемент)
	ОбновитьСоставПланировщика();
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзображенияОкнаФормы() // Когда окно уже нарисовано пользователю
	ЭтаФорма.Элементы.ФормаЗакрыть.Видимость = НЕ ЭтаФорма.Окно = Неопределено;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если глВерсияПлатформы < 803062000  Тогда
		
		ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Для версии платформы 8.3.6 и выше!"));
		Отказ = ИСТИНА;
		
	Иначе
		
		Если НЕ НеПервыйЗапуск Тогда
			ПоказыватьСобытия = ИСТИНА;
			ПоказыватьЗаметкиИНапоминания = ИСТИНА;
			НеПервыйЗапуск = ИСТИНА;
			
			ПериодОтображения.Вариант = ВариантСтандартногоПериода.ЭтотГод;
		КонецЕсли;		
		
		НачалоПериодаОтображения = ПериодОтображения.ДатаНачала;
		КонецПериодаОтображения = ПериодОтображения.ДатаОкончания;
		
		Планировщик.НачалоПериодаОтображения = НачалоПериодаОтображения;
		Планировщик.КонецПериодаОтображения = КонецПериодаОтображения;
		
		ОбновитьСоставПланировщика();
		ОтобразитьПериодичность();
		
		Планировщик.НачалоПериодаОтображения = НачалоДня(ТекущаяДата());
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ПослеИзображенияОкнаФормы", 0.3, ИСТИНА);	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
КонецПроцедуры

&НаКлиенте
Процедура ТолькоСобственныеСобытияПриИзменении(Элемент)
	ОбновитьСоставПланировщика();
КонецПроцедуры
