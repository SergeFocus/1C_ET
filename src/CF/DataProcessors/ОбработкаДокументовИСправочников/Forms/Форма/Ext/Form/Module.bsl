//sza140228-1432 SZA: 
//sza111108-2112 : 
//sza111028-1322 
//sza110825-1853 sz: 
//sza110422-1724 
//sza110422-1420 
//sza110219-2237 
//sza110216-1100 нумератор
//sza110127-0150      
//sza110126-1606      
//sza110126-0100       
//sza110121-1347      
&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	ПериодДляДокументов = Новый СтандартныйПериод;
	ПериодДляДокументов.ДатаНачала = Объект.ДатаНачала;
	ПериодДляДокументов.ДатаОкончания = Объект.ДатаОкончания;
	
	ПериодДляДокументовДиалог = Новый ДиалогРедактированияСтандартногоПериода;
	ПериодДляДокументовДиалог.Период = ПериодДляДокументов;
	ПериодДляДокументовДиалог.Редактировать();
	
	Объект.ДатаНачала = ПериодДляДокументовДиалог.Период.ДатаНачала;
	Объект.ДатаОкончания = ПериодДляДокументовДиалог.Период.ДатаОкончания;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьРаспроведениеВсехДокументов(Команда)
	
	СтрокаПароля = "";
	Если Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выполнить распроведение всех документов за указанный период?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да 
		и ввестистроку(СтрокаПароля, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите пароль для данной операции:"), 14) 
		И СтрокаПароля = "25.02.1980" ТОгда
		
		РаспровестиДокументыЗаПериод();	
		
	КонецЕсли;
	
КонецПроцедуры
&НаСервере
Процедура РаспровестиДокументыЗаПериод() //Экспорт	
	
	Для Каждого Документ Из метаданные.Документы Цикл
		Если Документ.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить Тогда
			ДокументИмя = Документ.Имя;
			
			ЗапДокумент = Новый Запрос;
			ЗапДокумент.Текст = "ВЫБРАТЬ
			|	" + ДокументИмя + ".Ссылка
			|ИЗ
			|	Документ." + ДокументИмя + " КАК " + ДокументИмя + "
			|ГДЕ
			|	" + ДокументИмя + ".Проведен = ИСТИНА ";
			Если ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
				ЗапДокумент.Текст = ЗапДокумент.Текст+ "	И " + ДокументИмя + ".Дата >= &ДатаНачала ";
				//ЗапДокумент.УстановитьПараметр("ДатаНачала", НачалоДня(Объект.ДатаНачала));
				ЗапДокумент.УстановитьПараметр("ДатаНачала", (Объект.ДатаНачала));
			КонецЕсли;
			Если ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
				ЗапДокумент.Текст = ЗапДокумент.Текст+ "	И " + ДокументИмя + ".Дата <= &ДатаОкончания ";
				//ЗапДокумент.УстановитьПараметр("ДатаОкончания", КонецДня(Объект.ДатаОкончания));
				ЗапДокумент.УстановитьПараметр("ДатаОкончания", (Объект.ДатаОкончания));
			КонецЕсли;
			
			Попытка
				ВзДокумент = ЗапДокумент.Выполнить();
				Если Не ВзДокумент.Пустой() Тогда
					РезДокумент = ВзДокумент.Выбрать();
					СчДокумент = 0;
					
					Пока РезДокумент.Следующий() Цикл
						РезСсылка = РезДокумент.Ссылка.ПолучитьОбъект();
						Попытка 
							РезСсылка.Записать(РежимЗаписиДокумента.ОтменаПроведения);
						Исключение //РезСсылка.Записать(РежимЗаписиДокумента.Запись);
							Сообщение = Новый СообщениеПользователю;
							Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка при попытке отмены проведения документа:") + " " + РезСсылка + " " + ОписаниеОшибки();
							Сообщение.Сообщить();
						КонецПопытки;  //записи  РезСсылка
						СчДокумент = СчДокумент + 1;
					КонецЦикла;	//по результатам запроса Документ
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Всего распроведено:") + " " + ДокументИмя + " - " + СчДокумент;
					Сообщение.Сообщить();
				Иначе 	//запрос пуст!
				КонецЕсли; 
				
			Исключение
			КонецПопытки;
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры //РаспровестиДокументыЗаПериод

&НаКлиенте
Процедура ВыполнитьСменуРеквизитаТабличнойЧастиДляВсехДокументов(Команда)
	
	СтрокаПароля = "";
	Если Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выполнить смену реквизита табличной части всех документов за указанный период?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да 
		и ввестистроку(СтрокаПароля, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите пароль для данной операции:"), 14) 
		И СтрокаПароля = "25.02.1980" ТОгда
		
		ИмяТаблицы = "Запасы";
		Если ввестистроку(ИмяТаблицы, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите имя таблицы реквизита без пробелов:"), 80) ТОгда	
			
			РеквизитТаблицы = "СтавкаНДС";
			Если ввестистроку(РеквизитТаблицы, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите имя реквизита без пробелов:"), 80) ТОгда					
				СменаРеквизитаТаблицыДокументовЗаПериод(ИмяТаблицы, РеквизитТаблицы);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СменаРеквизитаТаблицыДокументовЗаПериод(ИмяТаблицы, РеквизитТаблицы);
	
	Для Каждого Документ Из метаданные.Документы Цикл
		Если Документ.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить Тогда
			ДокументИмя = Документ.Имя;
			
			ЗапДокумент = Новый Запрос;
			ЗапДокумент.Текст = "ВЫБРАТЬ " + ДокументИмя + ".Ссылка ИЗ Документ." + ДокументИмя + " КАК " + ДокументИмя + " ГДЕ " + ДокументИмя + ".Проведен = ИСТИНА ";
			Если ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
				ЗапДокумент.Текст = ЗапДокумент.Текст+ "	И " + ДокументИмя + ".Дата >= &ДатаНачала ";
				//ЗапДокумент.УстановитьПараметр("ДатаНачала", НачалоДня(Объект.ДатаНачала));
				ЗапДокумент.УстановитьПараметр("ДатаНачала", (Объект.ДатаНачала));
			КонецЕсли;
			Если ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
				ЗапДокумент.Текст = ЗапДокумент.Текст+ "	И " + ДокументИмя + ".Дата <= &ДатаОкончания ";
				//ЗапДокумент.УстановитьПараметр("ДатаОкончания", КонецДня(Объект.ДатаОкончания));
				ЗапДокумент.УстановитьПараметр("ДатаОкончания", (Объект.ДатаОкончания));
			КонецЕсли;
			
			Попытка
				ВзДокумент = ЗапДокумент.Выполнить();
				Если Не ВзДокумент.Пустой() Тогда
					РезДокумент = ВзДокумент.Выбрать();
					СчДокумент = 0;
					
					Пока РезДокумент.Следующий() Цикл
						РезСсылка = РезДокумент.Ссылка.ПолучитьОбъект();
						Попытка 
							Для Каждого СтрокаТаблицы Из РезСсылка[ИмяТаблицы] Цикл
								СтрокаТаблицы[РеквизитТаблицы] = Объект.УстановитьРеквизит; 	
							КонецЦикла;
							попытка
								Если РезСсылка.Проведен Тогда
									РезСсылка.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
								иначе
									РезСсылка.Записать(РежимЗаписиДокумента.Запись);
								КонецЕсли;
							Исключение //РезСсылка.Записать(РежимЗаписиДокумента.Запись);
								Сообщение = Новый СообщениеПользователю;
								Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка при попытке отмены проведения документа:") + " " + РезСсылка + " " + ОписаниеОшибки();
								Сообщение.Сообщить();
							КонецПопытки;  //записи  РезСсылка
						исключение
							прервать;
						КонецПопытки;  
						СчДокумент = СчДокумент +1;
					КонецЦикла;	//по результатам запроса Документ
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Всего распроведено:") + " " + ДокументИмя + " - " + СчДокумент;
					Сообщение.Сообщить();
					
				Иначе 	//запрос пуст!
				КонецЕсли; 
				
			Исключение
			КонецПопытки;
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры //СменаРеквизитаТаблицыДокументовЗаПериод

&НаКлиенте
Процедура ВыполнитьПеренумерациюВсехДокументовВида(Команда)
	
	СтрокаПароля = "";
	Если ЗначениеЗаполнено(Объект.ВидДокумента)
		И Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выполнить перенумерацию все документов этого вида?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да 
		и ввестистроку(СтрокаПароля, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите пароль для данной операции:"), 14) 
		И СтрокаПароля = "25.02.1980" ТОгда
		
		ВыполнитьПеренумерациюВсехДокументовВидаСервер(); 	
		
	КонецЕсли;
	
КонецПроцедуры
&НаСервере
Процедура ВыполнитьПеренумерациюВсехДокументовВидаСервер()
	
	ОбъектВидДокумента = Объект.ВидДокумента.Метаданные().Имя;
	ДлинаНомера = Объект.ВидДокумента.Метаданные().ДлинаНомера;
	Сч = 1;
	номер = "";
	номерД = 1;
	Пока Сч < ДлинаНомера Цикл
		номер = номер + "0";
		сч =сч + 1;
	КонецЦикла;
	номер = номер + "1";
	
	ЗапДоки = Новый Запрос;
	ЗапДоки.Текст = "ВЫБРАТЬ
	|	" + ОбъектВидДокумента + ".Ссылка,
	|	" + ОбъектВидДокумента + ".проведен
	|ИЗ
	|	Документ." + ОбъектВидДокумента + " КАК " + ОбъектВидДокумента + " ";
	ВзДоки = ЗапДоки.Выполнить();
	Если Не ВзДоки.Пустой() Тогда
		РезДоки = ВзДоки.Выбрать();
		СчДоки = 0;
		Пока РезДоки.Следующий() Цикл
			РезСсылка = РезДоки.Ссылка.ПолучитьОбъект();
			РезСсылка.Номер = Номер;
			Попытка 
				Если РезДоки.Проведен тогда
					РезСсылка.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
				иначе
					РезСсылка.Записать(РежимЗаписиДокумента.Запись);	
				КонецЕсли;
				НомерД = НомерД + 1;
				Номер = лев(номер, ДлинаНомера - стрдлина(стрзаменить(сокрЛП(НомерД),символы.НПП,"")));
				Номер = Номер + стрзаменить(сокрЛП(НомерД),символы.НПП,"");
			Исключение 
				//РезСсылка.Записать(РежимЗаписиДокумента.Запись);
				//Сообщить("Ошибка при попытке записи документа: " + РезСсылка + " " + ОписаниеОшибки());
				//Предупреждение("Ошибка при попытке записи документа: " + РезСсылка + " "+ОписаниеОшибки(), 0, "Ошибка при попытке записи документа!");
			КонецПопытки;  //записи  РезСсылка
			СчДоки = СчДоки + 1;
		КонецЦикла;	//по результатам запроса Доки
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Всего перенумеровано:") + " " + ОбъектВидДокумента + " - " + СчДоки;
		Сообщение.Сообщить();
		// сообщить("Всего: " + СчДоки);
	Иначе 	//запрос пуст!
	КонецЕсли; //запрос Доки 
	
КонецПроцедуры //ВыполнитьПеренумерациюВсехДокументовВидаСервер

&НаКлиенте
Процедура ВыполнитьПометкуНаУдалениеВсехНепроведенныхДокументовДанногоВида(Команда)
	
	СтрокаПароля = "";
	Если ЗначениеЗаполнено(Объект.ВидДокумента)
		И Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выполнить пометку на удаление непроведенных?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да 
		и ввестистроку(СтрокаПароля, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите пароль для данной операции:"), 14) 
		И СтрокаПароля = "25.02.1980" ТОгда
		
		ВыполнитьПометкуНаУдалениеВсехНепроведенныхДокументовДанногоВидаС(); 	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПометкуНаУдалениеВсехНепроведенныхДокументовДанногоВидаС() //Экспорт	
	
	ОбъектВидДокумента = Объект.ВидДокумента.Метаданные().Имя;
	
	ЗапДоки = Новый Запрос;
	ЗапДоки.Текст = "ВЫБРАТЬ
	|	" + ОбъектВидДокумента + ".Ссылка,
	|	" + ОбъектВидДокумента + ".проведен
	|ИЗ
	|	Документ." + ОбъектВидДокумента + " КАК " + ОбъектВидДокумента + " ГДЕ " + ОбъектВидДокумента + ".проведен = ЛОЖЬ ";
	ВзДоки = ЗапДоки.Выполнить();
	Если Не ВзДоки.Пустой() Тогда
		РезДоки = ВзДоки.Выбрать();
		СчДоки = 0;
		Пока РезДоки.Следующий() Цикл
			РезСсылка = РезДоки.Ссылка.ПолучитьОбъект();
			Попытка 
				РезСсылка.ПометкаУдаления = Истина;
				РезСсылка.УстановитьПометкуУдаления(Истина);
			Исключение 
				//РезСсылка.Записать(РежимЗаписиДокумента.Запись);
				//Сообщить("Ошибка при попытке записи документа: " + РезСсылка + " " + ОписаниеОшибки());
				//Предупреждение("Ошибка при попытке записи документа: " + РезСсылка + " "+ОписаниеОшибки(), 0, "Ошибка при попытке записи документа!");
			КонецПопытки;  //записи  РезСсылка
			СчДоки = СчДоки + 1;
		КонецЦикла;	//по результатам запроса Доки
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Всего помечено:") + " " + ОбъектВидДокумента + " - " + СчДоки;
		Сообщение.Сообщить();
		// сообщить("Всего: " + СчДоки);
	Иначе 	//запрос пуст!
	КонецЕсли; //запрос Доки 
	
КонецПроцедуры //ВыполнитьПометкуНаУдалениеВсехНепроведенныхДокументовДанногоВидаС

&НаКлиенте
Процедура ВыполнитьВосстановлениеНумерацииКодаСправочника(Команда)
	
	СтрокаПароля = "";
	Если ЗначениеЗаполнено(Объект.ВидСправочника)
		И Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выполнить перенумерацию?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да 
		и ввестистроку(СтрокаПароля, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите пароль для данной операции:"), 14) 
		И СтрокаПароля = "25.02.1980" ТОгда
		
		ВыполнитьВосстановлениеНумерацииКодаСправочникаС(); 		
	КонецЕсли;
	
КонецПроцедуры
&НаСервере
Процедура ВыполнитьВосстановлениеНумерацииКодаСправочникаС() //Экспорт	
	
	МассивДля = Новый массив(1);
	ИмяОбъекта = СокрЛП(Объект.ВидСправочника.Метаданные().Имя);
	
	ЗапросДляСправочника = Новый Запрос;
	ЗапросДляСправочника.Текст = "ВЫБРАТЬ
	|	" + ИмяОбъекта + ".Ссылка
	|ИЗ
	|	Справочник." + ИмяОбъекта + " КАК " + ИмяОбъекта + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	" + ИмяОбъекта + ".ПометкаУдаления,
	|	" + ИмяОбъекта + ".Код";
	
	кво = 0;
	
	Вз = ЗапросДляСправочника.Выполнить();
	Если Не Вз.Пустой() Тогда
		Рез = Вз.Выбрать();
		Пока Рез.Следующий() Цикл
			МассивДля.Добавить(Рез.ссылка);
			кво = кво + 1;
		КонецЦикла;	
	Иначе
	КонецЕсли;
	
	длинакода = метаданные.Справочники[ИмяОбъекта].ДлинаКода;
	нулей = "";  
	сч = 1;
	
	пока сч < длинакода цикл
		нулей = нулей + "0";
		сч = сч + 1;
	КонецЦикла;
	
	нкод = нулей + "1";
	страда = стрдлина(нулей) + 1;
	НПК1 = новый(тип("СправочникМенеджер." + ИмяОбъекта));
	
	для М = 1 по кво цикл
		ММ = МассивДля[М];
		если не ММ.предопределенный тогда
			найден = ложь;
			
			пока истина цикл
				нпк = нпк1.НайтиПоКоду(нкод);
				если нпк.Пустая() тогда
					найден = истина;
					прервать;
					
				иначе
					эточисло = число(нкод);
					эточисло = эточисло + 1;
					нкод = прав(нулей + стрзаменить(сокрлп(эточисло), символы.НПП, ""), страда);
				конецесли;
			КонецЦикла;
			
			ммм = мм.получитьобъект();
			ммм.код = нкод;
			попытка
				Попытка //ммм.ОбменДанными.Загрузка=истина;
				Исключение
				КонецПопытки;
				ммм.записать();
				
			исключение 
				ПРЕРВАТЬ;
			конецпопытки;
			
			эточисло = число(нкод);
			эточисло = эточисло + 1;
			нкод = прав(нулей + стрзаменить(сокрлп(эточисло), символы.НПП, ""), страда);
		конецесли;
	КонецЦикла;
	
КонецПроцедуры //ВыполнитьВосстановлениеНумерацииКодаСправочника

&НаКлиенте
Процедура УдалитьКакСОбменомДанными(Команда)
	
	СтрокаПароля = "";
	Если ЗначениеЗаполнено(Объект.ВидДокумента)
		И Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выполнить удаление в режиме ОбменДанными?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да 
		и ввестистроку(СтрокаПароля, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите пароль для данной операции:"), 14) 
		И СтрокаПароля = "25.02.1980" ТОгда
		
		УдалитьКакСОбменоДаннымиС();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьКакСОбменоДаннымиС() //Экспорт	
	
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
		ОбъектУ = Объект.ВидДокумента.ПолучитьОбъект();
	ИначеЕсли ЗначениеЗаполнено(Объект.ВидСправочника) Тогда
		ОбъектУ = Объект.ВидСправчоника.ПолучитьОбъект();
	Иначе
		Возврат;
	КонецЕсли;
	
	ОбъектУ.ОбменДанными.Загрузка = Истина;
	ОбъектУ.Удалить();
	
КонецПроцедуры //УдалитьКакСОбменоДаннымиС

&НаКлиенте
Процедура ВыполнитьУстановкуЭтихРеквизитовДляГруппыНоменклатуры(Команда)
	
	ВыполнитьУстановкуЭтихРеквизитовДляГруппыНоменклатурыС();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьУстановкуЭтихРеквизитовДляГруппыНоменклатурыС() //Экспорт	
	
	ЗапросН = Новый Запрос;
	ЗапросН.Текст = "ВЫБРАТЬ
	                |	Номенклатура.Ссылка
	                |ИЗ
	                |	Справочник.Номенклатура КАК Номенклатура
	                |ГДЕ
	                |	Номенклатура.ЭтоГруппа = ЛОЖЬ
	                |	И Номенклатура.ПометкаУдаления = ЛОЖЬ
	                |	И Номенклатура.Ссылка В ИЕРАРХИИ(&Группаноменклатуры)";
	
	ЗапросН.УстановитьПараметр("Группаноменклатуры", Объект.ГруппаНоменклатуры);
	ВыборН = ЗапросН.Выполнить();
	ЗаписаноОбъектов = 0;
	Если Не ВыборН.Пустой() Тогда
		РезН = ВыборН.Выбрать();
		
		Пока РезН.Следующий() Цикл
			
			ЧтотоМенялось = ложь;
			ОбъектНоменклатура = РезН.Ссылка.ПолучитьОбъект();
			Если НЕ ОбъектНоменклатура.СчетУчетаЗапасов = Объект.СчетУчетаЗапасов Тогда
				ОбъектНоменклатура.СчетУчетаЗапасов = Объект.СчетУчетаЗапасов;
				ЧтотоМенялось = Истина;
			КонецЕсли;
			
			Если НЕ ОбъектНоменклатура.СчетУчетаЗатрат = Объект.СчетУчетаЗатрат Тогда
				ОбъектНоменклатура.СчетУчетаЗатрат = Объект.СчетУчетаЗатрат;
				ЧтотоМенялось = Истина;
			КонецЕсли;
			
			Если НЕ ОбъектНоменклатура.ТипНоменклатуры = Объект.ТипНоменклатуры Тогда
				ОбъектНоменклатура.ТипНоменклатуры = Объект.ТипНоменклатуры;
				ЧтотоМенялось = Истина;
			КонецЕсли;
			
			Если ЧтотоМенялось Тогда
				Попытка //Записи ОбъектНоменклатура
					ОбъектНоменклатура.Записать();
					ЗаписаноОбъектов = ЗаписаноОбъектов + 1;
					
				Исключение //Записи ОбъектНоменклатура
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка при попытке записи справочника:") + " " + ОбъектНоменклатура + " " + ОписаниеОшибки();
					Сообщение.Сообщить();
				КонецПопытки; //Записи ОбъектНоменклатура
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;	
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Записано Объектов:") + " " + ЗаписаноОбъектов;
	Сообщение.УстановитьДанные(Объект);
	Сообщение.Сообщить();	
	
КонецПроцедуры //ВыполнитьУстановкуЭтихРеквизитовДляГруппыНоменклатурыС

&НаКлиенте
Процедура УстановитьСтандартныеОбязательныеРеквизитыВсейНоменклатуре(Команда)
	
	УстановитьСтандартныеОбязательныеРеквизитыВсейНоменклатуреС();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтандартныеОбязательныеРеквизитыВсейНоменклатуреС() //Экспорт	
	
	ЗапросН = Новый Запрос;
	ЗапросН.Текст = "ВЫБРАТЬ
	                |	Номенклатура.Ссылка
	                |ИЗ
	                |	Справочник.Номенклатура КАК Номенклатура
	                |ГДЕ
	                |	Номенклатура.ЭтоГруппа = ЛОЖЬ
	                |	И Номенклатура.ПометкаУдаления = ЛОЖЬ";
	
	ВыборН = ЗапросН.Выполнить();
	ЗаписаноОбъектов = 0;
	Если Не ВыборН.Пустой() Тогда
		РезН = ВыборН.Выбрать();
		Пока РезН.Следующий() Цикл
			
			ЧтотоМенялось = ложь;
			ОбъектНоменклатура = РезН.Ссылка.ПолучитьОбъект();
//			Если НЕ ЗначениеЗаполнено(ОбъектНоменклатура.ТипНоменклатуры) Тогда
////				ОбъектНоменклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас; ;
//				ОбъектНоменклатура.СрокПополнения = 0;	
//				ОбъектНоменклатура.ИспользоватьХарактеристики = Ложь;
//				ОбъектНоменклатура.ИспользоватьПартии = Ложь;
//				ОбъектНоменклатура.СрокИсполненияЗаказа = 0;
//				ОбъектНоменклатура.НормаВремени = 0;
//				ЧтотоМенялось = Истина;
//				
//			КонецЕсли;
			
			//Если НЕ ЗначениеЗаполнено(ОбъектНоменклатура.МетодОценки) Тогда
			//	ОбъектНоменклатура.МетодОценки = Перечисления.МетодОценкиЗапасов.ПоСредней;
			//	ЧтотоМенялось = Истина;
			//КонецЕсли;
			
			//Если НЕ ЗначениеЗаполнено(ОбъектНоменклатура.НаправлениеДеятельности) Тогда
			//	ОбъектНоменклатура.НаправлениеДеятельности = Справочники.НаправленияДеятельности.ОсновноеНаправление;	
			//	ЧтотоМенялось = Истина;
			//КонецЕсли;
			//
			//Если НЕ ЗначениеЗаполнено(ОбъектНоменклатура.Склад) Тогда	
			//	ОбъектНоменклатура.Склад = Справочники.СтруктурныеЕдиницы.ОсновнойСклад;	
			//	ЧтотоМенялось = Истина;
			//КонецЕсли;
			//
			//Если НЕ ЗначениеЗаполнено(ОбъектНоменклатура.СпособПополнения) Тогда	
			//	ОбъектНоменклатура.СпособПополнения = Перечисления.СпособыПополненияЗапасов.Закупка;	
			//	ЧтотоМенялось = Истина;
			//КонецЕсли;
			//
			//Если НЕ ЗначениеЗаполнено(ОбъектНоменклатура.СчетУчетаЗатрат) Тогда	
			//	ОбъектНоменклатура.СчетУчетаЗатрат = ПланыСчетов.Управленческий.НезавершенноеПроизводство;	
			//	ЧтотоМенялось = Истина;
			//КонецЕсли;
			
			//Если НЕ ЗначениеЗаполнено(ОбъектНоменклатура.СчетУчетаЗапасов) Тогда	
			//	ОбъектНоменклатура.СчетУчетаЗапасов = ПланыСчетов.Управленческий.СырьеИМатериалы;	
			//	ЧтотоМенялось = Истина;
			//КонецЕсли;
			//
			//Если НЕ ЗначениеЗаполнено(ОбъектНоменклатура.СрокПополнения) Тогда						
			//	ОбъектНоменклатура.СрокПополнения = 1;             	
			//	ЧтотоМенялось = Истина;
			//КонецЕсли;
			//
			//Если НЕ ЗначениеЗаполнено(ОбъектНоменклатура.СрокИсполненияЗаказа) Тогда		
			//	ОбъектНоменклатура.СрокИсполненияЗаказа = 1;	
			//	ЧтотоМенялось = Истина;
			//КонецЕсли;
			//
			//Если НЕ ЗначениеЗаполнено(ОбъектНоменклатура.СтавкаНДС) Тогда
			//	ОбъектНоменклатура.СтавкаНДС = Справочники.Организации.ОсновнаяОрганизация.СтавкаНДСПоУмолчанию;	
			//	ЧтотоМенялось = Истина;
			//КонецЕсли;
			
			Если ЧтотоМенялось Тогда
				Попытка //Записи ОбъектНоменклатура
					ОбъектНоменклатура.Записать();
					ЗаписаноОбъектов = ЗаписаноОбъектов + 1;
					
				Исключение //Записи ОбъектНоменклатура
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка при попытке записи справочника:") + " " + ОбъектНоменклатура + " " + ОписаниеОшибки();
					Сообщение.Сообщить();
				КонецПопытки; //Записи ОбъектНоменклатура
			КонецЕсли;
			
		КонецЦикла;	//по результатам запроса Н
	КонецЕсли; //запрос Н 
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Записано Объектов:") + " " + ЗаписаноОбъектов;
	Сообщение.УстановитьДанные(Объект);
	Сообщение.Сообщить();	
	
КонецПроцедуры //

&НаКлиенте
Процедура УстановитьСтандартныеобязательныеРеквизитыВсемКонтрагентам(Команда)
	
	УстановитьСтандартныеобязательныеРеквизитыВсемКонтрагентамС();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтандартныеобязательныеРеквизитыВсемКонтрагентамС() //Экспорт	
	//
	//ЗапросН = Новый Запрос;
	//ЗапросН.Текст = "ВЫБРАТЬ
	//				|	Контрагенты.Ссылка
	//				|ИЗ
	//				|	Справочник.Клиенты КАК Контрагенты
	//				|ГДЕ
	//				|	Контрагенты.ЭтоГруппа = ЛОЖЬ
	//				|	И Контрагенты.ПометкаУдаления = ЛОЖЬ";
	//
	//ВыборН = ЗапросН.Выполнить();
	//ЗаписаноОбъектов = 0;
	//Если Не ВыборН.Пустой() Тогда
	//	РезН = ВыборН.Выбрать();
	//	Пока РезН.Следующий() Цикл
	//		
	//		ЧтотоМенялось = ложь;
	//		ОбъектКонтрагент = РезН.Ссылка.ПолучитьОбъект();
	//		Если НЕ ЗначениеЗаполнено(ОбъектКонтрагент.СчетУчетаРасчетовСПокупателем) Тогда
	//			ОбъектКонтрагент.СчетУчетаРасчетовСПокупателем = планысчетов.Управленческий.РасчетыСПокупателями;
	//			ЧтотоМенялось = Истина;				
	//		КонецЕсли;
	//		
	//		Если НЕ ЗначениеЗаполнено(ОбъектКонтрагент.СчетУчетаАвансовПокупателя) Тогда
	//			ОбъектКонтрагент.СчетУчетаАвансовПокупателя = планысчетов.Управленческий.РасчетыПоАвансамПолученным;
	//			ЧтотоМенялось = Истина;				
	//		КонецЕсли;
	//		
	//		Если НЕ ЗначениеЗаполнено(ОбъектКонтрагент.СчетУчетаРасчетовСПоставщиком) Тогда
	//			ОбъектКонтрагент.СчетУчетаРасчетовСПоставщиком = планысчетов.Управленческий.РасчетыСПоставщиками;
	//			ЧтотоМенялось = Истина;				
	//		КонецЕсли;
	//		
	//		Если НЕ ЗначениеЗаполнено(ОбъектКонтрагент.СчетУчетаАвансовПоставщику) Тогда
	//			ОбъектКонтрагент.СчетУчетаАвансовПоставщику = планысчетов.Управленческий.РасчетыПоАвансамВыданным;
	//			ЧтотоМенялось = Истина;				
	//		КонецЕсли;
	//		
	//		Если ЧтотоМенялось Тогда
	//			Попытка //Записи ОбъектКонтрагент
	//				ОбъектКонтрагент.Записать();
	//				ЗаписаноОбъектов = ЗаписаноОбъектов + 1;
	//				
	//			Исключение //Записи ОбъектКонтрагент
	//				Сообщение = Новый СообщениеПользователю;
	//				Сообщение.Текст = "Ошибка при попытке записи справочника: " + ОбъектКонтрагент + " " + ОписаниеОшибки();
	//				Сообщение.Сообщить();
	//			КонецПопытки; //Записи ОбъектКонтрагент
	//		КонецЕсли;
	//		
	//	КонецЦикла;	//по результатам запроса Н
	//КонецЕсли; //запрос Н 
	//
	//Сообщение = Новый СообщениеПользователю;
	//Сообщение.Текст = "Записано Объектов: " + ЗаписаноОбъектов;
	//Сообщение.УстановитьДанные(Объект);
	//Сообщение.Сообщить();	
	
КонецПроцедуры //УстановитьСтандартныеобязательныеРеквизитыВсемКонтрагентамС

&НаКлиенте
Процедура ВыполнитьУстановкуРеквизитовЭтойГруппеКонтрагентовИСоздатьДоговораПоУмолчанию(Команда)
	
	ВыполнитьУстановкуРеквизитовЭтойГруппеКонтрагентовИСоздатьДоговораПоУмолчаниюС();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьУстановкуРеквизитовЭтойГруппеКонтрагентовИСоздатьДоговораПоУмолчаниюС() //Экспорт	
	
	ЗапросН = Новый Запрос;
	ЗапросН.Текст = "ВЫБРАТЬ
	                |	Контрагенты.Ссылка
	                |ИЗ
	                |	Справочник.Клиенты КАК Контрагенты
	                |ГДЕ
	                |	Контрагенты.ЭтоГруппа = ЛОЖЬ
	                |	И Контрагенты.ПометкаУдаления = ЛОЖЬ
	                |	И Контрагенты.Ссылка В ИЕРАРХИИ(&ГруппаК)";
	
	ЗапросН.УстановитьПараметр("ГруппаК", Объект.ГруппаКонтрагентов);
	
	ВыборН = ЗапросН.Выполнить();
	ЗаписаноОбъектов = 0;
	Если Не ВыборН.Пустой() Тогда
		РезН = ВыборН.Выбрать();
		Пока РезН.Следующий() Цикл
			
			ЧтотоМенялось = ложь;
			ОбъектКонтрагент = РезН.Ссылка.ПолучитьОбъект();
			Если НЕ ОбъектКонтрагент.ПравовойСтатус = Объект.ЮрФизЛицо Тогда
				ОбъектКонтрагент.ПравовойСтатус = Объект.ЮрФизЛицо;
				ЧтотоМенялось = Истина;				
			КонецЕсли;
			
			//Если НЕ ЗначениеЗаполнено(ОбъектКонтрагент.ДоговорПоУмолчанию) Тогда
			//	НовыйДоговор = Справочники.Договора.СоздатьЭлемент();
			//	
			//	//sza110729-1153 
			//	НовыйДоговорНаименование = SZДополнительныеРазработки.ПолучитьЗначениеНастройкиДополнительныхРазработок("АвтоНаименованиеОсновногоДоговораКонтрагента");
			//	НовыйДоговор.Наименование = ?(НовыйДоговорНаименование = "", "Основной договор", НовыйДоговорНаименование);
			//	
			//	НовыйДоговор.ВалютаРасчетов = Справочники.Валюты.НациональнаяВалюта;
			//	НовыйДоговор.Организация = Справочники.Организации.ОсновнаяОрганизация;
			//	НовыйДоговор.ВидДоговора = Перечисления.ВидыДоговоров.СПокупателем;
			//	НовыйДоговор.ВидЦен = Справочники.ВидыЦен.Оптовая;
			//	НовыйДоговор.Владелец = ОбъектКонтрагент.Ссылка;
			//	НовыйДоговор.СрокОплатыПоставщику = Константы.СрокОплатыПоставщику.Получить();
			//	НовыйДоговор.СрокОплатыПокупателя = Константы.СрокОплатыПокупателя.Получить();
			//	НовыйДоговор.Записать();
			//	
			//	ОбъектКонтрагент.ДоговорПоУмолчанию = НовыйДоговор.Ссылка;
			//	ЧтотоМенялось = Истина;
			//КонецЕсли;
			//
			Если ЧтотоМенялось Тогда
				Попытка //Записи ОбъектКонтрагент
					ОбъектКонтрагент.Записать();
					ЗаписаноОбъектов = ЗаписаноОбъектов + 1;
					
				Исключение //Записи ОбъектКонтрагент
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка при попытке записи справочника:") + " " + ОбъектКонтрагент + " " + ОписаниеОшибки();
					Сообщение.Сообщить();
				КонецПопытки; //Записи ОбъектКонтрагент
			КонецЕсли;
			
		КонецЦикла;	//по результатам запроса Н
	КонецЕсли; //запрос Н 
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Записано Объектов:") + " " + ЗаписаноОбъектов;
	Сообщение.УстановитьДанные(Объект);
	Сообщение.Сообщить();	
	
КонецПроцедуры //ВыполнитьУстановкуРеквизитовЭтойГруппеКонтрагентовИСоздатьДоговораПоУмолчаниюС

&НаКлиенте
Процедура УстановитьСотрудникамЭтиОбязательныеРеквизиты(Команда)
	
	УстановитьСотрудникамЭтиОбязательныеРеквизитыС();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСотрудникамЭтиОбязательныеРеквизитыС() //Экспорт	
	
	//ЗапросН = Новый Запрос;
	//ЗапросН.Текст = "ВЫБРАТЬ Сотрудники.Ссылка
	//|ИЗ Справочник.Сотрудники КАК Сотрудники
	//|ГДЕ Сотрудники.ПометкаУдаления = ЛОЖЬ ";
	////	                |	И Сотрудники.Ссылка В ИЕРАРХИИ(&ГруппаК)";
	//
	////	ЗапросН.УстановитьПараметр("ГруппаК", Объект.ГруппаКонтрагентов);
	//
	//ВыборН = ЗапросН.Выполнить();
	//ЗаписаноОбъектов = 0;
	//Если Не ВыборН.Пустой() Тогда
	//	РезН = ВыборН.Выбрать();
	//	Пока РезН.Следующий() Цикл
	//		
	//		ЧтотоМенялось = ложь;
	//		ОбъектСотрудник = РезН.Ссылка.ПолучитьОбъект();
	//		Если НЕ ЗначениеЗаполнено(ОбъектСотрудник.СчетРасчетовСПерсоналом) Тогда
	//			ОбъектСотрудник.СчетРасчетовСПерсоналом = Объект.СчетРасчетовСПерсоналом;
	//			ЧтотоМенялось = Истина;				
	//		КонецЕсли;
	//		
	//		Если НЕ ЗначениеЗаполнено(ОбъектСотрудник.СчетРасчетовСПодотчетниками) Тогда
	//			ОбъектСотрудник.СчетРасчетовСПодотчетниками = Объект.СчетРасчетовСПодотчетниками;
	//			ЧтотоМенялось = Истина;				
	//		КонецЕсли;
	//		
	//		Если НЕ ЗначениеЗаполнено(ОбъектСотрудник.СчетРасчетовПоПерерасходу) Тогда
	//			ОбъектСотрудник.СчетРасчетовПоПерерасходу = Объект.СчетРасчетовПоПерерасходу;
	//			ЧтотоМенялось = Истина;				
	//		КонецЕсли;
	//		
	//		Если ЧтотоМенялось Тогда
	//			Попытка //Записи ОбъектСотрудник
	//				ОбъектСотрудник.Записать();
	//				ЗаписаноОбъектов = ЗаписаноОбъектов + 1;
	//				
	//			Исключение //Записи ОбъектСотрудник
	//				Сообщение = Новый СообщениеПользователю;
	//				Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка при попытке записи справочника:") + " " + ОбъектСотрудник + " " + ОписаниеОшибки();
	//				Сообщение.Сообщить();
	//			КонецПопытки; //Записи ОбъектСотрудник
	//		КонецЕсли;
	//		
	//	КонецЦикла;	//по результатам запроса Н
	//КонецЕсли; //запрос Н 
	//
	//Сообщение = Новый СообщениеПользователю;
	//Сообщение.Текст = "Записано Объектов: " + ЗаписаноОбъектов;
	//Сообщение.УстановитьДанные(Объект);
	//Сообщение.Сообщить();	
	
КонецПроцедуры //УстановитьСотрудникамЭтиОбязательныеРеквизитыС

&НаКлиенте
Процедура УдалитьИзСоставаСпецификацийВладельцевСпецификаций(Команда)
	УдалитьИзСоставаСпецификацийВладельцевСпецификацийНаСервере();
КонецПроцедуры

&насервере
Процедура УдалитьИзСоставаСпецификацийВладельцевСпецификацийНаСервере() //Экспорт	
	
	//ЗапросПовторВСпецификации = Новый Запрос;
	//ЗапросПовторВСпецификации.Текст = "ВЫБРАТЬ
	//|	СпецификацииСостав.Ссылка,
	//|	СпецификацииСостав.НомерСтроки
	//|ИЗ
	//|	Справочник.Спецификации.Состав КАК СпецификацииСостав
	//|ГДЕ
	//|	СпецификацииСостав.Номенклатура = СпецификацииСостав.Ссылка.Владелец ";
	//
	//Сообщение = Новый СообщениеПользователю;
	//
	//ВыборПовторВСпецификации = ЗапросПовторВСпецификации.Выполнить();
	//Если Не ВыборПовторВСпецификации.Пустой() Тогда
	//	РезПовторВСпецификации = ВыборПовторВСпецификации.Выбрать();
	//	СчПовторВСпецификации = 0;
	//	Пока РезПовторВСпецификации.Следующий() Цикл
	//		
	//		РС = РезПовторВСпецификации.Ссылка.получитьобъект();
	//		рс.состав.удалить(РезПовторВСпецификации.НомерСтроки - 1);
	//		Попытка //Записи рс <?"Объект справочника">
	//			рс.обменданными = ложь; 
	//			рс.Записать();
	//			//рс = рс.Ссылка;
	//			
	//		Исключение //Записи рс
	//			//Сообщение = Новый СообщениеПользователю;
	//			//Сообщение.Текст = "Ошибка при попытке записи справочника: " + рс + " " + ОписаниеОшибки();
	//			//Сообщение.Поле = "";
	//			//Сообщение.УстановитьДанные(Объект);
	//			//Сообщение.Сообщить();
	//		КонецПопытки; //Записи рс
	//		
	//		СчПовторВСпецификации = СчПовторВСпецификации + 1;
	//	КонецЦикла;	//по результатам запроса ПовторВСпецификации
	//	Сообщение.Текст = "Всего: " + СчПовторВСпецификации;
	//Иначе 	//запрос пуст!
	//	Сообщение.Текст = "Запрос ПовторВСпецификации пуст.";
	//КонецЕсли; //запрос ПовторВСпецификации 
	//Сообщение.Сообщить(); 
	//
	
КонецПроцедуры //УдалитьИзСоставаСпецификацийВладельцевСпецификацийНаСервере

&НаКлиенте
Процедура ОчиститьРекурсивныеССылкиВСпецификациях(Команда)
	ОчиститьРекурсивныеССылкиВСпецификацияхНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОчиститьРекурсивныеССылкиВСпецификацияхНаСервере() //Экспорт	
	
	//ЗапросНС = Новый Запрос;
	//ЗапросНС.Текст = "ВЫБРАТЬ
	//|	СпецификацииСостав.Номенклатура,
	//|	СпецификацииСостав.Номенклатура.Спецификация КАК НС,
	//|	СпецификацииСостав.Ссылка.Владелец
	//|ИЗ
	//|	Справочник.Спецификации.Состав КАК СпецификацииСостав
	//|ГДЕ
	//|	(НЕ СпецификацииСостав.Номенклатура.Спецификация = &СпецификацияПустая)";
	//
	//ЗапросНС.УстановитьПараметр("СпецификацияПустая", Справочники.Спецификации.ПустаяСсылка());
	//
	//Сообщение = Новый СообщениеПользователю;
	//
	//ВыборНС = ЗапросНС.Выполнить();
	//Если Не ВыборНС.Пустой() Тогда
	//	РезНС = ВыборНС.Выбрать();
	//	СчНС = 0;
	//	Пока РезНС.Следующий() Цикл
	//		
	//		НоменклатураСоставаСпецификация = РезНС.НС;			
	//		
	//		СтрокаСостава = НоменклатураСоставаСпецификация.Состав.Найти(РезНС.Владелец, "Номенклатура");
	//		Если НЕ СтрокаСостава = Неопределено Тогда
	//			
	//			СчНС = СчНС + 1;
	//			
	//			НомерСтроки = СтрокаСостава.НомерСтроки;
	//			
	//			СпецификацияСОшибкой = НоменклатураСоставаСпецификация.ПолучитьОбъект();
	//			СпецификацияСОшибкой.Состав.Удалить(НомерСтроки - 1);
	//			//	Попытка 
	//			//		СпецификацияСОшибкой.обменданными = ложь; 
	//			СпецификацияСОшибкой.Записать();
	//			//	
	//			//Исключение //Записи рс
	//			//		Сообщение = Новый СообщениеПользователю;
	//			//		Сообщение.Текст = "Произошла ошибка: " + ОписаниеОшибки();
	//			//		//Сообщение.Поле = "";
	//			//		//Сообщение.УстановитьДанные(Объект);
	//			//		Сообщение.Сообщить();
	//			//		
	//			//КонецПопытки; //Записи рс
	//		КонецЕсли;
	//		
	//	КонецЦикла;	//по результатам запроса НС
	//	Сообщение.Текст = "Всего: " + СчНС;
	//Иначе 	//запрос пуст!
	//	Сообщение.Текст = "Запрос рекурсии пуст.";
	//КонецЕсли; //запрос НС 
	//Сообщение.Сообщить(); 
	
КонецПроцедуры //ОчиститьРекурсивныеССылкиВСпецификацияхНаСервере

&НаКлиенте
Процедура УстановитьРеквизитДляВсехЭлементовСправочника(Команда)
	
	СтрокаПароля = "";
	Если Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выполнить смену значений реквизита всех элементов справочника?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да 
		И ввестистроку(СтрокаПароля, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите пароль для данной операции:"), 14) 
		И СтрокаПароля = "25.02.1980" ТОгда
		
		РеквизитТаблицы = "СтавкаНДС";
		Если ввестистроку(РеквизитТаблицы, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите имя реквизита без пробелов:"), 80) ТОгда	
			
			СменаРеквизитаТаблицыСправочников(РеквизитТаблицы);
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СменаРеквизитаТаблицыСправочников(РеквизитСправочника);
	
	СправочникИмя = СокрЛП(Объект.ВидСправочника.Метаданные().Имя);
	
	ЗапСправочник = Новый Запрос;
	ЗапСправочник.Текст = "ВЫБРАТЬ " + СправочникИмя + ".Ссылка ИЗ Справочник." + СправочникИмя + " КАК " + СправочникИмя + " ГДЕ " + СправочникИмя + ".ЭтоГруппа = ЛОЖЬ ";
	
	Попытка
		ВзСправочник = ЗапСправочник.Выполнить();
		Если Не ВзСправочник.Пустой() Тогда
			РезСправочник = ВзСправочник.Выбрать();
			СчСправочник = 0;
			
			Пока РезСправочник.Следующий() Цикл
				РезСсылка = РезСправочник.Ссылка.ПолучитьОбъект();
				Попытка 
					РезСсылка[РеквизитСправочника] = Объект.УстановитьРеквизит; 	
					попытка
						РезСсылка.Записать();
					Исключение //РезСсылка.Записать(РежимЗаписиСправочника.Запись);
						Сообщение = Новый СообщениеПользователю;
						Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка при попытке записи:") + " " + РезСсылка + " " + ОписаниеОшибки();
						Сообщение.Сообщить();
					КонецПопытки;  //записи  РезСсылка
				исключение
					прервать;
				КонецПопытки;  
				СчСправочник = СчСправочник +1;
			КонецЦикла;	//по результатам запроса Справочник
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Всего обработано:") + " " + СправочникИмя + " - " + СчСправочник;
			Сообщение.Сообщить();
		Иначе 	//запрос пуст!
		КонецЕсли; 
		
	Исключение
	КонецПопытки;
	
КонецПроцедуры //

&НаКлиенте
Процедура УстановитьДляНоменклатурыОсновнуюСпецификациюПоЕдинственнойСпецификации(Команда)
	
	УстановитьДляНоменклатурыОсновнуюСпецификациюПоЕдинственнойСпецификацииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДляНоменклатурыОсновнуюСпецификациюПоЕдинственнойСпецификацииНаСервере() //Экспорт	
	
	//ЗапросСпецНомен = Новый Запрос;
	//ЗапросСпецНомен.Текст = "ВЫБРАТЬ
	//|	Номенклатура.Ссылка
	//|ИЗ
	//|	Справочник.Номенклатура КАК Номенклатура
	//|ГДЕ
	//|	Номенклатура.Спецификация = &Спецификация
	//|	И Номенклатура.ПометкаУдаления = ЛОЖЬ
	//|	И Номенклатура.ЭтоГруппа = ЛОЖЬ ";
	//
	//ЗапросСпецНомен.УстановитьПараметр("Спецификация", Справочники.Спецификации.ПустаяСсылка());
	//
	//ВыборСпецНомен = ЗапросСпецНомен.Выполнить();
	//Если Не ВыборСпецНомен.Пустой() Тогда
	//	СчСправочник = 0;
	//	РезСпецНомен = ВыборСпецНомен.Выбрать();
	//	Пока РезСпецНомен.Следующий() Цикл
	//		
	//		РезСсылка = РезСпецНомен.Ссылка;
	//		ЗапросСпецификацияНоменклатуры = Новый Запрос;
	//		ЗапросСпецификацияНоменклатуры.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	//		|	Спецификации.Ссылка
	//		|ИЗ
	//		|	Справочник.Спецификации КАК Спецификации
	//		|ГДЕ
	//		|	Спецификации.ПометкаУдаления = ЛОЖЬ
	//		|	И Спецификации.Владелец = &Владелец "; //ВЫБРАТЬ ПЕРВЫЕ 1
	//		ЗапросСпецификацияНоменклатуры.УстановитьПараметр("Владелец", РезСсылка);
	//		
	//		ВыборСпецификацияНоменклатуры = ЗапросСпецификацияНоменклатуры.Выполнить();
	//		Если Не ВыборСпецификацияНоменклатуры.Пустой() Тогда
	//			РезСпецификацияНоменклатуры = ВыборСпецификацияНоменклатуры.Выбрать();
	//			РезСпецификацияНоменклатуры.Следующий();
	//			Спецификация = РезСпецификацияНоменклатуры.Ссылка;
	//			
	//			НоменклатураОбъект = РезСсылка.ПолучитьОбъект();
	//			НоменклатураОбъект.Спецификация = Спецификация;
	//			Попытка 
	//				НоменклатураОбъект.Записать();
	//				СчСправочник = СчСправочник +1;
	//			Исключение 	
	//				Сообщение = Новый СообщениеПользователю;
	//				Сообщение.Текст = "Произошла ошибка: " + ОписаниеОшибки();
	//				Сообщение.Сообщить();
	//				
	//			КонецПопытки;
	//			
	//		КонецЕсли; //запрос СпецификацияНоменклатуры 
	//		
	//	КонецЦикла;	//по результатам запроса СпецНомен
	//иначе
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = "Всего обработано номенклатуры: " + СчСправочник;
	//	Сообщение.Сообщить();
	//	
	//КонецЕсли; //запрос СпецНомен 
	//
КонецПроцедуры //УстановитьДляНоменклатурыОсновнуюСпецификациюПоЕдинственнойСпецификацииНаСервере

&НаКлиенте
Процедура ОпределитьЭлементыСоставСпецификацийКакСборкаИлиМатериалПоНаличиюУНегоСпецификации(Команда)
	
	ОпределитьЭлементыСоставСпецификацийКакСборкаИлиМатериалПоНаличиюУНегоСпецификацииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьЭлементыСоставСпецификацийКакСборкаИлиМатериалПоНаличиюУНегоСпецификацииНаСервере() //Экспорт	
	//
	//ЗапросВсеСпецификации = Новый Запрос;
	//ЗапросВсеСпецификации.Текст = "ВЫБРАТЬ
	//|	Спецификации.Ссылка
	//|ИЗ
	//|	Справочник.Спецификации КАК Спецификации
	//|ГДЕ
	//|	Спецификации.ПометкаУдаления = ЛОЖЬ ";
	//
	//ВыборВсеСпецификации = ЗапросВсеСпецификации.Выполнить();
	//Если Не ВыборВсеСпецификации.Пустой() Тогда
	//	РезВсеСпецификации = ВыборВсеСпецификации.Выбрать();
	//	СчВсеСпецификации = 0;
	//	Пока РезВсеСпецификации.Следующий() Цикл
	//		
	//		Рез = РезВсеСпецификации.Ссылка.ПолучитьОбъект();
	//		
	//		Былиизменения = ложь;
	//		Для Каждого СтрокаСостава из Рез.Состав Цикл
	//			
	//			если НЕ ЗначениеЗаполнено(СтрокаСостава.Спецификация) тогда
	//				Ном = СтрокаСостава.Номенклатура;
	//				ЗапросПерваяСпецификация = Новый Запрос;
	//				ЗапросПерваяСпецификация.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	//				|	Спецификации.Ссылка
	//				|ИЗ
	//				|	Справочник.Спецификации КАК Спецификации
	//				|ГДЕ
	//				|	Спецификации.Владелец = &Владелец
	//				|	И Спецификации.ПометкаУдаления = ЛОЖЬ "; //ВЫБРАТЬ ПЕРВЫЕ 1
	//				ЗапросПерваяСпецификация.УстановитьПараметр("Владелец", Ном);
	//				
	//				//Сообщение = Новый СообщениеПользователю;
	//				ВыборПерваяСпецификация = ЗапросПерваяСпецификация.Выполнить();
	//				Если Не ВыборПерваяСпецификация.Пустой() Тогда
	//					РезПерваяСпецификация = ВыборПерваяСпецификация.Выбрать();
	//					РезПерваяСпецификация.Следующий();
	//					
	//					СтрокаСостава.Спецификация = РезПерваяСпецификация.Ссылка;
	//					СтрокаСостава.ТипСтрокиСостава = Перечисления.ТипыСтрокСоставаСпецификации.Сборка;
	//					Былиизменения = Истина;
	//					
	//				КонецЕсли; //запрос ПерваяСпецификация 
	//				//Сообщение.Сообщить(); 
	//			иначеесли СтрокаСостава.ТипСтрокиСостава = Перечисления.ТипыСтрокСоставаСпецификации.Материал тогда
	//				СтрокаСостава.ТипСтрокиСостава = Перечисления.ТипыСтрокСоставаСпецификации.Сборка;
	//				Былиизменения = Истина;
	//			конецесли;	
	//			
	//		КонецЦикла;
	//		
	//		Если Былиизменения Тогда
	//			Попытка 
	//				СчВсеСпецификации = СчВсеСпецификации + 1;
	//				Рез.записать();
	//			Исключение 	
	//				Сообщение = Новый СообщениеПользователю;
	//				Сообщение.Текст = "Произошла ошибка: " + ОписаниеОшибки();
	//				Сообщение.Сообщить();
	//				
	//			КонецПопытки;
	//		КонецЕсли;
	//		
	//	КонецЦикла;	//по результатам запроса ВсеСпецификации
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = "Всего обработано спецификаций: " + СчВсеСпецификации;
	//	Сообщение.Сообщить();
	//	
	//КонецЕсли; //запрос ВсеСпецификации 
	
КонецПроцедуры //ОпределитьЭлементыСоставСпецификацийКакСборкаИлиМатериалПоНаличиюУНегоСпецификацииНаСервере

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры
