// sza151111-0328
// sza151110-1919

&НаКлиенте
Процедура ОбновитьВидимостьЭлементов()

	НеПрименять = ПредопределенноеЗначение("Перечисление.ВидыСортировкиТаблицыТоваров.НеПрименять");
	ПоРеквизитуНоменклатуры	= ПредопределенноеЗначение("Перечисление.ВидыСортировкиТаблицыТоваров.ПоРеквизитуНоменклатуры");
	Если НЕ ЗначениеЗаполнено(СортироватьПо1) Тогда
		СортироватьПо1 = НеПрименять;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(СортироватьПо2) Тогда
		СортироватьПо2 = НеПрименять;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(СортироватьПо3) Тогда
		СортироватьПо3 = НеПрименять;
	КонецЕсли;

	ВторуюВидно = НЕ СортироватьПо1 = НеПрименять;
	Элементы.ГруппаСортировки2.Видимость = ВторуюВидно;
	Элементы.ГруппаСортировки3.Видимость = ВторуюВидно И НЕ СортироватьПо2 = НеПрименять;
	Элементы.РеквизитСортировки1.Видимость = СортироватьПо1 = ПоРеквизитуНоменклатуры;
	Элементы.РеквизитСортировки2.Видимость = ВторуюВидно И СортироватьПо2 = ПоРеквизитуНоменклатуры;
	Элементы.РеквизитСортировки3.Видимость = ВторуюВидно И СортироватьПо3 = ПоРеквизитуНоменклатуры;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьСортировку(Команда)

	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("СортироватьПо1", СортироватьПо1);
	СтруктураОтвета.Вставить("СортироватьПо2", СортироватьПо2);
	СтруктураОтвета.Вставить("СортироватьПо3", СортироватьПо3);
	СтруктураОтвета.Вставить("Направление1", НаправлениеОбратное1);
	СтруктураОтвета.Вставить("Направление2", НаправлениеОбратное2);
	СтруктураОтвета.Вставить("Направление3", НаправлениеОбратное3);
	СтруктураОтвета.Вставить("РеквизитСортировки1", РеквизитСортировки1);
	СтруктураОтвета.Вставить("РеквизитСортировки2", РеквизитСортировки2);
	СтруктураОтвета.Вставить("РеквизитСортировки3", РеквизитСортировки3);
	Закрыть(СтруктураОтвета);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	ОбновитьВидимостьЭлементов();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	СписокВыбораРеквизитов = Новый СписокЗначений;

	Для Каждого РеквизитНоменклатуры Из Метаданные.Справочники.Номенклатура.Реквизиты Цикл
		ПредставлениеРеквизита = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(ОбщийМодульСервисСервер.ПолучитьКрасивоеНаименованиеОбъекта(РеквизитНоменклатуры.Имя));
		Элементы.РеквизитСортировки1.СписокВыбора.Добавить(РеквизитНоменклатуры.Имя, ПредставлениеРеквизита);
		Элементы.РеквизитСортировки2.СписокВыбора.Добавить(РеквизитНоменклатуры.Имя, ПредставлениеРеквизита);
		Элементы.РеквизитСортировки3.СписокВыбора.Добавить(РеквизитНоменклатуры.Имя, ПредставлениеРеквизита);

	КонецЦикла;

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПо1ПриИзменении(Элемент)
	ОбновитьВидимостьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПо2ПриИзменении(Элемент)
	ОбновитьВидимостьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПо3ПриИзменении(Элемент)
	ОбновитьВидимостьЭлементов();
КонецПроцедуры
