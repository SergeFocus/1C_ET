// sza151119-1705
// sza151111-0336

&НаСервере
Процедура ВыполнитьСортировкуНаСервере(Знач Результат, Знач ОбъектСсылка, Знач НомерСортировки = 1)

	Если НомерСортировки = 1 Тогда
		РежимСортировки = Результат.СортироватьПо1;
		Направление = Результат.Направление1;
		РеквизитСортировки = Результат.РеквизитСортировки1;
	ИначеЕсли НомерСортировки = 2 Тогда
		РежимСортировки = Результат.СортироватьПо2;
		Направление = Результат.Направление2;
		РеквизитСортировки = Результат.РеквизитСортировки2;
	ИначеЕсли НомерСортировки = 3 Тогда
		РежимСортировки = Результат.СортироватьПо3;
		Направление = Результат.Направление3;
		РеквизитСортировки = Результат.РеквизитСортировки3;
	КонецЕсли;

	ТоварКСортировкеОригинал  = ОбъектСсылка.Товары.Выгрузить();
	ТоварКСортировке = ТоварКСортировкеОригинал.Скопировать();
	Если Результат.СортироватьПо1 = ПредопределенноеЗначение("Перечисление.ВидыСортировкиТаблицыТоваров.ПоАртикулуНоменклатуры") Тогда
		ТоварКСортировке.Колонки.Добавить("Артикул");

		Для Каждого СтрокаТовара Из ТоварКСортировке Цикл
			Если ЗначениеЗаполнено(СтрокаТовара.Номенклатура) Тогда
				СтрокаТовара.Артикул = СтрокаТовара.Номенклатура.Артикул;
			КонецЕсли;

		КонецЦикла;

		ТоварКСортировке.Сортировать("Артикул" + ?(Направление, " Убыв", " Возр"));
	ИначеЕсли Результат.СортироватьПо1 = ПредопределенноеЗначение("Перечисление.ВидыСортировкиТаблицыТоваров.ПоКоличеству") Тогда
		ТоварКСортировке.Сортировать("Количество" + ?(Направление, " Убыв", " Возр"));
	ИначеЕсли Результат.СортироватьПо1 = ПредопределенноеЗначение("Перечисление.ВидыСортировкиТаблицыТоваров.ПоКомментариюСтроки") Тогда
		ТоварКСортировке.Сортировать("ОСтроке" + ?(Направление, " Убыв", " Возр"));
	ИначеЕсли Результат.СортироватьПо1 = ПредопределенноеЗначение("Перечисление.ВидыСортировкиТаблицыТоваров.ПоНаименованиюНоменклатуры") Тогда

		ТоварКСортировке.Колонки.Добавить("НаименованиеДляПечати");

		Для Каждого СтрокаТовара Из ТоварКСортировке Цикл
			Если ЗначениеЗаполнено(СтрокаТовара.Номенклатура) Тогда
				СтрокаТовара.НаименованиеДляПечати = СтрокаТовара.Номенклатура.НаименованиеДляПечати;
			КонецЕсли;

		КонецЦикла;

		ТоварКСортировке.Сортировать("НаименованиеДляПечати" + ?(Направление, " Убыв", " Возр"));
	ИначеЕсли Результат.СортироватьПо1 = ПредопределенноеЗначение("Перечисление.ВидыСортировкиТаблицыТоваров.ПоНоменклатурнойГруппе") Тогда

		ТоварКСортировке.Колонки.Добавить("НоменклатурнаяГруппа");

		Для Каждого СтрокаТовара Из ТоварКСортировке Цикл
			Если ЗначениеЗаполнено(СтрокаТовара.Номенклатура) Тогда
				СтрокаТовара.НоменклатурнаяГруппа = СтрокаТовара.Номенклатура.НоменклатурнаяГруппа;
			КонецЕсли;

		КонецЦикла;

		ТоварКСортировке.Сортировать("НоменклатурнаяГруппа" + ?(Направление, " Убыв", " Возр"));
	ИначеЕсли Результат.СортироватьПо1 = ПредопределенноеЗначение("Перечисление.ВидыСортировкиТаблицыТоваров.ПоРеквизитуНоменклатуры") Тогда

		ТоварКСортировке.Колонки.Добавить(РеквизитСортировки);

		Для Каждого СтрокаТовара Из ТоварКСортировке Цикл
			Если ЗначениеЗаполнено(СтрокаТовара.Номенклатура) Тогда
				СтрокаТовара[РеквизитСортировки] = СтрокаТовара.Номенклатура[РеквизитСортировки];
			КонецЕсли;

		КонецЦикла;

		ТоварКСортировке.Сортировать(РеквизитСортировки + ?(Направление, " Убыв", " Возр"));
	ИначеЕсли Результат.СортироватьПо1 = ПредопределенноеЗначение("Перечисление.ВидыСортировкиТаблицыТоваров.ПоСерииНоменклатуры") Тогда

		ТоварКСортировке.Колонки.Добавить("СерияНоменклатуры");

		Для Каждого СтрокаТовара Из ТоварКСортировке Цикл
			Если ЗначениеЗаполнено(СтрокаТовара.Номенклатура) Тогда
				СтрокаТовара.СерияНоменклатуры = СтрокаТовара.Номенклатура.СерияНоменклатуры;
			КонецЕсли;

		КонецЦикла;

		ТоварКСортировке.Сортировать("СерияНоменклатуры" + ?(Направление, " Убыв", " Возр"));
	ИначеЕсли Результат.СортироватьПо1 = ПредопределенноеЗначение("Перечисление.ВидыСортировкиТаблицыТоваров.ПоСумме") Тогда

		ТоварКСортировке.Сортировать("Сумма" + ?(Направление, " Убыв", " Возр"));
	ИначеЕсли Результат.СортироватьПо1 = ПредопределенноеЗначение("Перечисление.ВидыСортировкиТаблицыТоваров.ПоЦене") Тогда
		ТоварКСортировке.Сортировать("Цена" + ?(Направление, " Убыв", " Возр"));
	КонецЕсли;

	Если НЕ ТоварКСортировке = ТоварКСортировкеОригинал Тогда
		Объект = ОбъектСсылка.ПолучитьОбъект();
		Объект.Товары.Загрузить(ТоварКСортировке);
		Попытка
			Объект.НеПроводить = ИСТИНА;
		Исключение
		КонецПопытки;
		Объект.Записать();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)

	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000200", , , );

	Если НЕ Отказ Тогда
		Если НЕ ОбщийМодульСервер.ПроверитьДокументПроведен(ПараметрКоманды) Тогда
			ДокументЗаблокирован = ЛОЖЬ;
			Попытка
				ДокументЗаблокирован = ПараметрыВыполненияКоманды.Источник.ДокументЗаблокирован;
			Исключение
			КонецПопытки;

			Если ДокументЗаблокирован Тогда
				ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Документ заблокирован!"));
			Иначе
				Попытка
					ОбъектСсылка = ПараметрыВыполненияКоманды.Источник.Объект.Ссылка;
				Исключение //  Из списка
					ОбъектСсылка = ПараметрыВыполненияКоманды.Источник.ТекущийЭлемент.ТекущаяСтрока;
				КонецПопытки;
				ПараметрыФормы  = Новый Структура;
				ОповещениеПроВводТаблицы = Новый ОписаниеОповещения("СортировкаТаблицыЗавершение", ЭтотОбъект, ОбъектСсылка);
				ОткрытьФорму("Обработка.СортировкаТаблицыНоменклатуры.Форма",
				ПараметрыФормы,
				ПараметрыВыполненияКоманды.Источник,
				ПараметрыВыполненияКоманды.Уникальность,
				ПараметрыВыполненияКоманды.Окно,
				ПараметрыВыполненияКоманды.НавигационнаяСсылка,
				?(НЕ ДокументЗаблокирован, ОповещениеПроВводТаблицы, Неопределено),
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			КонецЕсли;
		Иначе
			ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Документ уже проведен. Изменения не произведены."), СтатусСообщения.Информация);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СортировкаТаблицыЗавершение(Результат, ОбъектСсылка) Экспорт

	Если НЕ Результат = Неопределено Тогда

		Если ЗначениеЗаполнено(Результат.СортироватьПо1)
			И НЕ Результат.СортироватьПо1 = ПредопределенноеЗначение("Перечисление.ВидыСортировкиТаблицыТоваров.НеПрименять") Тогда

			ВыполнитьСортировкуНаСервере(Результат, ОбъектСсылка);

			Если ЗначениеЗаполнено(Результат.СортироватьПо2)
				И НЕ Результат.СортироватьПо2 = ПредопределенноеЗначение("Перечисление.ВидыСортировкиТаблицыТоваров.НеПрименять") Тогда

				ВыполнитьСортировкуНаСервере(Результат, ОбъектСсылка, 2);

				Если ЗначениеЗаполнено(Результат.СортироватьПо3)
					И НЕ Результат.СортироватьПо3 = ПредопределенноеЗначение("Перечисление.ВидыСортировкиТаблицыТоваров.НеПрименять") Тогда

					ВыполнитьСортировкуНаСервере(Результат, ОбъектСсылка, 3);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры
