// sza150212-2044

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	ВыбратьВсеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыбратьВсеНаСервере()

	Для Каждого СтрокаДокумент Из Объект.СозданныеДокументы Цикл
		СтрокаДокумент.Подходящий = ИСТИНА;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ВыгрузитьЕжедневныеДанныеОРозничнойРеализацииЗаПериодВБухгалтерияПредприятия2НаСервере()

	ВсеДокументы = Новый СписокЗначений;

	Для Каждого СтрокаДокумент Из Объект.СозданныеДокументы Цикл
		Если СтрокаДокумент.Подходящий Тогда
			ВсеДокументы.Добавить(СтрокаДокумент.Документ);
		КонецЕсли;

	КонецЦикла;

	Если НЕ ВсеДокументы.Количество() = 0 Тогда
		СимволРазделитель  = ";";
		ЗаписьВТекстовыйФайл = Новый ЗаписьТекста(АдресВыгрузки, КодировкаТекста.UTF8);

		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВыполненияРаботТовары.Номенклатура,
		|	ВыполненияРаботТовары.Номенклатура.Код КАК Код,
		|	ВыполненияРаботТовары.Номенклатура.Наименование КАК Наименование,
		|	ВыполненияРаботТовары.Номенклатура.Артикул КАК Артикул,
		|	ВыполненияРаботТовары.Номенклатура.НаименованиеДляПечати КАК НаименованиеДляПечати,
		|	ВЫРАЗИТЬ(ВыполненияРаботТовары.Номенклатура.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
		|	ВыполненияРаботТовары.Номенклатура.ОсновнаяЕдиницаИзмерения КАК ОсновнаяЕдиницаИзмерения,
		|	ВыполненияРаботТовары.Номенклатура.СтавкаНДС КАК СтавкаНДС,
		|	ВыполненияРаботТовары.Номенклатура.НеОтслеживатьОстаток КАК НеОтслеживатьОстаток,
		|	ВыполненияРаботТовары.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	ВыполненияРаботТовары.Номенклатура.Производитель КАК Производитель
		|ИЗ
		|	Документ.ВыполненияРабот.Товары КАК ВыполненияРаботТовары
		|ГДЕ
		|	ВыполненияРаботТовары.Ссылка В(&ВсеДокументы)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОказанияУслугЗаВремя.Номенклатура,
		|	ОказанияУслугЗаВремя.Номенклатура.Код,
		|	ОказанияУслугЗаВремя.Номенклатура.Наименование,
		|	ОказанияУслугЗаВремя.Номенклатура.Артикул,
		|	ОказанияУслугЗаВремя.Номенклатура.НаименованиеДляПечати,
		|	ВЫРАЗИТЬ(ОказанияУслугЗаВремя.Номенклатура.Комментарий КАК СТРОКА(1000)),
		|	ОказанияУслугЗаВремя.Номенклатура.ОсновнаяЕдиницаИзмерения,
		|	ОказанияУслугЗаВремя.Номенклатура.СтавкаНДС,
		|	ОказанияУслугЗаВремя.Номенклатура.НеОтслеживатьОстаток,
		|	ОказанияУслугЗаВремя.Номенклатура.НоменклатурнаяГруппа,
		|	ОказанияУслугЗаВремя.Номенклатура.Производитель
		|ИЗ
		|	Документ.ОказанияУслугЗаВремя КАК ОказанияУслугЗаВремя
		|ГДЕ
		|	ОказанияУслугЗаВремя.Ссылка В(&ВсеДокументы)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасходыТовараТовары.Номенклатура,
		|	РасходыТовараТовары.Номенклатура.Код,
		|	РасходыТовараТовары.Номенклатура.Наименование,
		|	РасходыТовараТовары.Номенклатура.Артикул,
		|	РасходыТовараТовары.Номенклатура.НаименованиеДляПечати,
		|	ВЫРАЗИТЬ(РасходыТовараТовары.Номенклатура.Комментарий КАК СТРОКА(1000)),
		|	РасходыТовараТовары.Номенклатура.ОсновнаяЕдиницаИзмерения,
		|	РасходыТовараТовары.Номенклатура.СтавкаНДС,
		|	РасходыТовараТовары.Номенклатура.НеОтслеживатьОстаток,
		|	РасходыТовараТовары.Номенклатура.НоменклатурнаяГруппа,
		|	РасходыТовараТовары.Номенклатура.Производитель
		|ИЗ
		|	Документ.РасходыТовара.Товары КАК РасходыТовараТовары
		|ГДЕ
		|	РасходыТовараТовары.Ссылка В(&ВсеДокументы)";
		Запрос.УстановитьПараметр("ВсеДокументы", ВсеДокументы);

		РезультатЗапроса = Запрос.Выполнить();

		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ЗаписьВТекстовыйФайл.ЗаписатьСтроку(
				"НОМЕНКЛАТУРА" + СимволРазделитель +  // 0
				ВыборкаДетальныеЗаписи.Код + СимволРазделитель + // 1
				ВыборкаДетальныеЗаписи.Наименование + СимволРазделитель + // 2
				ВыборкаДетальныеЗаписи.Артикул + СимволРазделитель + // 3
				ВыборкаДетальныеЗаписи.НаименованиеДляПечати + СимволРазделитель + // 4
				СтрЗаменить(ВыборкаДетальныеЗаписи.Комментарий, Символы.ПС, " ") + СимволРазделитель + // 5
				ВыборкаДетальныеЗаписи.ОсновнаяЕдиницаИзмерения + СимволРазделитель + // 6
				СокрЛП(ВыборкаДетальныеЗаписи.СтавкаНДС) + СимволРазделитель + // 7
				?(ВыборкаДетальныеЗаписи.НеОтслеживатьОстаток, "ИСТИНА", "ЛОЖЬ") + СимволРазделитель + // 8
				СокрЛП(ВыборкаДетальныеЗаписи.НоменклатурнаяГруппа) + СимволРазделитель + // 9
				СокрЛП(ВыборкаДетальныеЗаписи.Производитель) + СимволРазделитель); // 10

			КонецЦикла;
		КонецЕсли;

		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВыполненияРаботТовары.Номенклатура,
		|	ВыполненияРаботТовары.Количество,
		|	ВыполненияРаботТовары.Сумма,
		|	ВыполненияРаботТовары.Цена,
		|	ВыполненияРаботТовары.Номенклатура.Наименование КАК Наименование,
		|	НАЧАЛОПЕРИОДА(ВыполненияРаботТовары.Ссылка.Дата, ДЕНЬ) КАК Дата
		|ИЗ
		|	Документ.ВыполненияРабот.Товары КАК ВыполненияРаботТовары
		|ГДЕ
		|	ВыполненияРаботТовары.Ссылка В(&ВсеДокументы)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОказанияУслугЗаВремя.Номенклатура,
		|	ОказанияУслугЗаВремя.ТовараВКоличестве,
		|	ОказанияУслугЗаВремя.ТовараНаСумму,
		|	ОказанияУслугЗаВремя.Цена,
		|	ОказанияУслугЗаВремя.Номенклатура.Наименование,
		|	НАЧАЛОПЕРИОДА(ОказанияУслугЗаВремя.Дата, ДЕНЬ)
		|ИЗ
		|	Документ.ОказанияУслугЗаВремя КАК ОказанияУслугЗаВремя
		|ГДЕ
		|	ОказанияУслугЗаВремя.Ссылка В(&ВсеДокументы)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасходыТовараТовары.Номенклатура,
		|	РасходыТовараТовары.Количество,
		|	РасходыТовараТовары.Сумма,
		|	РасходыТовараТовары.Цена,
		|	РасходыТовараТовары.Номенклатура.Наименование,
		|	НАЧАЛОПЕРИОДА(РасходыТовараТовары.Ссылка.Дата, ДЕНЬ)
		|ИЗ
		|	Документ.РасходыТовара.Товары КАК РасходыТовараТовары
		|ГДЕ
		|	РасходыТовараТовары.Ссылка В(&ВсеДокументы)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
		Запрос.УстановитьПараметр("ВсеДокументы", ВсеДокументы);

		РезультатЗапроса = Запрос.Выполнить();

		Если НЕ РезультатЗапроса.Пустой() Тогда
			ТаблицаПродаж = РезультатЗапроса.Выгрузить();
			ТаблицаПродаж.Свернуть("Дата, Номенклатура, Наименование, Цена", "Количество, Сумма");
			ТаблицаПродаж.Сортировать("Дата");

			Для Каждого СтрокаПродаж Из ТаблицаПродаж Цикл
				ЗаписьВТекстовыйФайл.ЗаписатьСтроку(
				"ПРОДАЖА" + СимволРазделитель +
				Формат(СтрокаПродаж.Дата, "ДФ=ddMMyyyy") + СимволРазделитель +
				СтрокаПродаж.Наименование + СимволРазделитель +
				Формат(СтрокаПродаж.Количество, "ЧЦ=15; ЧДЦ=6; ЧРД=.; ЧГ=0") + СимволРазделитель +
				Формат(СтрокаПродаж.Цена, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧГ=0") + СимволРазделитель +
				Формат(СтрокаПродаж.Сумма, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧГ=0") + СимволРазделитель +
				СимволРазделитель +
				СимволРазделитель +
				СимволРазделитель +
				СимволРазделитель);

			КонецЦикла;
		КонецЕсли;

		ЗаписьВТекстовыйФайл.Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)

	Объект.Период.ДатаНачала = Объект.ДатаНачала;

	Если Объект.ДатаОкончания < Объект.ДатаНачала Тогда
		Объект.ДатаОкончания 		= Объект.ДатаНачала;
		Объект.Период.ДатаОкончания = Объект.ДатаОкончания;
	КонецЕсли;

	НужноОбновитьСписокДокументов();

КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)

	Объект.Период.ДатаОкончания = Объект.ДатаОкончания;

	Если Объект.ДатаОкончания < Объект.ДатаНачала Тогда
		Объект.ДатаНачала 			= Объект.ДатаОкончания;
		Объект.Период.ДатаНачала 	= Объект.ДатаНачала;
	КонецЕсли;

	НужноОбновитьСписокДокументов();

КонецПроцедуры

&НаКлиенте
Процедура НужноОбновитьСписокДокументов()

	Если НЕ ТаблицаЗагружена Тогда
		ОбновитьСписокДокументов();
	Иначе
		ПоказатьВопрос(Новый ОписаниеОповещения("НужноОбновитьСписокДокументовЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заполнить таблицу заново?"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НужноОбновитьСписокДокументовЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОбновитьСписокДокументов();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокДокументов()

	Объект.СозданныеДокументы.Очистить();

	Запрос = Новый Запрос;
	// Если РеализацияДляБП Тогда
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыполненияРабот.Ссылка КАК Документ,
	|	ВыполненияРабот.ПКОНапечатан КАК Подходящий,
	|	ВыполненияРабот.Результат КАК НаСумму,
	|	1 КАК ВКоличестве,
	|	ВыполненияРабот.СкладДляОбъектаВыполненияРабот КАК Склад
	|ИЗ
	|	Документ.ВыполненияРабот КАК ВыполненияРабот
	|ГДЕ
	|	ВыполненияРабот.Дата >= &ДатаНачала
	|	И ВыполненияРабот.Дата <= &ДатаОкончания
	|	И ВыполненияРабот.Проведен = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОказанияУслугЗаВремя.Ссылка,
	|	ОказанияУслугЗаВремя.ПКОНапечатан,
	|	ОказанияУслугЗаВремя.ТовараНаСумму,
	|	ОказанияУслугЗаВремя.ТовараВКоличестве,
	|	ОказанияУслугЗаВремя.Склад
	|ИЗ
	|	Документ.ОказанияУслугЗаВремя КАК ОказанияУслугЗаВремя
	|ГДЕ
	|	ОказанияУслугЗаВремя.Дата >= &ДатаНачала
	|	И ОказанияУслугЗаВремя.Дата <= &ДатаОкончания
	|	И ОказанияУслугЗаВремя.Проведен = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходыТовара.Ссылка,
	|	РасходыТовара.ПКОНапечатан,
	|	РасходыТовара.ТовараНаСумму,
	|	РасходыТовара.ТовараВКоличестве,
	|	РасходыТовара.Склад
	|ИЗ
	|	Документ.РасходыТовара КАК РасходыТовара
	|ГДЕ
	|	РасходыТовара.Дата >= &ДатаНачала
	|	И РасходыТовара.Дата <= &ДатаОкончания
	|	И РасходыТовара.Проведен = ИСТИНА";
	// КонецЕсли;

	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Объект.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Объект.ДатаОкончания));

	РезультатЗапроса = Запрос.Выполнить();

	Если НЕ РезультатЗапроса.Пустой() Тогда
		Объект.СозданныеДокументы.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;

	ТаблицаЗагружена = НЕ Объект.СозданныеДокументы.Количество() = 0;

КонецПроцедуры // ОбновитьСписокДокументов

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)

	Объект.ДатаНачала 	 = Объект.Период.ДатаНачала;
	Объект.ДатаОкончания = Объект.Период.ДатаОкончания;
	НужноОбновитьСписокДокументов();

КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьСписок(Команда)

	ДиалогФильтр	 = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Файл выгрузки") + " (*.*)|*.*";
	ДиалогРасширение = "*";
	ДиалогДляВыбораФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогДляВыбораФайла.Заголовок				= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите файл для экспорта") + ":";
	ДиалогДляВыбораФайла.ПолноеИмяФайла			= АдресВыгрузки; // АДРЕС
	ДиалогДляВыбораФайла.Фильтр					= ДиалогФильтр;
	ДиалогДляВыбораФайла.Расширение				= ДиалогРасширение;
	ДиалогДляВыбораФайла.МножественныйВыбор		= Ложь;
	ДиалогДляВыбораФайла.ПредварительныйПросмотр= Ложь;
	ДиалогДляВыбораФайла.ИндексФильтра			= 0;
	ДиалогДляВыбораФайла.ПроверятьСуществованиеФайла = ЛОЖЬ;

	Если ДиалогДляВыбораФайла.Выбрать() Тогда
		АдресВыгрузки = ДиалогДляВыбораФайла.ПолноеИмяФайла;
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет Выгрузка данных.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
		ВыгрузитьЕжедневныеДанныеОРозничнойРеализацииЗаПериодВБухгалтерияПредприятия2НаСервере();
		ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выгрузил данные для БП2 в файл") + ": " + АдресВыгрузки, 2);
	КонецЕсли;

	Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
		ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);
	КонецЕсли;

	РеализацияДляБП = Параметры.РеализацияДляБП;
	ОбновитьСписокДокументов();
	ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.СозданныеДокументыВКоличестве, , ИСТИНА);

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	СнятьВсеНаСервере();
КонецПроцедуры

&НаСервере
Процедура СнятьВсеНаСервере()

	Для Каждого СтрокаДокумент Из Объект.СозданныеДокументы Цикл
		СтрокаДокумент.Подходящий = ЛОЖЬ;
	КонецЦикла;

КонецПроцедуры
