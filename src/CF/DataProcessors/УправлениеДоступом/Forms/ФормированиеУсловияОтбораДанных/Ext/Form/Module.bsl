// sza140601-0457  
// sza140507-2219  
&НаКлиенте
Процедура ВидыУсловийДляОтбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыбранныйКодУсловия = ВидыУсловийДляОтбора[ВыбраннаяСтрока].Значение;
	Если НЕ ПустаяСтрока(ВыбранныйКодУсловия) Тогда
		ВыбранноеУсловиеОтбора = СокрЛП(ВидыУсловийДляОтбора[ВыбраннаяСтрока].Представление);
		
		Если ВыбранныйКодУсловия = "0"
			ИЛИ ВыбранныйКодУсловия = "1" Тогда
			
			ЗакрытьПоВыбору();
			
		Иначе
			Если ВыбранныйКодУсловия = "В"
				ИЛИ ВыбранныйКодУсловия = "НВ"
				ИЛИ ВыбранныйКодУсловия = "С-"
				ИЛИ ВыбранныйКодУсловия = "СИ" Тогда
				
				Элементы.ЗначениеУсловия.Видимость = ЛОЖЬ;
				Элементы.СписокЗначенийУсловия.Видимость = ИСТИНА;
			Иначе
				Элементы.ЗначениеУсловия.Видимость = ИСТИНА;
				Элементы.СписокЗначенийУсловия.Видимость = ЛОЖЬ;
				
			КонецЕсли;
			
			УстановитьТипЗначенияУсловия();
			
			ТекущаяСтраница = ТекущаяСтраница + 1;
			ОбновитьВидимостьСтраниц();
			СтандартнаяОбработка = ЛОЖЬ;	
			
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	Если ЗначениеЗаполнено(ЗначениеУсловия)
		ИЛИ НЕ СписокЗначенийУсловия.Количество() = 0 Тогда		
		
		ЗакрытьПоВыбору();
	Иначе
		Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Значение условия не указано!"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьПоВыбору()
	
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("ВыбранныйОбъект", ВыбранныйОбъект);
	СтруктураОтвета.Вставить("ВыбранныйТипОбъекта", Объ + ВыбранныйТипОбъекта);
	СтруктураОтвета.Вставить("ВыбранныйТипРеквизита", ВыбранныйТипРеквизита);
	СтруктураОтвета.Вставить("ВыбранныйРеквизитОбъекта", ВыбранныйРеквизитОбъекта);
	СтруктураОтвета.Вставить("ВыбранноеУсловиеОтбора", ВыбранноеУсловиеОтбора);
	СтруктураОтвета.Вставить("ВыбранныйКодУсловия", ВыбранныйКодУсловия);
	СтруктураОтвета.Вставить("ЗначениеУсловия", ?(ЗначениеЗаполнено(ЗначениеУсловия), ЗначениеУсловия, СписокЗначенийУсловия));
	
	Закрыть(СтруктураОтвета);
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Если ТекущаяСтраница > 1 Тогда
		ТекущаяСтраница = ТекущаяСтраница - 1;
		ОбновитьВидимостьСтраниц();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьВидимостьСтраниц()
	
	Если ТекущаяСтраница = 1 Тогда
		Элементы.УкажитеОбъектДляУсловия.Видимость = ИСТИНА;
		Элементы.ВыберитеРеквизитОбъектаДляУсловия.Видимость = ЛОЖЬ;
		Элементы.УстановитеУсловиеОтбораДляРеквизита.Видимость = ЛОЖЬ;
		Элементы.ЗначениеУсловияОтбора.Видимость = ЛОЖЬ;
		
	ИначеЕсли ТекущаяСтраница = 2 Тогда
		Элементы.УкажитеОбъектДляУсловия.Видимость = ЛОЖЬ;
		Элементы.ВыберитеРеквизитОбъектаДляУсловия.Видимость = ИСТИНА;
		Элементы.УстановитеУсловиеОтбораДляРеквизита.Видимость = ЛОЖЬ;
		
	ИначеЕсли ТекущаяСтраница = 3 Тогда
		Элементы.ВыберитеРеквизитОбъектаДляУсловия.Видимость = ЛОЖЬ;
		Элементы.УстановитеУсловиеОтбораДляРеквизита.Видимость = ИСТИНА;
		Элементы.ЗначениеУсловияОтбора.Видимость = ЛОЖЬ;
		
	ИначеЕсли ТекущаяСтраница = 4 Тогда
		Элементы.УстановитеУсловиеОтбораДляРеквизита.Видимость = ЛОЖЬ;
		Элементы.ЗначениеУсловияОтбора.Видимость = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьРеквизиты()
	
	ЭтоРегистр = ЛОЖЬ;
	
	УстановленныйВыбранныйТипОбъекта = СтрЗаменить(ВыбранныйТипОбъекта, "ЗаказКлиента", "");
	УстановленныйВыбранныйТипОбъекта = СтрЗаменить(УстановленныйВыбранныйТипОбъекта, "ЗаказПоставщику", "");
	УстановленныйВыбранныйТипОбъекта = СтрЗаменить(УстановленныйВыбранныйТипОбъекта, "Зарплата", "");
	УстановленныйВыбранныйТипОбъекта = СтрЗаменить(УстановленныйВыбранныйТипОбъекта, "Взаимозачет", "");
	
	ОбъектМетаданных = Метаданные.Справочники.Найти(УстановленныйВыбранныйТипОбъекта);
	Если ОбъектМетаданных = Неопределено Тогда
		ОбъектМетаданных = Метаданные.Документы.Найти(УстановленныйВыбранныйТипОбъекта);
		Если ОбъектМетаданных = Неопределено Тогда
			
			ЭтоРегистр = ИСТИНА;			
			ОбъектМетаданных = Метаданные.РегистрыСведений.Найти(УстановленныйВыбранныйТипОбъекта);
			Если ОбъектМетаданных = Неопределено Тогда
				ОбъектМетаданных = Метаданные.РегистрыНакопления.Найти(УстановленныйВыбранныйТипОбъекта);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ОбъектМетаданных = Неопределено Тогда
		
		РеквизитыОбъекта.Очистить();
		
		Если ЭтоРегистр ТОгда
			
			Для Каждого РеквизитОбъекта Из ОбъектМетаданных.Измерения Цикл
				РеквизитыОбъекта.Добавить(РеквизитОбъекта.Имя, РеквизитОбъекта.Синоним, ЛОЖЬ);
			КонецЦикла;
			
			Для Каждого РеквизитОбъекта Из ОбъектМетаданных.Ресурсы Цикл
				РеквизитыОбъекта.Добавить(РеквизитОбъекта.Имя, РеквизитОбъекта.Синоним, ЛОЖЬ);
			КонецЦикла;
			
			Для Каждого РеквизитОбъекта Из ОбъектМетаданных.Реквизиты Цикл
				РеквизитыОбъекта.Добавить(РеквизитОбъекта.Имя, РеквизитОбъекта.Синоним, ЛОЖЬ);
			КонецЦикла;	
			
		Иначе
			Для Каждого РеквизитОбъекта Из ОбъектМетаданных.Реквизиты Цикл
				РеквизитыОбъекта.Добавить(РеквизитОбъекта.Имя, РеквизитОбъекта.Синоним, ЛОЖЬ);
			КонецЦикла;
			
			Для Каждого РеквизитОбъекта Из ОбъектМетаданных.СтандартныеРеквизиты Цикл
				РеквизитыОбъекта.Добавить(РеквизитОбъекта.Имя, РеквизитОбъекта.Синоним, ЛОЖЬ);
			КонецЦикла;
			
		КонецЕсли;
		
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьЖурналированиеСобытий") Тогда
			
			Если НЕ УстановленныйВыбранныйТипОбъекта = "Валюты"
				И НЕ УстановленныйВыбранныйТипОбъекта = "Пользователи"
				И НЕ УстановленныйВыбранныйТипОбъекта = "Языки"
				И НЕ УстановленныйВыбранныйТипОбъекта = "ДополнительныеРеквизиты"
				И НЕ УстановленныйВыбранныйТипОбъекта = "ЕдиницыИзмерения"
				И НЕ УстановленныйВыбранныйТипОбъекта = "ВидыСертификатов"
				И НЕ УстановленныйВыбранныйТипОбъекта = "ВидыДополнительнойИнформации"
				И НЕ УстановленныйВыбранныйТипОбъекта = "НаборЗначенийДополнительныхРеквизитов"
				И НЕ УстановленныйВыбранныйТипОбъекта = "ПозицииДляОказанияУслугЗаВремяНомера"
				И НЕ УстановленныйВыбранныйТипОбъекта = "РабочиеМеста"
				И НЕ УстановленныйВыбранныйТипОбъекта = "СерииНоменклатуры" 
				И НЕ УстановленныйВыбранныйТипОбъекта = "ЖурналСобытий"
				И НЕ УстановленныйВыбранныйТипОбъекта = "ЗначенияНаДругихЯзыках"
				И НЕ УстановленныйВыбранныйТипОбъекта = "НастройкиПользователей"
				И НЕ УстановленныйВыбранныйТипОбъекта = "СообщенияПользователюОтСистемы"
				И НЕ УстановленныйВыбранныйТипОбъекта = "ТекстыНаДругихЯзыках"
				И НЕ УстановленныйВыбранныйТипОбъекта = "ЗагрузкаПозицийНомеровПриОказанииУслугЗаВремя"
				И НЕ УстановленныйВыбранныйТипОбъекта = "СпособыДоставки"
				И НЕ УстановленныйВыбранныйТипОбъекта = "СостоянияУспешныхОбменовДанными"
				И НЕ УстановленныйВыбранныйТипОбъекта = "СостоянияОбменовДанными"
				И НЕ УстановленныйВыбранныйТипОбъекта = "ПричиныСторнированияДокументов"
				И НЕ УстановленныйВыбранныйТипОбъекта = "ПричиныОтменыЗаказовКлиентов"
				И НЕ УстановленныйВыбранныйТипОбъекта = "АссортиментДляРабочегоМестаКассира"
				И НЕ УстановленныйВыбранныйТипОбъекта = "Комплектации" Тогда
				
				РеквизитыОбъекта.Добавить("Ответственный", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ответственный"), ЛОЖЬ);
				РеквизитыОбъекта.Добавить("ДатаСоздания", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Дата создания"), ЛОЖЬ);
				РеквизитыОбъекта.Добавить("ДатаРедакции", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Дата редакции"), ЛОЖЬ);	
				
			КонецЕсли;
		КонецЕсли;
		// РеквизитыОбъекта.СортироватьПоПредставлению(); // не работает в 1С - порядок нарушается
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбъектыБазыДанныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыбранныйТипОбъекта = ОбъектыБазыДанных[ВыбраннаяСтрока].Значение;
	Если НЕ ПустаяСтрока(ВыбранныйТипОбъекта) Тогда
		ВыбранныйОбъект = СокрЛП(ОбъектыБазыДанных[ВыбраннаяСтрока].Представление);
		ТекущаяСтраница = ТекущаяСтраница + 1;
		ОбновитьВидимостьСтраниц();
		СтандартнаяОбработка = ЛОЖЬ;	
		ОбновитьРеквизиты();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьВидимостьСтраниц();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
	ТекущаяСтраница = 1;
	
	ОбъектыБазыДанных    = ОбщийМодульПовтор.СформироватьПереченьОбъектовБазыДанных();
	ВидыУсловийДляОтбора = ОбщийМодульПовтор.СформироватьВидыУсловийДляОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыОбъектаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыбранныйТипРеквизита = РеквизитыОбъекта[ВыбраннаяСтрока].Значение;
	Если НЕ ПустаяСтрока(ВыбранныйТипРеквизита) Тогда
		ВыбранныйРеквизитОбъекта = РеквизитыОбъекта[ВыбраннаяСтрока].Представление;
		ТекущаяСтраница = ТекущаяСтраница + 1;
		ОбновитьВидимостьСтраниц();
		СтандартнаяОбработка = ЛОЖЬ;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТипЗначенияУсловия()
	
	ОбъектМетаданных = Метаданные.Справочники.Найти(УстановленныйВыбранныйТипОбъекта);
	Объ = "Справочник.";
	Если ОбъектМетаданных = Неопределено Тогда
		ОбъектМетаданных = Метаданные.Документы.Найти(УстановленныйВыбранныйТипОбъекта);
		Объ = "Документ.";
		Если ОбъектМетаданных = Неопределено Тогда
			ОбъектМетаданных = Метаданные.РегистрыСведений.Найти(УстановленныйВыбранныйТипОбъекта);
			Если ОбъектМетаданных = Неопределено Тогда
				ОбъектМетаданных = Метаданные.РегистрыНакопления.Найти(УстановленныйВыбранныйТипОбъекта);
				Объ = "РегистрНакопления.";
			Иначе
				Объ = "РегистрСведений.";
			КонецЕсли;	
		КонецЕсли;			
	КонецЕсли;
	
	Если НЕ ОбъектМетаданных = Неопределено Тогда
		
			Если ВыбранныйТипРеквизита = "Ответственный" Тогда
				ЗначениеУсловия = ПараметрыСеанса.ТекущийПользователь;
			ИначеЕсли ВыбранныйТипРеквизита = "ДатаСоздания" Тогда
				ЗначениеУсловия = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
			ИначеЕсли ВыбранныйТипРеквизита = "ДатаРедакции" Тогда
				ЗначениеУсловия = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
			Иначе
				
		Если ЭтоРегистр Тогда
			
			Реквизит = ОбъектМетаданных.Измерения.Найти(ВыбранныйТипРеквизита);
			Если Реквизит = Неопределено Тогда
				Реквизит = ОбъектМетаданных.Ресурсы.Найти(ВыбранныйТипРеквизита);
				Если Реквизит = Неопределено Тогда
					Реквизит = ОбъектМетаданных.Реквизиты.Найти(ВыбранныйТипРеквизита);
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			Реквизит = ОбъектМетаданных.Реквизиты.Найти(ВыбранныйТипРеквизита);
			Если Реквизит = Неопределено Тогда
				Попытка
				Реквизит = ОбъектМетаданных.СтандартныеРеквизиты[ВыбранныйТипРеквизита];
			Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		
		КонецЕсли;
		
		Если НЕ Реквизит = Неопределено Тогда
			
			ТипРеквизита = Реквизит.Тип.Типы()[0];
			
			ВыбиратьТип = НЕ Реквизит.Тип.Типы().количество() = 1;
			Элементы.ЗначениеУсловия.ВыбиратьТип = ВыбиратьТип;
			Элементы.СписокЗначенийУсловияЗначение.ВыбиратьТип = ВыбиратьТип;
			
			Если ТипРеквизита = Тип("Строка") Тогда
				ЗначениеУсловия = "";
			ИначеЕсли ТипРеквизита = Тип("Число") Тогда
				ЗначениеУсловия = 1;
			ИначеЕсли ТипРеквизита = Тип("Булево") Тогда
				ЗначениеУсловия = ЛОЖЬ;
			ИначеЕсли ТипРеквизита = Тип("Дата") Тогда
				ЗначениеУсловия = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
			Иначе
				НайденыМета = Метаданные.НайтиПоТипу(ТипРеквизита);
				Если НЕ НайденыМета = Неопределено Тогда 			
					РеквизитЭлементаТип = СтрЗаменить(НайденыМета.ПолноеИмя(), ".", "Ссылка.");									
					ЗначениеУсловия = ПредопределенноеЗначение(НайденыМета.ПолноеИмя() + ".ПустаяСсылка");
				КонецЕсли;				
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры 



