// sza141106-1317 : доступ к настройкам отчетов
// sza140508-1214  
// sza140417-2115  
&НаКлиенте
Процедура ДатьПолныеПрава(Команда)
	
	ДатьПолныеПраваНаСервере();
	ЗаписатьДанныеПользователю();
	
КонецПроцедуры

&НаСервере
Процедура ДатьПолныеПраваНаСервере()
	
	ПолныйДоступ = Перечисления.УровниДоступа.ПолныйДоступ;
	Для Каждого СтрокаПрав Из Объект.Доступ Цикл
		СтрокаПрав.УровеньДоступа = ПолныйДоступ;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьПрава()
	
	ТаблицаОбъектовДоступа = ОбщийМодульПовтор.ПолучитьТаблицуОбъектовДоступа();
	
	Для Каждого СтрокаПрав Из ТаблицаОбъектовДоступа Цикл
		
		ПараметрыОтбора = Новый Структура("КодПрава", СтрокаПрав.КодПрава);
		НайденаСтрока = Объект.Доступ.НайтиСтроки(ПараметрыОтбора);
		
		Если НайденаСтрока.количество() = 0 Тогда
			
			НоваяСтрокаПрав = Объект.Доступ.Добавить();
			НоваяСтрокаПрав.КодПрава 		= СтрокаПрав.КодПрава;
			НоваяСтрокаПрав.ОбъектДоступа 	= СтрокаПрав.ОбъектДоступа;
			НоваяСтрокаПрав.УровеньДоступа	= СтрокаПрав.УровеньДоступаПоУмолчанию;
			
			Если НоваяСтрокаПрав.КодПрава = "000100" 
				И ДругихАдминовНет() Тогда
				
				НоваяСтрокаПрав.УровеньДоступа = Перечисления.УровниДоступа.ПолныйДоступ;
			КонецЕсли;
			
		Иначе
			НайденаСтрока[0].ОбъектДоступа = СтрокаПрав.ОбъектДоступа;
			
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступПриИзменении(Элемент)
	ЗаписатьДанныеПользователю();
КонецПроцедуры

&НаКлиенте
Процедура ДоступУровеньДоступаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Доступ.ТекущиеДанные;
	Если ТекущиеДанные.КодПрава = "000100"
		И ДругихАдминовНет()
		И НЕ ТекущиеДанные.УровеньДоступа = ПредопределенноеЗначение("Перечисление.УровниДоступа.ПолныйДоступ") Тогда
		
		ТекущиеДанные.УровеньДоступа = ПредопределенноеЗначение("Перечисление.УровниДоступа.ПолныйДоступ");
		Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Должен быть хоть один администратор доступа!"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция   ДругихАдминовНет()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПользователиДоступ.Ссылка.Ссылка
	|ИЗ Справочник.Пользователи.Доступ КАК ПользователиДоступ
	|ГДЕ ПользователиДоступ.КодПрава = &КодПрава
	|	И ПользователиДоступ.УровеньДоступа = &УровеньДоступа
	|	И ПользователиДоступ.Ссылка <> &Пользователь";
	
	Запрос.УстановитьПараметр("КодПрава", "000100");
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("УровеньДоступа", Перечисления.УровниДоступа.ПолныйДоступ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Пустой();
	
КонецФункции // ДругихАдминовНет()

&НаСервере
Процедура ЗаписатьДанныеПользователю(Знач ЗаписьОтбора = ЛОЖЬ)
	
	Если ЗначениеЗаполнено(Пользователь) Тогда
		ПользовательОбъект = Пользователь.Ссылка.ПолучитьОбъект();
		
		Если ЗаписьОтбора Тогда
			ПользовательОбъект.ПринудительныйОтборДанных.Очистить();
			
			Для Каждого СтрокаДоступа Из ПринудительныйОтборДанных Цикл
				
				НоваяСтрокаДоступа = ПользовательОбъект.ПринудительныйОтборДанных.Добавить();
				НоваяСтрокаДоступа.ОтборИспользуется = СтрокаДоступа.ОтборИспользуется;
				НоваяСтрокаДоступа.ОбластьОтбора 	 = СтрокаДоступа.ОбластьОтбора;
				НоваяСтрокаДоступа.РеквизитОбъекта   = СтрокаДоступа.РеквизитОбъекта;
				НоваяСтрокаДоступа.УсловиеОтбора 	 = СтрокаДоступа.УсловиеОтбора;
				НоваяСтрокаДоступа.ЗначениеУсловия   = СтрокаДоступа.ЗначениеУсловия;
				НоваяСтрокаДоступа.УсловиеДляОтбора  = СтрокаДоступа.УсловиеДляОтбора;
				НоваяСтрокаДоступа.ИмяОбластиОтбора  = СтрокаДоступа.ИмяОбластиОтбора;
				НоваяСтрокаДоступа.ГруппаИли		 = СтрокаДоступа.ГруппаИли;
				НоваяСтрокаДоступа.ОСтроке 			 = СтрокаДоступа.ОСтроке;
				
			КонецЦикла;	
			
		Иначе
			ПользовательОбъект.Доступ.Очистить();
			
			Для Каждого СтрокаДоступа Из Объект.Доступ Цикл
				
				НоваяСтрокаДоступа = ПользовательОбъект.Доступ.Добавить();
				НоваяСтрокаДоступа.КодПрава 		= СтрокаДоступа.КодПрава;
				НоваяСтрокаДоступа.ОбъектДоступа 	= СтрокаДоступа.ОбъектДоступа;
				НоваяСтрокаДоступа.УровеньДоступа 	= СтрокаДоступа.УровеньДоступа;
				НоваяСтрокаДоступа.УсловиеДоступа 	= СтрокаДоступа.УсловиеДоступа;
				НоваяСтрокаДоступа.ОСтроке 			= СтрокаДоступа.ОСтроке;
				
			КонецЦикла;	
		КонецЕсли;
		
		ПользовательОбъект.СкрытьНастройкиОтчетов.Очистить();
		Для Каждого СтрокаДоступа Из Объект.СокрытиеНастроекОтчетов Цикл
			
			НоваяСтрокаДоступа = ПользовательОбъект.СкрытьНастройкиОтчетов.Добавить();
			НоваяСтрокаДоступа.НаименованиеОтчета = СтрокаДоступа.НаименованиеОтчета;
			НоваяСтрокаДоступа.СкрытьНастройки  = СтрокаДоступа.СкрытьНастройки;
			НоваяСтрокаДоступа.ОСтроке 			= СтрокаДоступа.ОСтроке;
			
		КонецЦикла;	
		
		ПользовательОбъект.Записать();
		
		ОбновитьПовторноИспользуемыеЗначения();
		
	Иначе
		Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Пользователь не указан!"));		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбнулитьПрава(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ОбнулитьПраваЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы готовы обнулить права к правам по-умолчанию?"), РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбнулитьПраваЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОбнулитьПраваНаСервере();
		ЗаписатьДанныеПользователю();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбнулитьПраваНаСервере()
	
	ПрочитатьПраваПользователя(ИСТИНА);
	ЗаписатьДанныеПользователю();
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	ПрочитатьПраваПользователя();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПринудительныйОтборДанныхПриИзменении(Элемент)
	ЗаписатьДанныеПользователю(ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	Если ЗначениеЗаполнено(Пользователь) Тогда
		ПрочитатьПраваПользователя();
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ПослеИзображенияОкнаФормы", 0.3, ИСТИНА);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзображенияОкнаФормы() // Когда окно уже нарисовано пользователю
	ЭтаФорма.Элементы.ФормаЗакрыть.Видимость = НЕ ЭтаФорма.Окно = Неопределено;	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000100", ЭтаФорма, Отказ, Объект);
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		СистемаУправленияДоступомЗадействована = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСистемуУправленияДоступом");
		
		Элементы.СистемаУправленияДоступомНеЗадействована.Видимость = НЕ СистемаУправленияДоступомЗадействована;
		ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьПраваПользователя(Знач БезЧтенияТекущихПрав = ЛОЖЬ)
	
	Объект.Доступ.Очистить();
	Объект.СокрытиеНастроекОтчетов.Очистить();
	
	Если ЗначениеЗаполнено(Пользователь) Тогда
		
		Для Каждого СтрокаОтбора Из Пользователь.ПринудительныйОтборДанных Цикл
			
			СтрокаДоступа = ПринудительныйОтборДанных.Добавить();
			СтрокаДоступа.ОтборИспользуется	= СтрокаОтбора.ОтборИспользуется;
			СтрокаДоступа.ОбластьОтбора 	= СтрокаОтбора.ОбластьОтбора;
			СтрокаДоступа.РеквизитОбъекта 	= СтрокаОтбора.РеквизитОбъекта;
			СтрокаДоступа.УсловиеОтбора 	= СтрокаОтбора.УсловиеОтбора;
			СтрокаДоступа.ЗначениеУсловия 	= СтрокаОтбора.ЗначениеУсловия;
			СтрокаДоступа.УсловиеДляОтбора 	= СтрокаОтбора.УсловиеДляОтбора;
			СтрокаДоступа.ИмяОбластиОтбора 	= СтрокаОтбора.ИмяОбластиОтбора;
			СтрокаДоступа.ГруппаИли 		= СтрокаОтбора.ГруппаИли;
			СтрокаДоступа.ОСтроке 		 	= СтрокаОтбора.ОСтроке;
			
		КонецЦикла;
		
		Если НЕ БезЧтенияТекущихПрав Тогда			
			
			Для Каждого СтрокаПрав Из Пользователь.Доступ Цикл				
				
				СтрокаДоступа = Объект.Доступ.Добавить();
				СтрокаДоступа.КодПрава 		 = СтрокаПрав.КодПрава;
				СтрокаДоступа.ОбъектДоступа  = СтрокаПрав.ОбъектДоступа;
				СтрокаДоступа.УровеньДоступа = СтрокаПрав.УровеньДоступа;
				СтрокаДоступа.УсловиеДоступа = СтрокаПрав.УсловиеДоступа;
				СтрокаДоступа.ОСтроке 		 = СтрокаПрав.ОСтроке;
				
			КонецЦикла;	
		КонецЕсли;
		
		Для Каждого ПравилоДляНастройкиОтчетов Из Пользователь.СкрытьНастройкиОтчетов Цикл
			ЗаполнитьЗначенияСвойств(Объект.СокрытиеНастроекОтчетов.Добавить(), ПравилоДляНастройкиОтчетов);
		КонецЦикла;
		ПроверитьСписокОтчетов();
		
	КонецЕсли;
	
	ДополнитьПрава();
	Объект.Доступ.Сортировать("КодПрава");
	Объект.СокрытиеНастроекОтчетов.Сортировать("ВидимоеНаименованиеОтчета");
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьУсловиеВручную(Команда)
	Элементы.УсловияДляРучнойПравки.Видимость = НЕ Элементы.УсловияДляРучнойПравки.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура СформироватьНовоеПравилоОтбора(Команда)
	
	ФормированиеУсловияОтбораДанных = ПолучитьФорму("Обработка.УправлениеДоступом.Форма.ФормированиеУсловияОтбораДанных");
	СтруктураУсловия = ФормированиеУсловияОтбораДанных.ОткрытьМодально();
	Если НЕ СтруктураУсловия = Неопределено Тогда
		
		СтрокаОтбора = ПринудительныйОтборДанных.Добавить();
		СтрокаОтбора.ОтборИспользуется = ИСТИНА;
		СтрокаОтбора.ОбластьОтбора     = СтруктураУсловия.ВыбранныйОбъект;
		СтрокаОтбора.ИмяОбластиОтбора  = СтруктураУсловия.ВыбранныйТипОбъекта;
		СтрокаОтбора.УсловиеДляОтбора  = СтруктураУсловия.ВыбранныйРеквизитОбъекта + " " + СтруктураУсловия.ВыбранноеУсловиеОтбора + " " + СокрЛП(СтруктураУсловия.ЗначениеУсловия);
		СтрокаОтбора.РеквизитОбъекта   = СтруктураУсловия.ВыбранныйТипРеквизита;
		СтрокаОтбора.УсловиеОтбора 	   = СтруктураУсловия.ВыбранныйКодУсловия;
		СтрокаОтбора.ЗначениеУсловия   = СтруктураУсловия.ЗначениеУсловия;
		
		ЗаписатьДанныеПользователю(ИСТИНА);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьСписокОтчетов()
	
	СписокИменОтчетов = Новый Массив;
	
	Для Каждого ПравилоДляНастройкиОтчетов Из Объект.СокрытиеНастроекОтчетов Цикл 
		ОтчетМетаданных = Метаданные.Отчеты.Найти(ПравилоДляНастройкиОтчетов.НаименованиеОтчета);
		Если НЕ ОтчетМетаданных = Неопределено Тогда
			ПравилоДляНастройкиОтчетов.ВидимоеНаименованиеОтчета = ОтчетМетаданных.Синоним;
			СписокИменОтчетов.Добавить(ОтчетМетаданных.Имя);
		Иначе
			ПравилоДляНастройкиОтчетов.ВидимоеНаименованиеОтчета = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не используется");
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ОтчетМетаданных Из Метаданные.Отчеты Цикл
		Если СписокИменОтчетов.Найти(ОтчетМетаданных.Имя) = Неопределено тогда
			СписокИменОтчетов.Добавить(ОтчетМетаданных.Имя);
			СтрокаПравила = Объект.СокрытиеНастроекОтчетов.Добавить();
			СтрокаПравила.НаименованиеОтчета = ОтчетМетаданных.Имя;
			СтрокаПравила.ВидимоеНаименованиеОтчета = ОтчетМетаданных.Синоним;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПереченьОтчетовНаСервере()
	
	Для Каждого ПравилоДляНастройкиОтчетов Из Пользователь.СкрытьНастройкиОтчетов Цикл
		ЗаполнитьЗначенияСвойств(Объект.СокрытиеНастроекОтчетов.Добавить(), ПравилоДляНастройкиОтчетов);
	КонецЦикла;
	ПроверитьСписокОтчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПереченьОтчетов(Команда)
	ОбновитьПереченьОтчетовНаСервере();
КонецПроцедуры

&НаСервере
Процедура СкрытьВсеНастройкиВсехОтчетовНаСервере()
	
	Для Каждого ПравилоДляНастройкиОтчетов Из Объект.СокрытиеНастроекОтчетов Цикл 
		ПравилоДляНастройкиОтчетов.СкрытьНастройки = ИСТИНА;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьВсеНастройкиВсехОтчетов(Команда)
	
	СкрытьВсеНастройкиВсехОтчетовНаСервере();
	ЗаписатьДанныеПользователю();
	
КонецПроцедуры

&НаСервере
Процедура РазрешитьНастройкиВсехОтчетовНаСервере()
	
	Для Каждого ПравилоДляНастройкиОтчетов Из Объект.СокрытиеНастроекОтчетов Цикл 
		ПравилоДляНастройкиОтчетов.СкрытьНастройки = ЛОЖЬ;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьНастройкиВсехОтчетов(Команда)
	
	РазрешитьНастройкиВсехОтчетовНаСервере();
	ЗаписатьДанныеПользователю();
	
КонецПроцедуры

&НаКлиенте
Процедура СокрытиеНастроекОтчетовПриИзменении(Элемент)
	ЗаписатьДанныеПользователю();
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьТекущегоПользователя(Команда)
	
	Пользователь = ТекущийПользователь;
	ПрочитатьПраваПользователя();

КонецПроцедуры

&НаКлиенте
Процедура СкопироватьДругомуПользователю(Команда)
	
	НовыйПользователь = ПредопределенноеЗначение("Справочник.Пользователи.ПользовательПоУмолчанию");
	ПоказатьВводЗначения(Новый ОписаниеОповещения("СкопироватьДругомуПользователюЗавершение", ЭтаФорма, Новый Структура("НовыйПользователь", НовыйПользователь)), НовыйПользователь, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите пользователя, к которому скопируются условиядоступа"), Тип("СправочникСсылка.Пользователи"));
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьДругомуПользователюЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	НовыйПользователь = ?(Значение = Неопределено, ДополнительныеПараметры.НовыйПользователь, Значение);
	
	Если НЕ НовыйПользователь = Неопределено Тогда
		Пользователь = НовыйПользователь;
		ЗаписатьДанныеПользователю();
	КонецЕсли;
	
КонецПроцедуры

