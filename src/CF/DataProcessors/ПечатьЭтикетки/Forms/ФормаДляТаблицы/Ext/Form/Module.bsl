//sza141124-2315 ФорматЭтикетки
//sza141119-0314 доп
//sza140903-1140 
//sza140506-0926  
//sza130913-1205 : 
&НаКлиенте
Процедура ВидЦенПриИзменении(Элемент)
	
	сменитьценутаблицы();
	ОбновитьПримеры();
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьЭтикеткиДляВсехСтрокТаблицы(Команда)
	
	Если ОбщееКоличество() <= 30 
		ИЛИ Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что хотите распечатать такое число") + " (" + Объект.Количество + ")?", режимдиалогавопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		
		ПараметрыФормыПечати = Новый Структура;
		ПараметрыФормыПечати.Вставить("НаименованиеДокумента", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Этикетки"));
		ПараметрыФормыПечати.Вставить("НеПечататьНичегоДополнительно", ИСТИНА);
		ФормаПечати = получитьформу("ОбщаяФорма.ФормаПечати", ПараметрыФормыПечати);
		
		ЕстьЧтоПечататьВФорме = НапечататьЭтикеткиДляВсехСтрокТаблицыНаСервере(ФормаПечати.Результат);
		
		Если ЕстьЧтоПечататьВФорме Тогда
			ФормаПечати.Заголовок = ПараметрыФормыПечати.НаименованиеДокумента;
			ФормаПечати.Открыть();
		Иначе
			ФормаПечати.Результат.Напечатать();//не принтер
			ФормаПечати = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция   НапечататьЭтикеткиДляВсехСтрокТаблицыНаСервере(табдокобщ)
	
	ЕстьЧтоПечататьВФорме = ЛОЖЬ;
	
	ЧислоЭтикетокНаЛистеПоГоризонтали = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ЧислоЭтикетокНаЛистеПоГоризонтали");
	Если ЧислоЭтикетокНаЛистеПоГоризонтали = 0 Тогда
		ЧислоЭтикетокНаЛистеПоГоризонтали = 1;
	КонецЕсли;
	
	ЧислоЭтикетокНаЛистеПоВертикали = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ЧислоЭтикетокНаЛистеПоВертикали");
	Если ЧислоЭтикетокНаЛистеПоВертикали = 0 Тогда
		ЧислоЭтикетокНаЛистеПоВертикали = 1;
	КонецЕсли;
	
	ТекущияПозицияПоГоризонтали = 1;
	ТекущияПозицияПоВертикали 	= 1;
	ЧислоЭтикетокНаСтранице = ЧислоЭтикетокНаЛистеПоВертикали * ЧислоЭтикетокНаЛистеПоГоризонтали;
	Строка = Новый ТабличныйДокумент;
	Строка.ИмяПараметровПечати = "СТРОКА";
	Строка.КлючПараметровПечати = Строка.ИмяПараметровПечати;
	
	Для Каждого СтрокаТовара ИЗ Объект.Товары цикл
		
		ШтрихКод 		  = ПолучитьШтрихКодТовара(СтрокаТовара.номенклатура, СтрокаТовара.цена, СтрокаТовара.СерияНоменклатуры, СтрокаТовара.ЕдиницаИзмерения);
		ТекстСШтрихКодом  = ПолучитьТекстСШтрихКодомТовара(СтрокаТовара.номенклатура, СтрокаТовара.цена, ШтрихКод, СтрокаТовара.СерияНоменклатуры, СтрокаТовара.ЕдиницаИзмерения);
		Объект.ТекстЗаголовка = ПолучитьТекстЗаголовка(СтрокаТовара.номенклатура, СтрокаТовара.цена, ШтрихКод, СтрокаТовара.СерияНоменклатуры);
		ДополнительнаяСтрокаЭтикетки = ПолучитьДополнительнуюСтрокуЭтикетки(СтрокаТовара.номенклатура, СтрокаТовара.цена, ШтрихКод, СтрокаТовара.СерияНоменклатуры);
		
		//!!сюда!
		Табдок = ОбщийМодульСерверНапечататьЭтикетку(ШтрихКод, ТекстСШтрихКодом);
		
		СчетчикЭтикеток = 1;
		
		Если НЕ Табдок = Неопределено Тогда			
			
			Пока СчетчикЭтикеток <= СтрокаТовара.Количество Цикл
				Если НЕ ЗначениеЗаполнено(ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("НаименованиеПринтераШтрихКодов")) Тогда
					ЕстьЧтоПечататьВФорме = ИСТИНА;	
				КонецЕсли;
				
				Строка.Присоединить(Табдок);
				
				ТекущияПозицияПоГоризонтали = ТекущияПозицияПоГоризонтали + 1;
				Если ТекущияПозицияПоГоризонтали > ЧислоЭтикетокНаЛистеПоГоризонтали Тогда
					ТекущияПозицияПоГоризонтали = 1;
					ТекущияПозицияПоВертикали = ТекущияПозицияПоВертикали + 1;
					ТабдокОбщ.Вывести(Строка);
					Строка = Новый ТабличныйДокумент;
					Строка.ИмяПараметровПечати = "СТРОКА";
					Строка.КлючПараметровПечати = Строка.ИмяПараметровПечати;
				КонецЕсли;
				
				Если ТекущияПозицияПоВертикали > ЧислоЭтикетокНаЛистеПоВертикали Тогда
					ТекущияПозицияПоВертикали = 1;
					ТабдокОбщ.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;	
				
				СчетчикЭтикеток = СчетчикЭтикеток + 1;
			КонецЦикла;
			
		КонецЕсли;		
	КонецЦикла;
	
	Если ТекущияПозицияПоГоризонтали > 0
		И ТекущияПозицияПоГоризонтали < ЧислоЭтикетокНаЛистеПоГоризонтали Тогда
		
		ТабдокОбщ.Вывести(Строка);						
	КонецЕсли;
	
	ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напечатал этикетку для таблицы. "), 2);
	
	Возврат ЕстьЧтоПечататьВФорме;
	
КонецФункции

&НаСервере
Процедура ОбновитьПримеры()
	
	ОбновитьТекстДополнительнойСтроки();
	
	ШтрихКод = "";
	ПримерШтрихКодаДляПервойСтрокиТаблицы = "";
	ПримерТекстаСШтрихКодом = "";
	
	Если Объект.Товары.Количество() > 0
		И ЗначениеЗаполнено(Объект.Товары[0].Номенклатура) Тогда		
		
		Если ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
			Попытка 
				Номенклатура = Объект.Товары[0].Номенклатура;
				Цена = Объект.Товары[0].Цена;
				Если цена = 0 тогда
					Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, Объект.ВидЦен, Дата, ИСТИНА, , , , , , , Объект.Товары[0].ЕдиницаИзмерения);
					Если цена = 0 тогда
						Цена = Объект.Товары[0].Цена;	
						Если цена = 0 тогда
							Цена = Номенклатура.Цена;	
						КонецЕсли;
					КонецЕсли;	
				КонецЕсли;
				
				ПримерШтрихКодаДляПервойСтрокиТаблицы = ОбщийМодульТоварСервер.УстановитьШтрихКодНоменклатурыПоФормуле(Объект.Товары[0].Номенклатура, Объект.ФормулаФормированияШтрихКода.Формула, Объект.ВидЦен, Дата, цена, Объект.Товары[0].СерияНоменклатуры);
				ШтрихКод = ПримерШтрихКодаДляПервойСтрокиТаблицы;
				
			Исключение				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ОписаниеОшибки();
				Сообщение.Поле 	= "ФормулаФормированияШтрихКода";
				Сообщение.УстановитьДанные(Объект);
				Сообщение.Сообщить();
				
			КонецПопытки;
		Иначе
			ШтрихКод = Объект.Товары[0].Номенклатура.ОсновнойШтрихКод;
			ПримерШтрихКодаДляПервойСтрокиТаблицы = ШтрихКод;
		КонецЕсли;		
		
	КонецЕсли;	
	
	Если Объект.Товары.Количество() > 0
		И ЗначениеЗаполнено(Объект.Товары[0].Номенклатура) Тогда		
		
		Номенклатура 		= Объект.Товары[0].Номенклатура;
		СерияНоменклатуры 	= Объект.Товары[0].СерияНоменклатуры;
		Цена 				= Объект.Товары[0].Цена;
		Валюта = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
		Валюта2 = Валюта;
		
		Если цена = 0 Тогда
			Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, Объект.ВидЦен, Дата, ИСТИНА, , , , , , , Объект.Товары[0].ЕдиницаИзмеения);
			Если цена = 0 тогда
				Цена = Объект.Товары[0].Цена;	
				Если цена = 0 тогда
					Цена = Номенклатура.Цена;	
				КонецЕсли;
			КонецЕсли;         	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
			Валюта = Объект.ВидЦен.ВалютаЦены;
		КонецЕсли;
		
		Цена2   = 0;
		ВидЦен2 = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВторойВидЦенДляЭтикетки");
		Если ЗначениеЗаполнено(ВидЦен2) Тогда
			Цена2 = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, ВидЦен2, Дата, , , , , , , , Объект.Товары[0].ЕдиницаИзмерения);
			Валюта2 = ВидЦен2.ВалютаЦены;
		КонецЕсли;			
		
		Если ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
			Попытка 				
				Объект.Номенклатура 		= Номенклатура;
				Объект.НоменклатурнаяГруппа = Номенклатура.НоменклатурнаяГруппа;
				Объект.Производитель 		= Номенклатура.производитель; 				
				НоменклатурнаяГруппа 		= Объект.НоменклатурнаяГруппа;
				Производитель 				= Объект.Производитель;				
				
				Выполнить(" ПримерТекстаСШтрихКодом = """" + " + Объект.ОсновнаяФормулаТекстаЭтикетки.Формула + ";");
				
			Исключение 	
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ОписаниеОшибки();
				Сообщение.Поле 	= "ОсновнаяФормулаТекстаЭтикетки";
				Сообщение.УстановитьДанные(Объект);
				Сообщение.Сообщить();
				
			КонецПопытки;
		Иначе
			Если ЗначениеЗаполнено(ШтрихКод) Тогда
				ПримерТекстаСШтрихКодом = ШтрихКод;
			Иначе
				ПримерТекстаСШтрихКодом = СокрЛП(Номенклатура) + " " + формат(цена, "ЧЦ=10; ЧДЦ=2") + " " + ?(ЗначениеЗаполнено(Объект.ВидЦен), Объект.ВидЦен.ВалютаЦены, Справочники.Валюты.ОсновнаяВалюта);
			КонецЕсли;
			
		КонецЕсли;				
	КонецЕсли;	
	
КонецПроцедуры

&Насервере
Процедура ОбновитьТекстаЗаголовкаЭтикетки() 	
	
	Если ИспользуютсяФормулы 
		И ЗначениеЗаполнено(Объект.ФормулаТекстаЗаголовка) Тогда
		
		ТекстЗаголовка = "";
		
		Попытка 
			Если значениезаполнено(Объект.Номенклатура) Тогда
				Номенклатура = Объект.Номенклатура;
			Иначе
				Номенклатура = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(Объект.ШтрихКод, , ИСТИНА);	
			КонецЕсли;
			
			Валюта 	= ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
			Валюта2 = Валюта;
			Склад 	= Объект.Склад;
			ШтрихКод			 = Объект.ШтрихКод;			
			НоменклатурнаяГруппа = Объект.НоменклатурнаяГруппа;
			Производитель  		 = Объект.Производитель;
			Если ВестиУчетСерийНоменклатуры Тогда
				Серия = ?(ЗначениеЗаполнено(Объект.СерияСуществующейНоменклатуры), Объект.СерияСуществующейНоменклатуры.Наименование, Объект.СерияНоменклатуры);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Валюта = Объект.ВидЦен.ВалютаЦены;
			КонецЕсли;
			
			Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, Объект.ВидЦен, Дата, , , , , , , , Объект.ЕдиницаИзмерения);
			Если Цена = 0 Тогда
				Цена = Объект.Цена;
			КонецЕсли;
			
			Цена2   = 0;
			ВидЦен2 = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВторойВидЦенДляЭтикетки");
			Если ЗначениеЗаполнено(ВидЦен2) Тогда
				Цена2 = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, ВидЦен2, Дата, , , , , , , , Объект.ЕдиницаИзмерения);
				Валюта2 = ВидЦен2.ВалютаЦены;
			КонецЕсли;
			
			Выполнить(" ТекстЗаголовка = """"+" + Объект.ФормулаТекстаЗаголовка.Формула + ";");
			
			Если НЕ Объект.ТекстЗаголовка = ТекстЗаголовка Тогда
				Объект.ТекстЗаголовка = ТекстЗаголовка;
			КонецЕсли;
			
		Исключение 	
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ОписаниеОшибки();
			Сообщение.Поле 	= "ФормулаТекстаЗаголовка";
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			
		КонецПопытки;
		
	КонецЕсли;
	
конецпроцедуры

&НаСервере
Функция   ОбщееКоличество() 
	
	Объект.Количество = Объект.Товары.Итог("Количество");
	Возврат Объект.Количество;
	
КонецФункции //ОбщееКоличество

&НаСервере
Функция   ОбщийМодульСерверНапечататьЭтикетку(Знач ШтрихКод, Знач ТекстСШтрихКодом, Знач Количество = 1, Знач Табдок = Неопределено)
	
	Если Табдок = Неопределено Тогда
		Табдок = Новый ТабличныйДокумент;
		Табдок.ИмяПараметровПечати = "ЭТИК" + СокрЛП(ИмяКомпьютера());
		ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	КонецЕсли;
	
	СтруктураПечати = Новый Структура;
	СтруктураПечати.Вставить("ШтрихКод", ШтрихКод);
	СтруктураПечати.Вставить("ТекстСШтрихКодом", ТекстСШтрихКодом);
	СтруктураПечати.Вставить("Количество", Количество);
	СтруктураПечати.Вставить("ТекстЗаголовка", Объект.ТекстЗаголовка);
	СтруктураПечати.Вставить("ДополнительнаяСтрокаЭтикетки", ДополнительнаяСтрокаЭтикетки);
	
	ОбщийМодульТоварСервер.НапечататьЭтикетку(СтруктураПечати, ТабДок, ЛОЖЬ, ИСТИНА);
	
	Возврат ТабДок;
	
КонецФункции

&НаКлиенте
Процедура ОсновнаяФормулаТекстаЭтикеткиПриИзменении(Элемент)
	ОсновнаяФормулаТекстаЭтикеткиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОсновнаяФормулаТекстаЭтикеткиПриИзмененииНаСервере()
	ОбновитьПримеры();
КонецПроцедуры

&Насервере
Функция   ПолучитьТекстЗаголовка(Знач Номенклатура, Знач Цена, Знач ШтрихКод, Знач СерияНоменклатуры)
	
	ТекстЗаголовка = Объект.ТекстЗаголовка;
	
	Если ИспользуютсяФормулы
		И ЗначениеЗаполнено(Объект.ФормулаТекстаЗаголовка) Тогда
		
		Попытка
			Валюта = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
			Валюта2 = Валюта;
			НоменклатурнаяГруппа 	= Номенклатура.НоменклатурнаяГруппа;
			Производитель  			= Номенклатура.Производитель;
			СерияНоменклатуры 		= СерияНоменклатуры;
			Склад = Объект.Склад;
			
			Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Валюта = Объект.ВидЦен.ВалютаЦены;
			КонецЕсли;
			
			Цена2   = 0;
			ВидЦен2 = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВторойВидЦенДляЭтикетки");
			Если ЗначениеЗаполнено(ВидЦен2) Тогда
				Цена2 = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, ВидЦен2, Дата, ЛОЖЬ);
				Валюта2 = ВидЦен2.ВалютаЦены;
			КонецЕсли;
			
			Выполнить(" ТекстЗаголовка = """"+" + Объект.ФормулаТекстаЗаголовка.Формула + ";");
			
		Исключение 	
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ОписаниеОшибки();
			Сообщение.Поле 	= "ФормулаТекстаЗаголовка";
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			
		КонецПопытки;
		
	КонецЕсли;
	
	возврат ТекстЗаголовка;
	
конецФункции

&Насервере
Функция   ПолучитьДополнительнуюСтрокуЭтикетки(Знач Номенклатура, Знач Цена, Знач ШтрихКод, Знач СерияНоменклатуры)
	
	ТекстЗаголовка = ДополнительнаяСтрокаЭтикетки;
	
	Если ИспользуютсяФормулы
		И ЗначениеЗаполнено(ФормулаДополнительнойСтроки) Тогда
		
		Попытка
			Валюта = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
			Валюта2 = Валюта;
			НоменклатурнаяГруппа 	= Номенклатура.НоменклатурнаяГруппа;
			Производитель  			= Номенклатура.Производитель;
			СерияНоменклатуры 		= СерияНоменклатуры;
			Склад = Объект.Склад;
			
			Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Валюта = Объект.ВидЦен.ВалютаЦены;
			КонецЕсли;
			
			Цена2   = 0;
			ВидЦен2 = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВторойВидЦенДляЭтикетки");
			Если ЗначениеЗаполнено(ВидЦен2) Тогда
				Цена2 = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, ВидЦен2, Дата, ЛОЖЬ);
				Валюта2 = ВидЦен2.ВалютаЦены;
			КонецЕсли;
			
			Выполнить(" ТекстЗаголовка = """"+" + ФормулаДополнительнойСтроки.Формула + ";");
			
		Исключение 	
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ОписаниеОшибки();
			Сообщение.Поле 	= "ФормулаДополнительнойСтроки";
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			
		КонецПопытки;
		
	КонецЕсли;
	
	возврат ТекстЗаголовка;
	
конецФункции

&Насервере
Функция   ПолучитьТекстСШтрихКодомТовара(Знач Номенклатура, Знач Цена, Знач ШтрихКод, Знач СерияНоменклатуры, Знач ЕдиницаИзмерения)
	
	ТекстСШтрихКодом = "";
	
	Если ИспользуютсяФормулы
		И ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		
		Попытка
			Валюта = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
			Валюта2 = Валюта;
			НоменклатурнаяГруппа = Номенклатура.НоменклатурнаяГруппа;
			Производитель  		 = Номенклатура.Производитель;
			СерияНоменклатуры 	 = СерияНоменклатуры;
			
			Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Валюта = Объект.ВидЦен.ВалютаЦены;
			КонецЕсли;
			
			Цена2 = 0;
			ВидЦен2 = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВторойВидЦенДляЭтикетки");
			Если ЗначениеЗаполнено(ВидЦен2) Тогда
				Цена2 = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, ВидЦен2, Дата, , , , , , , , ЕдиницаИзмерения);
				Валюта2 = ВидЦен2.ВалютаЦены;
			КонецЕсли;
			
			Выполнить(" ТекстСШтрихКодом = """"+" + Объект.ОсновнаяФормулаТекстаЭтикетки.Формула + ";");
			
		Исключение 	
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ОписаниеОшибки();
			Сообщение.Поле 	= "ОсновнаяФормулаТекстаЭтикетки";
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			
		КонецПопытки;
		
	Иначе 		
		Если НЕ ПустаяСтрока(ШтрихКод) тогда
			ТекстСШтрихКодом = ШтрихКод;
		Иначе
			ТекстСШтрихКодом = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Номенклатура, , ЛОЖЬ) + " " + формат(Цена, "ЧЦ=12; ЧДЦ=2");
		КонецЕсли;
		
		Если ВестиУчетСерийНоменклатуры
			И ЗначениеЗаполнено(СерияНоменклатуры) Тогда
			
			ТекстСШтрихКодом = ТекстСШтрихКодом + " " + СерияНоменклатуры;
		КонецЕсли;
		
	КонецЕсли;
	
	возврат ТекстСШтрихКодом;
	
конецФункции

&НаСервере
Функция   ПолучитьШтрихКодТовара(Знач Номенклатура, Знач Цена, Знач СерияНоменклатуры, Знач ЕдиницаИзмерения)
	
	Объект.Номенклатура = Номенклатура;
	Объект.Цена = Цена;
	Объект.СерияСуществующейНоменклатуры = СерияНоменклатуры;
	
	ШтрихКод = "";
	Если ИспользуютсяФормулы
		И ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
		
		Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
			Объект.НоменклатурнаяГруппа = Объект.Номенклатура.НоменклатурнаяГруппа;
			Объект.Производитель 		= Объект.Номенклатура.Производитель;
			Объект.Наименование 		= Объект.Номенклатура.Наименование;
			Объект.СерияНоменклатуры	= СокрЛП(СерияНоменклатуры);
		КонецЕсли;
		
		ШтрихКод = "";
		
		Попытка 
			
			Если ЗначениеЗаполнено(Номенклатура.Производитель) 
				И ЗначениеЗаполнено(Номенклатура.Производитель.СвояФормулаШтрихКодаНоменклатуры) Тогда			
				
				ШтрихКод = ОбщийМодульТоварСервер.УстановитьШтрихКодНоменклатурыПоФормуле(Номенклатура, , Объект.ВидЦен, Дата, Объект.Цена, СерияНоменклатуры, ЕдиницаИзмерения);
				
			Иначе
				ШтрихКод = ОбщийМодульТоварСервер.УстановитьШтрихКодНоменклатурыПоФормуле(Номенклатура, Объект.ФормулаФормированияШтрихКода.Формула, Объект.ВидЦен, Дата, Объект.Цена, СерияНоменклатуры, ЕдиницаИзмерения);
			КонецЕсли;			
			
		Исключение 				
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ОписаниеОшибки();
			Сообщение.Поле 	= "ФормулаФормированияШтрихКода";
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			
		КонецПопытки;
		
	Иначеесли ВестиУчетСерийНоменклатуры
		И ЗначениеЗаполнено(СерияНоменклатуры) тогда
		
		ШтрихКод = ОбщийМодульТоварСервер.ПолучитьШтрихКодСерии(СерияНоменклатуры);
		Если ПустаяСтрока(ШтрихКод) Тогда
			ШтрихКод = Объект.номенклатура.ОсновнойШтрихКод;
		КонецЕсли;
		
	Иначеесли значениезаполнено(Объект.Номенклатура) Тогда
		ШтрихКод = Объект.номенклатура.ОсновнойШтрихКод;
		
	КонецЕсли;
	
	возврат ШтрихКод;
	
КонецФункции

&НаКлиенте
Процедура ПриЗакрытии()                                       // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                  // ПРИ ОТКРЫТИИ	
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	ПроверитьФормулы();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)   // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	ИспользуютсяФормулы 			= ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом");
	ИспользоватьСложныйМеханизмЦен 	= ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСложныйМеханизмЦен");
	Элементы.Дата.Видимость			= ИспользоватьСложныйМеханизмЦен;
	ВестиУчетСерийНоменклатуры 	= параметрысеанса.ВестиУчетПоСериямНоменклатуры;
	
	ВывестиДополнительнуюСтрокуЭтикетки	 = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВывестиДополнительнуюСтрокуЭтикетки");
	
	Элементы.ФормулаДополнительнойСтроки.Видимость = ИспользуютсяФормулы И ВывестиДополнительнуюСтрокуЭтикетки;
	ФормулаДополнительнойСтроки = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ФормулаДополнительнойСтрокиЭтикетки");
	Элементы.ФормулаДополнительнойСтроки.Видимость = ВывестиДополнительнуюСтрокуЭтикетки;
	ДополнительнаяСтрокаЭтикетки = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ДополнительнаяСтрокаЭтикетки");	
	
	Этаформа.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Печать этикеток для таблицы товаров документа") + ": " + Параметры.ДокументСТаблицей;
	
	Если ИспользоватьСложныйМеханизмЦен Тогда
		Попытка 
			Если ЗначениеЗаполнено(Параметры.ДокументСТаблицей) Тогда
				Объект.ВидЦен = Параметры.ДокументСТаблицей.ВидЦен;	
				Дата = Параметры.ДокументСТаблицей.Дата;
			КонецЕсли;
			
		Исключение 	
		КонецПопытки;
		
		Если НЕ ЗначениеЗаполнено(Объект.ВидЦен) Тогда
			Объект.ВидЦен = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВидЦенРасходованияПоУмолчанию");
			
			Если НЕ ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Объект.ВидЦен = ПредопределенноеЗначение("Справочник.ВидыЦен.ГлавныйВидЦен");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ДокументСТаблицей = Параметры.ДокументСТаблицей;
	Объект.Товары.Очистить();
	Если ТипЗнч(ДокументСТаблицей) = Тип("ДокументСсылка.Инвентаризации") Тогда		
		
		Для Каждого ТоварыДокумента Из ДокументСТаблицей.Товары Цикл
			
			ТоварыСтарока = Объект.Товары.Добавить();
			ТоварыСтарока.Номенклатура = ТоварыДокумента.Номенклатура;
			Если ЗначениеЗаполнено(ТоварыДокумента.КоличествоПоФакту) Тогда
				ТоварыСтарока.Количество 	= ТоварыДокумента.КоличествоПоФакту;
				ТоварыСтарока.Сумма 		= ТоварыДокумента.СуммаПоФакту;
			Иначе
				ТоварыСтарока.Количество 	= ТоварыДокумента.КоличествоУчет;
				ТоварыСтарока.Сумма 		= ТоварыДокумента.СуммаУчет;
			КонецЕсли;			
			ТоварыСтарока.Цена = ТоварыДокумента.Цена;
			
		КонецЦикла;
		
	ИначеЕсли ЗначениеЗаполнено(ДокументСТаблицей) Тогда			
		
		Объект.Товары.Загрузить(ДокументСТаблицей.Товары.Выгрузить());	
		попытка
			Клиент = ДокументСТаблицей.КлиентПоставщик;
			Если ЗначениеЗаполнено(Клиент)
				И ТипЗнч(Клиент) = Тип("СправочникСсылка.Клиенты") Тогда
				
				Объект.ОсновнаяФормулаТекстаЭтикетки = Клиент.ФормулаТекстаЭтикетки;
			КонецЕсли;
			
		исключение //для перемещения товара
		конецпопытки;
	КонецЕсли;		
	
	Если НЕ ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		Попытка 
			Объект.Склад = Параметры.ДокументСТаблицей.СкладКуда;
			Если ЗначениеЗаполнено(Объект.Склад) Тогда
				Объект.ОсновнаяФормулаТекстаЭтикетки = Объект.склад.ФормулаТекстаЭтикетки;
			КонецЕсли;
		Исключение 	
		конецпопытки;
		
		Если НЕ ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
			Попытка 
				Объект.Склад = Параметры.ДокументСТаблицей.Склад;
				Если ЗначениеЗаполнено(Объект.Склад) Тогда
					Объект.ОсновнаяФормулаТекстаЭтикетки = Объект.склад.ФормулаТекстаЭтикетки;
				КонецЕсли;
			Исключение 	
			конецпопытки;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Склад)
		И ЗначениеЗаполнено(Параметры.ДокументСТаблицей) Тогда
		
		Попытка 
			Объект.Склад = Параметры.ДокументСТаблицей.Склад;
		Исключение 	
		конецпопытки;	
	КонецЕсли;
	
	Если параметрысеанса.НеМожетМенятьЦены  тогда
		Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда			
			Элементы.ВидЦен.Доступность = ЛОЖЬ;			
		КонецЕсли;
		Элементы.ТоварыЦена.Доступность = ЛОЖЬ;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Склад) Тогда
		Объект.Склад = Параметры.Склад;
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.Дата) Тогда
		Дата = Параметры.Дата;
	КонецЕсли;
	
	Если Дата = '00010101000000'  Тогда
		Дата = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
	КонецЕсли;
	
	ПропорцияЭтикетки = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ФорматЭтикетки");
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуТекстаЗаголовка(Команда)
	ПроверитьФормулуТекстаЗаголовкаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуТекстаЗаголовкаНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ФормулаТекстаЗаголовка) Тогда
		ОбщийМодульСервер.ПроверитьФормулу(Объект.ФормулаТекстаЗаголовка.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуТекстаЭтикетки(Команда)
	ПроверитьФормулуТекстаЭтикеткиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуТекстаЭтикеткиНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		ОбщийМодульСервер.ПроверитьФормулу(Объект.ОсновнаяФормулаТекстаЭтикетки.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуШтрихКода(Команда)
	ПроверитьФормулуШтрихКодаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуШтрихКодаНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
		ОбщийМодульСервер.ПроверитьФормулу(Объект.ФормулаФормированияШтрихКода.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулы()
	
	Если НЕ ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
		Объект.ФормулаФормированияШтрихКода = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ОсновнаяФормулаШтрихКодаНоменклатуры");	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		Объект.ОсновнаяФормулаТекстаЭтикетки = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ОсновнаяФормулаТекстаЭтикетки");
	КонецЕсли;        	
	ОбновитьПримеры();
	
КонецПроцедуры

&НаСервере
Процедура сменитьценутаблицы()
	
	Для Каждого строкатаблицы из Объект.Товары цикл
		строкатаблицы.цена 	= ОбщийМодульСервер.ПолучитьЦенуНаСервере(строкатаблицы.номенклатура, Объект.ВидЦен, Дата, ИСТИНА, строкатаблицы.количество, , , , , , строкатаблицы.ЕдиницаИзмерения);
		строкатаблицы.сумма = строкатаблицы.цена * строкатаблицы.количество;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	ТоварыПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТоварыПриИзмененииНаСервере()
	ОбновитьПримеры();
КонецПроцедуры

&НаКлиенте
Процедура ФормулаТекстаЗаголовкаПриИзменении(Элемент)
	ОбновитьТекстаЗаголовкаЭтикетки();
КонецПроцедуры

&НаКлиенте
Процедура ФормулаФормированияШтрихКодаПриИзменении(Элемент)
	ФормулаФормированияШтрихКодаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ФормулаФормированияШтрихКодаПриИзмененииНаСервере()
	ОбновитьПримеры();
КонецПроцедуры

&Насервере
Процедура ОбновитьТекстДополнительнойСтроки()
		
	Если ИспользуютсяФормулы 
		И ЗначениеЗаполнено(ФормулаДополнительнойСтроки) Тогда
		
		Если Объект.Товары.Количество() > 0
			И ЗначениеЗаполнено(Объект.Товары[0].Номенклатура) Тогда		
			
			ТекстЗаголовка = "";
			
			Попытка 
				
				Валюта = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
				Валюта2 = Валюта;
				Номенклатура = Объект.Товары[0].Номенклатура;
				
				Склад = Объект.Склад;
				ШтрихКод			 = Объект.ШтрихКод;			
				НоменклатурнаяГруппа = Объект.НоменклатурнаяГруппа;
				Производитель  		 = Объект.Производитель;
				Если ВестиУчетСерийНоменклатуры Тогда
					Серия = ?(ЗначениеЗаполнено(Объект.Товары[0].СерияНоменклатуры), Объект.Товары[0].СерияНоменклатуры.Наименование, "");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
					Валюта = Объект.ВидЦен.ВалютаЦены;
				КонецЕсли;
			
				Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, Объект.ВидЦен, Дата, , , , , , , , Объект.Товары[0].ЕдиницаИзмерения);
				Если Цена = 0 Тогда
					Цена = Объект.Цена;
				КонецЕсли;
				
				Цена2 = 0;
				ВидЦен2 = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВторойВидЦенДляЭтикетки");
				Если ЗначениеЗаполнено(ВидЦен2) Тогда
					Цена2 = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, ВидЦен2, Дата, , , , , , , , Объект.Товары[0].ЕдиницаИзмерения);
					Валюта2 = ВидЦен2.ВалютаЦены;
				КонецЕсли;			
				
				Выполнить(" ТекстЗаголовка = """"+" + ФормулаДополнительнойСтроки.Формула + ";");
				
				Если НЕ ДополнительнаяСтрокаЭтикетки = ТекстЗаголовка Тогда
					ДополнительнаяСтрокаЭтикетки = ТекстЗаголовка;
				КонецЕсли;
				
			Исключение 	
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ОписаниеОшибки();
				Сообщение.Поле 	= "ФормулаДополнительнойСтроки";
				Сообщение.УстановитьДанные(Объект);
				Сообщение.Сообщить();
				
			КонецПопытки;	
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ОбновитьПримеры();
КонецПроцедуры

&НаКлиенте
Процедура ФормулаДополнительнойСтрокиПриИзменении(Элемент)
	ОбновитьПримеры();
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяСтрокаЭтикеткиПриИзменении(Элемент)
	ОбновитьПримеры();
КонецПроцедуры

&НаКлиенте
Процедура ПропорцияЭтикеткиПриИзменении(Элемент)
	ПропорцияЭтикеткиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПропорцияЭтикеткиПриИзмененииНаСервере()
	
	Константы.ФорматЭтикетки.Установить(ПропорцияЭтикетки);
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры
