// sza151020-1552
// sza150512-1709 фикс
// sza150418-2215 
// sza150407-0016 ППФ
// sza141124-2315 ФорматЭтикетки
// sza141119-0314 доп
// sza140903-1140 
// sza140506-0926  
// sza130913-1205 : 

&НаКлиенте
Процедура ВидЦенПриИзменении(Элемент)
	
	СменитьЦенуТаблицы();
	ОбновитьПримеры();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ОбновитьПримеры();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВсюНоменклатуру(Команда)
	
	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Обработка и заполнение таблицы товара.."));
	ДобавитьВсюНоменклатуруНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВсюНоменклатуруНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Номенклатура.Ссылка,
	|	Номенклатура.Цена
	|ИЗ Справочник.Номенклатура КАК Номенклатура
	|ГДЕ Номенклатура.ЭтоГруппа = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Номенклатура", ВыборкаДетальныеЗаписи.ссылка);
			Если Объект.Товары.НайтиСтроки(СтруктураОтбора).Количество() = 0 Тогда
				НоваяСтрока = Объект.Товары.Добавить();
				НоваяСтрока.Номенклатура = ВыборкаДетальныеЗаписи.Ссылка;
				ОбновитьДанныеСтроки(НоваяСтрока);
				
			КонецЕсли;
		КонецЦикла;
		
		ТоварыПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНоменклатуруДругогоДокумента(Команда)
	
	СписокТиповДокументов = Новый СписокЗначений;
	СписокТиповДокументов.Добавить("КорректировкиИРегистрацияОстатков", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ввод остатков (корректировка)"));
	СписокТиповДокументов.Добавить("Инвентаризации", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Инвентаризация"));
	СписокТиповДокументов.Добавить("РасходыТовара", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Расходы товара, услуг"));
	СписокТиповДокументов.Добавить("ПоступленияТовара", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поступления (возвраты) товара"));
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьДокументыВыполненияРабот") Тогда
		СписокТиповДокументов.Добавить("ВыполненияРабот", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Документы Выполнения работ"));	
	КонецЕсли;
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоСкладам") Тогда
		СписокТиповДокументов.Добавить("ПеремещенияТовара", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Перемещения товара"));
	КонецЕсли;	
	СписокТиповДокументов.Добавить("УстановкиЦен", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Установки Цен"));
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("КонфигурацияВРаботе") Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПлановДоходовИРасходов") Тогда
			СписокТиповДокументов.Добавить("ПланыПродаж", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Планы продаж"));	
		КонецЕсли;
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетТоваровПереданныхОтНасДляКомиссионнойТорговли") Тогда
			СписокТиповДокументов.Добавить("ОтчетыКомиссионеров", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Отчеты комиссионеров"));	
		КонецЕсли;
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьКомплектацию") Тогда
			СписокТиповДокументов.Добавить("Комплектация", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Комплектации"));	
		КонецЕсли;
	КонецЕсли;
	
	ТипДокументаДляДобавления = Неопределено;
	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ДобавитьНоменклатуруДругогоДокументаЗавершение", ЭтаФорма), СписокТиповДокументов, , СписокТиповДокументов[0]);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНоменклатуруДругогоДокументаЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ТипДокументаДляДобавления = ВыбранныйЭлемент;
	
	Если НЕ ТипДокументаДляДобавления = Неопределено Тогда
		
		ТипДокументаДляДобавления = ВыбранныйЭлемент.Значение;
		ТипДокументаДляДобавления = стрзаменить(ТипДокументаДляДобавления, " ", "");
		
		ФормаВыбораДокумента = ПолучитьФорму("Документ." + ТипДокументаДляДобавления + ".ФормаВыбора");
		
		ФормаВыбораДокумента.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите документ для добавления его номенклатуры в установку цен") + ": ";
		ДругойДокумент = ФормаВыбораДокумента.ОткрытьМодально();
		Если ЗначениеЗаполнено(ДругойДокумент) Тогда
			Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Обработка и заполнение таблицы товара.."));
			ДобавитьНоменклатуруДругогоДокументаНаСервере();      	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьНоменклатуруДругогоДокументаНаСервере()
	
	Если ЗначениеЗаполнено(ДругойДокумент) Тогда		
		Объект.Товары.Загрузить(ДругойДокумент.Товары.Выгрузить());		
		Для Каждого СтрокаТовара Из Объект.Товары Цикл
			ОбновитьДанныеСтроки(СтрокаТовара);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоГруппеНоменклатуры(Команда)
	
	ФормаВыбораГруппыНоменклатуры = ПолучитьФорму("Справочник.Номенклатура.ФормаВыбораГруппы");
	ФормаВыбораГруппыНоменклатуры.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите группу номенклатуры для добавления в установку цен") + ": ";
	ГруппаНоменклатуры = ФормаВыбораГруппыНоменклатуры.ОткрытьМодально();
	Если ЗначениеЗаполнено(ГруппаНоменклатуры) Тогда
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Обработка и заполнение таблицы товара.."));
		ДобавитьПоГруппеНоменклатурыНаСервере();		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПоГруппеНоменклатурыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Номенклатура.Ссылка,
	|	Номенклатура.Цена
	|ИЗ Справочник.Номенклатура КАК Номенклатура
	|ГДЕ Номенклатура.Родитель = &Родитель
	|	И Номенклатура.ЭтоГруппа = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Родитель", ГруппаНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Номенклатура", ВыборкаДетальныеЗаписи.ссылка);
			Если Объект.Товары.НайтиСтроки(СтруктураОтбора).Количество() = 0 Тогда
				НоваяСтрока = Объект.Товары.Добавить();
				НоваяСтрока.Номенклатура = ВыборкаДетальныеЗаписи.Ссылка;
				
				ОбновитьДанныеСтроки(НоваяСтрока);
				
			КонецЕсли;
		КонецЦикла;
		
		ТоварыПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПозициюНоменклатуры(Знач НоменклатураСтруктура, Знач НеСтановитсяНаЭтуСтроку = ЛОЖЬ, Знач множительКоличества = 1)
	
	СерияНоменклатуры = Неопределено;
	ЕдиницаИзмерения  = Неопределено;
	
	Номенклатура = НоменклатураСтруктура.Номенклатура;
	Количество 	 = НоменклатураСтруктура.Количество * множительКоличества * ОбщийМодульСервер.ПолучитьКоличествоПоУмолчанию(НоменклатураСтруктура.Номенклатура);
	НоменклатураСтруктура.Свойство("СерияНоменклатуры", СерияНоменклатуры);
	НоменклатураСтруктура.Свойство("ЕдиницаИзмерения", ЕдиницаИзмерения);
	Цена 		 = 0;
	ЦенаЕсть 	 = НоменклатураСтруктура.Свойство("Цена", Цена);
	
	ТоварВедетсяПоСериям = ВестиУчетСерийНоменклатуры И ОбщийМодульПовтор.ТоварВедетсяПоСериям(Номенклатура) и ЗначениеЗаполнено(СерияНоменклатуры);
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Номенклатура", Номенклатура);
	
	Если ТоварВедетсяПоСериям Тогда
		ПараметрыОтбора.Вставить("СерияНоменклатуры", СерияНоменклатуры);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
		ПараметрыОтбора.Вставить("ЕдиницаИзмерения", ЕдиницаИзмерения);
	КонецЕсли;
	
	СтрокаТовара = Объект.Товары.НайтиСтроки(ПараметрыОтбора);
	
	Если СтрокаТовара.Количество() = 0 Тогда
		СтрокаТовара = Объект.Товары.Добавить();				
		СтрокаТовара.Номенклатура 	  = Номенклатура;
		СтрокаТовара.ЕдиницаИзмерения = ЕдиницаИзмерения;
		
		//Если ТоварВедетсяПоСериям 
		//	И НЕ СерииНоменклатурыВидны Тогда
		//	
		//	СерииНоменклатурыВидны = ИСТИНА;		
		//	Элементы.ТоварыСерияНоменклатуры.Видимость 	= ИСТИНА;
		//КонецЕсли;
		
	Иначе
		СтрокаТовара = СтрокаТовара[0];
	КонецЕсли;		
	
	СтрокаТовара.Количество = СтрокаТовара.Количество + Количество;
	Если ТоварВедетсяПоСериям Тогда			
		СтрокаТовара.Количество = 1;
		СтрокаТовара.серияНоменклатуры = серияНоменклатуры;				
	КонецЕсли;
	
	Если ЦенаЕсть Тогда
		СтрокаТовара.Цена = Цена;
	Иначе			
		СтрокаТовара.Цена = ПолучитьЦенуНаСервере(СтрокаТовара.Номенклатура, СтрокаТовара.Количество, СтрокаТовара.ЕдиницаИзмерения);
	КонецЕсли;		
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСкидки") Тогда
		СтрокаТовара.ПроцентСкидки = ОбщийМодульСервер.ПолучитьПроцентСкидкиНаСервере(Номенклатура, СтрокаТовара.Количество, Объект.ВидЦен, , Объект.Склад);
	КонецЕсли;
	
	//		пересчитатьСтрокуНаСервере(СтрокаТовара);	
	
	Элементы.Товары.ТекущаяСтрока  = СтрокаТовара.ПолучитьИдентификатор();
	Элементы.Товары.ТекущийЭлемент = Элементы.ТоварыКоличество;			
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоНоменклатурнойГруппе(Команда)
	
	ФормаНоменклатурнойГруппы = ПолучитьФорму("Справочник.НоменклатурныеГруппы.ФормаВыбора");
	ФормаНоменклатурнойГруппы.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите номенклатурную группу для добавления ее номенклатуры в установку цен") + ": ";
	НоменклатурнаяГруппа = ФормаНоменклатурнойГруппы.ОткрытьМодально();	
	Если ЗначениеЗаполнено(НоменклатурнаяГруппа) Тогда
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Обработка и заполнение таблицы товара.."));
		ДобавитьПоНоменклатурнойГруппеНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПоНоменклатурнойГруппеНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Номенклатура.Ссылка,
	|	Номенклатура.Цена
	|ИЗ Справочник.Номенклатура КАК Номенклатура
	|ГДЕ Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа";
	
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Номенклатура", ВыборкаДетальныеЗаписи.ссылка);
			Если Объект.Товары.НайтиСтроки(СтруктураОтбора).Количество() = 0 Тогда
				НоваяСтрока = Объект.Товары.Добавить();
				НоваяСтрока.Номенклатура = ВыборкаДетальныеЗаписи.Ссылка;
				
				ОбновитьДанныеСтроки(НоваяСтрока);
				
			КонецЕсли;
		КонецЦикла;
		
		ТоварыПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоПроизводителю(Команда)
	
	ФормаВыбораПроизводителя = ПолучитьФорму("Справочник.Производители.ФормаВыбора");
	ФормаВыбораПроизводителя.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите производителя для добавления его номенклатуры в установку цен") + ": ";
	Производитель = ФормаВыбораПроизводителя.ОткрытьМодально();
	Если ЗначениеЗаполнено(Производитель) Тогда
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Обработка и заполнение таблицы товара.."));
		ДобавитьПоПроизводителюНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПоПроизводителюНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Номенклатура.Ссылка,
	|	Номенклатура.Цена
	|ИЗ Справочник.Номенклатура КАК Номенклатура
	|ГДЕ Номенклатура.Производитель = &Производитель";
	
	Запрос.УстановитьПараметр("Производитель", Производитель);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Номенклатура", ВыборкаДетальныеЗаписи.ссылка);
			Если Объект.Товары.НайтиСтроки(СтруктураОтбора).Количество() = 0 Тогда
				НоваяСтрока = Объект.Товары.Добавить();
				НоваяСтрока.Номенклатура = ВыборкаДетальныеЗаписи.Ссылка;
				
				ОбновитьДанныеСтроки(НоваяСтрока);				
			КонецЕсли;			
		КонецЦикла;
		
		ТоварыПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяСтрокаЭтикеткиПриИзменении(Элемент)
	ОбновитьПримеры();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьГруппойАналогов(Команда)
	
	ФормаВыбораГА = ПолучитьФорму("Справочник.ГруппыАналогов.ФормаВыбора");
	ФормаВыбораГА.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите группу аналогов для добавления в документ") + ": ";
	ГруппаАналогов = ФормаВыбораГА.ОткрытьМодально();
	Если ЗначениеЗаполнено(ГруппаАналогов) Тогда
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Обработка и заполнение таблицы товара.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
		ЗаполнитьГруппойАналоговНаСервере();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГруппойАналоговНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ГруппыАналоговТовары.Номенклатура,
	|	ГруппыАналоговТовары.ЕдиницаИзмерения,
	|	ГруппыАналоговТовары.Количество
	|ИЗ Справочник.ГруппыАналогов.Товары КАК ГруппыАналоговТовары
	|ГДЕ ГруппыАналоговТовары.Ссылка = &ГруппаАналогов";
	
	Запрос.УстановитьПараметр("ГруппаАналогов", ГруппаАналогов);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
			Если ИспользоватьЕдиницыИзмеренияНоменклатуры
				И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ЕдиницаИзмерения) Тогда
				
				СтруктураОтбора.Вставить("ЕдиницаИзмерения", ВыборкаДетальныеЗаписи.ЕдиницаИзмерения);
			КонецЕсли;
			
			Если Объект.Товары.НайтиСтроки(СтруктураОтбора).Количество() = 0 Тогда
				НоваяСтрока = Объект.Товары.Добавить();
				НоваяСтрока.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				НоваяСтрока.ЕдиницаИзмерения = ВыборкаДетальныеЗаписи.ЕдиницаИзмерения;
				НоваяСтрока.Количество = ?(ВыборкаДетальныеЗаписи.Количество = 0, 1, ВыборкаДетальныеЗаписи.Количество);
				
				ОбновитьДанныеСтроки(НоваяСтрока);
			КонецЕсли;
		КонецЦикла;
		
		ТоварыПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьУчетнымиДанными(Команда)
	
	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Обработка и заполнение таблицы товара.."));
	ЗаполнитьУчетнымиДаннымиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУчетнымиДаннымиНаСервере()
	
	Объект.Товары.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ТоварыОстатки.СуммаОстаток,
	|	ТоварыОстатки.КоличествоОстаток,
	|	ТоварыОстатки.Склад,
	|	ТоварыОстатки.Номенклатура
	|ИЗ РегистрНакопления.Товары.Остатки(
	|			&ДатаОстатка,
	|			&НетОтборПоСкладу
	|				ИЛИ Склад = &Склад) КАК ТоварыОстатки";
	
	Запрос.УстановитьПараметр("ДатаОстатка", Объект.Дата);
	Запрос.УстановитьПараметр("НетОтборПоСкладу", НЕ ЗначениеЗаполнено(Объект.Склад));
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтрокаТовара = Объект.Товары.Добавить();
			СтрокаТовара.Номенклатура 	= ВыборкаДетальныеЗаписи.номенклатура;
			ОбновитьДанныеСтроки(СтрокаТовара);
		КонецЦикла;
		
		ТоварыПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьЭтикеткиДляВсехСтрокТаблицы(Команда)
	
	Если ОбщееКоличество() <= 30 Тогда
		НапечататьЭтикеткиФрагмент();
	Иначе
		ПоказатьВопрос(Новый ОписаниеОповещения("НапечататьЭтикеткиДляВсехСтрокТаблицыЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что хотите распечатать такое число") + " (" + Объект.Количество + ")?", РежимДиалогаВопрос.ДаНет);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьЭтикеткиДляВсехСтрокТаблицыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда		
		НапечататьЭтикеткиФрагмент();			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция   НапечататьЭтикеткиДляВсехСтрокТаблицыНаСервере(ТабДокОбщийРезультат)
	
	ЕстьЧтоПечататьВФорме = ЛОЖЬ;
	
	ЧислоЭтикетокНаЛистеПоГоризонтали = 0;
	Если ЗначениеЗаполнено(Объект.ПроизвольнаяПечатнаяФорма)
		И Объект.ПроизвольнаяПечатнаяФорма.ИспользоватьОтступыМасштабИПринтер
		И НЕ Объект.ПроизвольнаяПечатнаяФорма.ЧислоЭтикетокНаЛистеПоГоризонтали = 0 Тогда
		
		ЧислоЭтикетокНаЛистеПоГоризонтали = Объект.ПроизвольнаяПечатнаяФорма.ЧислоЭтикетокНаЛистеПоГоризонтали;
	КонецЕсли;
	
	Если ЧислоЭтикетокНаЛистеПоГоризонтали = 0 Тогда
		ЧислоЭтикетокНаЛистеПоГоризонтали = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ЧислоЭтикетокНаЛистеПоГоризонтали");
		Если ЧислоЭтикетокНаЛистеПоГоризонтали = 0 Тогда
			ЧислоЭтикетокНаЛистеПоГоризонтали = 1;
		КонецЕсли;	
	КонецЕсли;
	
	ЧислоЭтикетокНаЛистеПоВертикали = 0;
	Если ЗначениеЗаполнено(Объект.ПроизвольнаяПечатнаяФорма)
		И Объект.ПроизвольнаяПечатнаяФорма.ИспользоватьОтступыМасштабИПринтер
		И НЕ Объект.ПроизвольнаяПечатнаяФорма.ЧислоЭтикетокНаЛистеПоВертикали = 0 Тогда
		
		ЧислоЭтикетокНаЛистеПоВертикали = Объект.ПроизвольнаяПечатнаяФорма.ЧислоЭтикетокНаЛистеПоВертикали;
		
	КонецЕсли;
	
	Если ЧислоЭтикетокНаЛистеПоВертикали = 0 Тогда
		ЧислоЭтикетокНаЛистеПоВертикали = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ЧислоЭтикетокНаЛистеПоВертикали");
		Если ЧислоЭтикетокНаЛистеПоВертикали = 0 Тогда
			ЧислоЭтикетокНаЛистеПоВертикали = 1;
		КонецЕсли;	
	КонецЕсли;
	
	ТекущаяПозицияПоГоризонтали = 1;
	ТекущаяПозицияПоВертикали 	= 1;
	ЧислоЭтикетокНаСтранице = ЧислоЭтикетокНаЛистеПоВертикали * ЧислоЭтикетокНаЛистеПоГоризонтали;
	
	Если ЗначениеЗаполнено(Объект.ПроизвольнаяПечатнаяФорма)
		И Объект.ПроизвольнаяПечатнаяФорма.ИспользоватьОтступыМасштабИПринтер Тогда
		
		НеВыводитьРазделитель = Объект.ПроизвольнаяПечатнаяФорма.НеВыводитьРазделитель;
	Иначе
		НеВыводитьРазделитель = ЧислоЭтикетокНаСтранице = 1;	
	КонецЕсли;
	СтрокаПечати = Новый ТабличныйДокумент;
	СтрокаПечати.ИмяПараметровПечати  = "СТРОКАЭТИКЕТКИ";
	СтрокаПечати.КлючПараметровПечати = СтрокаПечати.ИмяПараметровПечати;
	КолонокВСтрокеПечати = 0;
	СтрокаНаПечать = ЛОЖЬ;
	
	Для Каждого СтрокаТовара Из Объект.Товары цикл
		
		Если ЗначениеЗаполнено(СтрокаТовара.Номенклатура) Тогда
			ШтрихКод = ПолучитьШтрихКодТовара(СтрокаТовара.Номенклатура, СтрокаТовара.цена, СтрокаТовара.СерияНоменклатуры, СтрокаТовара.ЕдиницаИзмерения);
			Если НЕ ЗначениеЗаполнено(ОбъектТипШтрихКода) Тогда
				Объект.ТипШтрихКода = МенеджерОборудованияВызовСервера.ОпределитьТипШтрихкода(ШтрихКод);
			Иначе
				Объект.ТипШтрихКода = ОбъектТипШтрихКода;
			КонецЕсли;			
			ТекстСШтрихКодом        = ПолучитьТекстСШтрихКодомТовара(СтрокаТовара.Номенклатура, СтрокаТовара.цена, ШтрихКод, СтрокаТовара.СерияНоменклатуры, СтрокаТовара.ЕдиницаИзмерения);
			Объект.ТекстЗаголовка   = ПолучитьТекстЗаголовка(СтрокаТовара.Номенклатура, СтрокаТовара.цена, ШтрихКод, СтрокаТовара.СерияНоменклатуры);
			Объект.ДополнительнаяСтрокаЭтикетки = ПолучитьДополнительнуюСтрокуЭтикетки(СтрокаТовара.Номенклатура, СтрокаТовара.цена, ШтрихКод, СтрокаТовара.СерияНоменклатуры);
			
			Объект.Номенклатура = СтрокаТовара.Номенклатура;
			Объект.НоменклатурнаяГруппа = Объект.Номенклатура.НоменклатурнаяГруппа;
			ОпределитьПроизвольнуюПечатнуюФорму(ИСТИНА);		
			
			Если ЗначениеЗаполнено( Объект.ПроизвольнаяПечатнаяФорма) Тогда
				Если  Объект.ПроизвольнаяПечатнаяФорма.ШиринаКолонокЗаданаМакетом 
					И СтрокаНаПечать Тогда //  следует насильно произвести новую строку
					
					ТекущаяПозицияПоГоризонтали = 1;
					ТекущаяПозицияПоВертикали = ТекущаяПозицияПоВертикали + 1;
					ТабДокОбщийРезультат.Вывести(СтрокаПечати);
					СтрокаНаПечать = ЛОЖЬ;
					
					СтрокаПечати = Новый ТабличныйДокумент;
					СтрокаПечати.ИмяПараметровПечати  = "СТРОКАЭТИКЕТКИ";
					СтрокаПечати.КлючПараметровПечати = СтрокаПечати.ИмяПараметровПечати;
					КолонокВСтрокеПечати = 0;
				КонецЕсли;
			КонецЕсли;
			
			// !!сюда!
			ДокументДляПечати = ОбщийМодульСерверНапечататьЭтикетку(ШтрихКод, ТекстСШтрихКодом, , , КолонокВСтрокеПечати);
			
			Если НЕ ДокументДляПечати = Неопределено Тогда			
				
				СчетчикЭтикеток = 1;
				
				Пока СчетчикЭтикеток <= СтрокаТовара.Количество Цикл
					Если НЕ ЕстьЧтоПечататьВФорме
						И ПустаяСтрока(ИмяПринтера) Тогда
						
						ЕстьЧтоПечататьВФорме = ИСТИНА;	
					КонецЕсли;
					
					СтрокаНаПечать = ИСТИНА;
					СтрокаПечати.Присоединить(ДокументДляПечати, 0);	
					КолонокВСтрокеПечати = КолонокВСтрокеПечати + 1;
					
					ТекущаяПозицияПоГоризонтали = ТекущаяПозицияПоГоризонтали + 1;
					Если ТекущаяПозицияПоГоризонтали > ЧислоЭтикетокНаЛистеПоГоризонтали Тогда
						ТекущаяПозицияПоГоризонтали = 1;
						ТекущаяПозицияПоВертикали = ТекущаяПозицияПоВертикали + 1;
						ТабДокОбщийРезультат.Вывести(СтрокаПечати);
						СтрокаНаПечать = ЛОЖЬ;
						
						СтрокаПечати = Новый ТабличныйДокумент;
						СтрокаПечати.ИмяПараметровПечати  = "СТРОКАЭТИКЕТКИ";
						СтрокаПечати.КлючПараметровПечати = СтрокаПечати.ИмяПараметровПечати;
						КолонокВСтрокеПечати = 0;
					КонецЕсли;
					
					Если НЕ НеВыводитьРазделитель
						И ТекущаяПозицияПоВертикали > ЧислоЭтикетокНаЛистеПоВертикали Тогда
						
						ТекущаяПозицияПоВертикали = 1;
						ТабДокОбщийРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;	
					
					СчетчикЭтикеток = СчетчикЭтикеток + 1;
				КонецЦикла;
				
			КонецЕсли;	
		КонецЕсли;		
	КонецЦикла;
	
	Если СтрокаНаПечать Тогда		
		ТабДокОбщийРезультат.Вывести(СтрокаПечати);						
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ПроизвольнаяПечатнаяФорма)
		И Объект.ПроизвольнаяПечатнаяФорма.ИспользоватьОтступыМасштабИПринтер Тогда
		
		ОбщийМодульТекстСервер.УстановитьПараметрыПечатиДляПроизвольнойПечатнойФормы(ТабДокОбщийРезультат, Объект.ПроизвольнаяПечатнаяФорма, ИмяПринтера);
		
	Иначе
		ТабДокОбщийРезультат.РазмерКолонтитулаСверху = 0;
		ТабДокОбщийРезультат.РазмерКолонтитулаСнизу  = 0;
		ТабДокОбщийРезультат.ПолеСверху 	= 0;
		ТабДокОбщийРезультат.ПолеСлева 		= 0;
		ТабДокОбщийРезультат.ПолеСнизу 		= 0;
		ТабДокОбщийРезультат.ПолеСправа 	= 0;
		ТабДокОбщийРезультат.АвтоМасштаб 	= ИСТИНА;				
		
		Если ЗначениеЗаполнено(ИмяПринтера) Тогда
			ТабДокОбщийРезультат.ИмяПринтера = ИмяПринтера;
		КонецЕсли;
	КонецЕсли;
	
	ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напечатал этикетку для таблицы."), 2);
	
	Возврат ЕстьЧтоПечататьВФорме;
	
КонецФункции

&НаКлиенте
Процедура НапечататьЭтикеткиФрагмент()
	
	ПараметрыФормыПечати = Новый Структура;
	ПараметрыФормыПечати.Вставить("НаименованиеДокумента", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Этикетки"));
	ПараметрыФормыПечати.Вставить("НеПечататьНичегоДополнительно", ИСТИНА);
	ФормаПечати = ПолучитьФорму("ОбщаяФорма.ФормаПечати", ПараметрыФормыПечати);
	
	// тут
	ЕстьЧтоПечататьВФорме = НапечататьЭтикеткиДляВсехСтрокТаблицыНаСервере(ФормаПечати.Результат);
	
	Если ЕстьЧтоПечататьВФорме Тогда
		ФормаПечати.Заголовок = ПараметрыФормыПечати.НаименованиеДокумента;
		ФормаПечати.Открыть();
	Иначе
		ФормаПечати.Результат.Напечатать();// не принтер
		ФормаПечати = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеСтроки(СтрокаТовара = Неопределено)
	
	Если НЕ СтрокаТовара = Неопределено Тогда
		
		Номенклатура = СтрокаТовара.Номенклатура;
		Если ЗначениеЗаполнено(Номенклатура) Тогда  		
			
			Если ЗначениеЗаполнено(СтрокаТовара.ЕдиницаИзмерения)
				И НЕ ОбщийМодульСервер.ЕдиницаПринадлежитНоменклатуре(Номенклатура, СтрокаТовара.ЕдиницаИзмерения) Тогда
				
				СтрокаТовара.ЕдиницаИзмерения = ПредопределенноеЗначение("Справочник.ЕдиницыИзмерения.ПустаяСсылка");
			КонецЕсли;
			
			Если СтрокаТовара.Количество = 0 Тогда
				СтрокаТовара.Количество = ОбщийМодульСервер.ПолучитьКоличествоПоУмолчанию(Номенклатура);
				
				Если СтрокаТовара.Количество = 0 Тогда
					СтрокаТовара.Количество = 1;
				КонецЕсли;
			КонецЕсли;
			
			СтрокаТовара.Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, Объект.ВидЦен, Объект.Дата, ЛОЖЬ, СтрокаТовара.Количество, , , , , , СтрокаТовара.ЕдиницаИзмерения);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПримеры()
	
	ОбновитьТекстДополнительнойСтроки();
	
	Объект.ШтрихКод = "";
	ПримерШтрихКодаДляПервойСтрокиТаблицы = "";
	ПримерТекстаСШтрихКодом = "";
	
	Если Объект.Товары.Количество() > 0
		И ЗначениеЗаполнено(Объект.Товары[0].Номенклатура) Тогда		
		
		Если ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
			Попытка 
				Объект.Номенклатура = Объект.Товары[0].Номенклатура;
				Объект.Цена = Объект.Товары[0].Цена;
				Если Объект.цена = 0 Тогда
					Объект.Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен, Объект.Дата, ИСТИНА, , , , , , , Объект.Товары[0].ЕдиницаИзмерения);
					Если Объект.цена = 0 Тогда
						Объект.Цена = Объект.Товары[0].Цена;	
						Если Объект.цена = 0 Тогда
							Объект.Цена = Объект.Номенклатура.Цена;	
						КонецЕсли;
					КонецЕсли;	
				КонецЕсли;
				
				ПримерШтрихКодаДляПервойСтрокиТаблицы = ОбщийМодульТоварСервер.УстановитьШтрихКодНоменклатурыПоФормуле(Объект.Товары[0].Номенклатура, Объект.ФормулаФормированияШтрихКода.Формула, Объект.ВидЦен, Объект.Дата, Объект.цена, Объект.Товары[0].СерияНоменклатуры);
				Объект.ШтрихКод = ПримерШтрихКодаДляПервойСтрокиТаблицы;
				
			Исключение				
				ТекстОписаниеОшибки = ОписаниеОшибки();
				ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ТекстОписаниеОшибки);
			КонецПопытки;
		Иначе
			Объект.ШтрихКод = Объект.Товары[0].Номенклатура.ОсновнойШтрихКод;
			ПримерШтрихКодаДляПервойСтрокиТаблицы = Объект.ШтрихКод;
		КонецЕсли;		
		
	КонецЕсли;	
	
	Если Объект.Товары.Количество() > 0
		И ЗначениеЗаполнено(Объект.Товары[0].Номенклатура) Тогда		
		
		Объект.Номенклатура = Объект.Товары[0].Номенклатура;
		
		Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда			
			
			Серия = Объект.Товары[0].СерияНоменклатуры;
			Объект.Цена    = Объект.Товары[0].Цена;
			Объект.Валюта  = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
			Объект.Валюта2 = Объект.Валюта;
			
			Если Объект.цена = 0 Тогда
				Объект.Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен, Объект.Дата, ИСТИНА, , , , , , , Объект.Товары[0].ЕдиницаИзмерения);
				Если Объект.цена = 0 Тогда
					Объект.Цена = Объект.Товары[0].Цена;	
					Если Объект.цена = 0 Тогда
						Объект.Цена = Объект.Номенклатура.Цена;	
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Объект.Валюта = Объект.ВидЦен.ВалютаЦены;
			КонецЕсли;
			
			Объект.Цена2   = 0;
			Объект.ВидЦен2 = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВторойВидЦенДляЭтикетки");
			Если ЗначениеЗаполнено(Объект.ВидЦен2) Тогда
				Объект.Цена2   = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен2, Объект.Дата, , , , , , , , Объект.Товары[0].ЕдиницаИзмерения);
				Объект.Валюта2 = Объект.ВидЦен2.ВалютаЦены;
			КонецЕсли;			
			
			Объект.Цена3   = 0;
			Объект.ВидЦен3 = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ТретийВидЦенДляФормул");
			Если ЗначениеЗаполнено(Объект.ВидЦен3) Тогда
				Объект.Цена3   = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен3, Объект.Дата, , , , , , , , Объект.Товары[0].ЕдиницаИзмерения);
				Объект.Валюта3 = Объект.ВидЦен3.ВалютаЦены;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
				Попытка 				
					Объект.НоменклатурнаяГруппа = Объект.Номенклатура.НоменклатурнаяГруппа;
					Объект.Производитель 		= Объект.Номенклатура.производитель; 				
					
					Цена	= Объект.Цена;
					Цена2 	= Объект.Цена2;
					ВидЦен2 = Объект.ВидЦен2;
					Валюта2 = Объект.Валюта2;
					
					Цена3 	= Объект.Цена3;
					ВидЦен3 = Объект.ВидЦен3;
					Валюта3 = Объект.Валюта3;
					
					Валюта  = Объект.Валюта;
					ВидЦен 	= Объект.ВидЦен;
					Дата 	= Объект.Дата;
					Группа 	= Объект.Номенклатура.Родитель;
					Серия   = Объект.СерияНоменклатуры;
					Склад 	= Объект.Склад;
					ШтрихКод= Объект.ШтрихКод;
					Номенклатура = ОБъект.Номенклатура;
					НоменклатурнаяГруппа = Объект.НоменклатурнаяГруппа;
					Производитель  		 = Объект.Производитель;
					СерияНоменклатуры	 = Объект.СерияНоменклатуры;
					ТекстСШтрихКодом	 = Объект.ТекстСШтрихКодом;
					Наименование		 = Объект.Наименование;
					Количество			 = Объект.Количество;
					ЕдиницаИзмерения	 = Объект.ЕдиницаИзмерения;
					ДополнительнаяСтрокаЭтикетки = Объект.ДополнительнаяСтрокаЭтикетки;				
					
					Выполнить(" ПримерТекстаСШтрихКодом = """" + " + Объект.ОсновнаяФормулаТекстаЭтикетки.Формула + ";");
					
				Исключение 	
					ТекстОписаниеОшибки = ОписаниеОшибки();
					ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ТекстОписаниеОшибки);
				КонецПопытки;	
			КонецЕсли;
			
		Иначе
			Если ЗначениеЗаполнено(Объект.ШтрихКод) Тогда
				ПримерТекстаСШтрихКодом = Объект.ШтрихКод;
			Иначе
				ПримерТекстаСШтрихКодом = " " + формат(Объект.цена, "ЧЦ=10; ЧДЦ=2") + " " + ?(ЗначениеЗаполнено(Объект.ВидЦен), Объект.ВидЦен.ВалютаЦены, Объект.Валюта);
			КонецЕсли;
			
		КонецЕсли;				
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТекстаЗаголовкаЭтикетки()
	
	//выполняется безусловно для расчета дополнительных реквизитов типа цена3 даже не для формул, а проверка и выполнение формулы ниже внутри
	ТекстЗаголовка = "";
	
	Попытка 
		Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
			Номенклатура = Объект.Номенклатура;
		ИначеЕсли НЕ ПустаяСтрока(Объект.ШтрихКод) ТОгда
			Объект.Номенклатура = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(Объект.ШтрихКод, , ИСТИНА);	
			Номенклатура = Объект.Номенклатура;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
			Объект.Валюта  = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
			Объект.Валюта2 = Объект.Валюта;
			Если ВестиУчетСерийНоменклатуры Тогда
				Серия = ?(ЗначениеЗаполнено(Объект.СерияСуществующейНоменклатуры), Объект.СерияСуществующейНоменклатуры.Наименование, Объект.СерияНоменклатуры);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Объект.Валюта = Объект.ВидЦен.ВалютаЦены;
			КонецЕсли;
			
			Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен, Объект.Дата, , , , , , , , Объект.ЕдиницаИзмерения);
			Если Объект.Цена = 0 Тогда
				Цена = Объект.Цена;
			Иначе
				Объект.Цена = Цена;
			КонецЕсли;
			
			Объект.Цена2   = 0;
			Объект.ВидЦен2 = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВторойВидЦенДляЭтикетки");
			Если ЗначениеЗаполнено(Объект.ВидЦен2) Тогда
				Объект.Цена2   = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен2, Объект.Дата, , , , , , , , Объект.ЕдиницаИзмерения);
				Объект.Валюта2 = Объект.ВидЦен2.ВалютаЦены;
			КонецЕсли;
			
			Объект.Цена3   = 0;
			Объект.ВидЦен3 = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ТретийВидЦенДляФормул");
			Если ЗначениеЗаполнено(Объект.ВидЦен3) Тогда
				Объект.Цена3   = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен3, Объект.Дата, , , , , , , , Объект.ЕдиницаИзмерения);
				Объект.Валюта3 = Объект.ВидЦен3.ВалютаЦены;
			КонецЕсли;
			
			Цена	= Объект.Цена;
			Цена2 	= Объект.Цена2;
			ВидЦен2 = Объект.ВидЦен2;
			Валюта2 = Объект.Валюта2;
			
			Цена3 	= Объект.Цена3;
			ВидЦен3 = Объект.ВидЦен3;
			Валюта3 = Объект.Валюта3;
			
			Валюта  = Объект.Валюта;
			ВидЦен 	= Объект.ВидЦен;
			Дата 	= Объект.Дата;
			Группа 	= Объект.Номенклатура.Родитель;
			Склад 	= Объект.Склад;
			ШтрихКод= Объект.ШтрихКод;
			Номенклатура = ОБъект.Номенклатура;
			НоменклатурнаяГруппа = Объект.НоменклатурнаяГруппа;
			Производитель  		 = Объект.Производитель;
			СерияНоменклатуры	 = Объект.СерияНоменклатуры;
			ТекстСШтрихКодом	 = Объект.ТекстСШтрихКодом;
			Наименование		 = Объект.Наименование;
			Количество			 = Объект.Количество;
			ЕдиницаИзмерения	 = Объект.ЕдиницаИзмерения;
			ДополнительнаяСтрокаЭтикетки = Объект.ДополнительнаяСтрокаЭтикетки;
			
			Если ИспользуютсяФормулы 
				И ЗначениеЗаполнено(Объект.ФормулаТекстаЗаголовка) Тогда
				
				Выполнить(" ТекстЗаголовка = """"+" + Объект.ФормулаТекстаЗаголовка.Формула + ";");	
			КонецЕсли;
			
			Если НЕ Объект.ТекстЗаголовка = ТекстЗаголовка Тогда
				Объект.ТекстЗаголовка = ТекстЗаголовка;
			КонецЕсли;	
		КонецЕсли;
		
	Исключение 	
		ТекстОписаниеОшибки = ОписаниеОшибки();
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ТекстОписаниеОшибки);
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТекстДополнительнойСтроки()
	
	Если ИспользуютсяФормулы 
		И ЗначениеЗаполнено(ФормулаДополнительнойСтроки) Тогда
		
		Если Объект.Товары.Количество() > 0
			И ЗначениеЗаполнено(Объект.Товары[0].Номенклатура) Тогда		
			
			ТекстЗаголовка = "";
			
			Попытка 
				Объект.Номенклатура = Объект.Товары[0].Номенклатура;
				
				Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
					Объект.Валюта  = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
					Объект.Валюта2 = Объект.Валюта;
					
					Если ВестиУчетСерийНоменклатуры Тогда
						Серия = ?(ЗначениеЗаполнено(Объект.Товары[0].СерияНоменклатуры), Объект.Товары[0].СерияНоменклатуры.Наименование, "");
					КонецЕсли;
					
					Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
						Объект.Валюта = Объект.ВидЦен.ВалютаЦены;
					КонецЕсли;
					
					Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен, Объект.Дата, , , , , , , , Объект.Товары[0].ЕдиницаИзмерения);
					Если Цена = 0 Тогда
						Цена = Объект.Цена;
					Иначе
						Объект.Цена = Цена;
					КонецЕсли;
					
					Объект.Цена2   = 0;
					Объект.ВидЦен2 = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВторойВидЦенДляЭтикетки");
					Если ЗначениеЗаполнено(Объект.ВидЦен2) Тогда
						Объект.Цена2   = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен2, Объект.Дата, , , , , , , , Объект.Товары[0].ЕдиницаИзмерения);
						Объект.Валюта2 = Объект.ВидЦен2.ВалютаЦены;
					КонецЕсли;			
					
					Объект.Цена3   = 0;
					Объект.ВидЦен3 = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ТретийВидЦенДляФормул");
					Если ЗначениеЗаполнено(Объект.ВидЦен3) Тогда
						Объект.Цена3   = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен3, Объект.Дата, , , , , , , , Объект.Товары[0].ЕдиницаИзмерения);
						Объект.Валюта3 = Объект.ВидЦен3.ВалютаЦены;
					КонецЕсли;
					
					Цена	= Объект.Цена;
					Цена2 	= Объект.Цена2;
					ВидЦен2 = Объект.ВидЦен2;
					Валюта2 = Объект.Валюта2;
					
					Цена3 	= Объект.Цена3;
					ВидЦен3 = Объект.ВидЦен3;
					Валюта3 = Объект.Валюта3;
					
					Валюта  = Объект.Валюта;
					ВидЦен 	= Объект.ВидЦен;
					Дата 	= Объект.Дата;
					Группа 	= Объект.Номенклатура.Родитель;
					Склад 	= Объект.Склад;
					ШтрихКод= Объект.ШтрихКод;
					Номенклатура = ОБъект.Номенклатура;
					НоменклатурнаяГруппа = Объект.НоменклатурнаяГруппа;
					Производитель  		 = Объект.Производитель;
					СерияНоменклатуры	 = Объект.СерияНоменклатуры;
					ТекстСШтрихКодом	 = Объект.ТекстСШтрихКодом;
					Наименование		 = Объект.Наименование;
					Количество			 = Объект.Количество;
					ЕдиницаИзмерения	 = Объект.ЕдиницаИзмерения;
					ДополнительнаяСтрокаЭтикетки = Объект.ДополнительнаяСтрокаЭтикетки;
					
					Выполнить(" ТекстЗаголовка = """"+" + ФормулаДополнительнойСтроки.Формула + ";");
					
					Если НЕ Объект.ДополнительнаяСтрокаЭтикетки = ТекстЗаголовка Тогда
						Объект.ДополнительнаяСтрокаЭтикетки = ТекстЗаголовка;
					КонецЕсли;	
				КонецЕсли;
				
			Исключение 	
				ТекстОписаниеОшибки = ОписаниеОшибки();
				ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ТекстОписаниеОшибки);
			КонецПопытки;	
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПолученныйШтрихкодНаКлиенте(Знач ТекКод)
	
	РезультатСтруктура = ОбработатьПолученныйШтрихкодНаСервере(ТекКод);		
	
	Если РезультатСтруктура.Результат = Неопределено Тогда // 0 - ничего		
		ОбщийМодульКлиент.ВыдатьСигнал(ТекКод);		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция   ОбработатьПолученныйШтрихкодНаСервере(Знач ТекКод, Знач Количество = 1)
	
	РезультатСтруктура = Новый Структура("Результат", Неопределено);
	
	РезультатОбработки = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(ТекКод, ИСТИНА, ИСТИНА);
	
	Если ЗначениеЗаполнено(РезультатОбработки.Номенклатура) Тогда
		ДобавитьПозициюНоменклатуры(РезультатОбработки);
		РезультатСтруктура.Результат = 1;
	КонецЕсли; 	 	
	
	Возврат РезультатСтруктура;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда
		
		Если ИмяСобытия = "ScanData" Тогда
			
			Если Параметр[1] = Неопределено Тогда
				ТекКод = Параметр[0];
			Иначе
				ТекКод = Параметр[1][1];
			КонецЕсли;
			
			ОбработатьПолученныйШтрихкодНаКлиенте(ТекКод);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция   ОбщееКоличество() 
	
	Объект.Количество = Объект.Товары.Итог("Количество");
	Возврат Объект.Количество;
	
КонецФункции // ОбщееКоличество

&НаСервере
Функция   ОбщийМодульСерверНапечататьЭтикетку(Знач ШтрихКод, Знач ТекстСШтрихКодом, Знач Количество = 1, Знач ДокументДляПечати = Неопределено, Знач КолонокВСтрокеПечати = 0)
	
	Если ДокументДляПечати = Неопределено Тогда
		ДокументДляПечати = Новый ТабличныйДокумент;
		ДокументДляПечати.ИмяПараметровПечати  = "ЭТИК" + СокрЛП(ИмяКомпьютера());
		ДокументДляПечати.КлючПараметровПечати = ДокументДляПечати.ИмяПараметровПечати;
	КонецЕсли;
	
	СтруктураПечати = Новый Структура;
	СтруктураПечати.Вставить("ШтрихКод", ШтрихКод);
	СтруктураПечати.Вставить("ТипШтрихКода", Объект.ТипШтрихКода);
	СтруктураПечати.Вставить("ТекстСШтрихКодом", ТекстСШтрихКодом);
	СтруктураПечати.Вставить("Количество", Количество);
	СтруктураПечати.Вставить("ТекстЗаголовка", Объект.ТекстЗаголовка);
	СтруктураПечати.Вставить("ДополнительнаяСтрокаЭтикетки", Объект.ДополнительнаяСтрокаЭтикетки);
	СтруктураПечати.Вставить("ВсеПараметрыПечати", ОбщийМодульТекстСервер.ПолучитьВсеПараметрыПечатиОбъекта(Объект, "Обработки", "ПечатьЭтикетки"));
	СтруктураПечати.Вставить("ПроизвольнаяПечатнаяФорма", Объект.ПроизвольнаяПечатнаяФорма);
	СтруктураПечати.Вставить("КолонокВСтрокеПечати", КолонокВСтрокеПечати);
	
	ОбщийМодульТоварСервер.НапечататьЭтикетку(СтруктураПечати, ДокументДляПечати, ЛОЖЬ, ИСТИНА);
	
	Возврат ДокументДляПечати;
	
КонецФункции

Процедура ОпределитьПроизвольнуюПечатнуюФорму(Знач НеЗаставлять = ЛОЖЬ)
	
	Если ИспользоватьПроизвольныеПечатныеФормы
		И ЗначениеЗаполнено(Объект.НоменклатурнаяГруппа) Тогда
		
		ПроизвольнаяПечатнаяФорма = ПолучитьРеквизитыНаСервере(Объект.НоменклатурнаяГруппа, "ПроизвольнаяПечатнаяФормаЭтикетки");
	КонецЕсли;
	
	Если ИспользоватьПроизвольныеПечатныеФормы
		И НЕ НеЗаставлять
		И НЕ ЗначениеЗаполнено(Объект.ПроизвольнаяПечатнаяФорма) Тогда
		
		ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(ПредопределенноеЗначение("Перечисление.ВидыПечатныхФорм.Этикетка"), Объект.Дата);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		Объект.ПроизвольнаяПечатнаяФорма = ПроизвольнаяПечатнаяФорма;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяФормулаТекстаЭтикеткиПриИзменении(Элемент)
	ОсновнаяФормулаТекстаЭтикеткиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОсновнаяФормулаТекстаЭтикеткиПриИзмененииНаСервере()
	ОбновитьПримеры();
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЕдиничнойЭтикетки(Команда)
	
	ОткрытьФорму("Обработка.ПечатьЭтикетки.Форма.Форма");
	Закрыть(ЛОЖЬ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборНоменклатуры(Команда)
	
	ПараметрыФормы = Новый Структура("Дата", Объект.Дата);
	ПараметрыФормы.Вставить("Документ", Неопределено);
	ПараметрыФормы.Вставить("ВидЦен", Объект.ВидЦен);
	ПараметрыФормы.Вставить("Добавление", ИСТИНА);
	ПараметрыФормы.Вставить("Договор", Неопределено);
	ПараметрыФормы.Вставить("Склад", Объект.Склад);
	ПараметрыФормы.Вставить("Товары", Объект.Товары);
	ПараметрыФормы.Вставить("КлиентПоставщик", Неопределено);
	
	ИмяНеобходимойФормы = "Справочник.Номенклатура.Форма.ФормаПодбора";
	ОткрытьФорму(ИмяНеобходимойФормы, ПараметрыФормы, Элементы.Товары);
	
КонецПроцедуры

&НаСервере
Функция   ПолучитьДополнительнуюСтрокуЭтикетки(Знач Номенклатура, Знач Цена, Знач ШтрихКод, Знач СерияНоменклатуры)
	
	ТекстЗаголовка = Объект.ДополнительнаяСтрокаЭтикетки;
	
	Если ЗначениеЗаполнено(Номенклатура)
		И ИспользуютсяФормулы
		И ЗначениеЗаполнено(ФормулаДополнительнойСтроки) Тогда
		
		Попытка
			Объект.Валюта  = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
			Объект.Валюта2 = Объект.Валюта;
			Объект.НоменклатурнаяГруппа 	= Номенклатура.НоменклатурнаяГруппа;
			Объект.Производитель  			= Номенклатура.Производитель;
			Объект.СерияНоменклатуры 		= СерияНоменклатуры;
			Серия = СокрЛП(Объект.СерияНоменклатуры);
			
			Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Объект.Валюта = Объект.ВидЦен.ВалютаЦены;
			КонецЕсли;
			
			Объект.Цена2   = 0;
			Объект.ВидЦен2 = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВторойВидЦенДляЭтикетки");
			Если ЗначениеЗаполнено(Объект.ВидЦен2) Тогда
				Объект.Цена2   = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен2, Объект.Дата, ЛОЖЬ);
				Объект.Валюта2 = Объект.ВидЦен2.ВалютаЦены;
			КонецЕсли;
			
			Объект.Цена3   = 0;
			Объект.ВидЦен3 = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ТретийВидЦенДляФормул");
			Если ЗначениеЗаполнено(Объект.ВидЦен3) Тогда
				Объект.Цена3   = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен3, Объект.Дата, ЛОЖЬ);
				Объект.Валюта3 = Объект.ВидЦен3.ВалютаЦены;
			КонецЕсли;
			
			Цена	= Объект.Цена;
			Цена2 	= Объект.Цена2;
			ВидЦен2 = Объект.ВидЦен2;			
			Валюта2 = Объект.Валюта2;
			
			Цена3 	= Объект.Цена3;
			ВидЦен3 = Объект.ВидЦен3;
			Валюта3 = Объект.Валюта3;
			
			Валюта  = Объект.Валюта;
			ВидЦен 	= Объект.ВидЦен;
			Дата 	= Объект.Дата;
			Группа 	= Объект.Номенклатура.Родитель;
			Склад 	= Объект.Склад;
			ШтрихКод= Объект.ШтрихКод;
			Номенклатура = ОБъект.Номенклатура;
			НоменклатурнаяГруппа = Объект.НоменклатурнаяГруппа;
			Производитель  		 = Объект.Производитель;
			СерияНоменклатуры	 = Объект.СерияНоменклатуры;
			ТекстСШтрихКодом	 = Объект.ТекстСШтрихКодом;
			Наименование		 = Объект.Наименование;
			Количество			 = Объект.Количество;
			ЕдиницаИзмерения	 = Объект.ЕдиницаИзмерения;
			ДополнительнаяСтрокаЭтикетки = Объект.ДополнительнаяСтрокаЭтикетки;
			
			Выполнить(" ТекстЗаголовка = """"+" + ФормулаДополнительнойСтроки.Формула + ";");
			
		Исключение 	
			ТекстОписаниеОшибки = ОписаниеОшибки();
			ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ТекстОписаниеОшибки);
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат ТекстЗаголовка;
	
конецФункции

&НаСервереБезКонтекста
Функция   ПолучитьРеквизитыНаСервере(Знач Номенклатура, Знач Реквизит);
	Возврат Номенклатура[Реквизит];
КонецФункции

&НаСервере
Функция   ПолучитьТекстЗаголовка(Знач Номенклатура, Знач Цена, Знач ШтрихКод, Знач СерияНоменклатуры)
	
	ТекстЗаголовка = Объект.ТекстЗаголовка;
	
	Если ЗначениеЗаполнено(Номенклатура)
		И ИспользуютсяФормулы
		И ЗначениеЗаполнено(Объект.ФормулаТекстаЗаголовка) Тогда
		
		Попытка
			Объект.Валюта  = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
			Объект.Валюта2 = Объект.Валюта;
			Объект.НоменклатурнаяГруппа = Номенклатура.НоменклатурнаяГруппа;
			Объект.Производитель  		= Номенклатура.Производитель;
			Объект.СерияНоменклатуры 	= СерияНоменклатуры;
			Серия = СокрЛП(Объект.СерияНоменклатуры);
			
			Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Объект.Валюта = Объект.ВидЦен.ВалютаЦены;
			КонецЕсли;
			
			Объект.Цена2   = 0;
			Объект.ВидЦен2 = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВторойВидЦенДляЭтикетки");
			Если ЗначениеЗаполнено(Объект.ВидЦен2) Тогда
				Объект.Цена2   = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен2, Объект.Дата, ЛОЖЬ);
				Объект.Валюта2 = Объект.ВидЦен2.ВалютаЦены;
			КонецЕсли;
			
			Объект.Цена3   = 0;
			Объект.ВидЦен3 = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ТретийВидЦенДляФормул");
			Если ЗначениеЗаполнено(Объект.ВидЦен3) Тогда
				Объект.Цена3   = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен3, Объект.Дата, ЛОЖЬ);
				Объект.Валюта3 = Объект.ВидЦен3.ВалютаЦены;
			КонецЕсли;
			
			Цена	= Объект.Цена;
			Цена2 	= Объект.Цена2;
			ВидЦен2 = Объект.ВидЦен2;
			Валюта2 = Объект.Валюта2;
			
			Цена3 	= Объект.Цена3;
			ВидЦен3 = Объект.ВидЦен3;
			Валюта3 = Объект.Валюта3;
			
			Валюта  = Объект.Валюта;
			ВидЦен 	= Объект.ВидЦен;
			Дата 	= Объект.Дата;
			Группа 	= Объект.Номенклатура.Родитель;
			Склад 	= Объект.Склад;
			ШтрихКод= Объект.ШтрихКод;
			Номенклатура = ОБъект.Номенклатура;
			НоменклатурнаяГруппа = Объект.НоменклатурнаяГруппа;
			Производитель  		 = Объект.Производитель;
			СерияНоменклатуры	 = Объект.СерияНоменклатуры;
			ТекстСШтрихКодом	 = Объект.ТекстСШтрихКодом;
			Наименование		 = Объект.Наименование;
			Количество			 = Объект.Количество;
			ЕдиницаИзмерения	 = Объект.ЕдиницаИзмерения;
			ДополнительнаяСтрокаЭтикетки = Объект.ДополнительнаяСтрокаЭтикетки;
			
			Выполнить(" ТекстЗаголовка = """"+" + Объект.ФормулаТекстаЗаголовка.Формула + ";");
			
		Исключение 	
			ТекстОписаниеОшибки = ОписаниеОшибки();
			ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ТекстОписаниеОшибки);
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат ТекстЗаголовка;
	
конецФункции

&НаСервере
Функция   ПолучитьТекстСШтрихКодомТовара(Знач Номенклатура, Знач Цена, Знач ШтрихКод, Знач СерияНоменклатуры, Знач ЕдиницаИзмерения)
	
	ТекстСШтрихКодом = "";
	
	Если ЗначениеЗаполнено(Номенклатура)
		И ИспользуютсяФормулы
		И ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		
		Попытка
			Объект.Валюта  = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
			Объект.Валюта2 = Объект.Валюта;
			Объект.НоменклатурнаяГруппа = Номенклатура.НоменклатурнаяГруппа;
			Объект.Производитель  		 = Номенклатура.Производитель;
			Объект.СерияНоменклатуры 	 = СерияНоменклатуры;
			Серия = СокрЛП(Объект.СерияНоменклатуры);
			
			Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Объект.Валюта = Объект.ВидЦен.ВалютаЦены;
			КонецЕсли;
			
			Объект.Цена2   = 0;
			Объект.ВидЦен2 = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВторойВидЦенДляЭтикетки");
			Если ЗначениеЗаполнено(Объект.ВидЦен2) Тогда
				Объект.Цена2   = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен2, Объект.Дата, , , , , , , , ЕдиницаИзмерения);
				Объект.Валюта2 = Объект.ВидЦен2.ВалютаЦены;
			КонецЕсли;
			
			Объект.Цена3   = 0;
			Объект.ВидЦен3 = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ТретийВидЦенДляФормул");
			Если ЗначениеЗаполнено(Объект.ВидЦен3) Тогда
				Объект.Цена3   = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен3, Объект.Дата, , , , , , , , ЕдиницаИзмерения);
				Объект.Валюта3 = Объект.ВидЦен3.ВалютаЦены;
			КонецЕсли;
			
			Цена	= Объект.Цена;
			Цена2 	= Объект.Цена2;
			ВидЦен2 = Объект.ВидЦен2;
			Валюта2 = Объект.Валюта2;
			
			Цена3 	= Объект.Цена3;
			ВидЦен3 = Объект.ВидЦен3;
			Валюта3 = Объект.Валюта3;
			
			Валюта  = Объект.Валюта;
			ВидЦен 	= Объект.ВидЦен;
			Дата 	= Объект.Дата;
			Группа 	= Объект.Номенклатура.Родитель;
			Склад 	= Объект.Склад;
			ШтрихКод= Объект.ШтрихКод;
			Номенклатура = ОБъект.Номенклатура;
			НоменклатурнаяГруппа = Объект.НоменклатурнаяГруппа;
			Производитель  		 = Объект.Производитель;
			СерияНоменклатуры	 = Объект.СерияНоменклатуры;
			ТекстСШтрихКодом	 = Объект.ТекстСШтрихКодом;
			Наименование		 = Объект.Наименование;
			Количество			 = Объект.Количество;
			ЕдиницаИзмерения	 = Объект.ЕдиницаИзмерения;
			ДополнительнаяСтрокаЭтикетки = Объект.ДополнительнаяСтрокаЭтикетки;
			
			Выполнить(" ТекстСШтрихКодом = """"+" + Объект.ОсновнаяФормулаТекстаЭтикетки.Формула + ";");
			
		Исключение 	
			ТекстОписаниеОшибки = ОписаниеОшибки();
			ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ТекстОписаниеОшибки);
		КонецПопытки;
		
	Иначе 		
		Если НЕ ПустаяСтрока(ШтрихКод) Тогда
			ТекстСШтрихКодом = ШтрихКод;
		Иначе
			ТекстСШтрихКодом = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Номенклатура) + " " + формат(Цена, "ЧЦ=12; ЧДЦ=2");
		КонецЕсли;
		
		Если ВестиУчетСерийНоменклатуры
			И ЗначениеЗаполнено(СерияНоменклатуры) Тогда
			
			ТекстСШтрихКодом = ТекстСШтрихКодом + " " + СерияНоменклатуры;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТекстСШтрихКодом;
	
конецФункции

&НаСервере
Функция   ПолучитьЦенуНаСервере(Знач Номенклатура, Знач Количество, Знач ЕдиницаИзмерения)
	
	Цена = 0 ;
	
	Если Цена = 0 Тогда
		Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, Объект.ВидЦен, , ЛОЖЬ, Количество, , , , , , ЕдиницаИзмерения);
	КонецЕсли;
	
	Возврат Цена;
	
КонецФункции

&НаСервере
Функция   ПолучитьШтрихКодТовара(Знач Номенклатура, Знач Цена, Знач СерияНоменклатуры, Знач ЕдиницаИзмерения)
	
	Объект.Номенклатура = Номенклатура;
	Объект.Цена = Цена;
	Объект.СерияСуществующейНоменклатуры = СерияНоменклатуры;
	
	ШтрихКод = "";
	Если ИспользуютсяФормулы
		И ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
		
		Если ЗначениеЗаполнено(Номенклатура) Тогда
			Объект.НоменклатурнаяГруппа = Номенклатура.НоменклатурнаяГруппа;
			Объект.Производитель 		= Номенклатура.Производитель;
			
			Если ОбщийМодульПовтор.ВывестиНаименованияНаДругомЯзыке() Тогда
				
				ВозможноеПредставление = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Номенклатура, , ИСТИНА);
				Если НЕ ВозможноеПредставление = Неопределено Тогда
					Объект.Наименование = ВозможноеПредставление;
				Иначе
					Объект.Наименование = Номенклатура.Наименование;
				КонецЕсли;
			Иначе
				Объект.Наименование 	= Номенклатура.Наименование;
			КонецЕсли;
			
			Объект.СерияНоменклатуры	= СокрЛП(СерияНоменклатуры);
		КонецЕсли;
		
		ШтрихКод = "";
		
		Попытка 
			
			Если ЗначениеЗаполнено(Номенклатура.Производитель) 
				И ЗначениеЗаполнено(Номенклатура.Производитель.СвояФормулаШтрихКодаНоменклатуры) Тогда			
				
				ШтрихКод = ОбщийМодульТоварСервер.УстановитьШтрихКодНоменклатурыПоФормуле(Номенклатура, , Объект.ВидЦен, Объект.Дата, Объект.Цена, СерияНоменклатуры, ЕдиницаИзмерения);
				
			Иначе
				ШтрихКод = ОбщийМодульТоварСервер.УстановитьШтрихКодНоменклатурыПоФормуле(Номенклатура, Объект.ФормулаФормированияШтрихКода.Формула, Объект.ВидЦен, Объект.Дата, Объект.Цена, СерияНоменклатуры, ЕдиницаИзмерения);
			КонецЕсли;			
			
		Исключение 				
			ТекстОписаниеОшибки = ОписаниеОшибки();
			ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ТекстОписаниеОшибки);
		КонецПопытки;
		
	ИначеЕсли ВестиУчетСерийНоменклатуры
		И ЗначениеЗаполнено(СерияНоменклатуры) Тогда
		
		ШтрихКод = ОбщийМодульТоварСервер.ПолучитьШтрихКодСерии(СерияНоменклатуры);
		Если ПустаяСтрока(ШтрихКод) Тогда
			ШтрихКод = Номенклатура.ОсновнойШтрихКод;
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		ШтрихКод = Номенклатура.ОсновнойШтрихКод;
		
	КонецЕсли;
	
	Возврат ШтрихКод;
	
КонецФункции

&НаКлиенте
Процедура ПриЗакрытии()                                       // ПРИ ЗАКРЫТИИ
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
	
	Если ИспользоватьПодключаемоеОборудование Тогда
		ПоддерживаемыеТипыВО = Новый Массив ();
		ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		ПоддерживаемыеТипыВО.Добавить("ДисплейПокупателя");
		МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииНоменклатуры()
	
	СтрокаТовара = Элементы.Товары.ТекущиеДанные;	
	
	Если НЕ СтрокаТовара = Неопределено Тогда
		
		Номенклатура = СтрокаТовара.Номенклатура;
		Если ЗначениеЗаполнено(Номенклатура) Тогда  		
			
			Если ЗначениеЗаполнено(СтрокаТовара.ЕдиницаИзмерения)
				И НЕ ОбщийМодульКлиент.ЕдиницаПринадлежитНоменклатуре(Номенклатура, СтрокаТовара.ЕдиницаИзмерения) Тогда
				
				СтрокаТовара.ЕдиницаИзмерения = ПредопределенноеЗначение("Справочник.ЕдиницыИзмерения.ПустаяСсылка");
			КонецЕсли;
			
			Если СтрокаТовара.Количество = 0 Тогда
				СтрокаТовара.Количество = ОбщийМодульСервер.ПолучитьКоличествоПоУмолчанию(Номенклатура);
				
				Если СтрокаТовара.Количество = 0 Тогда
					СтрокаТовара.Количество = 1;
				КонецЕсли;
			КонецЕсли;
			
			СтрокаТовара.Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, Объект.ВидЦен, Объект.Дата, ЛОЖЬ, СтрокаТовара.Количество, , , , , , СтрокаТовара.ЕдиницаИзмерения);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                  // ПРИ ОТКРЫТИИ	
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	ПроверитьФормулы();
	ОпределитьПроизвольнуюПечатнуюФорму();
	
	Если ИспользоватьПодключаемоеОборудование
		И МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		
		ОписаниеОшибки = "" ;
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		ПоддерживаемыеТипыВО.Добавить("ДисплейПокупателя");
		
		Если НЕ МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке( "При подключении оборудования произошла ошибка") + ": " + ОписаниеОшибки + ".";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)   // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000200", ЭтаФорма, Отказ, );
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ИспользуютсяФормулы 			= ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом");
		ИспользоватьСкидки				= ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСкидки");
		ИспользоватьСложныйМеханизмЦен 	= ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСложныйМеханизмЦен");
		Элементы.Дата.Видимость			= ИспользоватьСложныйМеханизмЦен;
		ИспользоватьПроизвольныеПечатныеФормы 		= ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьПроизвольныеПечатныеФормы");
		Элементы.ТоварыПодборНоменклатуры.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВключитьМеханизмПодбораНоменклатуры");
		
		ВестиУчетСерийНоменклатуры 	= ПараметрыСеанса.ВестиУчетПоСериямНоменклатуры
		ИЛИ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетСерийНоменклатурыТолькоПриПоступлении");
		
		ВывестиДополнительнуюСтрокуЭтикетки	 = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВывестиДополнительнуюСтрокуЭтикетки");
		
		Элементы.ФормулаДополнительнойСтроки.Видимость = ИспользуютсяФормулы И ВывестиДополнительнуюСтрокуЭтикетки;
		ФормулаДополнительнойСтроки = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ФормулаДополнительнойСтрокиЭтикетки");
		Элементы.ФормулаДополнительнойСтроки.Видимость = ВывестиДополнительнуюСтрокуЭтикетки;
		Объект.ДополнительнаяСтрокаЭтикетки = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ДополнительнаяСтрокаЭтикетки");	
		
		ИспользоватьЕдиницыИзмеренияНоменклатуры = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьЕдиницыИзмеренияНоменклатуры");
		
		ЭтаФорма.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Печать этикеток для таблицы товаров документа") + ": " + Параметры.ДокументСТаблицей;
		
		Если ИспользоватьСложныйМеханизмЦен Тогда
			Попытка 
				Если ЗначениеЗаполнено(Параметры.ДокументСТаблицей) Тогда
					Объект.ВидЦен = Параметры.ДокументСТаблицей.ВидЦен;	
					Объект.Дата   = Параметры.ДокументСТаблицей.Дата + 1; //плюс секунда для учета установленных документом цен и прочего
				КонецЕсли;
				
			Исключение 	
			КонецПопытки;
			
			Если НЕ ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Объект.ВидЦен = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВидЦенРасходованияПоУмолчанию");
				
				Если НЕ ЗначениеЗаполнено(Объект.ВидЦен) Тогда
					Объект.ВидЦен = ПредопределенноеЗначение("Справочник.ВидыЦен.ГлавныйВидЦен");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ДокументСТаблицей = Параметры.ДокументСТаблицей;
		Объект.Товары.Очистить();
		Если ТипЗнч(ДокументСТаблицей) = Тип("ДокументСсылка.Инвентаризации") Тогда		
			
			Для Каждого ТоварыДокумента Из ДокументСТаблицей.Товары Цикл
				
				СтрокаТовара = Объект.Товары.Добавить();
				СтрокаТовара.Номенклатура = ТоварыДокумента.Номенклатура;
				Если ЗначениеЗаполнено(ТоварыДокумента.КоличествоПоФакту) Тогда
					СтрокаТовара.Количество	= ТоварыДокумента.КоличествоПоФакту;
					СтрокаТовара.Сумма 		= ТоварыДокумента.СуммаПоФакту;
				Иначе
					СтрокаТовара.Количество	= ТоварыДокумента.КоличествоУчет;
					СтрокаТовара.Сумма 		= ТоварыДокумента.СуммаУчет;
				КонецЕсли;			
				СтрокаТовара.Цена = ТоварыДокумента.Цена;
				
			КонецЦикла;
			
		ИначеЕсли ЗначениеЗаполнено(ДокументСТаблицей) Тогда			
			Попытка
				Объект.Дата = Параметры.ДокументСТаблицей.Дата + 1; //плюс секунда для учета установленных документом цен и прочего
				Объект.Товары.Загрузить(ДокументСТаблицей.Товары.Выгрузить());	
				Клиент = ДокументСТаблицей.КлиентПоставщик;
				Если ЗначениеЗаполнено(Клиент)
					И ТипЗнч(Клиент) = Тип("СправочникСсылка.Клиенты") Тогда
					
					Объект.ОсновнаяФормулаТекстаЭтикетки = Клиент.ФормулаТекстаЭтикетки;
				КонецЕсли;
				
			Исключение // для перемещения товара
			КонецПопытки;
		КонецЕсли;		
		
		Если НЕ ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
			Попытка 
				Объект.Склад = Параметры.ДокументСТаблицей.СкладКуда;
				Если ЗначениеЗаполнено(Объект.Склад) Тогда
					Объект.ОсновнаяФормулаТекстаЭтикетки = Объект.склад.ФормулаТекстаЭтикетки;
				КонецЕсли;
			Исключение 	
			КонецПопытки;
			
			Если НЕ ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
				Попытка 
					Объект.Склад = Параметры.ДокументСТаблицей.Склад;
					Если ЗначениеЗаполнено(Объект.Склад) Тогда
						Объект.ОсновнаяФормулаТекстаЭтикетки = Объект.склад.ФормулаТекстаЭтикетки;
					КонецЕсли;
				Исключение 	
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.Склад)
			И ЗначениеЗаполнено(Параметры.ДокументСТаблицей) Тогда
			
			Попытка 
				Объект.Склад = Параметры.ДокументСТаблицей.Склад;
			Исключение 	
			КонецПопытки;	
		КонецЕсли;
		
		Если ПараметрыСеанса.НеМожетМенятьЦены  Тогда
			Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда			
				Элементы.ВидЦен.Доступность = ЛОЖЬ;			
			КонецЕсли;
			Элементы.ТоварыЦена.Доступность = ЛОЖЬ;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.Склад) Тогда
			Объект.Склад = Параметры.Склад;
		КонецЕсли;
		Если ЗначениеЗаполнено(Параметры.Дата) Тогда
			Объект.Дата = Параметры.Дата;
		КонецЕсли;
		
		Если Объект.Дата = '00010101000000'  Тогда
			Объект.Дата = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
		КонецЕсли;
		
		ПропорцияЭтикетки = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ФорматЭтикетки");	
		ИмяПринтера = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("НаименованиеПринтераШтрихКодов");
		Элементы.ИмяПринтера.Видимость = ЗначениеЗаполнено(ИмяПринтера);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуТекстаЗаголовка(Команда)
	ПроверитьФормулуТекстаЗаголовкаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуТекстаЗаголовкаНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ФормулаТекстаЗаголовка) Тогда
		ОбщийМодульСервер.ПроверитьФормулу(Объект.ФормулаТекстаЗаголовка.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуТекстаЭтикетки(Команда)
	ПроверитьФормулуТекстаЭтикеткиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуТекстаЭтикеткиНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		ОбщийМодульСервер.ПроверитьФормулу(Объект.ОсновнаяФормулаТекстаЭтикетки.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуШтрихКода(Команда)
	ПроверитьФормулуШтрихКодаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуШтрихКодаНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
		ОбщийМодульСервер.ПроверитьФормулу(Объект.ФормулаФормированияШтрихКода.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулы()
	
	Если НЕ ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
		Объект.ФормулаФормированияШтрихКода = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ОсновнаяФормулаШтрихКодаНоменклатуры");	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		Объект.ОсновнаяФормулаТекстаЭтикетки = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ОсновнаяФормулаТекстаЭтикетки");
	КонецЕсли;        	
	ОбновитьПримеры();
	
КонецПроцедуры

&НаКлиенте
Процедура ПропорцияЭтикеткиПриИзменении(Элемент)
	ПропорцияЭтикеткиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПропорцияЭтикеткиПриИзмененииНаСервере()
	
	Константы.ФорматЭтикетки.Установить(ПропорцияЭтикетки);
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаСервере
Процедура СменитьЦенуТаблицы()
	
	Для Каждого СтрокаТовара Из Объект.Товары цикл
		СтрокаТовара.Цена 	= ОбщийМодульСервер.ПолучитьЦенуНаСервере(СтрокаТовара.Номенклатура, Объект.ВидЦен, Объект.Дата, ИСТИНА, СтрокаТовара.количество, , , , , , СтрокаТовара.ЕдиницаИзмерения);
		СтрокаТовара.Сумма = СтрокаТовара.Цена * СтрокаТовара.Количество;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	ПриИзмененииНоменклатуры();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Объект.Товары.Очистить();
		Для Каждого Подбор Из ВыбранноеЗначение Цикл
			
			Строка = Объект.Товары.Добавить();
			Строка.Номенклатура      = Подбор.Номенклатура;
			Строка.СерияНоменклатуры = Подбор.СерияНоменклатуры;
			Строка.Количество        = Подбор.Количество;
			Строка.Цена  			 = Подбор.Цена;
			
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры   

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	ТоварыПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТоварыПриИзмененииНаСервере()
	ОбновитьПримеры();
КонецПроцедуры

&НаКлиенте
Процедура Установить1(Команда)
	
	Для Каждого СтрокаТовара Из объект.Товары Цикл
		СтрокаТовара.Количество = 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормулаДополнительнойСтрокиПриИзменении(Элемент)
	ОбновитьПримеры();
КонецПроцедуры

&НаКлиенте
Процедура ФормулаТекстаЗаголовкаПриИзменении(Элемент)
	ОбновитьТекстаЗаголовкаЭтикетки();
КонецПроцедуры

&НаКлиенте
Процедура ФормулаФормированияШтрихКодаПриИзменении(Элемент)
	ФормулаФормированияШтрихКодаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ФормулаФормированияШтрихКодаПриИзмененииНаСервере()
	ОбновитьПримеры();
КонецПроцедуры
