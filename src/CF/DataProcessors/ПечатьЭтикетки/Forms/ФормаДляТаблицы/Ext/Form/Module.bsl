//sza140119-0049 
//sza130913-1205 : 

&НаСервере
Процедура ПроверитьФормулы()
	
	Если НЕ ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
		Объект.ФормулаФормированияШтрихКода = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ОсновнаяФормулаШтрихКодаНоменклатуры");	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		Объект.ОсновнаяФормулаТекстаЭтикетки = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ОсновнаяФормулаТекстаЭтикетки");
	КонецЕсли;        	
	ОбновитьПримеры();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                                                    // ПРИ ОТКРЫТИИ	
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	ПроверитьФормулы();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	ИспользуютсяФормулы 			= ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом");
	ИспользоватьСложныйМеханизмЦен 	= ПараметрыСеанса.ИспользоватьСложныйМеханизмЦенПС ;
	элементы.Дата.Видимость 		= ИспользоватьСложныйМеханизмЦен;
	ИспользуютсяСерииНоменклатуры 	= параметрысеанса.ВестиУчетПоСериямНоменклатуры;
	
	Этаформа.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Печать этикеток для таблицы товаров документа:") + " " + Параметры.ДокументСТаблицей;
	
	Если ИспользоватьСложныйМеханизмЦен Тогда
		Попытка 
			Если ЗначениеЗаполнено(Параметры.ДокументСТаблицей) Тогда
				Объект.ВидЦен = Параметры.ДокументСТаблицей.ВидЦен;	
				объект.дата = Параметры.ДокументСТаблицей.Дата;
			КонецЕсли;
			
		Исключение 	
		КонецПопытки;
		
		Если НЕ ЗначениеЗаполнено(Объект.ВидЦен) Тогда
			Объект.ВидЦен = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВидЦенРасходованияПоУмолчанию") ;
			
			Если НЕ ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Объект.ВидЦен = Справочники.ВидыЦен.ОсновнойВидЦен ;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Объект.Товары.Очистить();
	Если ТипЗнч(Параметры.ДокументСТаблицей) = Тип("ДокументСсылка.Инвентаризации") Тогда
		Для Каждого ТоварыДокумента Из Параметры.ДокументСТаблицей.Товары Цикл
			
			ТоварыСтарока = Объект.Товары.Добавить();
			ТоварыСтарока.Номенклатура = ТоварыДокумента.Номенклатура;
			Если ЗначениеЗаполнено(ТоварыДокумента.КоличествоПоФакту) Тогда
				ТоварыСтарока.Количество 	= ТоварыДокумента.КоличествоПоФакту;
				ТоварыСтарока.Сумма 		= ТоварыДокумента.СуммаПоФакту;
			Иначе
				ТоварыСтарока.Количество 	= ТоварыДокумента.КоличествоУчет;
				ТоварыСтарока.Сумма 		= ТоварыДокумента.СуммаУчет;
			КонецЕсли;			
			ТоварыСтарока.Цена = ТоварыДокумента.Цена;
			
		КонецЦикла;
		
	ИначеЕсли ЗначениеЗаполнено(Параметры.ДокументСТаблицей) Тогда			
		
		Объект.Товары.Загрузить(Параметры.ДокументСТаблицей.Товары.Выгрузить());	
		попытка
			Клиент = Параметры.ДокументСТаблицей.КлиентПоставщик;
			Если ЗначениеЗаполнено(Клиент)
				и ТипЗнч(Клиент) = Тип("СправочникСсылка.Клиенты") Тогда
				
				Объект.ОсновнаяФормулаТекстаЭтикетки = Клиент.ФормулаТекстаЭтикетки;
			КонецЕсли;
			
		исключение //для перемещения товара
		конецпопытки;
	КонецЕсли;		
	
	Если НЕ ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		Попытка 
			Склад = Параметры.ДокументСТаблицей.СкладКуда;
			Если ЗначениеЗаполнено(Склад) Тогда
				Объект.ОсновнаяФормулаТекстаЭтикетки = склад.ФормулаТекстаЭтикетки;
			КонецЕсли;
		Исключение 	
		конецпопытки;
		
		Если НЕ ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
			Попытка 
				Склад = Параметры.ДокументСТаблицей.Склад;
				Если ЗначениеЗаполнено(Склад) Тогда
					Объект.ОсновнаяФормулаТекстаЭтикетки = склад.ФормулаТекстаЭтикетки;
				КонецЕсли;
			Исключение 	
			конецпопытки;
		КонецЕсли;
	КонецЕсли;
	
	Если параметрысеанса.НеМожетМенятьЦены  тогда
		Если ЗначениеЗаполнено(Объект.ВидЦен) тогда			
			элементы.ВидЦен.Доступность = ложь;			
		КонецЕсли;
		элементы.ТоварыЦена.Доступность = ложь;
	КонецЕсли;
	
	Если объект.дата = '00010101000000'  Тогда
		объект.дата = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьЭтикеткиДляВсехСтрокТаблицы(Команда)
	
	Если ОбщееКоличество() <= 30 
		или Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что хотите распечатать такое число") + " (" + объект.Количество + ")?", режимдиалогавопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		
		ПараметрыФормыПечати = Новый Структура;
		ПараметрыФормыПечати.Вставить("НаименованиеДокумента", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Этикетки"));
		ФормаПечати = получитьформу("ОбщаяФорма.ФормаПечати", ПараметрыФормыПечати);	
		
		ЕстьЧтоПечататьВФорме = НапечататьЭтикеткиДляВсехСтрокТаблицыНаСервере(ФормаПечати.Результат);
		
		если ЕстьЧтоПечататьВФорме Тогда
			ФормаПечати.Заголовок = ПараметрыФормыПечати.НаименованиеДокумента;
			ФормаПечати.Открыть();
		Иначе
			ФормаПечати = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция   ОбщееКоличество() 
	
	Объект.Количество = Объект.Товары.Итог("Количество");
	Возврат Объект.Количество;
	
КонецФункции //ОбщееКоличество

&НаСервере
Функция   НапечататьЭтикеткиДляВсехСтрокТаблицыНаСервере(табдокобщ)
	
	ЕстьЧтоПечататьВФорме = Ложь;
	
	Для Каждого СтрокаТовара из Объект.Товары цикл
		ШтрихКод 		  = ПолучитьШтрихКодТовара(СтрокаТовара.номенклатура, СтрокаТовара.цена, СтрокаТовара.СерияНоменклатуры);
		ТекстСШтрихКодом  = ПолучитьТекстСШтрихКодомТовара(СтрокаТовара.номенклатура, СтрокаТовара.цена, ШтрихКод, СтрокаТовара.СерияНоменклатуры);
		
		Табдок = ОбщийМодульСерверНапечататьЭтикетку(ШтрихКод, ТекстСШтрихКодом, СтрокаТовара.Количество);
		
		если не Табдок = Неопределено 
			и не ЗначениеЗаполнено(ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("НаименованиеПринтераШтрихКодов")) Тогда
			
			ЕстьЧтоПечататьВФорме = Истина;
			ТабдокОбщ.Вывести(Табдок);									
		КонецЕсли;
		
	КонецЦикла;
	ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напечатал этикетку для таблицы. "), 2);
	
	Возврат ЕстьЧтоПечататьВФорме;
	
КонецФункции

&Насервере
Функция   ПолучитьТекстСШтрихКодомТовара(Номенклатура, Цена, ШтрихКод, СерияНоменклатуры)
	
	ТекстСШтрихКодом = "";
	
	Если ИспользуютсяФормулы
		И ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		
		Попытка 
			НоменклатурнаяГруппа 	= Номенклатура.НоменклатурнаяГруппа;
			Производитель  			= Номенклатура.Производитель;
			СерияНоменклатуры 		= СерияНоменклатуры;
			
			выполнить("ТекстСШтрихКодом = """"+" + Объект.ОсновнаяФормулаТекстаЭтикетки.Формула + ";");
			
		Исключение 	
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка:") + " " + ОписаниеОшибки();
			Сообщение.Поле 	= "ОсновнаяФормулаТекстаЭтикетки";
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			
		КонецПопытки;
		
	Иначе 		
		если не сокрлп(ШтрихКод) = "" тогда
			ТекстСШтрихКодом = ШтрихКод;
		иначе
			ТекстСШтрихКодом = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Номенклатура, , Ложь) + " " + формат(Цена, "ЧЦ=12; ЧДЦ=2");
		КонецЕсли;
		
		Если ИспользуютсяСерииНоменклатуры
			И ЗначениеЗаполнено(СерияНоменклатуры) Тогда
			
			ТекстСШтрихКодом = ТекстСШтрихКодом + " " + СерияНоменклатуры;
		КонецЕсли;
		
	КонецЕсли;
	
	возврат ТекстСШтрихКодом;
	
конецФункции

&НаСервере
Функция   ПолучитьШтрихКодТовара(Номенклатура, Цена, СерияНоменклатуры)
	
	Объект.Номенклатура = Номенклатура;
	Объект.Цена = Цена;
	Объект.СерияСуществующейНоменклатуры = СерияНоменклатуры;
	
	ШтрихКод = "";
	Если ИспользуютсяФормулы
		И ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
		
		Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
			Объект.НоменклатурнаяГруппа = объект.Номенклатура.НоменклатурнаяГруппа;
			Объект.Производитель 		= Объект.Номенклатура.Производитель;
			Объект.Наименование 		= Объект.Номенклатура.Наименование;
			Объект.СерияНоменклатуры	= сокрлп(СерияНоменклатуры);
		КонецЕсли;
		
		ШтрихКод = "";
		
		Попытка 
			Номенклатура = Объект.Номенклатура;
			
			Если ЗначениеЗаполнено(Номенклатура.Производитель) 
				и ЗначениеЗаполнено(Номенклатура.Производитель.СвояФормулаШтрихКодаНоменклатуры) Тогда			
				
				ШтрихКод = ОбщийМодульТоварСервер.УстановитьШтрихКодНоменклатурыПоФормуле(Номенклатура, , Объект.ВидЦен, объект.Дата, объект.Цена, СерияНоменклатуры);
				
			иначе
				ШтрихКод = ОбщийМодульТоварСервер.УстановитьШтрихКодНоменклатурыПоФормуле(Номенклатура, Объект.ФормулаФормированияШтрихКода.Формула, Объект.ВидЦен, объект.Дата, объект.Цена, СерияНоменклатуры);
			КонецЕсли;			
			
		Исключение 	
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка:") + " " + ОписаниеОшибки();
			Сообщение.Поле 	= "ФормулаФормированияШтрихКода";
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			
		КонецПопытки;
		
	иначеесли ИспользуютсяСерииНоменклатуры
		и ЗначениеЗаполнено(СерияНоменклатуры)  тогда
		
		ШтрихКод = ОбщийМодульТоварСервер.ПолучитьШтрихКодСерии(СерияНоменклатуры);
		Если ШтрихКод = "" Тогда
			ШтрихКод = Объект.номенклатура.ОсновнойШтрихКод;
		КонецЕсли;
		
	иначеесли значениезаполнено(Объект.Номенклатура) тогда
		ШтрихКод = Объект.номенклатура.ОсновнойШтрихКод;
		
	КонецЕсли;
	
	возврат ШтрихКод;
	
КонецФункции

&НаСервере
Функция   ОбщийМодульСерверНапечататьЭтикетку(ШтрихКод, ТекстСШтрихКодом, Количество, Табдок = неопределено)
	
	СтруктураПечати = Новый Структура;
	СтруктураПечати.Вставить("ШтрихКод", ШтрихКод);
	СтруктураПечати.Вставить("ТекстСШтрихКодом", ТекстСШтрихКодом);
	СтруктураПечати.Вставить("Количество", Количество);
	
	ОбщийМодульТоварСервер.НапечататьЭтикетку(СтруктураПечати, ТабДок);		
	
	Возврат ТабДок;
	
КонецФункции

&НаКлиенте
Процедура ФормулаФормированияШтрихКодаПриИзменении(Элемент)
	ФормулаФормированияШтрихКодаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ФормулаФормированияШтрихКодаПриИзмененииНаСервере()
	ОбновитьПримеры();
КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяФормулаТекстаЭтикеткиПриИзменении(Элемент)
	ОсновнаяФормулаТекстаЭтикеткиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОсновнаяФормулаТекстаЭтикеткиПриИзмененииНаСервере()
	ОбновитьПримеры();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	ТоварыПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТоварыПриИзмененииНаСервере()
	ОбновитьПримеры();
КонецПроцедуры

&НаСервере
Процедура ОбновитьПримеры()
	
	ШтрихКод = "";
	ПримерШтрихКодаДляПервойСтрокиТаблицы = "";
	ПримерТекстаСШтрихКодом = "";
	
	Если Объект.Товары.Количество() > 0
		и ЗначениеЗаполнено(Объект.Товары[0].Номенклатура) Тогда		
		
		Если ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
			Попытка 
				Номенклатура = Объект.Товары[0].Номенклатура;
				Цена = Объект.Товары[0].Цена;
				если цена = 0 тогда
					Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, Объект.ВидЦен, ОбщийМодульСервисСервер.ПользователяТекущаяДата(), Истина, , , , , Объект.Ссылка);
					если цена = 0 тогда
						Цена = Объект.Товары[0].Цена;	
						если цена = 0 тогда
							Цена = Номенклатура.Цена;	
						КонецЕсли;
					КонецЕсли;	
				КонецЕсли;
				ПримерШтрихКодаДляПервойСтрокиТаблицы = ОбщийМодульТоварСервер.УстановитьШтрихКодНоменклатурыПоФормуле(Объект.Товары[0].Номенклатура, Объект.ФормулаФормированияШтрихКода.Формула, Объект.ВидЦен, объект.Дата, цена, Объект.Товары[0].СерияНоменклатуры);
				ШтрихКод = ПримерШтрихКодаДляПервойСтрокиТаблицы;
				
			Исключение 	
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка:") + " " + ОписаниеОшибки();
				Сообщение.Поле 	= "ФормулаФормированияШтрихКода";
				Сообщение.УстановитьДанные(Объект);
				Сообщение.Сообщить();
				
			КонецПопытки;
		Иначе
			ШтрихКод = Объект.Товары[0].Номенклатура.ОсновнойШтрихКод;
			ПримерШтрихКодаДляПервойСтрокиТаблицы = ШтрихКод;
		КонецЕсли;		
		
	КонецЕсли;	
	
	Если Объект.Товары.Количество() > 0
		и ЗначениеЗаполнено(Объект.Товары[0].Номенклатура) Тогда		
		
		Номенклатура 		= Объект.Товары[0].Номенклатура;
		СерияНоменклатуры 	= Объект.Товары[0].СерияНоменклатуры;
		Цена 				= Объект.Товары[0].Цена;
		
		если цена = 0 тогда
			Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, Объект.ВидЦен, ОбщийМодульСервисСервер.ПользователяТекущаяДата(), Истина, , , , , Объект.Ссылка);
			если цена = 0 тогда
				Цена = Объект.Товары[0].Цена;	
				если цена = 0 тогда
					Цена = Номенклатура.Цена;	
				КонецЕсли;
			КонецЕсли;         	
		КонецЕсли;
		
		
		Если ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
			Попытка 				
				Объект.Номенклатура 		= Номенклатура;
				Объект.НоменклатурнаяГруппа = Номенклатура.НоменклатурнаяГруппа;
				Объект.Производитель 		= Номенклатура.производитель; 				
				НоменклатурнаяГруппа 		= Объект.НоменклатурнаяГруппа;
				Производитель 				= Объект.Производитель;				
				
				Выполнить(" ПримерТекстаСШтрихКодом = """" + " + Объект.ОсновнаяФормулаТекстаЭтикетки.Формула + ";");
				
			Исключение 	
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка:") + " " + ОписаниеОшибки();
				Сообщение.Поле 	= "ОсновнаяФормулаТекстаЭтикетки";
				Сообщение.УстановитьДанные(Объект);
				Сообщение.Сообщить();
				
			КонецПопытки;
		Иначе
			Если ЗначениеЗаполнено(ШтрихКод) Тогда
				ПримерТекстаСШтрихКодом = ШтрихКод;
			Иначе
				ПримерТекстаСШтрихКодом = сокрлп(Номенклатура) + " " + формат(цена, "ЧЦ=10; ЧДЦ=2") + " " + ?(ЗначениеЗаполнено(объект.ВидЦен), объект.ВидЦен.ВалютаЦены, Справочники.Валюты.ОсновнаяВалюта);
			КонецЕсли;
			
		КонецЕсли;				
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуШтрихКода(Команда)
	ПроверитьФормулуШтрихКодаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуШтрихКодаНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
		ОбщийМодульСервер.ПроверитьФормулу(Объект.ФормулаФормированияШтрихКода.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуТекстаЭтикетки(Команда)
	ПроверитьФормулуТекстаЭтикеткиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуТекстаЭтикеткиНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		ОбщийМодульСервер.ПроверитьФормулу(Объект.ОсновнаяФормулаТекстаЭтикетки.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                                  // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ВидЦенПриИзменении(Элемент)
	
	сменитьценутаблицы();
	ОбновитьПримеры();
	
КонецПроцедуры

&НаСервере
Процедура сменитьценутаблицы()

	для каждого строкатаблицы из объект.Товары цикл
		строкатаблицы.цена 	= ОбщийМодульСервер.ПолучитьЦенуНаСервере(строкатаблицы.номенклатура, объект.ВидЦен, объект.дата, истина, строкатаблицы.количество, , , , Объект.Ссылка);
		строкатаблицы.сумма = строкатаблицы.цена * строкатаблицы.количество;
	КонецЦикла;	

КонецПроцедуры
