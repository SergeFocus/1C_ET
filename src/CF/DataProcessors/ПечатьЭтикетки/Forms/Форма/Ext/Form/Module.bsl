//sza140412-0931 SZA: 
//sza130825-0107

&НаКлиенте
Процедура Напечатать(Команда)
	
	ПредыдущаяНоменклатура = объект.Номенклатура;
	ЗакрытьИПередать(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьИПередать(ПечататьЦенникШтрихКод) 
	
	Отмена = Ложь;				
	
	Если не ЗначениеЗаполнено(объект.Номенклатура)
		и ЗначениеЗаполнено(объект.Производитель)
		и ЗначениеЗаполнено(объект.НоменклатурнаяГруппа)
		и ЗначениеЗаполнено(объект.Цена)
		и ЗначениеЗаполнено(Объект.ШтрихКод) тогда
		
		СтруктураНоменклатура 	= ОбщийМодульСерверПолучитьНоменклатуруПоШтрихКоду(Объект.ШтрихКод);
		объект.Номенклатура 	= СтруктураНоменклатура.Номенклатура;
		объект.СерияСуществующейНоменклатуры = СтруктураНоменклатура.СерияНоменклатуры;
		
		Если НЕ ЗначениеЗаполнено(объект.Номенклатура) Тогда
			
			Если ИспользоватьСложныйМеханизмЦен
				и не ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вид цен не указан!");
				Сообщение.Поле  = "ВидЦен";
				Сообщение.УстановитьДанные(Объект);
				Сообщение.Сообщить();
				
				Отмена = Истина;				
				
			КонецЕсли;
			
			объект.Номенклатура = ОбщийМодульСерверСоздатьНоменклатуру(Объект.ШтрихКод, объект.Производитель, Объект.НоменклатурнаяГруппа, Объект.Цена, Объект.наименование) ;
			
			если ИспользоватьУчетПоСериям тогда
				объект.СерияСуществующейНоменклатуры = ОбщийМодульТоварСервер.ОбнаружитьСериюНоменклатуры(Объект.Номенклатура, Объект.СерияНоменклатуры);			                                	
			КонецЕсли;
			
			Если объект.Номенклатура = Неопределено
				или НЕ ЗначениеЗаполнено(объект.Номенклатура) Тогда
				
				отмена = истина;
			иначе
				ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Создал номенклатуру:") + " " + объект.Номенклатура + объект.СерияНоменклатуры, 2);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Если не отмена
		и (ПечататьЦенникШтрихКод 
		или (объект.Количество <= 30 
		или Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что хотите распечатать такое число") + " (" + объект.Количество + ")?", режимдиалогавопрос.ДаНет) = КодВозвратаДиалога.Да)) Тогда
		
		глПроверятьСообщения = Истина;
		Если НЕ ЗначениеЗаполнено(объект.Цена) Тогда
			//Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не указана цена!"));
			ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не указана цена!"));			
			
		КонецЕсли;
		
		Если ПечататьЦенникШтрихКод Тогда
			
 			Табдок = ОбщийМодульСерверНапечататьЭтикетку();		
			если не табдок = Неопределено 
				и не ЗначениеЗаполнено(ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("НаименованиеПринтераШтрихКодов")) Тогда
				
				ПараметрыФормыПечати = Новый Структура("ТабДок", ТабДок);
				ПараметрыФормыПечати.Вставить("НаименованиеДокумента", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Этикетка"));
				ПараметрыФормыПечати.Вставить("НеПечататьНичегоДополнительно", Истина);
				
				ФормаПечати = получитьформу("ОбщаяФорма.ФормаПечати", ПараметрыФормыПечати);	
				ФормаПечати.Заголовок = ПараметрыФормыПечати.НаименованиеДокумента;
				ФормаПечати.Открыть();
			Иначе
				Табдок.напечатать();  
			КонецЕсли;
			
			ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напечатал этикетку. "), 2);
		КонецЕсли;
		
		Если объект.ЭтоДобавлениеИзДокумента Тогда
			
			структураОтпечати = новый Структура;
			структураОтпечати.Вставить("ШтрихКод", Объект.ШтрихКод);
			структураОтпечати.Вставить("Количество", объект.Количество);
			структураОтпечати.Вставить("Номенклатура", объект.Номенклатура);
			структураОтпечати.Вставить("СерияНоменклатуры", объект.СерияСуществующейНоменклатуры);
			структураОтпечати.Вставить("Цена", объект.Цена);
			структураОтпечати.Вставить("Склад", объект.Склад);
			структураОтпечати.Вставить("ЕдиницаИзмерения", Объект.ЕдиницаИзмерения);
			структураОтпечати.Вставить("Дата", Дата);
			этаформа.Закрыть(структураОтпечати);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры //ЗакрытьИПередать

&НаСервере
Функция	  ОбщийМодульСерверНапечататьЭтикетку()
	
	Если ПараметрыСеанса.ВестиУчетНоменклатурыВРазрезеНоменклатурныхГруппПС
		и НЕ ЗначениеЗаполнено(объект.НоменклатурнаяГруппа)
		и ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("НоменклатурнаяГруппаОбязательныйРеквизитЛюбойНоменклатуры") Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Номенклатурная группа обязательный реквизит номенклатуры, но она не указана!");
		Сообщение.Сообщить();
		ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Номенклатурная группа обязательный реквизит номенклатуры, но она не указана!"));
		Таб = Неопределено;
		
	иначе           		
		СтруктураПечати = Новый Структура;
		СтруктураПечати.Вставить("ШтрихКод", Объект.ШтрихКод);
		СтруктураПечати.Вставить("ТекстСШтрихКодом", Объект.ТекстСШтрихКодом);
		СтруктураПечати.Вставить("Количество", Объект.Количество);		
		СтруктураПечати.Вставить("Склад", Объект.Склад);
		СтруктураПечати.Вставить("Дата", Дата);
		СтруктураПечати.Вставить("ТекстЗаголовка", объект.ТекстЗаголовка);
		
		Таб = ОбщийМодульТоварСервер.НапечататьЭтикетку(СтруктураПечати);		
		
	КонецЕсли;
	
	Возврат Таб;
	
КонецФункции

&НаСервере
функция   ОбщийМодульСерверСоздатьНоменклатуру(ШтрихКод, Производитель, НоменклатурнаяГруппа, Цена, наименование)
	
	возврат ОбщийМодульТоварСервер.СоздатьНоменклатуру(ШтрихКод, Производитель, НоменклатурнаяГруппа, Цена, наименование, Объект.ВидЦен, ,Объект.СерияНоменклатуры);
	
конецфункции

&НаСервере
функция   ОбщийМодульСерверПолучитьНоменклатуруПоШтрихКоду(ШтрихКод)
	возврат ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(ШтрихКод, Истина, Истина);
конецфункции

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	
	ДанныеНоменклатурыПриИзмененииНаСервере();
	обновитьШК();
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		этаформа.ТекущийЭлемент = Элементы.Количество;
	КонецЕсли;
	НаСумму = объект.Количество * объект.Цена;
	
КонецПроцедуры

Процедура ОбновитьШК() //Экспорт	
	
	ПроверитьФормулы();
	ОбновитьШтрихКод();
	ОбновитьТекстСШтрихКодом();
	ОбновитьТекстаЗаголовкаЭтикетки();
	
	элементы.НоваяНоменклатура.Видимость = ЗначениеЗаполнено(объект.Номенклатура);
	
КонецПроцедуры //обновитьШК()

процедура ОбновитьТекстСШтрихКодом();
	ОбновитьТекстСШтрихКодомНаСервере();
конецпроцедуры

&Насервере
процедура ОбновитьТекстСШтрихКодомНаСервере() 	
	
	ОбъектТекстСШтрихКодом = "";
	
	Если ИспользуютсяФормулы 
		и ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		
		Попытка 
			если значениезаполнено(Объект.Номенклатура) тогда
				Номенклатура = Объект.Номенклатура;
			иначе
				Номенклатура = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(Объект.ШтрихКод, , Истина);	
			конецесли;
			Дата  = Дата;
			Склад = Объект.Склад;
			ШтрихКод			 = Объект.ШтрихКод;			
			НоменклатурнаяГруппа = Объект.НоменклатурнаяГруппа;
			Производитель  		 = Объект.Производитель;
			Если ИспользоватьУчетПоСериям Тогда
				Серия = ?(ЗначениеЗаполнено(объект.СерияСуществующейНоменклатуры), объект.СерияСуществующейНоменклатуры.Наименование, объект.СерияНоменклатуры);
			Конецесли;
			Цена 				 = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен, Дата, , , , , , , , Объект.ЕдиницаИзмерения);
			если цена = 0 тогда
				Цена = Объект.Цена;
			КонецЕсли;
			
			выполнить("ОбъектТекстСШтрихКодом = """"+" + Объект.ОсновнаяФормулаТекстаЭтикетки.Формула + ";");
			Объект.ТекстСШтрихКодом = ОбъектТекстСШтрихКодом;		
			
		Исключение 	
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка:") + " " + ОписаниеОшибки();
			Сообщение.Поле 	= "ОсновнаяФормулаТекстаЭтикетки";
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			
		КонецПопытки;
		
	Иначе
		если не сокрлп(Объект.ШтрихКод) = "" тогда
			ОбъектТекстСШтрихКодом = Объект.ШтрихКод;
		иначе
			если значениезаполнено(Объект.Номенклатура) тогда
				Номенклатура = Объект.Номенклатура;
			иначе
				Номенклатура = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(Объект.ШтрихКод, , Истина);	
			конецесли;
			
			Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен, Дата, , , , , , , , Объект.ЕдиницаИзмерения);
			ОбъектТекстСШтрихКодом = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Номенклатура, , Ложь) + " " + формат(Цена, "ЧЦ=12; ЧДЦ=2");
		КонецЕсли;
		
		Если ИспользоватьУчетПоСериям
			И ЗначениеЗаполнено(объект.СерияСуществующейНоменклатуры) Тогда
			
			ОбъектТекстСШтрихКодом = ОбъектТекстСШтрихКодом + " " + объект.СерияСуществующейНоменклатуры;
		КонецЕсли;
		
	КонецЕсли;
	Объект.ТекстСШтрихКодом = ОбъектТекстСШтрихКодом;
	
конецпроцедуры

&Насервере
процедура ОбновитьШтрихКод()
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		Объект.ШтрихКод = Объект.Номенклатура.ОсновнойШтрихКод;
		Объект.ТекстСШтрихКодом = Объект.ШтрихКод;
	КонецЕсли;
	
	ОбновитьТекстаЗаголовкаЭтикетки();
	
	ОбновитьШтрихКодНаСервере();
	НаСумму = объект.Количество * объект.Цена;
	
конецпроцедуры

&Насервере
процедура ОбновитьШтрихКодНаСервере()
	
	Если ИспользуютсяФормулы 
		и ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
		
		Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
			
			Объект.НоменклатурнаяГруппа = объект.Номенклатура.НоменклатурнаяГруппа;
			Объект.Производитель 		= Объект.Номенклатура.Производитель;
			Объект.Наименование 		= Объект.Номенклатура.Наименование;			
			Объект.Цена 				= ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен, Дата, , , , , , , , Объект.ЕдиницаИзмерения);
			
			Если ИспользоватьУчетПоСериям
				И ЗначениеЗаполнено(Объект.СерияСуществующейНоменклатуры) Тогда
				
				объект.СерияНоменклатуры = Объект.СерияСуществующейНоменклатуры.Наименование;
				
			ИначеЕсли ИспользоватьУчетПоСериям
				И ЗначениеЗаполнено(объект.СерияНоменклатуры) Тогда
				
				Объект.СерияСуществующейНоменклатуры = ОбщийМодульТоварСервер.ОбнаружитьСериюНоменклатуры(объект.Номенклатура, объект.СерияНоменклатуры);
				
			КонецЕсли;
		КонецЕсли;
		
		Объект.ШтрихКод = "";
		
		Попытка 
			Номенклатура = Объект.Номенклатура;
			
			Объект.ШтрихКод = ОбщийМодульТоварСервер.УстановитьШтрихКодНоменклатурыПоФормуле(Объект, Объект.ФормулаФормированияШтрихКода.Формула, Объект.ВидЦен, Дата, объект.Цена, Объект.СерияСуществующейНоменклатуры, Объект.ЕдиницаИзмерения);
			
		Исключение 	
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка:") + " " + ОписаниеОшибки();
			Сообщение.Поле 	= "ФормулаФормированияШтрихКода";
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			
		КонецПопытки;
		
	ИначеЕсли ИспользоватьУчетПоСериям
		И ЗначениеЗаполнено(Объект.СерияСуществующейНоменклатуры) тогда
		
		Объект.ШтрихКод = ОбщийМодульТоварСервер.ПолучитьШтрихКодСерии(Объект.СерияСуществующейНоменклатуры);
		
		Если Объект.ШтрихКод = "" 
			и значениезаполнено(Объект.Номенклатура) Тогда
			
			Объект.ШтрихКод = Объект.номенклатура.ОсновнойШтрихКод;
		КонецЕсли;
		
	иначеесли значениезаполнено(Объект.Номенклатура) тогда
		Объект.ШтрихКод = Объект.номенклатура.ОсновнойШтрихКод;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                                                    // ПРИ ОТКРЫТИИ	
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	Если Объект.Количество = 0 Тогда
		Объект.Количество = 1;
	КонецЕсли;
	ПроверитьФормулы();
	
	обновитьШК();
	Если не объект.ЭтоДобавлениеИзДокумента Тогда
		этаформа.Элементы.НеПечатать.Видимость = Ложь
	КонецЕсли;
	
	Если ИспользоватьШтрихКоды тогда
		
		Если ИспользоватьПодключаемоеОборудование И 
			МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
			
			ОписаниеОшибки = "" ;
			ПоддерживаемыеТипыВО = Новый Массив();
			ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
			
			Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
				ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке( "При подключении оборудования произошла ошибка") + ": " + ОписаниеОшибки ;
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;         	
	
		Если ЗначениеЗаполнено(СтраницаПанели)Тогда
			
			попытка
				СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
				ТекущаяСтраница = СтраницыПанели.получить(СтраницаПанели);
				элементы.ГруппаСтраниц.ТекущаяСтраница = ТекущаяСтраница;
			исключение
			конецпопытки;	
		КонецЕсли;
	
	Если ЗначениеЗаполнено(объект.Номенклатура) Тогда
		Этаформа.ТекущийЭлемент = Элементы.производитель;
	Иначе
		Этаформа.ТекущийЭлемент = Элементы.номенклатура;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПредыдущаяНоменклатура) Тогда
		Элементы.ГруппаПредыдущаяНоменклатура.Видимость = ЗначениеЗаполнено(ПредыдущаяНоменклатура);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Плюс10(Команда)
	Объект.Количество = Объект.Количество + 10;
	НаСумму = объект.Количество * объект.Цена;
КонецПроцедуры

&НаКлиенте
Процедура НеПечатать(Команда)
	
	ПредыдущаяНоменклатура = объект.Номенклатура;
	ЗакрытьИПередать(ложь);
	
КонецПроцедуры

&НаСервере
Функция   ПолучитьРеквизитыНаСервере(Номенклатура, Реквизит);
	возврат Номенклатура[Реквизит];
КонецФункции

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	НоменклатураПриИзмененииКлиент();
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзмененииКлиент()
	
	если значениезаполнено(Объект.Номенклатура) тогда
		
		Объект.Производитель = ПолучитьРеквизитыНаСервере(Объект.Номенклатура, "Производитель");
		Объект.НоменклатурнаяГруппа = ПолучитьРеквизитыНаСервере(Объект.Номенклатура, "НоменклатурнаяГруппа");
		Объект.Наименование = сокрлп(Объект.Номенклатура);
		
		ОбновитьценуНоменклатуры();
		Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
			объект.Количество = ОбщийМодульСервер.ПолучитьКоличествоПоУмолчанию(Объект.Номенклатура);
		КонецЕсли;		
		НаСумму = объект.Количество * объект.Цена;
		
	конецесли;
	
	обновитьШК();
	
КонецПроцедуры

&НаСервере
процедура ОбновитьценуНоменклатуры()
	
	Если ИспользоватьСложныйМеханизмЦен Тогда
		объект.Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(объект.Номенклатура, объект.ВидЦен, Дата, Ложь, , , , , , , Объект.ЕдиницаИзмерения);
	иначе
		объект.Цена = объект.Номенклатура.Цена;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	ИспользоватьШтрихКоды 					= ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьШтрихКоды") ;
	ИспользоватьПодключаемоеОборудование 	= ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьПодключаемоеОборудование") ;
	ИспользуютсяФормулы 					= ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом");	
	ИспользоватьСложныйМеханизмЦен 			= ПараметрыСеанса.ИспользоватьСложныйМеханизмЦенПС ;
	ИспользоватьУчетПоСериям 				= ПараметрыСеанса.ВестиУчетПоСериямНоменклатуры;
	
	Если ЗначениеЗаполнено(параметры.Дата) Тогда
		дата = параметры.Дата;
	иначе
		дата = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Склад) Тогда
		Объект.Склад = Параметры.Склад;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(параметры.ВидЦен) Тогда
		Объект.ВидЦен = параметры.ВидЦен;
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидЦен)
		И ИспользоватьСложныйМеханизмЦен Тогда
		
		Объект.ВидЦен = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВидЦенПриходованияТовараПоУмолчанию") ;
		Если НЕ ЗначениеЗаполнено(Объект.ВидЦен) Тогда
			Объект.ВидЦен = Справочники.ВидыЦен.ОсновнойВидЦен;
		КонецЕсли;		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(параметры.НоменклатураДляпечати) Тогда
		
		Объект.Номенклатура 		= параметры.НоменклатураДляпечати;
		Объект.Производитель 		= Объект.Номенклатура.Производитель;
		Объект.НоменклатурнаяГруппа = Объект.Номенклатура.НоменклатурнаяГруппа;
		Объект.Наименование 		= сокрлп(Объект.Номенклатура);
		объект.СерияНоменклатуры 	= СокрЛП(Параметры.СерияНоменклатуры);
		объект.СерияСуществующейНоменклатуры = Параметры.СерияНоменклатуры;
		Объект.ЕдиницаИзмерения 	= Параметры.ЕдиницаИзмерения;
		
		ОбновитьценуНоменклатуры();
		элементы.СоздатьНоменклатуру.Видимость = Ложь;
	КонецЕсли;
	
	Если параметрысеанса.НеМожетМенятьЦены  тогда
		Если ЗначениеЗаполнено(Объект.ВидЦен) тогда
			
			элементы.ВидЦен.Доступность = ложь;
			
		КонецЕсли;
		элементы.Цена.Доступность = ложь;
	КонецЕсли;
	
	проверитьнаименованиевалюты();
	НаСумму = объект.Количество * объект.Цена;
	
	элементы.НоменклатурнаяГруппа.ОтметкаНезаполненного = ПараметрыСеанса.ВестиУчетНоменклатурыВРазрезеНоменклатурныхГруппПС И ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("НоменклатурнаяГруппаОбязательныйРеквизитЛюбойНоменклатуры");
	Элементы.Контрагенты.Видимость = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьШтрихКодыДляИдентификацииКонтрагентов");
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулы()
	
	Если ИспользуютсяФормулы
		и НЕ ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
		
		Объект.ФормулаФормированияШтрихКода = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ОсновнаяФормулаШтрихКодаНоменклатуры");	
		Если ЗначениеЗаполнено(Объект.Производитель) 
			и ЗначениеЗаполнено(Объект.Производитель.СвояФормулаШтрихКодаНоменклатуры) Тогда
			Объект.ФормулаФормированияШтрихКода = Объект.Производитель.СвояФормулаШтрихКодаНоменклатуры;
			
		КонецЕсли;
	КонецЕсли;
	
	Если ИспользуютсяФормулы
		и НЕ ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		
		Объект.ОсновнаяФормулаТекстаЭтикетки = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ОсновнаяФормулаТекстаЭтикетки");
	КонецЕсли;        	
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатурнаяГруппаПриИзменении(Элемент)
	
	ДанныеНоменклатурыПриИзмененииНаСервере();
	обновитьШК();
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		этаформа.ТекущийЭлемент = Элементы.Количество;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДанныеНоменклатурыПриИзмененииНаСервере()
	
	Если ИспользуютсяФормулы 
		и ЗначениеЗаполнено(Объект.НоменклатурнаяГруппа) Тогда		
		
		ОбщийМодульТоварСервер.УстановитьНаименованиеНоменклатурыПоФормуле(Объект);	
	КонецЕсли;
	
	если ОбщийМодульТоварСервер.НаименованиеЭтойНоменклатрнойГруппыНазначается(Объект.НоменклатурнаяГруппа) ТОгда
		Элементы.Наименование.Доступность 			= Ложь;
		Элементы.Наименование.ПропускатьПриВводе 	= истина;
		
	иначе
		Элементы.Наименование.Доступность 			= Истина;
		Элементы.Наименование.ПропускатьПриВводе 	= ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПроизводительПриИзменении(Элемент)
	
	ДанныеНоменклатурыПриИзмененииНаСервере();
	обновитьШК();
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		этаформа.ТекущийЭлемент = Элементы.Количество;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	обновитьШК();
КонецПроцедуры

&НаКлиенте
Процедура ФормулаФормированияШтрихКодаПриИзменении(Элемент)
	обновитьШК();
КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяФормулаТекстаЭтикеткиПриИзменении(Элемент)
	ОбновитьТекстСШтрихКодом();
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуШтрихКода(Команда)
	ПроверитьФормулуШтрихКодаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуШтрихКодаНаСервере()
	
	Если ИспользуютсяФормулы 
		и ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
		
		ОбщийМодульСервер.ПроверитьФормулу(Объект.ФормулаФормированияШтрихКода.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуТекстаЭтикетки(Команда)
	ПроверитьФормулуТекстаЭтикеткиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуТекстаЭтикеткиНаСервере()
	
	Если ИспользуютсяФормулы 
		и ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		
		ОбщийМодульСервер.ПроверитьФормулу(Объект.ОсновнаяФормулаТекстаЭтикетки.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                                  // ПРИ ЗАКРЫТИИ
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
	
	Если ИспользоватьПодключаемоеОборудование Тогда
		ПоддерживаемыеТипыВО = Новый Массив ();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		этаформа.ТекущийЭлемент = Элементы.Напечатать;
	КонецЕсли;
	НаСумму = объект.Количество * объект.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда
		
		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[ 1 ] = Неопределено Тогда
				ШтрихКод = Параметр[ 0 ];
			Иначе
				ШтрихКод = Параметр[ 1 ][ 1 ];
			КонецЕсли;
			
			ОбработатьПолученныйШКНаСервере(ШтрихКод);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПолученныйШКНаСервере(ТекКод)
	
	Если Не ТекКод = "" тогда
		
		РезультатОбработки = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(ТекКод, Истина, Истина);
		Если ЗначениеЗаполнено(РезультатОбработки) Тогда
			
			объект.Номенклатура 					= РезультатОбработки.Номенклатура;
			объект.Количество						= ОбщийМодульСервер.ПолучитьКоличествоПоУмолчанию(РезультатОбработки.Номенклатура);
			объект.СерияСуществующейНоменклатуры 	= РезультатОбработки.СерияНоменклатуры;
			Объект.Производитель 					= Объект.Номенклатура.Производитель;
			Объект.НоменклатурнаяГруппа 			= Объект.Номенклатура.НоменклатурнаяГруппа;
			Объект.Наименование 					= Объект.Номенклатура.Наименование;			
			ОбновитьШК();
			
		Иначе
			ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Товар по Штрих-Коду не найден(") + ТекКод + ").");
		КонецЕсли;               	
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	ОбщийМодульКлиент.ПоискОшибкиКодировки("Номенклатура", ДанныеВыбора, Текст, Объект.Номенклатура);
	если значениезаполнено(Объект.Номенклатура) тогда
		
		Объект.Производитель 		= ПолучитьРеквизитыНаСервере(Объект.Номенклатура, "Производитель");
		Объект.НоменклатурнаяГруппа = ПолучитьРеквизитыНаСервере(Объект.Номенклатура, "НоменклатурнаяГруппа");
		Объект.Наименование 		= сокрлп(Объект.Номенклатура);
		обновитьШК();
		этаформа.ТекущийЭлемент = Элементы.Количество;
		
	конецесли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроизводительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	ОбщийМодульКлиент.ПоискОшибкиКодировки("Производители", ДанныеВыбора, Текст, Объект.Производитель);
	если значениезаполнено(Объект.Производитель) тогда
		ДанныеНоменклатурыПриИзмененииНаСервере();
		обновитьШК();
	конецесли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатурнаяГруппаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	ОбщийМодульКлиент.ПоискОшибкиКодировки("НоменклатурныеГруппы", ДанныеВыбора, Текст, Объект.НоменклатурнаяГруппа);
	ДанныеНоменклатурыПриИзмененииНаСервере();
	обновитьШК();
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		этаформа.ТекущийЭлемент = Элементы.Количество;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЦенПриИзменении(Элемент)
	
	ВидЦенПриИзмененииНаСервере();
	проверитьнаименованиевалюты();
	НаСумму = объект.Количество * объект.Цена;
	
КонецПроцедуры

&НаСервере
Процедура ВидЦенПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(объект.Номенклатура) Тогда
		Объект.Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(объект.Номенклатура, Объект.ВидЦен, Дата, Ложь, , , , , , , Объект.ЕдиницаИзмерения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
процедура проверитьнаименованиевалюты()
	
	Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
		НаименованиеВалюты = Объект.ВидЦен.ВалютаЦены;
	Иначе
		НаименованиеВалюты = Справочники.Валюты.ОсновнаяВалюта.Наименование ;
	КонецЕсли;                         	
	
КонецПроцедуры

&НаКлиенте
Процедура НоваяНоменклатура(Команда)
	НоваяНоменклатураНаСервере();
КонецПроцедуры

&НаСервере
Процедура НоваяНоменклатураНаСервере()
	
	объект.Номенклатура = Справочники.Номенклатура.ПустаяСсылка() ;
	обновитьШК();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПредыдущуюНоменклатуру(Команда)
	
	Если ЗначениеЗаполнено(ПредыдущаяНоменклатура) Тогда
		объект.Номенклатура = ПредыдущаяНоменклатура;
		НоменклатураПриИзмененииКлиент();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуТекстаЗаголовка(Команда)
	ПроверитьФормулуТекстаЗаголовкаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуТекстаЗаголовкаНаСервере()
	
	Если ИспользуютсяФормулы 
		и ЗначениеЗаполнено(Объект.ФормулаТекстаЗаголовка) Тогда
		
		ОбщийМодульСервер.ПроверитьФормулу(Объект.ФормулаТекстаЗаголовка.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормулаТекстаЗаголовкаПриИзменении(Элемент)
	ОбновитьТекстаЗаголовкаЭтикетки();
КонецПроцедуры

&Насервере
процедура ОбновитьТекстаЗаголовкаЭтикетки() 	
	
	Если ИспользуютсяФормулы 
		и ЗначениеЗаполнено(Объект.ФормулаТекстаЗаголовка) Тогда
		
		ТекстЗаголовка = "";
		
		Попытка 
			если значениезаполнено(Объект.Номенклатура) тогда
				Номенклатура = Объект.Номенклатура;
			иначе
				Номенклатура = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(Объект.ШтрихКод, , Истина);	
			конецесли;
			Дата  = Дата;
			Склад = Объект.Склад;
			ШтрихКод			 = Объект.ШтрихКод;			
			НоменклатурнаяГруппа = Объект.НоменклатурнаяГруппа;
			Производитель  		 = Объект.Производитель;
			Если ИспользоватьУчетПоСериям Тогда
				Серия = ?(ЗначениеЗаполнено(объект.СерияСуществующейНоменклатуры), объект.СерияСуществующейНоменклатуры.Наименование, объект.СерияНоменклатуры);
			Конецесли;
			Цена 				 = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен, Дата, , , , , , , , Объект.ЕдиницаИзмерения);
			если цена = 0 тогда
				Цена = Объект.Цена;
			КонецЕсли;
			
			выполнить("ТекстЗаголовка = """"+" + Объект.ФормулаТекстаЗаголовка.Формула + ";");
			
			Если не Объект.ТекстЗаголовка = ТекстЗаголовка Тогда
				Объект.ТекстЗаголовка = ТекстЗаголовка;
			КонецЕсли;
			
		Исключение 	
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка:") + " " + ОписаниеОшибки();
			Сообщение.Поле 	= "ФормулаТекстаЗаголовка";
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			
		КонецПопытки;
		
	КонецЕсли;
	
конецпроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ТекущаяСтраница = Элементы.ГруппаСтраниц.ТекущаяСтраница;
	СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
	СтраницаПанели  = СтраницыПанели.Индекс(ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьШтрихКодыДляКонтрагентов(Команда)
	
	КоличествоЭтикеток = объект.Контрагенты.Итог("Количество");
	
	Если КоличествоЭтикеток > 0
		И (КоличествоЭтикеток <= 30 
		или Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что хотите распечатать такое число") + " (" + КоличествоЭтикеток + ")?", режимдиалогавопрос.ДаНет) = КодВозвратаДиалога.Да) Тогда
		
		ПараметрыФормыПечати = Новый Структура;
		ПараметрыФормыПечати.Вставить("НаименованиеДокумента", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Этикетки для контрагентов"));
		ПараметрыФормыПечати.Вставить("НеПечататьНичегоДополнительно", Истина);
		ФормаПечати = получитьформу("ОбщаяФорма.ФормаПечати", ПараметрыФормыПечати);			
		
		ЕстьЧтоПечататьВФорме = НапечататьЭтикеткиДляВсехСтрокТаблицыНаСервере(ФормаПечати.Результат);
		
		если ЕстьЧтоПечататьВФорме Тогда
			ФормаПечати.Заголовок = ПараметрыФормыПечати.НаименованиеДокумента;
			ФормаПечати.Открыть();
		Иначе
			ФормаПечати = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция   НапечататьЭтикеткиДляВсехСтрокТаблицыНаСервере(табдокобщ, ДляПозиций = Ложь)
	
	ЕстьЧтоПечататьВФорме = Ложь;
	
	Если ДляПозиций Тогда
		Для Каждого СтрокаТаблицы из Объект.ПозицииДляУслугЗаВремя цикл
			
			Позиция = СтрокаТаблицы.Позиция;
			Если ЗначениеЗаполнено(Позиция) Тогда
				
				ШтрихКод 		  = Позиция.ОсновнойШтрихКод;
				ТекстСШтрихКодом  = ШтрихКод;		
				
				Табдок = ОбщийМодульСерверНапечататьЭтикеткуКонтрагентам(ШтрихКод, ТекстСШтрихКодом, СтрокаТаблицы.Количество, СокрЛП(Позиция));
				
				если не Табдок = Неопределено 
					и не ЗначениеЗаполнено(ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("НаименованиеПринтераШтрихКодов")) Тогда
					
					ЕстьЧтоПечататьВФорме = Истина;
					ТабдокОбщ.Вывести(Табдок);									
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напечатал этикетку для позиций (номеров). "), 2);
	Иначе
		Для Каждого СтрокаТаблицы из Объект.Контрагенты цикл
			
			Контрагент = СтрокаТаблицы.Контрагент;
			Если ЗначениеЗаполнено(Контрагент) Тогда
				
				ШтрихКод 		  = Контрагент.ОсновнойШтрихКод;
				ТекстСШтрихКодом  = ШтрихКод;		
				
				Табдок = ОбщийМодульСерверНапечататьЭтикеткуКонтрагентам(ШтрихКод, ТекстСШтрихКодом, СтрокаТаблицы.Количество, СокрЛП(Контрагент));
				
				если не Табдок = Неопределено 
					и не ЗначениеЗаполнено(ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("НаименованиеПринтераШтрихКодов")) Тогда
					
					ЕстьЧтоПечататьВФорме = Истина;
					ТабдокОбщ.Вывести(Табдок);									
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напечатал этикетку для таблицы. "), 2);
		
	конецесли;
	Возврат ЕстьЧтоПечататьВФорме;
	
КонецФункции

&НаСервере
Функция   ОбщийМодульСерверНапечататьЭтикеткуКонтрагентам(ШтрихКод, ТекстСШтрихКодом, Количество, Табдок = неопределено, ТекстЗаголовка = "")
	
	СтруктураПечати = Новый Структура;
	СтруктураПечати.Вставить("ШтрихКод", ШтрихКод);
	СтруктураПечати.Вставить("ТекстСШтрихКодом", ТекстСШтрихКодом);
	СтруктураПечати.Вставить("Количество", Количество);
	СтруктураПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
	
	ОбщийМодульТоварСервер.НапечататьЭтикетку(СтруктураПечати, ТабДок);		
	
	Возврат ТабДок;
	
КонецФункции

&НаКлиенте
Процедура НапечататьШтрихКодОрганизации(Команда)
	
	ПараметрыФормыПечати = Новый Структура;
	ПараметрыФормыПечати.Вставить("НаименованиеДокумента", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Этикетка для организации"));
	ПараметрыФормыПечати.Вставить("НеПечататьНичегоДополнительно", Истина);
	ФормаПечати = получитьформу("ОбщаяФорма.ФормаПечати", ПараметрыФормыПечати);			
	
	ЕстьЧтоПечататьВФорме = НапечататьЭтикеткиДляОрганизации(ФормаПечати.Результат);
	
	если ЕстьЧтоПечататьВФорме Тогда
		ФормаПечати.Заголовок = ПараметрыФормыПечати.НаименованиеДокумента;
		ФормаПечати.Открыть();
	Иначе
		ФормаПечати = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция   НапечататьЭтикеткиДляОрганизации(табдокобщ)
	
	ЕстьЧтоПечататьВФорме = Ложь;
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		
		ШтрихКод 		  = Объект.Организация.ОсновнойШтрихКод;
		ТекстСШтрихКодом  = ШтрихКод;		
		
		Табдок = ОбщийМодульСерверНапечататьЭтикеткуКонтрагентам(ШтрихКод, ТекстСШтрихКодом, 1, СокрЛП(Объект.Организация));
		
		если не Табдок = Неопределено 
			и не ЗначениеЗаполнено(ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("НаименованиеПринтераШтрихКодов")) Тогда
			
			ЕстьЧтоПечататьВФорме = Истина;
			ТабдокОбщ.Вывести(Табдок);									
		КонецЕсли;
	КонецЕсли;
	
	ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напечатал этикетку для организации. "), 2);
	
	Возврат ЕстьЧтоПечататьВФорме;
	
КонецФункции

&НаКлиенте
Процедура НапечататьШтрихКодПозиций(Команда)
	
	КоличествоЭтикеток = объект.ПозицииДляУслугЗаВремя.Итог("Количество");
	
	Если КоличествоЭтикеток > 0
		И (КоличествоЭтикеток <= 30 
		или Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что хотите распечатать такое число") + " (" + КоличествоЭтикеток + ")?", режимдиалогавопрос.ДаНет) = КодВозвратаДиалога.Да) Тогда
		
		ПараметрыФормыПечати = Новый Структура;
		ПараметрыФормыПечати.Вставить("НаименованиеДокумента", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Этикетки для контрагентов"));
		ПараметрыФормыПечати.Вставить("НеПечататьНичегоДополнительно", Истина);
		ФормаПечати = получитьформу("ОбщаяФорма.ФормаПечати", ПараметрыФормыПечати);			
		
		ЕстьЧтоПечататьВФорме = НапечататьЭтикеткиДляВсехСтрокТаблицыНаСервере(ФормаПечати.Результат, Истина);
		
		если ЕстьЧтоПечататьВФорме Тогда
			ФормаПечати.Заголовок = ПараметрыФормыПечати.НаименованиеДокумента;
			ФормаПечати.Открыть();
		Иначе
			ФормаПечати = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	НоменклатураПриИзмененииКлиент();
КонецПроцедуры
