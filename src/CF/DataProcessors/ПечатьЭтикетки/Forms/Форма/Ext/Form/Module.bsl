//sza141119-0055 
//sza141010-1258
//sza140704-1117 Номенклатрура
//sza140412-0931  
//sza130825-0107
&НаКлиенте
Процедура ВидЦенПриИзменении(Элемент)
	
	ВидЦенПриИзмененииНаСервере();
	проверитьнаименованиевалюты();	
	
КонецПроцедуры

&НаСервере
Процедура ВидЦенПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		Объект.Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен, Дата, ЛОЖЬ, , , , , , , Объект.ЕдиницаИзмерения);
	КонецЕсли;
	
	НаСумму = Объект.Количество * Объект.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПредыдущуюНоменклатуру(Команда)
	
	Если ЗначениеЗаполнено(ПредыдущаяНоменклатура) Тогда
		Объект.Номенклатура = ПредыдущаяНоменклатура;
		НоменклатураПриИзмененииКлиент();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДанныеНоменклатурыПриИзмененииНаСервере()
	
	Если ИспользуютсяФормулы 
		И ЗначениеЗаполнено(Объект.НоменклатурнаяГруппа) Тогда		
		
		ОбщийМодульТоварСервер.УстановитьНаименованиеНоменклатурыПоФормуле(Объект);	
	КонецЕсли;
	
	Если ОбщийМодульТоварСервер.НаименованиеЭтойНоменклатрнойГруппыНазначается(Объект.НоменклатурнаяГруппа) Тогда
		Элементы.Наименование.Доступность 			= ЛОЖЬ;
		Элементы.Наименование.ПропускатьПриВводе 	= ИСТИНА;
		
	Иначе
		Элементы.Наименование.Доступность 			= ИСТИНА;
		Элементы.Наименование.ПропускатьПриВводе 	= ЛОЖЬ;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	НоменклатураПриИзмененииКлиент();
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьИПередать(ПечататьЦенникШтрихКод) 
	
	Отмена = ЛОЖЬ;				
	
	Если НЕ ЗначениеЗаполнено(Объект.Номенклатура)
		И ЗначениеЗаполнено(Объект.Производитель)
		И ЗначениеЗаполнено(Объект.НоменклатурнаяГруппа)
		И ЗначениеЗаполнено(Объект.Цена)
		И ЗначениеЗаполнено(Объект.ШтрихКод) Тогда
		
		СтруктураНоменклатура = ОбщийМодульСерверПолучитьНоменклатуруПоШтрихКоду(Объект.ШтрихКод);
		Объект.Номенклатура   = СтруктураНоменклатура.Номенклатура;
		Объект.СерияСуществующейНоменклатуры = СтруктураНоменклатура.СерияНоменклатуры;
		
		Если НЕ ЗначениеЗаполнено(Объект.Номенклатура) Тогда
			
			Если ИспользоватьСложныйМеханизмЦен
				И НЕ ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вид цен не указан!");
				Сообщение.Поле  = "ВидЦен";
				Сообщение.УстановитьДанные(Объект);
				Сообщение.Сообщить();
				
				Отмена = ИСТИНА;				
				
			КонецЕсли;
			
			Объект.Номенклатура = ОбщийМодульСерверСоздатьНоменклатуру(Объект.ШтрихКод, Объект.Производитель, Объект.НоменклатурнаяГруппа, Объект.Цена, Объект.наименование);
			
			Если ВестиУчетСерийНоменклатуры Тогда
				Объект.СерияСуществующейНоменклатуры = ОбщийМодульТоварСервер.ОбнаружитьСериюНоменклатуры(Объект.Номенклатура, Объект.СерияНоменклатуры);			                                	
			КонецЕсли;
			
			Если Объект.Номенклатура = Неопределено
				ИЛИ НЕ ЗначениеЗаполнено(Объект.Номенклатура) Тогда
				
				Отмена = ИСТИНА;
			Иначе
				ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Создал номенклатуру") + ": " + Объект.Номенклатура + Объект.СерияНоменклатуры, 2);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ отмена
		И ПечататьЦенникШтрихКод 
		И (Объект.Количество <= 30 
		ИЛИ Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что хотите распечатать такое число") + " (" + Объект.Количество + ")?", режимдиалогавопрос.ДаНет) = КодВозвратаДиалога.Да) Тогда
		
		глПроверятьСообщения = ИСТИНА;
		Если НЕ ЗначениеЗаполнено(Объект.Цена) Тогда
			//Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не указана цена!"));
			ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не указана цена!"));			
		КонецЕсли;
		
		Если ПечататьЦенникШтрихКод Тогда
			
			//!!сюда!	
			Табдок = ОбщийМодульСерверНапечататьЭтикетку();	
			Если НЕ табдок = Неопределено 
				И НЕ ЗначениеЗаполнено(ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("НаименованиеПринтераШтрихКодов")) Тогда
				
				ПараметрыФормыПечати = Новый Структура("ТабДок", ТабДок);
				ПараметрыФормыПечати.Вставить("НаименованиеДокумента", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Этикетка"));
				ПараметрыФормыПечати.Вставить("НеПечататьНичегоДополнительно", ИСТИНА);
				
				ФормаПечати = ПолучитьФорму("ОбщаяФорма.ФормаПечати", ПараметрыФормыПечати);	
				ФормаПечати.Заголовок = ПараметрыФормыПечати.НаименованиеДокумента;
				ФормаПечати.Открыть();
			Иначе
				Табдок.напечатать();  
			КонецЕсли;
			
			ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напечатал этикетку."), 2);
		КонецЕсли;
		
		Если Объект.ЭтоДобавлениеИзДокумента Тогда
			
			структураОтпечати = Новый Структура;
			структураОтпечати.Вставить("ШтрихКод", Объект.ШтрихКод);
			структураОтпечати.Вставить("Количество", Объект.Количество);
			структураОтпечати.Вставить("Номенклатура", Объект.Номенклатура);
			структураОтпечати.Вставить("СерияНоменклатуры", Объект.СерияСуществующейНоменклатуры);
			структураОтпечати.Вставить("Цена", Объект.Цена);
			структураОтпечати.Вставить("Склад", Объект.Склад);
			структураОтпечати.Вставить("ЕдиницаИзмерения", Объект.ЕдиницаИзмерения);
			структураОтпечати.Вставить("Дата", Дата);
			этаформа.Закрыть(структураОтпечати);
			
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры //ЗакрытьИПередать

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		этаформа.ТекущийЭлемент = Элементы.Напечатать;
	КонецЕсли;
	НаСумму = Объект.Количество * Объект.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	обновитьШК();
КонецПроцедуры

&НаКлиенте
Процедура Напечатать(Команда)
	
	ПредыдущаяНоменклатура = Объект.Номенклатура;
	ЗакрытьИПередать(ИСТИНА);
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьШтрихКодОрганизации(Команда)
	
	ПараметрыФормыПечати = Новый Структура;
	ПараметрыФормыПечати.Вставить("НаименованиеДокумента", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Этикетка для организации"));
	ПараметрыФормыПечати.Вставить("НеПечататьНичегоДополнительно", ИСТИНА);
	ФормаПечати = получитьформу("ОбщаяФорма.ФормаПечати", ПараметрыФормыПечати);			
	
	ЕстьЧтоПечататьВФорме = НапечататьЭтикеткиДляОрганизации(ФормаПечати.Результат);
	
	Если ЕстьЧтоПечататьВФорме Тогда
		ФормаПечати.Заголовок = ПараметрыФормыПечати.НаименованиеДокумента;
		ФормаПечати.Открыть();
	Иначе
		ФормаПечати = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьШтрихКодПозиций(Команда)
	
	КоличествоЭтикеток = Объект.ПозицииДляУслугЗаВремя.Итог("Количество");
	
	Если КоличествоЭтикеток > 0
		И (КоличествоЭтикеток <= 30 
		ИЛИ Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что хотите распечатать такое число") + " (" + КоличествоЭтикеток + ")?", режимдиалогавопрос.ДаНет) = КодВозвратаДиалога.Да) Тогда
		
		ПараметрыФормыПечати = Новый Структура;
		ПараметрыФормыПечати.Вставить("НаименованиеДокумента", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Этикетки для контрагентов"));
		ПараметрыФормыПечати.Вставить("НеПечататьНичегоДополнительно", ИСТИНА);
		ФормаПечати = получитьформу("ОбщаяФорма.ФормаПечати", ПараметрыФормыПечати);			
		
		ЕстьЧтоПечататьВФорме = НапечататьЭтикеткиДляВсехСтрокТаблицыНаСервере(ФормаПечати.Результат, ИСТИНА);
		
		Если ЕстьЧтоПечататьВФорме Тогда
			ФормаПечати.Заголовок = ПараметрыФормыПечати.НаименованиеДокумента;
			ФормаПечати.Открыть();
		Иначе
			ФормаПечати = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьШтрихКодыДляКонтрагентов(Команда)
	
	КоличествоЭтикеток = Объект.Контрагенты.Итог("Количество");
	
	Если КоличествоЭтикеток > 0
		И (КоличествоЭтикеток <= 30 
		ИЛИ Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что хотите распечатать такое число") + " (" + КоличествоЭтикеток + ")?", режимдиалогавопрос.ДаНет) = КодВозвратаДиалога.Да) Тогда
		
		ПараметрыФормыПечати = Новый Структура;
		ПараметрыФормыПечати.Вставить("НаименованиеДокумента", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Этикетки для контрагентов"));
		ПараметрыФормыПечати.Вставить("НеПечататьНичегоДополнительно", ИСТИНА);
		ФормаПечати = получитьформу("ОбщаяФорма.ФормаПечати", ПараметрыФормыПечати);			
		
		ЕстьЧтоПечататьВФорме = НапечататьЭтикеткиДляВсехСтрокТаблицыНаСервере(ФормаПечати.Результат);
		
		Если ЕстьЧтоПечататьВФорме Тогда
			ФормаПечати.Заголовок = ПараметрыФормыПечати.НаименованиеДокумента;
			ФормаПечати.Открыть();
		Иначе
			ФормаПечати = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция   НапечататьЭтикеткиДляВсехСтрокТаблицыНаСервере(табдокобщ, Знач ДляПозиций = ЛОЖЬ, Знач ДляСотрудников = ЛОЖЬ)
	
	ЕстьЧтоПечататьВФорме = ЛОЖЬ;
	
	Если ДляСотрудников Тогда
		Для Каждого СтрокаТаблицы из Объект.Сотрудники цикл
			
			Позиция = СтрокаТаблицы.Позиция;
			Если ЗначениеЗаполнено(Позиция) Тогда
				
				ШтрихКод 		  = Позиция.ОсновнойШтрихКод;
				ТекстСШтрихКодом  = ШтрихКод;		
				
				Табдок = ОбщийМодульСерверНапечататьЭтикеткуОбъектам(ШтрихКод, ТекстСШтрихКодом, СтрокаТаблицы.Количество, СокрЛП(Позиция));
				
				Если НЕ Табдок = Неопределено 
					И НЕ ЗначениеЗаполнено(ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("НаименованиеПринтераШтрихКодов")) Тогда
					
					ЕстьЧтоПечататьВФорме = ИСТИНА;
					ТабдокОбщ.Вывести(Табдок);									
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напечатал этикетку для позиций (номеров). "), 2);
		
	ИначеЕсли ДляПозиций Тогда
		Для Каждого СтрокаТаблицы из Объект.ПозицииДляУслугЗаВремя цикл
			
			Позиция = СтрокаТаблицы.Позиция;
			Если ЗначениеЗаполнено(Позиция) Тогда
				
				ШтрихКод 		  = Позиция.ОсновнойШтрихКод;
				ТекстСШтрихКодом  = ШтрихКод;		
				
				Табдок = ОбщийМодульСерверНапечататьЭтикеткуОбъектам(ШтрихКод, ТекстСШтрихКодом, СтрокаТаблицы.Количество, СокрЛП(Позиция));
				
				Если НЕ Табдок = Неопределено 
					И НЕ ЗначениеЗаполнено(ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("НаименованиеПринтераШтрихКодов")) Тогда
					
					ЕстьЧтоПечататьВФорме = ИСТИНА;
					ТабдокОбщ.Вывести(Табдок);									
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напечатал этикетку для позиций (номеров). "), 2);
		
	Иначе
		Для Каждого СтрокаТаблицы из Объект.Контрагенты цикл
			
			Контрагент = СтрокаТаблицы.Контрагент;
			Если ЗначениеЗаполнено(Контрагент) Тогда
				
				ШтрихКод 		  = Контрагент.ОсновнойШтрихКод;
				ТекстСШтрихКодом  = ШтрихКод;		
				
				Табдок = ОбщийМодульСерверНапечататьЭтикеткуОбъектам(ШтрихКод, ТекстСШтрихКодом, СтрокаТаблицы.Количество, СокрЛП(Контрагент));
				
				Если НЕ Табдок = Неопределено 
					И НЕ ЗначениеЗаполнено(ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("НаименованиеПринтераШтрихКодов")) Тогда
					
					ЕстьЧтоПечататьВФорме = ИСТИНА;
					ТабдокОбщ.Вывести(Табдок);									
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напечатал этикетку для таблицы. "), 2);
		
	КонецЕсли;
	Возврат ЕстьЧтоПечататьВФорме;
	
КонецФункции

&НаСервере
Функция   НапечататьЭтикеткиДляОрганизации(табдокобщ)
	
	ЕстьЧтоПечататьВФорме = ЛОЖЬ;
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		
		ШтрихКод 		  = Объект.Организация.ОсновнойШтрихКод;
		ТекстСШтрихКодом  = ШтрихКод;		
		
		Табдок = ОбщийМодульСерверНапечататьЭтикеткуОбъектам(ШтрихКод, ТекстСШтрихКодом, 1, СокрЛП(Объект.Организация));
		
		Если НЕ Табдок = Неопределено 
			И НЕ ЗначениеЗаполнено(ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("НаименованиеПринтераШтрихКодов")) Тогда
			
			ЕстьЧтоПечататьВФорме = ИСТИНА;
			ТабдокОбщ.Вывести(Табдок);									
		КонецЕсли;
	КонецЕсли;
	
	ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напечатал этикетку для организации. "), 2);
	
	Возврат ЕстьЧтоПечататьВФорме;
	
КонецФункции

&НаКлиенте
Процедура НеПечатать(Команда)
	
	ПредыдущаяНоменклатура = Объект.Номенклатура;
	ЗакрытьИПередать(ЛОЖЬ);
	
КонецПроцедуры

&НаКлиенте
Процедура НоваяНоменклатура(Команда)
	НоваяНоменклатураНаСервере();
КонецПроцедуры

&НаСервере
Процедура НоваяНоменклатураНаСервере()
	
	Объект.Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	обновитьШК();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	ОбщийМодульКлиент.ПоискОшибкиКодировки("Номенклатура", ДанныеВыбора, Текст, Объект.Номенклатура);
	Если значениезаполнено(Объект.Номенклатура) Тогда
		
		Объект.Производитель 		= ПолучитьРеквизитыНаСервере(Объект.Номенклатура, "Производитель");
		Объект.НоменклатурнаяГруппа = ПолучитьРеквизитыНаСервере(Объект.Номенклатура, "НоменклатурнаяГруппа");
		Объект.Наименование 		= СокрЛП(Объект.Номенклатура);
		обновитьШК();
		этаформа.ТекущийЭлемент = Элементы.Количество;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	НоменклатураПриИзмененииКлиент();
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзмененииКлиент()
	
	Если значениезаполнено(Объект.Номенклатура) Тогда
		
		Объект.Производитель = ПолучитьРеквизитыНаСервере(Объект.Номенклатура, "Производитель");
		Объект.НоменклатурнаяГруппа = ПолучитьРеквизитыНаСервере(Объект.Номенклатура, "НоменклатурнаяГруппа");
		Объект.Наименование = СокрЛП(Объект.Номенклатура);
		
		ОбновитьценуНоменклатуры();
		Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
			Объект.Количество = ОбщийМодульСервер.ПолучитьКоличествоПоУмолчанию(Объект.Номенклатура);
		КонецЕсли;		
		НаСумму = Объект.Количество * Объект.Цена;
		
	КонецЕсли;
	
	обновитьШК();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатурнаяГруппаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	ОбщийМодульКлиент.ПоискОшибкиКодировки("НоменклатурныеГруппы", ДанныеВыбора, Текст, Объект.НоменклатурнаяГруппа);
	ДанныеНоменклатурыПриИзмененииНаСервере();
	обновитьШК();
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		этаформа.ТекущийЭлемент = Элементы.Количество;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатурнаяГруппаПриИзменении(Элемент)
	
	ДанныеНоменклатурыПриИзмененииНаСервере();
	обновитьШК();
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		этаформа.ТекущийЭлемент = Элементы.Количество;
	КонецЕсли;
	
КонецПроцедуры

&Насервере
Процедура ОбновитьТекстДополнительнойСтроки()
	
	Если ИспользуютсяФормулы 
		И ЗначениеЗаполнено(ФормулаДополнительнойСтроки) Тогда
		
		ТекстЗаголовка = "";
		
		Попытка 
			Если значениезаполнено(Объект.Номенклатура) Тогда
				Номенклатура = Объект.Номенклатура;
			Иначе
				Номенклатура = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(Объект.ШтрихКод, , ИСТИНА);	
			КонецЕсли;
			
			Валюта  = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
			Валюта2 = Валюта;
			Дата  	= Дата;
			Склад 	= Объект.Склад;
			ШтрихКод			 = Объект.ШтрихКод;			
			НоменклатурнаяГруппа = Объект.НоменклатурнаяГруппа;
			Производитель  		 = Объект.Производитель;
			Если ВестиУчетСерийНоменклатуры Тогда
				Серия = ?(ЗначениеЗаполнено(Объект.СерияСуществующейНоменклатуры), Объект.СерияСуществующейНоменклатуры.Наименование, Объект.СерияНоменклатуры);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Валюта = Объект.ВидЦен.ВалютаЦены;
			КонецЕсли;
			
			Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен, Дата, , , , , , , , Объект.ЕдиницаИзмерения);
			Если Цена = 0 Тогда
				Цена = Объект.Цена;
			КонецЕсли;
			
			Цена2 = 0;
			ВидЦен2 = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВторойВидЦенДляЭтикетки");
			Если ЗначениеЗаполнено(ВидЦен2) Тогда
				Цена2 = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, ВидЦен2, Дата, , , , , , , , Объект.ЕдиницаИзмерения);
				Валюта2 = ВидЦен2.ВалютаЦены;
			КонецЕсли;			
			
			Выполнить(" ТекстЗаголовка = """"+" + ФормулаДополнительнойСтроки.Формула + ";");
			
			Если НЕ ДополнительнаяСтрокаЭтикетки = ТекстЗаголовка Тогда
				ДополнительнаяСтрокаЭтикетки = ТекстЗаголовка;
			КонецЕсли;
			
		Исключение 	
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ОписаниеОшибки();
			Сообщение.Поле 	= "ФормулаДополнительнойСтроки";
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

&Насервере
Процедура ОбновитьТекстаЗаголовкаЭтикетки() 	
	
	Если ИспользуютсяФормулы 
		И ЗначениеЗаполнено(Объект.ФормулаТекстаЗаголовка) Тогда
		
		ТекстЗаголовка = "";
		
		Попытка 
			Если значениезаполнено(Объект.Номенклатура) Тогда
				Номенклатура = Объект.Номенклатура;
			Иначе
				Номенклатура = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(Объект.ШтрихКод, , ИСТИНА);	
			КонецЕсли;
			
			Валюта  = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
			Валюта2 = Валюта;
			Дата    = Дата;
			Склад   = Объект.Склад;
			ШтрихКод			 = Объект.ШтрихКод;			
			НоменклатурнаяГруппа = Объект.НоменклатурнаяГруппа;
			Производитель  		 = Объект.Производитель;
			Если ВестиУчетСерийНоменклатуры Тогда
				Серия = ?(ЗначениеЗаполнено(Объект.СерияСуществующейНоменклатуры), Объект.СерияСуществующейНоменклатуры.Наименование, Объект.СерияНоменклатуры);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Валюта = Объект.ВидЦен.ВалютаЦены;
			КонецЕсли;
			
			Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен, Дата, , , , , , , , Объект.ЕдиницаИзмерения);
			Если цена = 0 Тогда
				Цена = Объект.Цена;
			КонецЕсли;
			
			Цена2   = 0;
			ВидЦен2 = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВторойВидЦенДляЭтикетки");
			Если ЗначениеЗаполнено(ВидЦен2) Тогда
				Цена2 = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, ВидЦен2, Дата, , , , , , , , Объект.ЕдиницаИзмерения);
				Валюта2 = ВидЦен2.ВалютаЦены;
			КонецЕсли;			
			
			Выполнить(" ТекстЗаголовка = """"+" + Объект.ФормулаТекстаЗаголовка.Формула + ";");
			
			Если НЕ Объект.ТекстЗаголовка = ТекстЗаголовка Тогда
				Объект.ТекстЗаголовка = ТекстЗаголовка;
			КонецЕсли;
			
		Исключение 	
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ОписаниеОшибки();
			Сообщение.Поле 	= "ФормулаТекстаЗаголовка";
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			
		КонецПопытки;
		
	КонецЕсли;
	
конецпроцедуры

Процедура ОбновитьТекстСШтрихКодом();
	ОбновитьТекстСШтрихКодомНаСервере();
конецпроцедуры

&Насервере
Процедура ОбновитьТекстСШтрихКодомНаСервере() 	
	
	ОбъектТекстСШтрихКодом = "";
	
	Если ИспользуютсяФормулы 
		И ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		
		Попытка 
			Если значениезаполнено(Объект.Номенклатура) Тогда
				Номенклатура = Объект.Номенклатура;
			Иначе
				Номенклатура = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(Объект.ШтрихКод, , ИСТИНА);	
			КонецЕсли;
			
			Валюта 	= ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
			Валюта2 = Валюта;
			Дата  	= Дата;
			Склад 	= Объект.Склад;
			ШтрихКод			 = Объект.ШтрихКод;			
			НоменклатурнаяГруппа = Объект.НоменклатурнаяГруппа;
			Производитель  		 = Объект.Производитель;
			Если ВестиУчетСерийНоменклатуры Тогда
				Серия = ?(ЗначениеЗаполнено(Объект.СерияСуществующейНоменклатуры), Объект.СерияСуществующейНоменклатуры.Наименование, Объект.СерияНоменклатуры);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Валюта = Объект.ВидЦен.ВалютаЦены;
			КонецЕсли;
			
			Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен, Дата, , , , , , , , Объект.ЕдиницаИзмерения);
			Если цена = 0 Тогда
				Цена = Объект.Цена;
			КонецЕсли;
			
			Цена2   = 0;
			ВидЦен2 = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВторойВидЦенДляЭтикетки");
			Если ЗначениеЗаполнено(ВидЦен2) Тогда
				Цена2 = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, ВидЦен2, Дата, , , , , , , , Объект.ЕдиницаИзмерения);
				Валюта2 = ВидЦен2.ВалютаЦены;
			КонецЕсли;			
			
			Выполнить(" ОбъектТекстСШтрихКодом = """"+" + Объект.ОсновнаяФормулаТекстаЭтикетки.Формула + ";");
			Объект.ТекстСШтрихКодом = ОбъектТекстСШтрихКодом;		
			
		Исключение 	
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ОписаниеОшибки();
			Сообщение.Поле 	= "ОсновнаяФормулаТекстаЭтикетки";
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			
		КонецПопытки;
		
	Иначе
		Если НЕ ПустаяСтрока(Объект.ШтрихКод) тогда
			ОбъектТекстСШтрихКодом = Объект.ШтрихКод;
		Иначе
			Если значениезаполнено(Объект.Номенклатура) Тогда
				Номенклатура = Объект.Номенклатура;
			Иначе
				Номенклатура = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(Объект.ШтрихКод, , ИСТИНА);	
			КонецЕсли;
			
			Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен, Дата, , , , , , , , Объект.ЕдиницаИзмерения);
			ОбъектТекстСШтрихКодом = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Номенклатура, , ЛОЖЬ) + " " + формат(Цена, "ЧЦ=12; ЧДЦ=2");
		КонецЕсли;
		
		Если ВестиУчетСерийНоменклатуры
			И ЗначениеЗаполнено(Объект.СерияСуществующейНоменклатуры) Тогда
			
			ОбъектТекстСШтрихКодом = ОбъектТекстСШтрихКодом + " " + Объект.СерияСуществующейНоменклатуры;
		КонецЕсли;
		
	КонецЕсли;
	Объект.ТекстСШтрихКодом = ОбъектТекстСШтрихКодом;
	
конецпроцедуры

&НаСервере
Процедура ОбновитьценуНоменклатуры()
	
	Если ИспользоватьСложныйМеханизмЦен Тогда
		Объект.Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен, Дата, ЛОЖЬ, , , , , , , Объект.ЕдиницаИзмерения);
	Иначе
		Объект.Цена = Объект.Номенклатура.Цена;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбновитьШК() //Экспорт	
	
	ПроверитьФормулы();
	ОбновитьШтрихКод();
	ОбновитьТекстСШтрихКодом();
	ОбновитьТекстаЗаголовкаЭтикетки();
	ОбновитьТекстДополнительнойСтроки();
	
	Элементы.НоваяНоменклатура.Видимость = ЗначениеЗаполнено(Объект.Номенклатура);
	
КонецПроцедуры //обновитьШК()

&Насервере
Процедура ОбновитьШтрихКод()
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		Объект.ШтрихКод = Объект.Номенклатура.ОсновнойШтрихКод;
		Объект.ТекстСШтрихКодом = Объект.ШтрихКод;
	КонецЕсли;
	
	ОбновитьТекстаЗаголовкаЭтикетки();
	
	ОбновитьШтрихКодНаСервере();
	НаСумму = Объект.Количество * Объект.Цена;
	
конецпроцедуры

&Насервере
Процедура ОбновитьШтрихКодНаСервере()
	
	Если ИспользуютсяФормулы 
		И ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
		
		Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
			
			Объект.НоменклатурнаяГруппа = Объект.Номенклатура.НоменклатурнаяГруппа;
			Объект.Производитель 		= Объект.Номенклатура.Производитель;
			Объект.Наименование 		= Объект.Номенклатура.Наименование;			
			Объект.Цена 				= ОбщийМодульСервер.ПолучитьЦенуНаСервере(Объект.Номенклатура, Объект.ВидЦен, Дата, , , , , , , , Объект.ЕдиницаИзмерения);
			
			Если ВестиУчетСерийНоменклатуры
				И ЗначениеЗаполнено(Объект.СерияСуществующейНоменклатуры) Тогда
				
				Объект.СерияНоменклатуры = Объект.СерияСуществующейНоменклатуры.Наименование;
				
			ИначеЕсли ВестиУчетСерийНоменклатуры
				И ЗначениеЗаполнено(Объект.СерияНоменклатуры) Тогда
				
				Объект.СерияСуществующейНоменклатуры = ОбщийМодульТоварСервер.ОбнаружитьСериюНоменклатуры(Объект.Номенклатура, Объект.СерияНоменклатуры);
				
			КонецЕсли;
		КонецЕсли;
		
		Объект.ШтрихКод = "";
		
		Попытка 
			Номенклатура = Объект.Номенклатура;
			
			Объект.ШтрихКод = ОбщийМодульТоварСервер.УстановитьШтрихКодНоменклатурыПоФормуле(Объект.Номенклатура, Объект.ФормулаФормированияШтрихКода.Формула, Объект.ВидЦен, Дата, Объект.Цена, Объект.СерияСуществующейНоменклатуры, Объект.ЕдиницаИзмерения);
			
		Исключение			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ОписаниеОшибки();
			Сообщение.Поле 	= "ФормулаФормированияШтрихКода";
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			
		КонецПопытки;
		
	ИначеЕсли ВестиУчетСерийНоменклатуры
		И ЗначениеЗаполнено(Объект.СерияСуществующейНоменклатуры) Тогда
		
		Объект.ШтрихКод = ОбщийМодульТоварСервер.ПолучитьШтрихКодСерии(Объект.СерияСуществующейНоменклатуры);
		
		Если ПустаяСтрока(Объект.ШтрихКод)
			И значениезаполнено(Объект.Номенклатура) Тогда
			
			Объект.ШтрихКод = Объект.номенклатура.ОсновнойШтрихКод;
		КонецЕсли;
		
	Иначеесли значениезаполнено(Объект.Номенклатура) Тогда
		Объект.ШтрихКод = Объект.номенклатура.ОсновнойШтрихКод;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПолученныйШКНаСервере(Знач ТекКод)
	
	Если НЕ ПустаяСтрока(ТекКод) тогда
		
		РезультатОбработки = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(ТекКод, ИСТИНА, ИСТИНА);
		Если ЗначениеЗаполнено(РезультатОбработки) Тогда
			
			Объект.Номенклатура 					= РезультатОбработки.Номенклатура;
			Объект.Количество						= ОбщийМодульСервер.ПолучитьКоличествоПоУмолчанию(РезультатОбработки.Номенклатура);
			Объект.СерияСуществующейНоменклатуры 	= РезультатОбработки.СерияНоменклатуры;
			Объект.Производитель 					= Объект.Номенклатура.Производитель;
			Объект.НоменклатурнаяГруппа 			= Объект.Номенклатура.НоменклатурнаяГруппа;
			Объект.Наименование 					= Объект.Номенклатура.Наименование;			
			ОбновитьШК();
			
		Иначе
			ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Товар по Штрих-Коду не найден") + "(" + ТекКод + ").");
		КонецЕсли;               	
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда
		
		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[ 1 ] = Неопределено Тогда
				ШтрихКод = Параметр[ 0 ];
			Иначе
				ШтрихКод = Параметр[ 1 ][ 1 ];
			КонецЕсли;
			
			ОбработатьПолученныйШКНаСервере(ШтрихКод);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция	  ОбщийМодульСерверНапечататьЭтикетку()
	
	Если ПараметрыСеанса.ВестиУчетНоменклатурыВРазрезеНоменклатурныхГруппПС
		И НЕ ЗначениеЗаполнено(Объект.НоменклатурнаяГруппа)
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("НоменклатурнаяГруппаОбязательныйРеквизитЛюбойНоменклатуры") Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Номенклатурная группа обязательный реквизит номенклатуры, но она не указана!");
		Сообщение.Сообщить();
		ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Номенклатурная группа обязательный реквизит номенклатуры, но она не указана!"));
		
		Таб = Неопределено;
		
	Иначе           		
		СтруктураПечати = Новый Структура;
		СтруктураПечати.Вставить("ШтрихКод", Объект.ШтрихКод);
		СтруктураПечати.Вставить("ТекстСШтрихКодом", Объект.ТекстСШтрихКодом);
		СтруктураПечати.Вставить("Количество", Объект.Количество);		
		СтруктураПечати.Вставить("Склад", Объект.Склад);
		СтруктураПечати.Вставить("Дата", Дата);
		СтруктураПечати.Вставить("ТекстЗаголовка", Объект.ТекстЗаголовка);
		СтруктураПечати.Вставить("ДополнительнаяСтрокаЭтикетки", ДополнительнаяСтрокаЭтикетки);
		
		Таб = ОбщийМодульТоварСервер.НапечататьЭтикетку(СтруктураПечати, , ИСТИНА);
		
	КонецЕсли;
	
	Возврат Таб;
	
КонецФункции

&НаСервере
Функция   ОбщийМодульСерверНапечататьЭтикеткуОбъектам(Знач ШтрихКод, Знач ТекстСШтрихКодом, Знач Количество = 1, Табдок = Неопределено, Знач ТекстЗаголовка = "")
	
	СтруктураПечати = Новый Структура;
	СтруктураПечати.Вставить("ШтрихКод", ШтрихКод);
	СтруктураПечати.Вставить("ТекстСШтрихКодом", ТекстСШтрихКодом);
	СтруктураПечати.Вставить("Количество", Количество);
	СтруктураПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
	
	ОбщийМодульТоварСервер.НапечататьЭтикетку(СтруктураПечати, ТабДок);		
	
	Возврат ТабДок;
	
КонецФункции

&НаСервере
функция   ОбщийМодульСерверПолучитьНоменклатуруПоШтрихКоду(ШтрихКод)
	возврат ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(ШтрихКод, ИСТИНА, ИСТИНА);
конецфункции

&НаСервере
функция   ОбщийМодульСерверСоздатьНоменклатуру(Знач ШтрихКод, Знач Производитель, Знач НоменклатурнаяГруппа, Знач Цена, Знач Наименование)
	
	Возврат ОбщийМодульТоварСервер.СоздатьНоменклатуру(ШтрихКод, Производитель, НоменклатурнаяГруппа, Цена, наименование, Объект.ВидЦен, ,Объект.СерияНоменклатуры);
	
конецфункции

&НаКлиенте
Процедура ОсновнаяФормулаТекстаЭтикеткиПриИзменении(Элемент)
	ОбновитьТекстСШтрихКодом();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ТекущаяСтраница = Элементы.ГруппаСтраниц.ТекущаяСтраница;
	СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
	СтраницаПанели  = СтраницыПанели.Индекс(ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиенте
Процедура Плюс10(Команда)
	Объект.Количество = Объект.Количество + 10;
	НаСумму = Объект.Количество * Объект.Цена;
КонецПроцедуры

&НаСервере
Функция   ПолучитьРеквизитыНаСервере(Знач Номенклатура, Знач Реквизит);
	Возврат Номенклатура[Реквизит];
КонецФункции

&НаКлиенте
Процедура ПриЗакрытии()                                                  // ПРИ ЗАКРЫТИИ
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
	
	Если ИспользоватьПодключаемоеОборудование Тогда
		ПоддерживаемыеТипыВО = Новый Массив ();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                                                    // ПРИ ОТКРЫТИИ	
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	Если Объект.Количество = 0 Тогда
		Объект.Количество = 1;
	КонецЕсли;
	ПроверитьФормулы();
	
	обновитьШК();
	Если НЕ Объект.ЭтоДобавлениеИзДокумента Тогда
		этаформа.Элементы.НеПечатать.Видимость = ЛОЖЬ
	КонецЕсли;
	
	Если ИспользоватьШтрихКоды тогда
		
		Если ИспользоватьПодключаемоеОборудование И 
			МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
			
			ОписаниеОшибки = "" ;
			ПоддерживаемыеТипыВО = Новый Массив();
			ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
			
			Если НЕ МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
				ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке( "При подключении оборудования произошла ошибка") + ": " + ОписаниеОшибки ;
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;         	
	
	Если ЗначениеЗаполнено(СтраницаПанели)Тогда
		
		попытка
			СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
			ТекущаяСтраница = СтраницыПанели.получить(СтраницаПанели);
			Элементы.ГруппаСтраниц.ТекущаяСтраница = ТекущаяСтраница;
		исключение
		конецпопытки;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		Этаформа.ТекущийЭлемент = Элементы.производитель;
	Иначе
		Этаформа.ТекущийЭлемент = Элементы.номенклатура;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПредыдущаяНоменклатура) Тогда
		Элементы.ГруппаПредыдущаяНоменклатура.Видимость = ЗначениеЗаполнено(ПредыдущаяНоменклатура);
	КонецЕсли;
	
	ВидЦенПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000200", ЭтаФорма, Отказ, );
	
	Если НЕ Отказ Тогда
		
		ИспользоватьШтрихКоды 				 = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьШтрихКоды");
		ИспользоватьПодключаемоеОборудование = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьПодключаемоеОборудование");
		ИспользуютсяФормулы 				 = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом");	
		ИспользоватьСложныйМеханизмЦен 		 = ПараметрыСеанса.ИспользоватьСложныйМеханизмЦенПС ;
		ВестиУчетСерийНоменклатуры 			 = ПараметрыСеанса.ВестиУчетПоСериямНоменклатуры;
		ВывестиДополнительнуюСтрокуЭтикетки	 = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВывестиДополнительнуюСтрокуЭтикетки");
		
		Элементы.ФормулаДополнительнойСтроки.Видимость = ИспользуютсяФормулы И ВывестиДополнительнуюСтрокуЭтикетки;
		ФормулаДополнительнойСтроки = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ФормулаДополнительнойСтрокиЭтикетки");
		Элементы.ФормулаДополнительнойСтроки.Видимость = ВывестиДополнительнуюСтрокуЭтикетки;
		ДополнительнаяСтрокаЭтикетки = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ДополнительнаяСтрокаЭтикетки");	
		
		Если ЗначениеЗаполнено(параметры.Дата) Тогда
			дата = параметры.Дата;
		Иначе
			дата = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.Склад) Тогда
			Объект.Склад = Параметры.Склад;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(параметры.ВидЦен) Тогда
			Объект.ВидЦен = параметры.ВидЦен;
		КонецЕсли;	
		
		Если НЕ ЗначениеЗаполнено(Объект.ВидЦен)
			И ИспользоватьСложныйМеханизмЦен Тогда
			
			Объект.ВидЦен = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВидЦенПриходованияТовараПоУмолчанию");
			Если НЕ ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Объект.ВидЦен = ПредопределенноеЗначение("Справочник.ВидыЦен.ГлавныйВидЦен");
			КонецЕсли;		
		КонецЕсли;
		
		Если ЗначениеЗаполнено(параметры.НоменклатураДляпечати) Тогда
			
			Объект.Номенклатура 		= параметры.НоменклатураДляпечати;
			Объект.Производитель 		= Объект.Номенклатура.Производитель;
			Объект.НоменклатурнаяГруппа = Объект.Номенклатура.НоменклатурнаяГруппа;
			Объект.Наименование 		= СокрЛП(Объект.Номенклатура);
			Объект.СерияНоменклатуры 	= СокрЛП(Параметры.СерияНоменклатуры);
			Объект.СерияСуществующейНоменклатуры = Параметры.СерияНоменклатуры;
			Объект.ЕдиницаИзмерения 	= Параметры.ЕдиницаИзмерения;
			
			ОбновитьценуНоменклатуры();
			Элементы.СоздатьНоменклатуру.Видимость = ЛОЖЬ;
		КонецЕсли;
		
		Если параметрысеанса.НеМожетМенятьЦены  тогда
			Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда			
				Элементы.ВидЦен.Доступность = ЛОЖЬ;			
			КонецЕсли;
			Элементы.Цена.Доступность = ЛОЖЬ;
		КонецЕсли;
		
		проверитьнаименованиевалюты();
		ВидЦенПриИзмененииНаСервере();
		
		Элементы.НоменклатурнаяГруппа.ОтметкаНезаполненного = ПараметрыСеанса.ВестиУчетНоменклатурыВРазрезеНоменклатурныхГруппПС И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("НоменклатурнаяГруппаОбязательныйРеквизитЛюбойНоменклатуры");
		Элементы.Контрагенты.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьШтрихКодыДляИдентификацииКонтрагентов");	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьНаименованиеВалюты()
	
	Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
		НаименованиеВалюты = Объект.ВидЦен.ВалютаЦены;
	Иначе
		НаименованиеВалюты = Справочники.Валюты.ОсновнаяВалюта.Наименование ;
	КонецЕсли;                         	
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуТекстаЗаголовка(Команда)
	ПроверитьФормулуТекстаЗаголовкаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуТекстаЗаголовкаНаСервере()
	
	Если ИспользуютсяФормулы 
		И ЗначениеЗаполнено(Объект.ФормулаТекстаЗаголовка) Тогда
		
		ОбщийМодульСервер.ПроверитьФормулу(Объект.ФормулаТекстаЗаголовка.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуТекстаЭтикетки(Команда)
	ПроверитьФормулуТекстаЭтикеткиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуТекстаЭтикеткиНаСервере()
	
	Если ИспользуютсяФормулы 
		И ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		
		ОбщийМодульСервер.ПроверитьФормулу(Объект.ОсновнаяФормулаТекстаЭтикетки.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулуШтрихКода(Команда)
	ПроверитьФормулуШтрихКодаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулуШтрихКодаНаСервере()
	
	Если ИспользуютсяФормулы 
		И ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
		
		ОбщийМодульСервер.ПроверитьФормулу(Объект.ФормулаФормированияШтрихКода.Формула);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьФормулы()
	
	Если ИспользуютсяФормулы
		И НЕ ЗначениеЗаполнено(Объект.ФормулаФормированияШтрихКода) Тогда
		
		Объект.ФормулаФормированияШтрихКода = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ОсновнаяФормулаШтрихКодаНоменклатуры");	
		Если ЗначениеЗаполнено(Объект.Производитель) 
			И ЗначениеЗаполнено(Объект.Производитель.СвояФормулаШтрихКодаНоменклатуры) Тогда
			Объект.ФормулаФормированияШтрихКода = Объект.Производитель.СвояФормулаШтрихКодаНоменклатуры;
			
		КонецЕсли;
	КонецЕсли;
	
	Если ИспользуютсяФормулы
		И НЕ ЗначениеЗаполнено(Объект.ОсновнаяФормулаТекстаЭтикетки) Тогда
		
		Объект.ОсновнаяФормулаТекстаЭтикетки = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ОсновнаяФормулаТекстаЭтикетки");
	КонецЕсли;        	
	
КонецПроцедуры

&НаКлиенте
Процедура ПроизводительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	ОбщийМодульКлиент.ПоискОшибкиКодировки("Производители", ДанныеВыбора, Текст, Объект.Производитель);
	Если значениезаполнено(Объект.Производитель) Тогда
		ДанныеНоменклатурыПриИзмененииНаСервере();
		обновитьШК();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроизводительПриИзменении(Элемент)
	
	ДанныеНоменклатурыПриИзмененииНаСервере();
	обновитьШК();
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		этаформа.ТекущийЭлемент = Элементы.Количество;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормулаТекстаЗаголовкаПриИзменении(Элемент)
	ОбновитьТекстаЗаголовкаЭтикетки();
КонецПроцедуры

&НаКлиенте
Процедура ФормулаФормированияШтрихКодаПриИзменении(Элемент)
	обновитьШК();
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	
	ДанныеНоменклатурыПриИзмененииНаСервере();
	обновитьШК();
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		этаформа.ТекущийЭлемент = Элементы.Количество;
	КонецЕсли;
	НаСумму = Объект.Количество * Объект.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихКодПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		ОбработатьПолученныйШКНаСервере(Объект.ШтрихКод);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьШтрихКодыСотрудников(Команда)
	
	КоличествоЭтикеток = Объект.Сотрудники.Итог("Количество");
	
	Если КоличествоЭтикеток > 0
		И (КоличествоЭтикеток <= 30 
		ИЛИ Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы уверены, что хотите распечатать такое число") + " (" + КоличествоЭтикеток + ")?", режимдиалогавопрос.ДаНет) = КодВозвратаДиалога.Да) Тогда
		
		ПараметрыФормыПечати = Новый Структура;
		ПараметрыФормыПечати.Вставить("НаименованиеДокумента", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Этикетки для сотрудников"));
		ПараметрыФормыПечати.Вставить("НеПечататьНичегоДополнительно", ИСТИНА);
		ФормаПечати = получитьформу("ОбщаяФорма.ФормаПечати", ПараметрыФормыПечати);			
		
		ЕстьЧтоПечататьВФорме = НапечататьЭтикеткиДляВсехСтрокТаблицыНаСервере(ФормаПечати.Результат, , ИСТИНА);
		
		Если ЕстьЧтоПечататьВФорме Тогда
			ФормаПечати.Заголовок = ПараметрыФормыПечати.НаименованиеДокумента;
			ФормаПечати.Открыть();
		Иначе
			ФормаПечати = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормулаДополнительнойСтрокиПриИзменении(Элемент)
	обновитьШК();
КонецПроцедуры
