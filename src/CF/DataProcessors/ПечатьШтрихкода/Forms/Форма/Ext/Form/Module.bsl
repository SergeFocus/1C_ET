//sza140211-1307 

&НаКлиенте
Процедура ДействиеСформировать(Команда)
	СформироватьНаСервере();	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест"
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Штрихкод     = "2900001462105"; // "46120441";
	УголПоворота = 0;
	ТипШтрихкода = 1;
	ФлагФормирования = Ложь;
	
	ВнешняяКомпонента = МенеджерОборудованияСерверПовтИсп.ПодключитьВнешнююКомпонентуПечатиШтрихкода();
	ВерсияКомпоненты = ВнешняяКомпонента.Версия;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	
	Результат.Очистить();
	
	ВремОбъект = РеквизитФормыВЗначение("Объект");
	Макет = ВремОбъект.ПолучитьМакет("Макет");
	
	Область = Макет.ПолучитьОбласть("Строка|Колонка");
	Рисунок = Область.Рисунки.ШтрихКод;
	
	Эталон = Обработки.ПечатьШтрихкода.ПолучитьМакет("Эталон");
	КоличествоМиллиметровВПикселе = Эталон.Рисунки.Квадрат100Пикселей.Высота / 100;
	
	ПараметрыШтрихкода = Новый Структура;
	ПараметрыШтрихкода.Вставить("Ширина"			, Окр(Рисунок.Ширина / КоличествоМиллиметровВПикселе));
	ПараметрыШтрихкода.Вставить("Высота"			, Окр(Рисунок.Высота / КоличествоМиллиметровВПикселе));
	ПараметрыШтрихкода.Вставить("ТипКода"			, ТипШтрихкода);
	ПараметрыШтрихкода.Вставить("ОтображатьТекст"	, Истина);
	ПараметрыШтрихкода.Вставить("РазмерШрифта"		, 12);
	ПараметрыШтрихкода.Вставить("УголПоворота"		, Число(УголПоворота));
	ПараметрыШтрихкода.Вставить("Штрихкод"			, Штрихкод);
	
	Картинка = МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
	
	Рисунок.Картинка = Картинка;
	Результат.Вывести(Область);
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	Результат.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	ОбновитьШтрихКод();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	ОбновитьШтрихКод();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура СерияНоменклатурыПриИзменении(Элемент)	
	
	Штрихкод = ОбщийМодульТоварСервер.ПолучитьШтрихКодСерии(СерияНоменклатуры);	
	СформироватьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодПриИзменении(Элемент)
	
	НоменклатураПоШтрихКоду = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(Штрихкод, Истина, Истина);
	Если не НоменклатураПоШтрихКоду = Неопределено
		и не ЗначениеЗаполнено(НоменклатураПоШтрихКоду) Тогда
		
		Номенклатура = НоменклатураПоШтрихКоду.Номенклатура;
		СерияНоменклатуры = НоменклатураПоШтрихКоду.СерияНоменклатуры;
	КонецЕсли;
	СформироватьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УголПоворотаПриИзменении(Элемент)
	СформироватьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТипШтрихкодаПриИзменении(Элемент)
	СформироватьНаСервере();
КонецПроцедуры

Процедура ОбновитьШтрихКод()
	Штрихкод = ОбщийМодульТоварСервер.ПолучитьШтрихКодНоменклатурыСерии(Номенклатура, СерияНоменклатуры);	
КонецПроцедуры
