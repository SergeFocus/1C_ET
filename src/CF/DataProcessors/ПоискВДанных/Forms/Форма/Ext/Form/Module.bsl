// sza150923-1749 дизайн
// sza150518-0448 
// sza140119-1449  
// Процедура выполняет полнотекстовый поиск
&НаКлиенте
Процедура HTMLТекстПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	ЭлементHTML = ДанныеСобытия.Anchor;
	
	Если ЭлементHTML = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если (ЭлементHTML.id = "FullTextSearchListItem") Тогда
		
		ВыбранныйНомер = ЭлементHTML.getAttribute("sel_num");
		Попытка
			НомерВСписке = Число(ВыбранныйНомер);
			
			ВыбраннаяСтрока = РезультатыПоиска[НомерВСписке].Значение;
			Если глВерсияПлатформы < 803040000  Тогда
				ОткрытьЗначение(ВыбраннаяСтрока);
			Иначе
				Выполнить(" ПоказатьЗначение(, ВыбраннаяСтрока); ");
			КонецЕсли;
		Исключение
		КонецПопытки;
		
		СтандартнаяОбработка = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьМетаданные(Команда)
	
	ПараметрыФормы = Новый Структура("СписокМетаданных", СписокМетаданных);
	
	Если НЕ ОбщийМодульСервисСервер.ПолучитьВерсиюПлатформы() < 803040000 Тогда
		Выполнить(" Оповещение = Новый ОписаниеОповещения(""ВыбратьМетаданныеЗавершение"", ЭтаФорма); 
		| ОткрытьФорму(ПутьМетаданных + "".Форма.ФормаВыбораМетаданных"", ПараметрыФормы,,,,,Оповещение); ");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьМетаданныеЗавершение(СписокМетаданныхВозврат, Параметры) Экспорт
	
	Если СписокМетаданныхВозврат <> Неопределено Тогда
		СписокМетаданных = СписокМетаданныхВозврат;
		ОграничитьОбъектыПоиска = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик команды Далее
&НаКлиенте
Процедура ДалееВыполнить()
	Искать(1);
КонецПроцедуры

// Процедура поиска, получение и отображение результата
&НаКлиенте
Процедура Искать(Направление)
	Если ПустаяСтрока(СтрокаПоиска) Тогда
		ПоказатьПредупреждение(Неопределено, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не задана строка поиска."));
		Возврат;
	КонецЕсли;
	
	ИскатьВыполнитьСервер(Направление);
КонецПроцедуры

// Обработка команды Найти
&НаКлиенте
Процедура ИскатьВыполнить()
	Искать(0);
КонецПроцедуры

&НаСервере
Процедура ИскатьВыполнитьСервер(Направление) Экспорт
	
	СписокПоиска = ПолнотекстовыйПоиск.СоздатьСписок(СтрокаПоиска, РазмерПорции);
	
	СписокПоиска.ПолучатьОписание = ПоказыватьОписания;
	СписокПоиска.РазмерПорции = РазмерПорции;
	
	Если ПрименитьНечеткийПоиск = ИСТИНА Тогда
		СписокПоиска.ПорогНечеткости = Нечеткость;
	Иначе	
		СписокПоиска.ПорогНечеткости = 0;
	КонецЕсли;
	
	Если ОграничитьОбъектыПоиска = ИСТИНА Тогда
		
		МассивМД = Новый Массив();
		Для Каждого МД Из СписокМетаданных Цикл
			Метаданное = Метаданные.НайтиПоПолномуИмени(МД.Значение);
			МассивМД.Добавить(Метаданное);
		КонецЦикла;	
		
		СписокПоиска.ОбластьПоиска = МассивМД;
		
	Иначе	
		
		МассивМД = Новый Массив();
		СписокПоиска.ОбластьПоиска = МассивМД;
		
	КонецЕсли;
	
	Если Направление = 0 Тогда
		СписокПоиска.ПерваяЧасть();      
	ИначеЕсли Направление = -1 Тогда
		СписокПоиска.ПредыдущаяЧасть(ТекущаяПозиция);      
	ИначеЕсли Направление = 1 Тогда
		СписокПоиска.СледующаяЧасть(ТекущаяПозиция);      
	КонецЕсли;        	
	
	РезультатыПоиска.Очистить();
	Для Каждого Результат Из СписокПоиска Цикл
		РезультатыПоиска.Добавить(Результат.Значение);
	КонецЦикла; 	
	
	HTMLТекст = СписокПоиска.ПолучитьОтображение(ВидОтображенияПолнотекстовогоПоиска.HTMLТекст);
	
	HTMLТекст = СтрЗаменить(HTMLТекст, "<td>", "<td><font face=""Arial"" size=""2"">");
	HTMLТекст = СтрЗаменить(HTMLТекст, "<td valign=top width=1>", "<td valign=top width=1><font face=""Arial"" size=""1"">");
	HTMLТекст = СтрЗаменить(HTMLТекст, "<body>", "<body topmargin=0 leftmargin=0>");
	HTMLТекст = СтрЗаменить(HTMLТекст, "</td>", "</font></td>");
	HTMLТекст = СтрЗаменить(HTMLТекст, "<b>", "");
	HTMLТекст = СтрЗаменить(HTMLТекст, "</b>", "");
	
	ТекущаяПозиция = СписокПоиска.НачальнаяПозиция();
	ПолноеКоличество = СписокПоиска.ПолноеКоличество();       	
	
	Если РезультатыПоиска.Количество() <> 0 Тогда
		ПоказаныРезультатыСПо = 
		ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Показаны") + " " + 
		Строка(ТекущаяПозиция + 1) + " - " +  
		Строка(ТекущаяПозиция + РезультатыПоиска.Количество()) + 
		" " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("из") + Строка(ПолноеКоличество);
		
		Элементы.Далее.Доступность = (ПолноеКоличество - ТекущаяПозиция) > РезультатыПоиска.Количество();
		Элементы.Назад.Доступность = (ТекущаяПозиция > 0);
		
	Иначе
		ПоказаныРезультатыСПо = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не найдено");
		Элементы.Далее.Доступность = ЛОЖЬ;
		Элементы.Назад.Доступность = ЛОЖЬ;
	КонецЕсли;
	
	СохраненнаяСтрока = Элементы.ПолеВводаПоиска.СписокВыбора.НайтиПоЗначению(СтрокаПоиска);
	Если СохраненнаяСтрока <> Неопределено Тогда
		Элементы.ПолеВводаПоиска.СписокВыбора.Удалить(СохраненнаяСтрока);
	КонецЕсли;
	
	Элементы.ПолеВводаПоиска.СписокВыбора.Вставить(0, СтрокаПоиска);
	Строки = Элементы.ПолеВводаПоиска.СписокВыбора.ВыгрузитьЗначения();
	
	ХранилищеОбщихНастроек.Сохранить("ПолнотекстовыйПоискСтрокиПолнотекстовогоПоиска", , Строки);
КонецПроцедуры

// Обработчик команды Назад
&НаКлиенте
Процедура НазадВыполнить()
	Искать(-1);
КонецПроцедуры

// находит символ в строке с конца
Функция   НайтиСимволСКонца(Знач СтрокаВся, Знач ОдинСимвол) // в блоке ВЫПОЛНИТЬ
	Перем ТекущаяПозиция;
	
	НачальнаяПозиция = 1; 
	ДлинаСтроки = СтрДлина(СтрокаВся);
	
	Для ТекущаяПозиция = 1 По СтрДлина(СтрокаВся) Цикл
		РеальнаяПозиция = ДлинаСтроки - ТекущаяПозиция + 1;
		ТекущийСимвол = Сред(СтрокаВся, РеальнаяПозиция, 1);
		Если ТекущийСимвол = ОдинСимвол Тогда
			Возврат РеальнаяПозиция;
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат 0;
КонецФункции

&НаКлиенте
Процедура Настройка(Команда)
	Элементы.ГруппаНастройки.Видимость = Не Элементы.ГруппаНастройки.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИндексыДляПоиска(Команда)
	
	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Обновление индекса.."));
	ОбновитьИндексыДляПоискаНаСервере();
	Элементы.ОбновитьИндексыДляПоиска.Видимость = ЛОЖЬ;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИндексыДляПоискаНаСервере()
	ПолнотекстовыйПоиск.ОбновитьИндекс(ИСТИНА, ЛОЖЬ);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
		ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
	КонецЕсли;
	
	ПутьМетаданных = РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя();
	
	Элементы.ГруппаНастройки.Видимость = ЛОЖЬ;
	
	РазмерПорции = 20;
	Нечеткость = 25;
	ПоказыватьОписания = ИСТИНА;
	ОграничитьОбъектыПоиска = ЛОЖЬ;
	
	Если ПолнотекстовыйПоиск.ПолучитьРежимПолнотекстовогоПоиска() <> РежимПолнотекстовогоПоиска.Разрешить Тогда
		Отказ = ИСТИНА;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Использование полнотекстового поиска не разрешено. Вы можете включить его в диалоге Управление полнотекстовым поиском");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ПоказаныРезультатыСПо = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите строку поиска");
	ТекущаяПозиция = 0;
	
	Элементы.Далее.Доступность = ЛОЖЬ;
	Элементы.Назад.Доступность = ЛОЖЬ;
	
	Массив = ХранилищеОбщихНастроек.Загрузить("ПолнотекстовыйПоискСтрокиПолнотекстовогоПоиска");
	
	Если Массив <> Неопределено Тогда
		Элементы.ПолеВводаПоиска.СписокВыбора.ЗагрузитьЗначения(Массив);
	КонецЕсли;	
	
КонецПроцедуры
