// sza150112-1840

&НаКлиенте
Процедура ВыполнитьЗамену(Команда)

	Если НЕ ПустаяСтрока(ПодСтрокаКоторуюСледуетНайти) Тогда
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет изменение путей.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
		ЧислоИзменений = ВыполнитьЗаменуНаСервере(ОтобратьГруппуИзображений, ПодСтрокаКоторуюСледуетНайти, ПодСтрокаНаКоторуюСледуетЗаменить);
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Всего изменений") + ": " + СокрЛП(ЧислоИзменений));
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполнитьЗаменуНаСервере(Знач ОтобратьГруппуИзображений, Знач ПодСтрокаКоторуюСледуетНайти, Знач ПодСтрокаНаКоторуюСледуетЗаменить = "")

	Результат = 0;

	Если ЗначениеЗаполнено(ОтобратьГруппуИзображений) Тогда
		Изображения = Справочники.Изображения.Выбрать(ОтобратьГруппуИзображений);
	Иначе
		Изображения = Справочники.Изображения.Выбрать();
	КонецЕсли;

	Пока Изображения.Следующий() Цикл
		ИзображениеОбъект = Изображения.Ссылка.ПолучитьОбъект();
		БылиИзменения = ЛОЖЬ;
		Если НЕ Найти(Изображения.ИмяФайлаИзображения, ПодСтрокаКоторуюСледуетНайти) = 0 Тогда
			ИзображениеОбъект.ИмяФайлаИзображения = СтрЗаменить(ИзображениеОбъект.РасширениеФайла, ПодСтрокаКоторуюСледуетНайти, ПодСтрокаНаКоторуюСледуетЗаменить);
			БылиИзменения = ИСТИНА;
		КонецЕсли;

		Если НЕ Найти(Изображения.РасширениеФайла, ПодСтрокаКоторуюСледуетНайти) = 0 Тогда
			ИзображениеОбъект.РасширениеФайла = СтрЗаменить(ИзображениеОбъект.РасширениеФайла, ПодСтрокаКоторуюСледуетНайти, ПодСтрокаНаКоторуюСледуетЗаменить);
			БылиИзменения = ИСТИНА;
		КонецЕсли;

		Если НЕ Найти(Изображения.СсылкаНаИзображение, ПодСтрокаКоторуюСледуетНайти) = 0 Тогда
			ИзображениеОбъект.СсылкаНаИзображение = СтрЗаменить(ИзображениеОбъект.РасширениеФайла, ПодСтрокаКоторуюСледуетНайти, ПодСтрокаНаКоторуюСледуетЗаменить);
			БылиИзменения = ИСТИНА;
		КонецЕсли;

		Если БылиИзменения Тогда
			ИзображениеОбъект.Записать();
			Результат = Результат + 1;
		КонецЕсли;

	КонецЦикла;

	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ПриЗакрытии()

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);
		КонецЕсли;

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры
