//sza131102
//sza130919-2358 : 

&НаКлиенте
Процедура ЗаполнитьУказанныйВидЦенИзДаннымиИзКарточкиНоменклатуры(Команда)
	
	Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
		
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет заполнение цен.."), 0, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заполнение.."));
		ЗаполнитьУказанныйВидЦенИзДаннымиИзКарточкиНоменклатурыНаСервере();
		ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заполнил вид") + " " + Объект.ВидЦен + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(" цен по данным карточек номенклатуры"), 2);
		
	Иначе
		Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вид цен не указан!"), СтатусСообщения.Информация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУказанныйВидЦенИзДаннымиИзКарточкиНоменклатурыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	Номенклатура.Цена
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ЭтоГруппа = Ложь
	|	И Номенклатура.Предопределенный = Ложь";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Дата 	= Объект.Дата;
	ВидЦен 	= Объект.ВидЦен;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Номенклатура = ВыборкаДетальныеЗаписи.Ссылка;
		Цена = ВыборкаДетальныеЗаписи.Цена;
		
		ЦеныНоменклатуры = РегистрыСведений.Цены.СоздатьМенеджерЗаписи();
		ЦеныНоменклатуры.Активность 	= Истина;
		ЦеныНоменклатуры.ВидЦен 		= ВидЦен  ;
		ЦеныНоменклатуры.Комментарий 	= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("из карточки номенклатуры");
		ЦеныНоменклатуры.Номенклатура 	= Номенклатура;
		ЦеныНоменклатуры.Период 		= Дата;
		ЦеныНоменклатуры.Вручную 		= Ложь;
		ЦеныНоменклатуры.Цена 			= Цена;
		
		Попытка 
			ЦеныНоменклатуры.Записать(Истина);
			
				СтрокаТовара = Новый Структура;
				СтрокаТовара.Вставить("Номенклатура", Номенклатура);
				СтрокаТовара.Вставить("Цена", Цена);
				
				ОбщийМодульСервер.УстановитьЦенуИВсеЗависимые(ВидЦен, СтрокаТовара, , , Дата, Истина, , , ЛОЖЬ);
			
		Исключение 
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка при попытке записи цены:") + " " + ЦеныНоменклатуры + " " + ОписаниеОшибки();
			Сообщение.Сообщить();
			
		КонецПопытки;		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЦеныВКарточкахНоменклатурыПоДаннымУказанногоВидаЦен(Команда)
	
	Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
		
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет заполнение цен.."), 0, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заполнение.."));
		ЗаполнитьЦеныВКарточкахНоменклатурыПоДаннымУказанногоВидаЦенНаСервере();
		ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заполнил цены карточек по виду цен") + " " + Объект.ВидЦен, 2);
		
	Иначе
		Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вид цен не указан!"), СтатусСообщения.Информация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЦеныВКарточкахНоменклатурыПоДаннымУказанногоВидаЦенНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныСрезПоследних.Цена,
	|	ЦеныСрезПоследних.Номенклатура
	|ИЗ
	|	РегистрСведений.Цены.СрезПоследних(&Дата, ВидЦен = &ВидЦен) КАК ЦеныСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("ВидЦен", Объект.ВидЦен);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоменклатураОбъект = ВыборкаДетальныеЗаписи.Номенклатура.ПолучитьОбъект() ;
		НоменклатураОбъект.Цена = ВыборкаДетальныеЗаписи.Цена;
		
		Попытка
			НоменклатураОбъект.Записать(Истина);
			
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка при попытке записи цены:") + " " + НоменклатураОбъект + " " + ОписаниеОшибки();
			Сообщение.Сообщить();
		КонецПопытки;		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	Если параметрысеанса.НеМожетМенятьЦены  тогда
		отказ = истина;			
	КонецЕсли;
	
	Объект.ВидЦен = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВидЦенРасходованияПоУмолчанию") ;
	Если НЕ ЗначениеЗаполнено(Объект.ВидЦен) Тогда
		Объект.ВидЦен = Справочники.ВидыЦен.ОсновнойВидЦен ;
	КонецЕсли;
	Объект.Дата = НачалоДня(ОбщийМодульСервисСервер.ПользователяТекущаяДата())- 1;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерепроведениеВсехРасходныхНакладныхИИнвентаризацийВЦеляхУстановкиПоказателейВаловойПрибыли(Команда)
	
	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет перепроведение документов.."), 0, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Перепроведенеие.."));
	ПерепроведениеВсехРасходныхНакладныхИИнвентаризацийВЦеляхУстановкиПоказателейВаловойПрибылиНаСервере();
	ОбщийМодульКлиент.ДобавитьСобытиеЖурнала(ЭтаФорма, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Перепровел инвентаризации и расходные накладные"), 2);
	
КонецПроцедуры

&НаСервере
Процедура ПерепроведениеВсехРасходныхНакладныхИИнвентаризацийВЦеляхУстановкиПоказателейВаловойПрибылиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Инвентаризации.Ссылка
	|ИЗ
	|	Документ.Инвентаризации КАК Инвентаризации
	|ГДЕ
	|	Инвентаризации.Проведен = Истина";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			ДОК = ВыборкаДетальныеЗаписи.ССылка.ПолучитьОбъект();
			Попытка 
				Док.записать(РежимЗаписиДокумента.Проведение);
			Исключение 	
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка при проведении:") + " " + ОписаниеОшибки();
				Сообщение.Сообщить();
				
			КонецПопытки;		
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходыТовара.Ссылка
	|ИЗ
	|	Документ.РасходыТовара КАК РасходыТовара
	|ГДЕ
	|	РасходыТовара.Проведен = Истина";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ДОК = ВыборкаДетальныеЗаписи.ССылка.ПолучитьОбъект();
			Попытка 
				Док.записать(РежимЗаписиДокумента.Проведение);
			Исключение 	
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка при проведении:") + " " + ОписаниеОшибки();
				Сообщение.Сообщить();
				
			КонецПопытки;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                                                    // ПРИ ОТКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                                  // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПерерасчетВсехЗависимыхЦенНаДату(Команда)
	
	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет перерасчет всех зависимых цен.."), 0, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Перерасчет.."));
	ПерерасчетВсехЗависимыхЦенНаДатуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПерерасчетВсехЗависимыхЦенНаДатуНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|	ВидыЦен.ОсновнойВидЦен
	|ИЗ
	|	Справочник.ВидыЦен КАК ВидыЦен
	|ГДЕ
	|	ВидыЦен.Зависимая = ИСТИНА
	|	И ВидыЦен.ПометкаУдаления = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл		
			
			
			Номенклатура = Справочники.Номенклатура.Выбрать() ;
			пока номенклатура.Следующий() Цикл
				
				Цена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(номенклатура.Ссылка, ВыборкаДетальныеЗаписи.ОсновнойВидЦен, Объект.Дата, Ложь, , , , , Объект.Ссылка);
				
				если не цена = 0 тогда
					СтрокаТовара = Новый Структура;
					СтрокаТовара.Вставить("Номенклатура", Номенклатура.Ссылка);
					СтрокаТовара.Вставить("Цена", Цена);
					
					ОбщийМодульСервер.УстановитьЦенуИВсеЗависимые(ВыборкаДетальныеЗаписи.ОсновнойВидЦен, СтрокаТовара, , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("автоматический перерассчет"), Объект.Дата, Истина);	
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
