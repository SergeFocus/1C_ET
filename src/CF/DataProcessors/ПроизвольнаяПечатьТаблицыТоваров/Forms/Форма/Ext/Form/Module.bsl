//sza141123-2323 

&НаКлиенте
Процедура ИсточникПечатиДокументСТаблицейТоварыПриИзменении(Элемент)
	ИсточникПечатиДокументСТаблицейТоварыПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИсточникПечатиДокументСТаблицейТоварыПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(ИсточникПечатиДокументСТаблицейТовары) Тогда
		
		ОбщееКоличество = 0;
		ЧислоСтрок = 0;
		ВыводитьЦену = ЛОЖЬ;
		ИспользоватьСложныйМеханизмЦен = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьСложныйМеханизмЦен");
		ВидЦен = ПредопределенноеЗначение("Справочник.ВидыЦен.ПустаяСсылка");
		
		Попытка
			ОбщееКоличество = ИсточникПечатиДокументСТаблицейТовары.ТовараВКоличестве;
		Исключение
			Попытка
				ОбщееКоличество = ИсточникПечатиДокументСТаблицейТовары.Товары.Итог("Количество");
			Исключение
			КонецПопытки;
		КонецПопытки;
		
		Попытка
			НаСумму = ИсточникПечатиДокументСТаблицейТовары.ТовараНаСумму;
		Исключение
			Попытка
				НаСумму = ИсточникПечатиДокументСТаблицейТовары.Товары.Итог("Сумма");
			Исключение
			КонецПопытки;
		КонецПопытки;
		
		Если ИспользоватьСложныйМеханизмЦен Тогда
			Попытка
				ВидЦенДокумента = ИсточникПечатиДокументСТаблицейТовары.ВидЦен;
				Если НЕ ЗначениеЗаполнено(ВидЦен) Тогда
					ВидЦен = ВидЦенДокумента;
				КонецЕсли;
			Исключение
			КонецПопытки;	
		КонецЕсли;
		
		Попытка
			ЧислоСтрок = ИсточникПечатиДокументСТаблицейТовары.Товары.Количество();
		Исключение
		КонецПопытки;
		
		Попытка
			ВыводитьЦену = ИсточникПечатиДокументСТаблицейТовары.Товары.Получить(0).Цена <> 0;
		Исключение
		КонецПопытки;
		
		Дата = ИсточникПечатиДокументСТаблицейТовары.Дата;
		
		Попытка 
			ЯзыкПечати = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(ИсточникПечатиДокументСТаблицейТовары.КлиентПоставщик, , ЛОЖЬ);
		Исключение 	
			Попытка 
				ЯзыкПечати = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(ИсточникПечатиДокументСТаблицейТовары.Клиент, , ЛОЖЬ);
			Исключение 						
				ЯзыкПечати = ПредопределенноеЗначение("Справочник.Языки.Русский");
			КонецПопытки;				
		КонецПопытки;
		
		
		Элементы.ВидЦенДокумента.Видимость = ИспользоватьСложныйМеханизмЦен И ЗначениеЗаполнено(ВидЦенДокумента);		
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("001800", ЭтаФорма, Отказ, Объект);
	Если НЕ Отказ Тогда
		
		ЯзыкПечати = ПредопределенноеЗначение("Справочник.Языки.Русский");
		
		Если ЗначениеЗаполнено(Параметры.ИсточникДокумент) Тогда
			ИсточникПечатиДокументСТаблицейТовары = Параметры.ИсточникДокумент;
			ИсточникПечатиДокументСТаблицейТоварыПриИзмененииНаСервере();	
		КонецЕсли;	
		
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.ОбщееКоличество, , ИСТИНА);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	Если ПустаяСтрока(ЗаголовокДокумента) Тогда
		ЗаголовокДокумента = АвтоЗаголовокДокумента(ИсточникПечатиДокументСТаблицейТовары);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ВидЦенОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
	ВидЦен = ВидЦенДокумента;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаголовокДокументаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
	ЗаголовокДокумента = АвтоЗаголовокДокумента(ИсточникПечатиДокументСТаблицейТовары);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция   АвтоЗаголовокДокумента(Знач ДокументСТаблицейТовары)
	
	ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Товары");
	
	Если ЗначениеЗаполнено(ДокументСТаблицейТовары) Тогда
		Попытка 
			ЗаголовокДокумента = ДокументСТаблицейТовары;
		Исключение 	
		КонецПопытки;
		
		Если ПустаяСтрока(ЗаголовокДокумента) Тогда
			Если ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.ВыполненияРабот") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выполненные работы");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.Инвентаризации") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Инвентаризация склада");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.Комплектация") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Результаты комплектации");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.КорректировкиИРегистрацияОстатков") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Корректировка остатков товаров");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.ОтчетКомиссионера") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Реализованные комиссионером товары");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.ПеремещенияТовара") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Перемещенные товары");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.ПланыПродаж") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("План продаж");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.ПоступленияТовара") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поступление");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.РасходыТовара") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Расход");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.УстановкиЦен") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Переоценка");
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЗаголовокДокумента;
	
КонецФункции //АвтоЗаголовокДокумента

&НаСервере
Процедура НаПечать(ТабДок, ПараметрКоманды)
	
	ТабДок.Очистить();
	ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напечатал таблицу товаров "), 2);
	НаПечататьТаблицу(ТабДок);
	
КонецПроцедуры

&НаСервере
Процедура НаПечататьТаблицу(ТабДок);
	
	ИспользоватьЕдиницыИзмеренияНоменклатуры = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьЕдиницыИзмеренияНоменклатуры");
	
	Макет = Обработки.ПроизвольнаяПечатьТаблицыТоваров.ПолучитьМакет("ПроизвольнаяПечатьТоваров");
	ЯзыкПечатиКод = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(, ЯзыкПечати);
	Макет.КодЯзыкаМакета = ЯзыкПечатиКод;
	
	Область = Макет.ПолучитьОбласть("З"); 
	Область.Параметры.ЗаголовокДокумента = ЗаголовокДокумента;
	Область.Параметры.ЗаголовокСсылка = ИсточникПечатиДокументСТаблицейТовары;
	Область.Параметры.Дата = Дата; 
	ТабДок.Вывести(Область);
	
	Область = Новый ТабличныйДокумент;
	Область.ИмяПараметровПечати = "ПТ" + СокрЛП(ИмяКомпьютера());
	Область.КлючПараметровПечати = Область.ИмяПараметровПечати;
	
	Область.Присоединить(Макет.ПолучитьОбласть("ШН")); 
	
	Если ВыводитьКолонкуАртикул Тогда
		Область.Присоединить(Макет.ПолучитьОбласть("ША")); 
	КонецЕсли;
	
	Если ИспользоватьЕдиницыИзмеренияНоменклатуры Тогда
		Область.Присоединить(Макет.ПолучитьОбласть("ШЕ")); 
	КонецЕсли;
	
	Если НЕ ОбщееКоличество = 0 Тогда
		Область.Присоединить(Макет.ПолучитьОбласть("ШК")); 
	КонецЕсли;
	
	Если ВыводитьЦенуИСумму 
		И ВыводитьЦену Тогда
		
		Область.Присоединить(Макет.ПолучитьОбласть("ШЦ")); 
	КонецЕсли;
	
	Если НЕ ОбщееКоличество = 0
		И ВыводитьЦенуИСумму Тогда
		
		Область.Присоединить(Макет.ПолучитьОбласть("ШС")); 
	КонецЕсли;
	ТабДок.Вывести(Область);
	
	ОбластьСН = Макет.ПолучитьОбласть("СН"); 
	ОбластьСА = Макет.ПолучитьОбласть("СА"); 
	ОбластьСЕ = Макет.ПолучитьОбласть("СЕ"); 
	ОбластьСК = Макет.ПолучитьОбласть("СК"); 
	ОбластьСЦ = Макет.ПолучитьОбласть("СЦ"); 
	ОбластьСС = Макет.ПолучитьОбласть("СС"); 
	
	СчетчикСтрок = 0;
	
	ПланыПродаж = ТипЗнч(ИсточникПечатиДокументСТаблицейТовары) = Тип("ДокументСсылка.ПланыПродаж");
	СуммаДляПечати = 0;
	
	Для Каждого СтрокаТовара Из ИсточникПечатиДокументСТаблицейТовары.Товары Цикл
		
		Номенклатура = Неопределено;		
		Область 	 = Новый ТабличныйДокумент;
		Область.ИмяПараметровПечати = "ПТ" + СокрЛП(ИмяКомпьютера());
		Область.КлючПараметровПечати = Область.ИмяПараметровПечати;
		
		СчетчикСтрок = СчетчикСтрок + 1;
		ОбластьСН.Параметры.НомерСтроки = "" + СчетчикСтрок;
		
		Если ПланыПродаж Тогда
			ОбластьСН.Параметры.Номенклатура = СтрокаТовара.НоменклатураИлиГруппа;
			Область.Присоединить(ОбластьСН);
			
		Иначе			
			Номенклатура = СтрокаТовара.Номенклатура;
			
			ОбластьСН.Параметры.Номенклатура = Номенклатура;
			ОбластьСН.Параметры.ПредставлениеНоменклатуры = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Номенклатура, ЯзыкПечати, КлиентПоставщик);
			Область.Присоединить(ОбластьСН);
			
			Если ВыводитьКолонкуАртикул Тогда
				ОбластьСА.Параметры.Артикул 	 = Номенклатура.Артикул;
				ОбластьСА.Параметры.Номенклатура = Номенклатура;
				Область.Присоединить(ОбластьСА);
			КонецЕсли;
			
			Если ИспользоватьЕдиницыИзмеренияНоменклатуры Тогда
				Попытка
					ЕдиницаИзмерения = СтрокаТовара.ЕдиницаИзмерения;
					ОбластьСЕ.Параметры.ЕдиницаИзмерения = ОбщийМодульПовтор.ПолучитьПредставлениеНаЯзыке(ЕдиницаИзмерения, , , ЯзыкПечати);
					ОбластьСЕ.Параметры.Номенклатура     = Номенклатура;
					Область.Присоединить(ОбластьСЕ);
				исключение
				конецпопытки;
			КонецЕсли; 	
		КонецЕсли;
		
		Если НЕ ОбщееКоличество = 0 Тогда
			ОбластьСК.Параметры.Количество   = СтрокаТовара.Количество;
			ОбластьСК.Параметры.Номенклатура = Номенклатура;
			Область.Присоединить(ОбластьСК);
		КонецЕсли;
		
		Если НЕ ПланыПродаж Тогда
			
			Сумма = 0;
			
			Если ВыводитьЦенуИСумму 
				И ВыводитьЦену Тогда
				
				Если ЗначениеЗаполнено(ВидЦен)
					И НЕ ВидЦен = ВидЦенДокумента Тогда
					
					Если ИспользоватьЕдиницыИзмеренияНоменклатуры Тогда
						Попытка 
							НоваяЦена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, ВидЦен, Дата + 1, ИСТИНА, ?(НЕ ОбщееКоличество = 0, СтрокаТовара.Количество, 0), , , , , ИСТИНА, СтрокаТовара.ЕдиницаИзмерения); //не учтена едизм	
						Исключение 	
							Попытка 
								НоваяЦена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, ВидЦен, Дата + 1, ИСТИНА, ?(НЕ ОбщееКоличество = 0, СтрокаТовара.Количество, 0), , , , , ИСТИНА); //не учтена едизм
							Исключение 	
							КонецПопытки;
							
						КонецПопытки;
						
					Иначе
						НоваяЦена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, ВидЦен, Дата + 1, ИСТИНА, ?(НЕ ОбщееКоличество = 0, СтрокаТовара.Количество, 0), , , , , ИСТИНА); //не учтена едизм	
					КонецЕсли;
					ОбластьСЦ.Параметры.Цена = НоваяЦена;
					
					Если НЕ ОбщееКоличество = 0 Тогда
						Сумма = СтрокаТовара.Количество * НоваяЦена;
					КонецЕсли;
					
				Иначе
					ОбластьСЦ.Параметры.Цена = СтрокаТовара.Цена;
				КонецЕсли;				
				
				ОбластьСЦ.Параметры.Номенклатура = Номенклатура;
				Область.Присоединить(ОбластьСЦ);
			КонецЕсли;			
			
			Если НЕ ОбщееКоличество = 0
				И ВыводитьЦенуИСумму Тогда
				
				Если Сумма = 0 Тогда
					ОбластьСС.Параметры.Сумма = СтрокаТовара.Сумма;
					СуммаДляПечати = СуммаДляПечати + СтрокаТовара.Сумма;
				Иначе
					ОбластьСС.Параметры.Сумма = Сумма;
					СуммаДляПечати = СуммаДляПечати + Сумма;
				КонецЕсли;
				
				ОбластьСС.Параметры.Номенклатура = Номенклатура;
				Область.Присоединить(ОбластьСС);
			КонецЕсли;	
		КонецЕсли;
		
		ТабДок.Вывести(Область);		
	КонецЦикла; //вывод строк 
	
	Если НЕ ОбщееКоличество = 0 Тогда
		Область = Макет.ПолучитьОбласть("ВК");
		Область.Параметры.ВсегоКоличество = ОбщееКоличество;
		ТабДок.Вывести(Область);
	КонецЕсли;
	
	Если НЕ ОбщееКоличество = 0
		И ВыводитьЦенуИСумму Тогда
		
		Область = Макет.ПолучитьОбласть("ВС");
		Область.Параметры.ВсегоНаСумму = СуммаДляПечати;
		ТабДок.Вывести(Область);
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ВыводитьТекстПодТаблицей) Тогда
		Область = Макет.ПолучитьОбласть("ДопТ");
		Область.Параметры.ТекстПодТаблицей = ВыводитьТекстПодТаблицей;
		ТабДок.Вывести(Область);	
	КонецЕсли;
	
	Если ВыводитьКомментарий Тогда
		Область = Макет.ПолучитьОбласть("К");
		Область.Параметры.Комментарий = ИсточникПечатиДокументСТаблицейТовары.Комментарий;
		ТабДок.Вывести(Область);	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СотрудникВПодписи) Тогда
		Область = Макет.ПолучитьОбласть("П");
		Область.Параметры.Подписант = СотрудникВПодписи;
		ТабДок.Вывести(Область);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Напечатать(Команда)
	
	Если ЗначениеЗаполнено(ИсточникПечатиДокументСТаблицейТовары) Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ОбъектПечати", ИсточникПечатиДокументСТаблицейТовары);
		ПараметрыФормы.Вставить("Документ", ИсточникПечатиДокументСТаблицейТовары);
		ФормаПечати = получитьформу("ОбщаяФорма.ФормаПечати", ПараметрыФормы);
		
		НаПечать(ФормаПечати.Результат, ИсточникПечатиДокументСТаблицейТовары);
		
		ФормаПечати.Результат.ОтображатьСетку = ЛОЖЬ;
		ФормаПечати.Результат.Защита = ИСТИНА;
		ФормаПечати.Результат.ТолькоПросмотр = ИСТИНА;
		ФормаПечати.Результат.ОтображатьЗаголовки = ЛОЖЬ;
		ФормаПечати.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("печать: Товары");
		ФормаПечати.открыть();	
		
	Иначе
		Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не указан документ с таблицей товаров!"));
	КонецЕсли;
	
КонецПроцедуры
