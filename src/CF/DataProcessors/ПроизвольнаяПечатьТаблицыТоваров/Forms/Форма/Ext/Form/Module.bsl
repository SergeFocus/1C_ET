// sza150408-0243 ППВ
// sza150212-1410 таблицей
// sza141123-2323

&НаСервереБезКонтекста
Функция   АвтоЗаголовокДокумента(Знач ДокументСТаблицейТовары)

	ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Товары");

	Если ЗначениеЗаполнено(ДокументСТаблицейТовары) Тогда
		Попытка
			ЗаголовокДокумента = ДокументСТаблицейТовары;
		Исключение
		КонецПопытки;

		Если ПустаяСтрока(ЗаголовокДокумента) Тогда
			Если ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.ВыполненияРабот") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выполненные работы");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.Инвентаризации") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Инвентаризация склада");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.Комплектация") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Результаты комплектации");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.КорректировкиИРегистрацияОстатков") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Корректировка остатков товара");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.ОтчетыКомиссионеров") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Реализованные комиссионером товары");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.ПеремещенияТовара") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Перемещенные товары");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.ПланыПродаж") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("План продаж");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.ПоступленияТовара") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поступление");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.РасходыТовара") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Расход");
			ИначеЕсли ТипЗнч(ДокументСТаблицейТовары) = Тип("ДокументСсылка.УстановкиЦен") Тогда
				ЗаголовокДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Переоценка");
			КонецЕсли;

		КонецЕсли;
	КонецЕсли;

	Возврат ЗаголовокДокумента;

КонецФункции // АвтоЗаголовокДокумента

&НаКлиенте
Процедура БезЗаголовкаПриИзменении(Элемент)

	ОбновитьВидимостьЭлементовДляФормы();

КонецПроцедуры

&НаКлиенте
Процедура ВидЦенОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = ЛОЖЬ;
	Объект.ВидЦен = ВидЦенДокумента;

КонецПроцедуры

&НаКлиенте
Процедура ЗаголовокДокументаОткрытие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = ЛОЖЬ;
	Объект.ЗаголовокДокумента = АвтоЗаголовокДокумента(Объект.ИсточникПечатиДокументСТаблицейТовары);

КонецПроцедуры

&НаКлиенте
Процедура ИсточникиТаблицаДокументовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Объект.ИсточникиТаблицаДокументов.Очистить();
		Для Каждого СтрокаДокумент Из ВыбранноеЗначение Цикл
			СтрокаВыбранногоДокумента = Объект.ИсточникиТаблицаДокументов.Добавить();
			СтрокаВыбранногоДокумента.ИсточникПечатиДокументСТаблицей = СтрокаДокумент.Ссылка;

		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИсточникПечатиДокументСТаблицейТоварыПриИзменении(Элемент)
	ИсточникПечатиДокументСТаблицейТоварыПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИсточникПечатиДокументСТаблицейТоварыПриИзмененииНаСервере()

	Если ЗначениеЗаполнено(Объект.ИсточникПечатиДокументСТаблицейТовары) Тогда
		ОбщееКоличество = 0;
		ЧислоСтрок = 0;
		ВыводитьЦену = ЛОЖЬ;
		ИспользоватьСложныйМеханизмЦен = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСложныйМеханизмЦен");
		Объект.ВидЦен = ПредопределенноеЗначение("Справочник.ВидыЦен.ПустаяСсылка");
		Попытка
			ОбщееКоличество = Объект.ИсточникПечатиДокументСТаблицейТовары.ТовараВКоличестве;
		Исключение
			Попытка
				ОбщееКоличество = Объект.ИсточникПечатиДокументСТаблицейТовары.Товары.Итог("Количество");
			Исключение
			КонецПопытки;
		КонецПопытки;
		Попытка
			НаСумму = Объект.ИсточникПечатиДокументСТаблицейТовары.ТовараНаСумму;
		Исключение
			Попытка
				НаСумму = Объект.ИсточникПечатиДокументСТаблицейТовары.Товары.Итог("Сумма");
			Исключение
			КонецПопытки;
		КонецПопытки;

		Если ИспользоватьСложныйМеханизмЦен Тогда
			Попытка
				ВидЦенДокумента = Объект.ИсточникПечатиДокументСТаблицейТовары.ВидЦен;
				Если НЕ ЗначениеЗаполнено(Объект.ВидЦен) Тогда
					Объект.ВидЦен = ВидЦенДокумента;
				КонецЕсли;

			Исключение
			КонецПопытки;
		КонецЕсли;

		Попытка
			ЧислоСтрок = Объект.ИсточникПечатиДокументСТаблицейТовары.Товары.Количество();
		Исключение
		КонецПопытки;
		Попытка
			ВыводитьЦену = Объект.ИсточникПечатиДокументСТаблицейТовары.Товары.Получить(0).Цена <> 0;
		Исключение
		КонецПопытки;
		Объект.Дата = Объект.ИсточникПечатиДокументСТаблицейТовары.Дата;
		Попытка
			Объект.ЯзыкПечати = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(Объект.ИсточникПечатиДокументСТаблицейТовары.КлиентПоставщик, , ЛОЖЬ);
		Исключение
			Попытка
				Объект.ЯзыкПечати = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(Объект.ИсточникПечатиДокументСТаблицейТовары.Клиент, , ЛОЖЬ);
			Исключение
				Объект.ЯзыкПечати = ПредопределенноеЗначение("Справочник.Языки.Русский");
			КонецПопытки;
		КонецПопытки;
		Элементы.ВидЦенДокумента.Видимость = ИспользоватьСложныйМеханизмЦен И ЗначениеЗаполнено(ВидЦенДокумента);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Напечатать(Команда)

	Если ЗначениеЗаполнено(Объект.ИсточникПечатиДокументСТаблицейТовары) Тогда
		ПараметрыФормы = Новый Структура;
		Если НЕ Объект.ПечатьИзНесколькихДокументов Тогда
			ПараметрыФормы.Вставить("ОбъектПечати", Объект.ИсточникПечатиДокументСТаблицейТовары);
			ПараметрыФормы.Вставить("Документ", Объект.ИсточникПечатиДокументСТаблицейТовары);
		КонецЕсли;

		ФормаПечати = ПолучитьФорму("ОбщаяФорма.ФормаПечати", ПараметрыФормы);
		НаПечать(ФормаПечати.Результат);
		ФормаПечати.Результат.ОтображатьСетку = ЛОЖЬ;
		ФормаПечати.Результат.Защита = ИСТИНА;
		ФормаПечати.Результат.ТолькоПросмотр = ИСТИНА;
		ФормаПечати.Результат.ОтображатьЗаголовки = ЛОЖЬ;
		ФормаПечати.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("печать: Товары");
		ФормаПечати.Открыть();
	Иначе
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не указан документ с таблицей товара!"));
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура НаПечататьТаблицу(ДокументДляПечати, Знач СчетчикДокументов = 0);

	ИспользоватьЕдиницыИзмеренияНоменклатуры = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьЕдиницыИзмеренияНоменклатуры");

	Если НЕ Объект.ОбъединитьТаблицыДокументов
		ИЛИ СчетчикДокументов = 0 Тогда

		Объект.СуммаДляПечати = 0;
		Объект.КоличествоВсехДокументов = 0;
	КонецЕсли;

	СчетчикСтрок 	= 0;
	ПланыПродаж 	= ТипЗнч(Объект.ИсточникПечатиДокументСТаблицейТовары) = Тип("ДокументСсылка.ПланыПродаж");
	Товары = Новый ТаблицаЗначений;
	Товары.Колонки.Добавить("НомерСтроки");
	Товары.Колонки.Добавить("Номенклатура");
	Товары.Колонки.Добавить("ЕдиницаИзмерения");
	Товары.Колонки.Добавить("Количество");
	Товары.Колонки.Добавить("Цена");
	Товары.Колонки.Добавить("Сумма");

	Для Каждого СтрокаТовара Из Объект.ИсточникПечатиДокументСТаблицейТовары.Товары Цикл
		СтрокаТаблицы = Товары.Добавить();
		СчетчикСтрок = СчетчикСтрок + 1;
		СтрокаТаблицы.НомерСтроки = Формат(СчетчикСтрок, "ЧРГ=' '; ЧГ=0");

		Если ПланыПродаж Тогда
			СтрокаТаблицы.Номенклатура = СтрокаТовара.НоменклатураИлиГруппа;
		Иначе
			Номенклатура = СтрокаТовара.Номенклатура;
			СтрокаТаблицы.Номенклатура = Номенклатура;

			Если ИспользоватьЕдиницыИзмеренияНоменклатуры Тогда
				Попытка
					ЕдиницаИзмерения = СтрокаТовара.ЕдиницаИзмерения;
					СтрокаТаблицы.ЕдиницаИзмерения = ОбщийМодульПовтор.ПолучитьПредставлениеНаЯзыке(ЕдиницаИзмерения, , , Объект.ЯзыкПечати);
				исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;

		СтрокаТаблицы.Количество = СтрокаТовара.Количество;
		СтрокаТаблицы.Цена = СтрокаТовара.Цена;
		Если НЕ ОбщееКоличество = 0 Тогда
			Объект.КоличествоВсехДокументов = Объект.КоличествоВсехДокументов + СтрокаТовара.Количество;
		КонецЕсли;

		Если НЕ ПланыПродаж Тогда
			Сумма = 0;

			Если Объект.ВыводитьЦенуИСумму
				И ВыводитьЦену Тогда

				Если ЗначениеЗаполнено(Объект.ВидЦен)
					И НЕ Объект.ВидЦен = ВидЦенДокумента Тогда

					Если ИспользоватьЕдиницыИзмеренияНоменклатуры Тогда
						Попытка
							НоваяЦена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, Объект.ВидЦен, Объект.Дата + 1, ИСТИНА, ?(НЕ ОбщееКоличество = 0, СтрокаТовара.Количество, 0), , , , , ИСТИНА, СтрокаТовара.ЕдиницаИзмерения); // не учтена единица измерения
						Исключение
							Попытка
								НоваяЦена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, Объект.ВидЦен, Объект.Дата + 1, ИСТИНА, ?(НЕ ОбщееКоличество = 0, СтрокаТовара.Количество, 0), , , , , ИСТИНА); // не учтена единица измерения
							Исключение
							КонецПопытки;
						КонецПопытки;
					Иначе
						НоваяЦена = ОбщийМодульСервер.ПолучитьЦенуНаСервере(Номенклатура, Объект.ВидЦен, Объект.Дата + 1, ИСТИНА, ?(НЕ ОбщееКоличество = 0, СтрокаТовара.Количество, 0), , , , , ИСТИНА); // не учтена единица измерения
					КонецЕсли;

					СтрокаТаблицы.Цена = НоваяЦена;

					Если НЕ ОбщееКоличество = 0 Тогда
						Сумма = СтрокаТовара.Количество * НоваяЦена;
					КонецЕсли;
				Иначе
					СтрокаТаблицы.Цена = СтрокаТовара.Цена;
					Сумма = СтрокаТовара.Количество * СтрокаТовара.Цена;
				КонецЕсли;
			КонецЕсли;

			Если НЕ ОбщееКоличество = 0
				И Объект.ВыводитьЦенуИСумму Тогда

				Если Сумма = 0 Тогда
					СтрокаТаблицы.Сумма   = СтрокаТовара.Сумма;
					Объект.СуммаДляПечати = Объект.СуммаДляПечати + СтрокаТовара.Сумма;
				Иначе
					СтрокаТаблицы.Сумма   = Сумма;
					Объект.СуммаДляПечати = Объект.СуммаДляПечати + Сумма;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

	КонецЦикла; // вывод строк

	Если ЗначениеЗаполнено(Объект.ПроизвольнаяПечатнаяФорма) Тогда
		ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(Объект.ПроизвольнаяПечатнаяФорма, , ДокументДляПечати, Объект, "Обработки", "ПроизвольнаяПечатьТаблицыТоваров", Новый Структура("Товары", Товары));
	Иначе
		Макет = Обработки.ПроизвольнаяПечатьТаблицыТоваров.ПолучитьМакет("ПроизвольнаяПечатьТоваров");
		ЯзыкПечатиКод = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(, Объект.ЯзыкПечати);
		Макет.КодЯзыкаМакета = ЯзыкПечатиКод;

		Если НЕ Объект.ОбъединитьТаблицыДокументов
			ИЛИ СчетчикДокументов = 0 Тогда

			Если НЕ Объект.БезЗаголовка Тогда
				Область = Макет.ПолучитьОбласть("З");
				Область.Параметры.ЗаголовокДокумента = Объект.ЗаголовокДокумента;
				Область.Параметры.ЗаголовокСсылка 	 = Объект.ИсточникПечатиДокументСТаблицейТовары;
				Область.Параметры.Дата 				 = Объект.Дата;
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Область);
				ДокументДляПечати.Вывести(Область);
			КонецЕсли;

			Область = Новый ТабличныйДокумент;
			Область.ИмяПараметровПечати  = "ПТ" + СокрЛП(ИмяКомпьютера());
			Область.КлючПараметровПечати = Область.ИмяПараметровПечати;
			Область.Присоединить(Макет.ПолучитьОбласть("ШН"));

			Если Объект.ВыводитьКолонкуАртикул Тогда
				Область.Присоединить(Макет.ПолучитьОбласть("ША"));
			КонецЕсли;

			Если ИспользоватьЕдиницыИзмеренияНоменклатуры Тогда
				Область.Присоединить(Макет.ПолучитьОбласть("ШЕ"));
			КонецЕсли;

			Если НЕ ОбщееКоличество = 0 Тогда
				Область.Присоединить(Макет.ПолучитьОбласть("ШК"));
			КонецЕсли;

			Если Объект.ВыводитьЦенуИСумму
				И ВыводитьЦену Тогда

				Область.Присоединить(Макет.ПолучитьОбласть("ШЦ"));
			КонецЕсли;

			Если НЕ ОбщееКоличество = 0
				И Объект.ВыводитьЦенуИСумму Тогда

				Область.Присоединить(Макет.ПолучитьОбласть("ШС"));
			КонецЕсли;

			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Область);
			ДокументДляПечати.Вывести(Область);
		КонецЕсли;

		ОбластьСН = Макет.ПолучитьОбласть("СН");
		ОбластьСА = Макет.ПолучитьОбласть("СА");
		ОбластьСЕ = Макет.ПолучитьОбласть("СЕ");
		ОбластьСК = Макет.ПолучитьОбласть("СК");
		ОбластьСЦ = Макет.ПолучитьОбласть("СЦ");
		ОбластьСС = Макет.ПолучитьОбласть("СС");

		Для Каждого СтрокаТовара Из Товары Цикл
			Область = Новый ТабличныйДокумент; // для каждой строки
			Область.ИмяПараметровПечати  = "ПТ" + СокрЛП(ИмяКомпьютера());
			Область.КлючПараметровПечати = Область.ИмяПараметровПечати;
			Номенклатура = Неопределено;
			СчетчикСтрок = СчетчикСтрок + 1;
			ОбластьСН.Параметры.НомерСтроки = СтрокаТовара.НомерСтроки;

			Если ПланыПродаж Тогда
				ОбластьСН.Параметры.Номенклатура = СтрокаТовара.Номенклатура;
				Область.Присоединить(ОбластьСН);
			Иначе
				Номенклатура = СтрокаТовара.Номенклатура;
				ОбластьСН.Параметры.Номенклатура = Номенклатура;
				ОбластьСН.Параметры.ПредставлениеНоменклатуры = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Номенклатура, Объект.ЯзыкПечати, Объект.КлиентПоставщик);
				Область.Присоединить(ОбластьСН);

				Если Объект.ВыводитьКолонкуАртикул Тогда
					ОбластьСА.Параметры.Артикул 	 = Номенклатура.Артикул;
					ОбластьСА.Параметры.Номенклатура = Номенклатура;
					Область.Присоединить(ОбластьСА);
				КонецЕсли;

				Если ИспользоватьЕдиницыИзмеренияНоменклатуры Тогда
					ОбластьСЕ.Параметры.ЕдиницаИзмерения = СтрокаТовара.ЕдиницаИзмерения;
					ОбластьСЕ.Параметры.Номенклатура     = Номенклатура;
					Область.Присоединить(ОбластьСЕ);
				КонецЕсли;
			КонецЕсли;

			Если НЕ ОбщееКоличество = 0 Тогда
				ОбластьСК.Параметры.Количество   = СтрокаТовара.Количество;
				ОбластьСК.Параметры.Номенклатура = Номенклатура;
				Область.Присоединить(ОбластьСК);
			КонецЕсли;

			Если НЕ ПланыПродаж Тогда
				Сумма = 0;

				Если Объект.ВыводитьЦенуИСумму
					И ВыводитьЦену Тогда

					ОбластьСЦ.Параметры.Цена = СтрокаТовара.Цена;
					ОбластьСЦ.Параметры.Номенклатура = Номенклатура;
					Область.Присоединить(ОбластьСЦ);
				КонецЕсли;

				Если НЕ ОбщееКоличество = 0
					И Объект.ВыводитьЦенуИСумму Тогда

					ОбластьСС.Параметры.Сумма = СтрокаТовара.Сумма;
					ОбластьСС.Параметры.Номенклатура = Номенклатура;
					Область.Присоединить(ОбластьСС);
				КонецЕсли;
			КонецЕсли;

			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Область);
			ДокументДляПечати.Вывести(Область);
		КонецЦикла; // вывод строк

		Если НЕ Объект.ОбъединитьТаблицыДокументов
			ИЛИ СчетчикДокументов = Объект.ИсточникиТаблицаДокументов.Количество() + 1 Тогда

			Если НЕ ОбщееКоличество = 0 Тогда
				Область = Макет.ПолучитьОбласть("ВК");
				Область.Параметры.ВсегоКоличество = Объект.КоличествоВсехДокументов;
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Область);
				ДокументДляПечати.Вывести(Область);
			КонецЕсли;

			Если НЕ ОбщееКоличество = 0
				И Объект.ВыводитьЦенуИСумму Тогда

				Область = Макет.ПолучитьОбласть("ВС");
				Область.Параметры.ВсегоНаСумму = Объект.СуммаДляПечати;
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Область);
				ДокументДляПечати.Вывести(Область);
			КонецЕсли;

			Если НЕ ПустаяСтрока(Объект.ВыводитьТекстПодТаблицей) Тогда
				Область = Макет.ПолучитьОбласть("ДопТ");
				Область.Параметры.ТекстПодТаблицей = Объект.ВыводитьТекстПодТаблицей;
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Область);
				ДокументДляПечати.Вывести(Область);
			КонецЕсли;

			Если Объект.ВыводитьКомментарий Тогда
				Область = Макет.ПолучитьОбласть("К");
				Область.Параметры.Комментарий = Объект.ИсточникПечатиДокументСТаблицейТовары.Комментарий;
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Область);
				ДокументДляПечати.Вывести(Область);
			КонецЕсли;

			Если ЗначениеЗаполнено(Объект.СотрудникВПодписи) Тогда
				Область = Макет.ПолучитьОбласть("П");
				Область.Параметры.Подписант = Объект.СотрудникВПодписи;
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Область);
				ДокументДляПечати.Вывести(Область);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура НаПечать(ДокументДляПечати)

	ДокументДляПечати.ИмяПараметровПечати  = "ТаблицаТоваров" + СокрЛП(ИмяКомпьютера());
	ДокументДляПечати.КлючПараметровПечати = ДокументДляПечати.ИмяПараметровПечати;
	Если НЕ Объект.НеОчищатьТаблицу Тогда
		ДокументДляПечати.Очистить();
	КонецЕсли;

	ОбщийМодульСервер.ДобавитьСобытиеЖурналаНаСервере(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Напечатал произвольную таблицу"), 2);

	Если НЕ Объект.ПечатьИзНесколькихДокументов Тогда
		НаПечататьТаблицу(ДокументДляПечати);
	Иначе
		ОбщееКоличество   = 1; // таблицу выводить
		СчетчикДокументов = 0;

		Для Каждого ДокументДляПечати Из Объект.ИсточникиТаблицаДокументов Цикл
			Объект.ИсточникПечатиДокументСТаблицейТовары = ДокументДляПечати.ИсточникПечатиДокументСТаблицей;
			НаПечататьТаблицу(ДокументДляПечати, СчетчикДокументов);
			СчетчикДокументов  = СчетчикДокументов + 1;

		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимостьЭлементовДляФормы()

	Элементы.ГруппаДляЗаголовка.Видимость 	  = НЕ Объект.БезЗаголовка;
	Элементы.ИсточникПечатиДокументСТаблицейТовары.Видимость = НЕ Объект.ПечатьИзНесколькихДокументов;
	Элементы.ИнформацияОДокументе.Видимость   = НЕ Объект.ПечатьИзНесколькихДокументов;
	Элементы.ГруппаМногихИсточников.Видимость = Объект.ПечатьИзНесколькихДокументов;

КонецПроцедуры // ОбновитьВидимостьЭлементовДляФормы

&НаКлиенте
Процедура ПечатьИзНесколькихДокументовПриИзменении(Элемент)
	ОбновитьВидимостьЭлементовДляФормы();
КонецПроцедуры

&НаКлиенте
Процедура Подобрать(Команда)

	НеобходимоеИмяФормы = "Обработка.ПроизвольнаяПечатьТаблицыТоваров.Форма.ПодборДокументов";
	ОткрытьФорму(НеобходимоеИмяФормы, , Элементы.ИсточникиТаблицаДокументов);

КонецПроцедуры

&НаКлиенте
Процедура ПослеИзображенияОкнаФормы() // Когда окно уже нарисовано пользователю
	ЭтаФорма.Элементы.ФормаЗакрыть.Видимость = НЕ ЭтаФорма.Окно = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);

	Если ПустаяСтрока(Объект.ЗаголовокДокумента) Тогда
		Объект.ЗаголовокДокумента = АвтоЗаголовокДокумента(Объект.ИсточникПечатиДокументСТаблицейТовары);
	КонецЕсли;

	ОбновитьВидимостьЭлементовДляФормы();
	ПодключитьОбработчикОжидания("ПослеИзображенияОкнаФормы", 0.3, ИСТИНА);

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("001800", ЭтаФорма, Отказ, Объект);

	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);
		КонецЕсли;

		Объект.ЯзыкПечати = ПредопределенноеЗначение("Справочник.Языки.Русский");

		Если ЗначениеЗаполнено(Параметры.ИсточникДокумент) Тогда
			Объект.ИсточникПечатиДокументСТаблицейТовары = Параметры.ИсточникДокумент;
			ИсточникПечатиДокументСТаблицейТоварыПриИзмененииНаСервере();
		КонецЕсли;

		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПоддерживатьИныеЯзыкиКромеРусского") Тогда
			Элементы.ЯзыкПечати.РежимВыбораИзСписка = ИСТИНА;
			ОбщийМодульПовтор.УстановитьСписокДоступныхЯзыков(Элементы.ЯзыкПечати.СписокВыбора, , ИСТИНА);
		КонецЕсли;

		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.ОбщееКоличество, , ИСТИНА);
	КонецЕсли;

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиТаблицаДокументовПриИзменении(Элемент)
	глВремяПоследнегоСобытия = ТекущаяДата();
КонецПроцедуры
