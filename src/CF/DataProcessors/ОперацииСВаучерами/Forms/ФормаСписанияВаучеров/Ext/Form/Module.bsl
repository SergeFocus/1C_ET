// sza150527-0320 

&НаКлиенте
Процедура СписатьВаучеры(Команда)
	
	Если ПроверитьТаблицуВаучеров() Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("СписатьВаучерыЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы готовы списать ваучеры?"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписатьВаучерыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		СписатьВаучерыНаСервере();	
		ЭтаФорма.Закрыть(ИСТИНА);	
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СписатьВаучерыНаСервере()
	
	Отказ = ЛОЖЬ;
	
	ДокументСписания = Документы.РасходыТовара.СоздатьДокумент();
	ДокументСписания.ВидДокумента 	= Перечисления.ВидыДокументаРасходаТовара.Списание;
	ДокументСписания.Дата 			= Объект.ДатаОперации;
	ДокументСписания.Комментарий 	= Объект.Комментарий;
	ДокументСписания.НаправлениеДеятельности = Объект.НаправлениеДеятельности;
	ДокументСписания.Организация 	= Объект.Организация;
	ДокументСписания.Склад			= Объект.Склад;
	
	Сумма = 0;
	
	Для Каждого СтрокаВаучеры Из Объект.Ваучеры Цикл
		
		СтрокаТовары = ДокументСписания.Товары.Добавить();
		СтрокаТовары.Номенклатура 	= СтрокаВаучеры.Номенклатура;
		СтрокаТовары.Количество		= 1;
		СтрокаТовары.ОСтроке 		= СтрокаВаучеры.ОСтроке;
		
		Цена = ОбщийМодульСервер.ПолучитьЦенуСписания(СтрокаВаучеры.Номенклатура, 1, Объект.ДатаОперации, , , Объект.Склад);
		СтрокаТовары.Сумма 	= Цена;
		СтрокаТовары.Цена	= Цена;		
		
		Сумма = Сумма + Цена;
		
	КонецЦикла;
	
	ДокументСписания.ТовараВКоличестве = Объект.Ваучеры.Количество();
	ДокументСписания.ТовараНаСумму = Сумма;
	
	ДокументСписания.ПодготовкаКПроведению(Отказ);
	
	Если НЕ Отказ Тогда
		ДокументСписания.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВаучерыВаучерПриИзменении(Элемент)
	
	СтрокаТовара = Элементы.Ваучеры.ТекущиеДанные;	
	
	Ваучер = СтрокаТовара.Ваучер;
	Если ЗначениеЗаполнено(Ваучер) Тогда
		СтруктураВаучера = ВаучерыВаучерПриИзмененииНаСервере(Ваучер);
		
		СтрокаТовара.НомерВаучера 	= СтруктураВаучера.НомерВаучера;
		СтрокаТовара.Номенклатура 	= СтруктураВаучера.Номенклатура;
		СтрокаТовара.ШтрихКод		= СтруктураВаучера.ШтрихКод;
		СтрокаТовара.НоминалПроцент = СтруктураВаучера.НоминалПроцент;
		
	Иначе
		СтрокаТовара.НомерВаучера 	= "";
		СтрокаТовара.Номенклатура 	= ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
		СтрокаТовара.ШтрихКод		= "";
		СтрокаТовара.НоминалПроцент = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция   ВаучерыВаучерПриИзмененииНаСервере(Знач Ваучер)
	
	Результат = Новый Структура("номерВаучера", Ваучер.Наименование);
	Результат.Вставить("Номенклатура", Ваучер.Номенклатура);
	Результат.Вставить("ШтрихКод", Ваучер.ШтрихКод);
	Результат.Вставить("НоминалПроцент", Ваучер.НоминалПроцент);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	Если ПустаяСтрока(Объект.Комментарий) Тогда
		Объект.Комментарий =ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Списание ваучеров");
	КонецЕсли;
	
		Если ИспользоватьПодключаемоеОборудование И 
		МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		
		ОписаниеОшибки = "" ;
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		
		Если НЕ МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении оборудования произошла ошибка") + ": " + ОписаниеОшибки + ".";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
	
		// ПодключаемоеОборудование	
	Если ОбщийМодульКлиент.ИспользоватьПодключаемоеОборудование() Тогда
		ПоддерживаемыеТипыВО = Новый Массив ();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	КонецЕсли;
	// Конец ПодключаемоеОборудование

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000610", ЭтаФорма, Отказ, Объект);
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;	
		
		ВестиУчетПоНаправлениямДеятельности = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоНаправлениямДеятельности");
		ИспользоватьПодключаемоеОборудование 		= ПодключаемоеОборудованиеДСервер.ИспользоватьПодключаемоеОборудование();
		
		Объект.ДатаОперации = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
		Объект.Организация  = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ОрганизацияПоУмолчанию");
		Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
			Объект.Организация = ПредопределенноеЗначение("Справочник.Организации.ОсновноеПредприятие");
		КонецЕсли;
		Объект.Склад		= ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("СкладПоУмолчанию");
		Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
			Объект.Склад = Справочники.Склады.ОсновнойСклад;
		КонецЕсли;
		
		Объект.ДатаОперации = ОбщийМодульСервисСервер.ПользователяТекущаяДата();	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция   ПроверитьТаблицуВаучеров()
	
	Результат = ИСТИНА;
	
	Если Объект.Ваучеры.Количество() = 0 Тогда
		Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ваучеры не указаны!"));
		Результат = ЛОЖЬ;
		
	Иначе
		ЧислоОшибок = 0;
		ЗапретитьНоменклатуруБезШтрихКода = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ЗапретитьНоменклатуруБезШтрихКода");
		МассивНомеров = Новый Массив;
		МассивШК 	  = Новый Массив;
		
		Для Каждого СтрокаВаучера Из Объект.Ваучеры Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаВаучера.Ваучер) Тогда
				Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В строке") + " №" + СтрокаВаучера.НомерСтроки + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("не указан ваучер!"));
				ЧислоОшибок = ЧислоОшибок + 1;
				
			Иначе			
				НомерВаучера = СтрокаВаучера.НомерВаучера;
				
				Если ПустаяСтрока(НомерВаучера) Тогда
					Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В строке") + " №" + СтрокаВаучера.НомерСтроки + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("не указан номер ваучера!"));
					ЧислоОшибок = ЧислоОшибок + 1;
				ИначеЕсли НЕ МассивНомеров.Найти(НомерВаучера) = Неопределено Тогда
					Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В строке") + " №" + СтрокаВаучера.НомерСтроки + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("повторяется номер ваучера") + ": " + НомерВаучера);
					ЧислоОшибок = ЧислоОшибок + 1;
				Иначе
					МассивНомеров.Добавить(НомерВаучера);
				КонецЕсли;
				
				ШтрихКод = СтрокаВаучера.ШтрихКод;
				Если ПустаяСтрока(ШтрихКод) Тогда
					Если ЗапретитьНоменклатуруБезШтрихКода Тогда
						Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В строке") + " №" + СтрокаВаучера.НомерСтроки + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("не указан обязательный штрих-код") + ": " + ШтрихКод);
						ЧислоОшибок = ЧислоОшибок + 1;
					КонецЕсли;
					
				Иначе
					Если НЕ МассивШК.Найти(ШтрихКод) = Неопределено Тогда
						
						Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В строке") + " №" + СтрокаВаучера.НомерСтроки + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("повторяется штрих-код") + ": " + ШтрихКод);
						ЧислоОшибок = ЧислоОшибок + 1;
					Иначе
						МассивШК.Добавить(ШтрихКод);	
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;
			
			Если ЧислоОшибок > 30 Тогда
				Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Показаны только 30 первых ошибок."));
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Результат = ЧислоОшибок = 0;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции //ПроверитьТаблицуНовыхВаучеров

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	Если ВестиУчетПоНаправлениямДеятельности
		И НЕ ЗначениеЗаполнено(Объект.НаправлениеДеятельности) Тогда
		
		ОбновитьЗначениеНаправленияДеятельности();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗначениеНаправленияДеятельности()
	Объект.НаправлениеДеятельности = ОбщийМодульСервер.ОпределитьНаправлениеДеятельности(, , Объект.Организация, , Объект.Склад, );	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда
		
		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[ 1 ] = Неопределено Тогда
				ТекКод = Параметр[ 0 ];
			Иначе
				ТекКод = Параметр[ 1 ][ 1 ];
			КонецЕсли;
			
			Если НЕ ОбработатьПолученныйШКНаКлиенте(ТекКод) Тогда
				СообщитьОбОшибке(ТекКод)
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СообщитьОбОшибке(Знач ТекКод)
	
	ТекстПредупреждения 	= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ваучер не найден!");
	ЗаголовокПредупреждения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поиск по ШтрихКоду");
	ПоказатьПредупреждение(Неопределено, ТекстПредупреждения, 10, ЗаголовокПредупреждения);
	
КонецПроцедуры

&НаКлиенте
Функция   ОбработатьПолученныйШКНаКлиенте(Знач ТекКод)
	
	Результат = ИСТИНА;
	КодЭлемента = ОбработатьПолученныйШКНаСервере(ТекКод);
	
	Если КодЭлемента = Неопределено Тогда
		Результат = ЛОЖЬ;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция   ОбработатьПолученныйШКНаСервере(Знач ТекКод)
	
	Результат = ИСТИНА;
	
	СтруктураПараметров = Новый Структура("Ваучер");
	Ваучер = ОбщийМодульТоварСервер.ПолучитьВаучерПоШтрихКоду(ТекКод);

	Если ЗначениеЗаполнено(Ваучер) Тогда
		
		ДобавитьПозицию(Ваучер);
		
	Иначе		
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ваучер по Штрих-Коду не найден") + " (" + ТекКод + ").");
		Результат = ЛОЖЬ;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ДобавитьПозицию(Знач Ваучер)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Ваучер", Ваучер);
	
	СтрокаВаучера = Объект.Ваучеры.НайтиСтроки(ПараметрыОтбора);
	Если СтрокаВаучера.Количество() = 0 Тогда
		
		СтрокаВаучера = Объект.Ваучеры.Добавить();				
		СтрокаВаучера.Ваучер = Ваучер;
		
	Иначе
		СтрокаВаучера = СтрокаВаучера[0]; 
	КонецЕсли;
	
	СтрокаВаучера.Номенклатура 	 = Ваучер.Номенклатура;
	СтрокаВаучера.НомерВаучера 	 = Ваучер.Наименование;
	СтрокаВаучера.ШтрихКод 		 = Ваучер.ШтрихКод;
	СтрокаВаучера.НоминалПроцент = Ваучер.НоминалПроцент;
	
	Элементы.Ваучеры.ТекущаяСтрока  = СтрокаВаучера.ПолучитьИдентификатор();
	Элементы.Ваучеры.ТекущийЭлемент = Элементы.ТоварыКоличество;		
	
КонецПроцедуры
