// sza150623-0239 
&НаКлиенте
Перем ВыполняетсяЗакрытие;

&НаКлиенте
Процедура КлиентыПользователиКодовоеСловоОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
	Элементы.КлиентыПользователи.ТекущиеДанные.КодовоеСлово = СформироватьКодовоеСлово();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикиПользователиКодовоеСловоОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
	Элементы.КлиентыПользователи.ТекущиеДанные.КодовоеСлово = СформироватьКодовоеСлово();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000100", ЭтаФорма, Отказ, Объект);
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ЗаполнитьТаблицыКонтрагентовПользователей();		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	ПодключитьОбработчикОжидания("ПослеИзображенияОкнаФормы", 0.3, ИСТИНА);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзображенияОкнаФормы() // Когда окно уже нарисовано пользователю
	ЭтаФорма.Элементы.ФормаЗакрыть.Видимость = НЕ ЭтаФорма.Окно = Неопределено;	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеКонтрагентовПользователей(Команда)
	ЗаполнитьТаблицыКонтрагентовПользователей();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыКонтрагентовПользователей()
	
	ПустойПользователь = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	Объект.КлиентыПользователи.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Клиенты.Ссылка КАК Клиент,
	|	Клиенты.КодовоеСлово Как КодовоеСлово,
	|	Клиенты.Пользователь Как Пользователь,
	|	Клиенты.Комментарий КАК ОСтроке
	|ИЗ Справочник.Клиенты КАК Клиенты
	|ГДЕ Клиенты.Пользователь <> &ПустойПользователь";
	
	Запрос.УстановитьПараметр("ПустойПользователь", ПустойПользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Объект.КлиентыПользователи.Загрузить(РезультатЗапроса.Выгрузить());
	
	Объект.ПоставщикиПользователи.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Поставщики.Ссылка КАК Поставщик,
	|	Поставщики.Пользователь КАК Пользователь,
	|	Поставщики.Комментарий КАК ОСтроке,
	|	Поставщики.КодовоеСлово КАК КодовоеСлово
	|ИЗ Справочник.Поставщики КАК Поставщики
	|ГДЕ Поставщики.Пользователь <> &ПустойПользователь";
	
	Запрос.УстановитьПараметр("ПустойПользователь", ПустойПользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Объект.ПоставщикиПользователи.Загрузить(РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикиПользователиПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПоставщикиПользователи.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено Тогда
		Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Пользователь) Тогда
			ТекущиеДанные.Пользователь = ПользовательПоставщикПредприятия;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ТекущиеДанные.КодовоеСлово) Тогда
			ТекущиеДанные.КодовоеСлово = СформироватьКодовоеСлово();
		КонецЕсли;
		ТекущиеДанные.Изменяли = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КлиентыПользователиПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.КлиентыПользователи.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено Тогда
		Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Пользователь) Тогда
			ТекущиеДанные.Пользователь = ПользовательКлиентПредприятия;
		КонецЕсли;		
		Если НЕ ЗначениеЗаполнено(ТекущиеДанные.КодовоеСлово) Тогда
			ТекущиеДанные.КодовоеСлово = СформироватьКодовоеСлово();
		КонецЕсли;
		ТекущиеДанные.Изменяли = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияНаСервере()
	
	Для Каждого СтрокаКонтрагента Из Объект.КлиентыПользователи Цикл
		Если СтрокаКонтрагента.Изменяли 
			И ЗначениеЗаполнено(СтрокаКонтрагента.Клиент)
			И ЗначениеЗаполнено(СтрокаКонтрагента.Пользователь) Тогда
			
			ОбъектКонтрагент = СтрокаКонтрагента.Клиент.ПолучитьОбъект();
			ОбъектКонтрагент.Пользователь = СтрокаКонтрагента.Пользователь;
			ОбъектКонтрагент.КодовоеСлово = СтрокаКонтрагента.КодовоеСлово;
			ОбъектКонтрагент.Комментарий  = СтрокаКонтрагента.ОСтроке;
			ОбъектКонтрагент.Записать();
			
			СтрокаКонтрагента.Изменяли = ЛОЖЬ;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаКонтрагента Из Объект.ПоставщикиПользователи Цикл
		Если СтрокаКонтрагента.Изменяли 
			И ЗначениеЗаполнено(СтрокаКонтрагента.Поставщик)
			И ЗначениеЗаполнено(СтрокаКонтрагента.Пользователь) Тогда
			
			ОбъектКонтрагент = СтрокаКонтрагента.Поставщик.ПолучитьОбъект();
			ОбъектКонтрагент.Пользователь = СтрокаКонтрагента.Пользователь;
			ОбъектКонтрагент.КодовоеСлово = СтрокаКонтрагента.КодовоеСлово;
			ОбъектКонтрагент.Комментарий  = СтрокаКонтрагента.ОСтроке;
			ОбъектКонтрагент.Записать();
			
			СтрокаКонтрагента.Изменяли = ЛОЖЬ;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИзменения(Команда)
	ЗаписатьИзмененияНаСервере();
КонецПроцедуры

&НаКлиенте
Функция   СформироватьКодовоеСлово()
	
	Результат = "";
	ТекущаяДатаДляФормирования = ТекущаяДата();
	
	Пока НеОригинальноеСлово(Результат) ЦИкл
		
		Результат = Символ(час(ТекущаяДатаДляФормирования) + 48) +
		Символ(минута(ТекущаяДатаДляФормирования) + 48) +
		Символ(секунда(ТекущаяДатаДляФормирования) + 48) +
		Символ(день(ТекущаяДатаДляФормирования) + 48) +
		Символ(месяц(ТекущаяДатаДляФормирования) + 48) + 
		Символ(день(ТекущаяДатаДляФормирования) + месяц(ТекущаяДатаДляФормирования) + 48) +
		Символ(секунда(ТекущаяДатаДляФормирования) + минута(ТекущаяДатаДляФормирования) + 48) +
		Символ(час(ТекущаяДатаДляФормирования) + минута(ТекущаяДатаДляФормирования) + 48) +
		Символ(секунда(ТекущаяДатаДляФормирования) + час(ТекущаяДатаДляФормирования) + 48) +
		Символ(секунда(ТекущаяДатаДляФормирования) + месяц(ТекущаяДатаДляФормирования) + 48);	
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции 

&НаСервереБезКонтекста
Функция   НеОригинальноеСлово(Знач Результат)
	
	Если ПустаяСтрока(Результат) Тогда
		Возврат ИСТИНА;
		
	Иначе	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 Клиенты.Ссылка
		|ИЗ Справочник.Клиенты КАК Клиенты
		|ГДЕ Клиенты.КодовоеСлово = &КодовоеСлово
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ ПЕРВЫЕ 1 Поставщики.Ссылка
		|ИЗ Справочник.Поставщики КАК Поставщики
		|ГДЕ Поставщики.КодовоеСлово = &КодовоеСлово";
		
		Запрос.УстановитьПараметр("КодовоеСлово", Результат);
		
		РезультатЗапроса = Запрос.Выполнить();
		Возврат НЕ РезультатЗапроса.Пустой();	
	КонецЕсли;
	
КонецФункции //НеОригинальноеСлово

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ВыполняетсяЗакрытие Тогда
		Изменяли = ЛОЖЬ;
		
		Для Каждого СтрокаКонтрагента Из Объект.КлиентыПользователи Цикл
			Если СтрокаКонтрагента.Изменяли Тогда
				Изменяли = ИСТИНА;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаКонтрагента Из Объект.ПоставщикиПользователи Цикл
			Если СтрокаКонтрагента.Изменяли Тогда
				Изменяли = ИСТИНА;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Изменяли Тогда
			Отказ = ИСТИНА;
			
			ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Отменить изменения"), РежимДиалогаВопрос.ДаНет);		
			
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ВыполняетсяЗакрытие = ИСТИНА;
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры
