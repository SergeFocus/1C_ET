//sza140114-0212 : 
//sza130831-0257

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                                                    // ПРИ ОТКРЫТИИ	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	элементы.Взаиморасчеты.Видимость = УчетПоКлиентам;
	
	Если НЕ ЗначениеЗаполнено(Отчет.ДатаНачала) Тогда
		Отчет.ДатаНачала 	= началоГода(ОбщийМодульКлиент.ПользователяТекущаяДата());
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Отчет.ДатаОкончания) Тогда
		Отчет.ДатаОкончания = ОбщийМодульКлиент.ПользователяТекущаяДата();
	КонецЕсли;
	Отчет.ПериодОтчета.ДатаНачала 		= Отчет.ДатаНачала;	
	Отчет.ПериодОтчета.ДатаОкончания 	= Отчет.ДатаОкончания;
	
	Отчет.ПериодОтчета.ДатаНачала 		= отчет.ДатаНачала;
	отчет.ПериодОтчета.ДатаОкончания 	= отчет.ДатаОкончания;
	Если НЕ ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных") Тогда
	сформироватьотчетсразу();	
							 КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Сегодня(Команда)
	
	отчет.датаначала = ОбщийМодульКлиент.ПользователяТекущаяДата();
	отчет.датаокончания = ОбщийМодульКлиент.ПользователяТекущаяДата();
	сформироватьотчетсразу();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	сформироватьотчетсразу(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Вчера(Команда)
	
	отчет.ДатаНачала = началодня(началодня(ОбщийМодульСервисСервер.ПользователяТекущаяДата()) - 100);
	отчет.ДатаОкончания = конецдня(отчет.ДатаНачала);
	сформироватьотчетсразу();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтотМесяц(Команда)
	
	отчет.ДатаНачала = началомесяца(ОбщийМодульКлиент.ПользователяТекущаяДата());
	отчет.ДатаОкончания = конецмесяца(ОбщийМодульКлиент.ПользователяТекущаяДата());
	сформироватьотчетсразу();
	
КонецПроцедуры

&НаКлиенте
Процедура ВесьПериод(Команда)
	
	отчет.ДатаНачала    = ОбщийМодульСервисСервер.ДатаПервогоДокумента();
	отчет.ДатаОкончания = конецгода(ОбщийМодульКлиент.ПользователяТекущаяДата());
	сформироватьотчетсразу();
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	ФормаПечати = получитьформу("ОбщаяФорма.ФормаПечати");
	ОбщийМодульСервер.ПечатьНаСервереОтчетаРуководителю(СтруктураДанныхОтчета(), ФормаПечати.Результат);

	ФормаПечати.Результат.ОтображатьСетку 	= Ложь;
	ФормаПечати.Результат.Защита 			= Истина;
	ФормаПечати.Результат.ТолькоПросмотр 	= Истина;
	ФормаПечати.Результат.ОтображатьЗаголовки = Ложь;
	ФормаПечати.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("печать: Отчет руководителю");
	ФормаПечати.открыть();	
	
КонецПроцедуры

&НаСервере
Функция   СтруктураДанныхОтчета()
	
	РезультатСтруктураДанныхОтчета = Новый Структура;
	
	Реквизиты = метаданные.Отчеты.ОтчетРуководителю.Реквизиты;
	Для Каждого Реквизит Из Реквизиты Цикл
		РезультатСтруктураДанныхОтчета.Вставить(Реквизит.Имя, Отчет[Реквизит.Имя]);
	КонецЦикла;	
	
	Возврат РезультатСтруктураДанныхОтчета;
	
КонецФункции //СтруктураДанныхОтчета

&НаКлиенте
Процедура ПериодОтчетаПриИзменении(Элемент)
	
	Отчет.ДатаНачала = Отчет.ПериодОтчета.ДатаНачала;
	Отчет.ДатаОкончания = Отчет.ПериодОтчета.ДатаОкончания;
	сформироватьотчетсразу();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	отчет.ПериодОтчета.ДатаНачала = отчет.ДатаНачала;
	Если отчет.ДатаНачала > Отчет.ДатаОкончания Тогда
		Отчет.ДатаОкончания = отчет.ДатаНачала;
		отчет.ПериодОтчета.ДатаОкончания = Отчет.ДатаОкончания;
	КонецЕсли;
	сформироватьотчетсразу();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	отчет.ПериодОтчета.ДатаОкончания = отчет.ДатаОкончания;
	Если отчет.ДатаНачала > Отчет.ДатаОкончания Тогда
		отчет.ДатаНачала = Отчет.ДатаОкончания;
		отчет.ПериодОтчета.ДатаНачала = Отчет.ДатаНачала;
	КонецЕсли;
	сформироватьотчетсразу();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	УчетПоКлиентам = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам");
	элементы.ВзаиморасчетыСПоставщиками.Видимость 	= ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоПоставщикам") ;
	элементы.Деньги.Видимость 						= ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВестиУчетДвиженияДенег") ;
	Элементы.КромеДолговПоТоварам.Видимость 		= ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВестиУчетЗарплатыСотрудников") ;
	Элементы.ОтправитьРуководителю.Видимость 		= не ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ЭлектроннаяПочтаОтправитель") = "";
	элементы.ОбщаяВаловаяПрибыль.Видимость 			= ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВестиУчетВаловойПрибыли");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                                  // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПлюсДень(Команда)
	
	отчет.ДатаНачала = отчет.ДатаНачала + 3600 * 24;
	отчет.ДатаОкончания = отчет.ДатаОкончания + 3600 * 24;
	отчет.ПериодОтчета.ДатаНачала = отчет.ДатаНачала;
	отчет.ПериодОтчета.ДатаОкончания = отчет.ДатаОкончания;
	сформироватьотчетсразу();
	
КонецПроцедуры

&НаКлиенте
Процедура МинусДень(Команда)
	
	отчет.ДатаНачала = отчет.ДатаНачала - 3600 * 24;
	отчет.ДатаОкончания = отчет.ДатаОкончания - 3600 * 24;
	отчет.ПериодОтчета.ДатаНачала = отчет.ДатаНачала;
	отчет.ПериодОтчета.ДатаОкончания = отчет.ДатаОкончания;
	сформироватьотчетсразу();
	                              	
КонецПроцедуры

&НаКлиенте
процедура сформироватьотчетсразу(ИзКнопки = Ложь)
	
	Если изкнопки 
		или НЕ ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных") Тогда
		
		состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите. Формируется отчет.."));
		СтруктураОтчета = ОбщийМодульСервер.СформироватьОтчетРуководителюНаСервере(СтруктураУсловий());
		Если НЕ СтруктураОтчета = Неопределено Тогда
			ОформитьОтчет(СтруктураОтчета);
		КонецЕсли;
		ОбновитьИнтерфейс();	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОформитьОтчет(СтруктураОтчета)
	
	Реквизиты = метаданные.Отчеты.ОтчетРуководителю.Реквизиты;
	Для Каждого Реквизит Из Реквизиты Цикл
		Попытка 
			Отчет[Реквизит.имя] = СтруктураОтчета[Реквизит.имя];
		Исключение 	
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция   СтруктураУсловий()
	
	РезультатСтруктураУсловий = Новый Структура;
	РезультатСтруктураУсловий.Вставить("ДатаНачала", отчет.ДатаНачала);
	РезультатСтруктураУсловий.Вставить("ДатаОкончания", Отчет.ДатаОкончания);
	РезультатСтруктураУсловий.Вставить("ОтборПоСкладу", Отчет.ОтборПоСкладу);
	
	Возврат РезультатСтруктураУсловий;
	
КонецФункции //СтруктураУсловий()

&НаКлиенте
Процедура ОтборПоСкладуПриИзменении(Элемент)
	сформироватьотчетсразу();
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьРуководителю(Команда)
	
	Результат = Новый ТабличныйДокумент;
	ОбщийМодульСервер.ПечатьНаСервереОтчетаРуководителю(СтруктураДанныхОтчета(), Результат);
	ОбщийМодульКлиент.ОтправитьПоEMAIL(Результат, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Отчет Руководителю"));
	
КонецПроцедуры
