//sza140420-1712  
//sza130915-1233 : 
&НаКлиенте
Процедура Вчера(Команда)
	
	ДатаНачала 		= НачалоДня(НачалоДня(ОбщийМодульКлиент.ПользователяТекущаяДата()) - 3600);
	ДатаОкончания 	= Конецдня(ДатаНачала);
	ПериодДляОтчета.ДатаНачала 		= ДатаНачала;
	ПериодДляОтчета.ДатаОкончания 	= ДатаОкончания;
	ЗаданиеПараметровИКомпоновкаОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	ПериодДляОтчета.ДатаНачала = ДатаНачала;
	Если ДатаОкончания < ДатаНачала Тогда
		ДатаОкончания = ДатаНачала;
		ПериодДляОтчета.ДатаОкончания = КонецДня(ДатаОкончания);
	КонецЕсли;
	ЗаданиеПараметровИКомпоновкаОтчета();
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	ПериодДляОтчета.ДатаОкончания = ДатаОкончания;
	Если ДатаОкончания < ДатаНачала Тогда
		ДатаНачала = ДатаОкончания;
		ПериодДляОтчета.ДатаНачала = НачалоДня(ДатаНачала);
	КонецЕсли;
	ЗаданиеПараметровИКомпоновкаОтчета();
КонецПроцедуры

Процедура ЗаданиеПараметровИКомпоновкаОтчета()
	
	отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаНачала", ПериодДляОтчета.ДатаНачала);
	отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаОкончания", ПериодДляОтчета.ДатаОкончания);
	отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ОтборПоНоменклатуре", ЗначениеЗаполнено(ОтборПоНоменклатуре));
	отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Номенклатура", ОтборПоНоменклатуре);
	отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ОтборПоСкладу", ЗначениеЗаполнено(ОтборПоСкладу));
	отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Склад", ОтборПоСкладу);
	
	Если ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("КоличествоНоменклатурыМожетБытьДробным") Тогда
	  ФорматКоличества = "ЧЦ=12; ЧДЦ=" + СокрЛП(ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ЧислоЗнаковПослеЗапятойДляКоличества"));
    Иначе
	  ФорматКоличества = "ЧЦ=12";
	КонецЕсли;
	
	Попытка
		НастрокаФорматаКоличества = Отчет.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы[0].Оформление.Элементы[12];
		НастрокаФорматаКоличества.Значение = ФорматКоличества;
		НастрокаФорматаКоличества.Использование = ИСТИНА;
	Исключение
	КонецПопытки;
	
	Если НЕ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных") Тогда
		Попытка 
			#Если Клиент Тогда
				Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Формируется отчет.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."), БиблиотекаКартинок.ОжиданиеСиниеСтрелки);
			#КонецЕсли
			ЭтаФорма.СкомпоноватьРезультат();
			Результат.показатьуровеньгруппировокстрок(0);
			ПроверитьНеобходимостьДобавитьДату();
			
		Исключение 	
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ОписаниеОшибки();
			Сообщение.Сообщить();
			
		КонецПопытки;	
	КонецЕсли;
	
КонецПроцедуры //СменаПериода

&НаКлиенте
Процедура Мес(Команда)
	
	ДатаНачала 		= НачалоМесяца(ОбщийМодульКлиент.ПользователяТекущаяДата());
	ДатаОкончания 	= КонецМесяца(ОбщийМодульКлиент.ПользователяТекущаяДата());
	ПериодДляОтчета.ДатаНачала 		= ДатаНачала;
	ПериодДляОтчета.ДатаОкончания 	= ДатаОкончания;
	ЗаданиеПараметровИКомпоновкаОтчета();
	
КонецПроцедуры

&НаСервере
Функция   ОбработатьПолученныйШКНаСервере(ТекКод)
	
	Если НЕ ПустаяСтрока(ТекКод) Тогда
		РезультатОбработки = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(ТекКод);
		Если ЗначениеЗаполнено(РезультатОбработки) Тогда
			ОтборПоНоменклатуре = РезультатОбработки;
			Возврат ИСТИНА;
		Иначе
			ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Товар по Штрих-Коду не найден") + "(" + ТекКод + ").");
			Возврат ЛОЖЬ;
		КонецЕсли;       
	Иначе
		Возврат ЛОЖЬ;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[ 1 ] = Неопределено Тогда
				ШтрихКод = Параметр[ 0 ];
			Иначе
				ШтрихКод = Параметр[ 1 ][ 1 ];
			КонецЕсли;
			Если ОбработатьПолученныйШКНаСервере(ШтрихКод) Тогда
				ЗаданиеПараметровИКомпоновкаОтчета();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоНоменклатуреОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	ОбщийМодульКлиент.ПоискОшибкиКодировки("Номенклатура", ДанныеВыбора, Текст, ОтборПоНоменклатуре);
	ЗаданиеПараметровИКомпоновкаОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоНоменклатуреПриИзменении(Элемент)
	ЗаданиеПараметровИКомпоновкаОтчета();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоСкладуПриИзменении(Элемент)
	ЗаданиеПараметровИКомпоновкаОтчета();
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьРуководителю(Команда)
	ОбщийМодульКлиент.ОтправитьПоEMAIL(Результат, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Отчет по Валовой прибыли относительно продаж"));
КонецПроцедуры

&НаКлиенте
Процедура ПериодДляОтчетаПриИзменении(Элемент)
	ДатаНачала = ПериодДляОтчета.ДатаНачала;
	ДатаОкончания = ПериодДляОтчета.ДатаОкончания;
	ЗаданиеПараметровИКомпоновкаОтчета();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                                  // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
	
	// ПодключаемоеОборудование	
	Если ОбщийМодульКлиент.ИспользоватьПодключаемоеОборудование() Тогда
		ПоддерживаемыеТипыВО = Новый Массив ();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	КонецЕсли;
	// Конец ПодключаемоеОборудование
КонецПроцедуры

&НаСервере
Процедура ПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(ПериодДляОтчета) Тогда
		ПериодДляОтчета.Вариант = ВариантСтандартногоПериода.Вчера;
		ДатаНачала = ПериодДляОтчета.ДатаНачала;
		ДатаОкончания = конецдня(ОбщийМодульСервисСервер.ПользователяТекущаяДата());		
		ПериодДляОтчета.ДатаОкончания = ДатаОкончания;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(датаокончания) Тогда
		ЗаданиеПараметровИКомпоновкаОтчета();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                             // ПРИ ОТКРЫТИИ	
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	Если НЕ ЗначениеЗаполнено(ПериодДляОтчета) Тогда
		ПериодДляОтчета.Вариант = ВариантСтандартногоПериода.ЭтотГод;
		ДатаНачала = ПериодДляОтчета.ДатаНачала;
		ДатаОкончания = ПериодДляОтчета.ДатаОкончания;		
	КонецЕсли;	
	ЗаданиеПараметровИКомпоновкаОтчета();
	
	// ПодключаемоеОборудование
	Если ОбщийМодульКлиент.ИспользоватьПодключаемоеОборудование() И 
		МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		ОписаниеОшибки = "" ;
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		Если НЕ МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении оборудования произошла ошибка") + ": " + ОписаниеОшибки ;
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	ПериодДляОтчета.ДатаНачала = ДатаНачала;
	ПериодДляОтчета.ДатаОкончания = ДатаОкончания;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002600", ЭтаФорма, Отказ, );	
	Элементы.РезультатОтправитьРуководителю.Видимость = не ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ЭлектроннаяПочтаПользователь", ИСТИНА) = "";
	ОбщийМодульСервисСервер.ПроверитьДоступКНастройкамОтчета(ЭтаФорма, ЭтаФорма.ИмяФормы, Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьНеобходимостьДобавитьДату()
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ДобавлятьТекущуюДатуИВремяВоВсеПечатныеФормы") Тогда
		МакетДатыВремени = ПолучитьОбщийМакет("МакетДатыВремени");
		ТаблицаТекущейДатыВремени = МакетДатыВремени.ПолучитьОбласть("Ш");
		ТаблицаТекущейДатыВремени.Параметры.ТекущаяДатаИВремя = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
		результат.Вывести(ТаблицаТекущейДатыВремени);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетСуммыПоЯчейкам(ТабДок)
	
	СуммаЯчеек 		= 0;
	ВыделеноЯчеек 	= 0;
	КоличествоЧисел = 0;              
	
	СоответствиеЯчеек = Новый Соответствие;
	ОписаниеТипов = Новый ОписаниеТипов("Число");
	
	Для Каждого ВыделеннаяОбласть Из ТабДок.ВыделенныеОбласти Цикл 
		Для Индекс1 = ВыделеннаяОбласть.Лево По ВыделеннаяОбласть.Право Цикл 
			Для Индекс2 = ВыделеннаяОбласть.Верх По ВыделеннаяОбласть.Низ Цикл 
				
				Область = Результат.Область(Индекс2, Индекс1, Индекс2, Индекс1); 
				Значение = ОписаниеТипов.ПривестиЗначение(Область.Текст); 
				СоответствиеЯчеек.Вставить(Область.Имя, Значение); 
				ВыделеноЯчеек = ВыделеноЯчеек + 1;
				
			КонецЦикла; 
		КонецЦикла; 
	КонецЦикла;
	
	Для Каждого Ячейка Из СоответствиеЯчеек Цикл 
		Значение = Ячейка.Значение; 
		Если Значение <> 0 Тогда 
			СуммаЯчеек = СуммаЯчеек + Значение; 
			КоличествоЧисел = КоличествоЧисел + 1; 
		КонецЕсли; 
	КонецЦикла;
	
	Если КоличествоЧисел > 1 Тогда
		СреднееЗначение = СуммаЯчеек / КоличествоЧисел;
	Иначе
		СреднееЗначение = 0;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура РезультатПриАктивизацииОбласти(Элемент)
	
	РасчетСуммыПоЯчейкам(Результат);
	Элементы.ГруппаСуммВыделеныхЯчеек.Видимость = не КоличествоЧисел = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура Сегодня(Команда)
	
	ДатаНачала 		= НачалоДня(ОбщийМодульКлиент.ПользователяТекущаяДата());
	ДатаОкончания 	= Конецдня(ДатаНачала);
	ПериодДляОтчета.ДатаНачала 		= ДатаНачала;
	ПериодДляОтчета.ДатаОкончания 	= ДатаОкончания;
	ЗаданиеПараметровИКомпоновкаОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтотГод(Команда)
	
	ДатаНачала 		= НачалоГода(ОбщийМодульКлиент.ПользователяТекущаяДата());
	ДатаОкончания 	= КонецГода(ОбщийМодульКлиент.ПользователяТекущаяДата());
	ПериодДляОтчета.ДатаНачала 		= ДатаНачала;
	ПериодДляОтчета.ДатаОкончания 	= ДатаОкончания;
	ЗаданиеПараметровИКомпоновкаОтчета();
	
КонецПроцедуры

