//sza140429-2101 : 
//sza131021-1701

&НаКлиенте
Процедура ПриОткрытии(Отказ)       // ПРИ ОТКРЫТИИ
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	Если ЗначениеЗаполнено(Параметры.ДокументСсылка) Тогда
		Документ = Параметры.ДокументСсылка;
		формироватьотчетподвижениям();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Документ) Тогда
		формироватьотчетподвижениям();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()            // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура формироватьотчетподвижениям()
	
	сформироватьНаСервере();
	
	Результат.ОтображатьСетку = Ложь;
	Результат.Защита          = Истина;
	Результат.ТолькоПросмотр      = Ложь;
	Результат.ОтображатьЗаголовки = Ложь;
	
КонецПроцедуры

&НаСервере
процедура сформироватьНаСервере()
	
	Результат.Очистить();
	Результат.НачатьАвтогруппировкуСтрок();
	
	МетаданныеДокумента = документ.Метаданные();
	
	Макет = отчеты.ДвиженияДокумента.ПолучитьМакет("Макет");	
	Шапка = Макет.ПолучитьОбласть("Ш");
	Дата  = Документ.дата;
	Шапка.Параметры.Дата  = дата;
	Шапка.Параметры.Номер = Документ.номер;
	Шапка.Параметры.НаименованиеДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(МетаданныеДокумента.ПредставлениеОбъекта);
	Результат.Вывести(Шапка, 0);
	
	СтрокаПараметра = Макет.ПолучитьОбласть("СП");    	
	
	для каждого РеквизитДокумента из МетаданныеДокумента.Реквизиты Цикл
		ЗначениеПараметра = документ[РеквизитДокумента.имя];
		Если ЗначениеЗаполнено(ЗначениеПараметра) Тогда
			СтрокаПараметра.Параметры.НаименованиеПараметра = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(РеквизитДокумента.синоним) + ":";
			СтрокаПараметра.Параметры.ЗначениеПараметра = документ[РеквизитДокумента.имя];
			
			Результат.Вывести(СтрокаПараметра, 1);	
		КонецЕсли;
	КонецЦикла;
	
	ШапкаДвижений  		= Макет.ПолучитьОбласть("ШД");
	СтрокаДвижения 		= Макет.ПолучитьОбласть("СД");
	ШапкаСтрокиДвижений = Макет.ПолучитьОбласть("ШСД");
	
	Для Каждого видДвиженияДокумента ИЗ МетаданныеДокумента.Движения Цикл
		
		Попытка //Для движений по регистрам сведений
			Обороты = сокрлп(видДвиженияДокумента.ВидРегистра) = "Обороты";
			
			ШапкаДвижений.параметры.НаименованиеРегистра = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(видДвиженияДокумента.Представление());
			
			Результат.Вывести(ШапкаДвижений, 0);
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ";
			
			для каждого измерение из видДвиженияДокумента.Измерения цикл
				Запрос.Текст = Запрос.Текст + "	РН." + Измерение.Имя + " КАК " + Измерение.Имя + ", ";
			КонецЦикла;
			для каждого ресурс из видДвиженияДокумента.Ресурсы цикл
				Запрос.Текст = Запрос.Текст + "	РН." + ресурс.Имя + " КАК " + ресурс.Имя + ", ";
			КонецЦикла;
			для каждого реквизит из видДвиженияДокумента.реквизиты цикл
				Запрос.Текст = Запрос.Текст + "	РН." + реквизит.Имя + " КАК " + реквизит.Имя + ", ";
			КонецЦикла;
			
			Запрос.Текст = Запрос.Текст + "	РН.Период КАК ПериодРН, ";
			
			Если Обороты Тогда
				Запрос.Текст = Запрос.Текст + " ""Обороты"" КАК ВидДвижения ИЗ РегистрНакопления." + видДвиженияДокумента.Имя + " КАК РН ГДЕ РН.Регистратор = &Регистратор";	
			Иначе
				Запрос.Текст = Запрос.Текст + " РН.ВидДвижения ИЗ РегистрНакопления." + видДвиженияДокумента.Имя + " КАК РН ГДЕ РН.Регистратор = &Регистратор";	
			КонецЕсли;
			
			Запрос.УстановитьПараметр("Регистратор", документ);
			
			РезультатЗапроса = Запрос.Выполнить();
			если не РезультатЗапроса.Пустой() тогда
				
				Результат.Вывести(ШапкаСтрокиДвижений, 1);
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					Если Обороты Тогда
						ВидДвижения = неопределено;
					Иначе
						ВидДвижения = ВыборкаДетальныеЗаписи.ВидДвижения;
					КонецЕсли;
					
					Измерения  = "";
					Значения   = "";
					измерениеР = неопределено;
					
					Для Каждого измерение ИЗ видДвиженияДокумента.Измерения Цикл
						ЗначениеТут = ВыборкаДетальныеЗаписи[Измерение.Имя];
						Если ЗначениеЗаполнено(ЗначениеТут) Тогда
							Измерения 	= Измерения + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(Измерение.Синоним) + символы.ПС;
							Значения    = Значения + ЗначениеТут + символы.ПС;
							измерениеР 	= ЗначениеТут;		
						КонецЕсли;
					КонецЦикла;
					
					ресурсы   = "";
					ЗначенияР = "";
					Для Каждого ресурс из видДвиженияДокумента.ресурсы Цикл
						ЗначениеТут = ВыборкаДетальныеЗаписи[ресурс.Имя];
						Если ЗначениеЗаполнено(ЗначениеТут) Тогда
							ресурсы = ресурсы + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(ресурс.Синоним) + символы.ПС;	
							ЗначенияР = ЗначенияР + ЗначениеТут + символы.ПС;	
						КонецЕсли;
					КонецЦикла;
					
					реквизиты = "";
					ЗначенияРеквизитов = "";
					реквизитР = Неопределено;
					Для Каждого реквизит из видДвиженияДокумента.реквизиты Цикл
						ЗначениеТут = ВыборкаДетальныеЗаписи[реквизит.Имя];
						Если ЗначениеЗаполнено(ЗначениеТут) Тогда
							реквизиты = реквизиты + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(реквизит.Синоним) + символы.ПС;
							ЗначенияРеквизитов = ЗначенияРеквизитов + ЗначениеТут + символы.ПС;
							реквизитР = ЗначениеТут;	
						КонецЕсли;
					КонецЦикла;
					
					Значения  = сред(Значения, 0, стрдлина(Значения) - 1 );
					ЗначенияР = сред(ЗначенияР, 0, стрдлина(ЗначенияР) - 1 );
					ЗначенияРеквизитов = сред(ЗначенияРеквизитов, 0, стрдлина(ЗначенияРеквизитов) - 1 );
					реквизиты = сред(реквизиты, 0, стрдлина(реквизиты) - 1 );
					ресурсы   = сред(ресурсы, 0, стрдлина(ресурсы) - 1 );
					Измерения = сред(Измерения, 0, стрдлина(Измерения) - 1 );
					
					Если Обороты Тогда
						ВидДвижения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Обороты");	
					КонецЕсли;
					
					Если не ВыборкаДетальныеЗаписи.ПериодРН = Дата Тогда
						ВидДвижения = формат(ВыборкаДетальныеЗаписи.ПериодРН,  "ДФ='dd.MM.yy ЧЧ:мм'") + Символы.ПС + ВидДвижения;
					КонецЕсли;
					
					СтрокаДвижения.Параметры.виддвижения = ВидДвижения;	
					
					СтрокаДвижения.параметры.реквизиты 	= реквизиты;		
					СтрокаДвижения.параметры.измерения 	= измерения;
					СтрокаДвижения.параметры.измерениеР = измерениеР;
					СтрокаДвижения.параметры.реквизитР 	= реквизитР;
					СтрокаДвижения.параметры.Значения 	= Значения;
					СтрокаДвижения.параметры.ЗначенияР 	= ЗначенияР;
					СтрокаДвижения.параметры.ресурсы 	= ресурсы;
					СтрокаДвижения.параметры.ЗначенияРеквизитов = ЗначенияРеквизитов;
					
					Результат.Вывести(СтрокаДвижения, 1);
				КонецЦикла;
			КонецЕсли;		
			
		Исключение
		КонецПопытки;
		
	КонецЦикла;                        		
	
	Результат.ЗакончитьАвтогруппировкуСтрок();
	ПроверитьНеобходимостьДобавитьДату();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтчет(Команда)
	формироватьотчетподвижениям();
КонецПроцедуры

&НаСервере
процедура ПроверитьНеобходимостьДобавитьДату()
	
	Если ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ДобавлятьТекущуюДатуИВремяВоВсеПечатныеФормы") Тогда
		МакетДатыВремени = ПолучитьОбщийМакет("МакетДатыВремени");
		ТаблицаТекущейДатыВремени = МакетДатыВремени.ПолучитьОбласть("Ш");
		ТаблицаТекущейДатыВремени.Параметры.ТекущаяДатаИВремя = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
		результат.Вывести(ТаблицаТекущейДатыВремени);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатПриАктивизацииОбласти(Элемент)
	
	РасчетСуммыПоЯчейкам(Результат);
	Элементы.ГруппаСуммВыделеныхЯчеек.Видимость = не КоличествоЧисел = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетСуммыПоЯчейкам(ТабДок)
	
	СуммаЯчеек 		= 0;
	ВыделеноЯчеек 	= 0;
	КоличествоЧисел = 0;              
	
	СоответствиеЯчеек = Новый Соответствие;
	ОписаниеТипов = Новый ОписаниеТипов("Число");
	
	Для Каждого ВыделеннаяОбласть Из ТабДок.ВыделенныеОбласти Цикл 
		Для Индекс1 = ВыделеннаяОбласть.Лево По ВыделеннаяОбласть.Право Цикл 
			Для Индекс2 = ВыделеннаяОбласть.Верх По ВыделеннаяОбласть.Низ Цикл 
				
				Область = Результат.Область(Индекс2, Индекс1, Индекс2, Индекс1); 
				Значение = ОписаниеТипов.ПривестиЗначение(Область.Текст); 
				СоответствиеЯчеек.Вставить(Область.Имя, Значение); 
				ВыделеноЯчеек = ВыделеноЯчеек + 1;
				
			КонецЦикла; 
		КонецЦикла; 
	КонецЦикла;
	
	Для каждого Ячейка Из СоответствиеЯчеек Цикл 
		Значение = Ячейка.Значение; 
		Если Значение <> 0 Тогда 
			СуммаЯчеек = СуммаЯчеек + Значение; 
			КоличествоЧисел = КоличествоЧисел + 1; 
		КонецЕсли; 
	КонецЦикла;
	
	Если КоличествоЧисел > 1 Тогда
		СреднееЗначение = СуммаЯчеек / КоличествоЧисел;
	Иначе
		СреднееЗначение = 0;
	КонецЕсли;
	
КонецПроцедуры	
