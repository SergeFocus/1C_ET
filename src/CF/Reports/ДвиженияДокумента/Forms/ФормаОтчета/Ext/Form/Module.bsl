//sza150110-0026 +
//sza140429-2101 : 
//sza131021-1701
&НаКлиенте
Процедура ДокументПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Документ) Тогда
		формироватьотчетподвижениям();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтчет(Команда)
	формироватьотчетподвижениям();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()            // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)       // ПРИ ОТКРЫТИИ
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	Если ЗначениеЗаполнено(Параметры.ДокументСсылка) Тогда
		Документ = Параметры.ДокументСсылка;
		формироватьотчетподвижениям();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьНеобходимостьДобавитьДату()
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ДобавлятьТекущуюДатуИВремяВоВсеПечатныеФормы") Тогда
		МакетДатыВремени = ПолучитьОбщийМакет("МакетДатыВремени");
		ТаблицаТекущейДатыВремени = МакетДатыВремени.ПолучитьОбласть("Ш");
		ТаблицаТекущейДатыВремени.Параметры.ТекущаяДатаИВремя = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
		результат.Вывести(ТаблицаТекущейДатыВремени);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетСуммыПоЯчейкам(ТабДок)
	
	СуммаЯчеек 		= 0;
	ВыделеноЯчеек 	= 0;
	КоличествоЧисел = 0;              
	
	СоответствиеЯчеек = Новый Соответствие;
	ОписаниеТипов = Новый ОписаниеТипов("Число");
	
	Для Каждого ВыделеннаяОбласть Из ТабДок.ВыделенныеОбласти Цикл 
		Для Индекс1 = ВыделеннаяОбласть.Лево По ВыделеннаяОбласть.Право Цикл 
			Для Индекс2 = ВыделеннаяОбласть.Верх По ВыделеннаяОбласть.Низ Цикл 
				
				Область = Результат.Область(Индекс2, Индекс1, Индекс2, Индекс1); 
				Значение = ОписаниеТипов.ПривестиЗначение(Область.Текст); 
				СоответствиеЯчеек.Вставить(Область.Имя, Значение); 
				ВыделеноЯчеек = ВыделеноЯчеек + 1;
				
			КонецЦикла; 
		КонецЦикла; 
	КонецЦикла;
	
	Для Каждого Ячейка Из СоответствиеЯчеек Цикл 
		Значение = Ячейка.Значение; 
		Если Значение <> 0 Тогда 
			СуммаЯчеек = СуммаЯчеек + Значение; 
			КоличествоЧисел = КоличествоЧисел + 1; 
		КонецЕсли; 
	КонецЦикла;
	
	Если КоличествоЧисел > 1 Тогда
		СреднееЗначение = СуммаЯчеек / КоличествоЧисел;
	Иначе
		СреднееЗначение = 0;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура РезультатПриАктивизацииОбласти(Элемент)
	
	РасчетСуммыПоЯчейкам(Результат);
	Элементы.ГруппаСуммВыделеныхЯчеек.Видимость = не КоличествоЧисел = 0;
	
КонецПроцедуры

&НаСервере
Процедура сформироватьНаСервере()
	
	Результат.Очистить();
	Результат.НачатьАвтогруппировкуСтрок();
	
	МетаданныеДокумента = документ.Метаданные();
	
	Макет = отчеты.ДвиженияДокумента.ПолучитьМакет("Макет");
	Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
	
	Шапка = Макет.ПолучитьОбласть("Ш");
	Дата  = Документ.дата;
	Шапка.Параметры.Дата  = дата;
	Шапка.Параметры.Номер = Документ.номер;
	Шапка.Параметры.НаименованиеДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(МетаданныеДокумента.ПредставлениеОбъекта);
	Результат.Вывести(Шапка, 0);
	
	СтрокаПараметра = Макет.ПолучитьОбласть("СП");    	
	
	Для Каждого РеквизитДокумента из МетаданныеДокумента.Реквизиты Цикл
		ЗначениеПараметра = документ[РеквизитДокумента.имя];
		Если ЗначениеЗаполнено(ЗначениеПараметра) Тогда
			СтрокаПараметра.Параметры.НаименованиеПараметра = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(РеквизитДокумента.синоним) + ":";
			СтрокаПараметра.Параметры.ЗначениеПараметра = документ[РеквизитДокумента.имя];
			
			Результат.Вывести(СтрокаПараметра, 1);	
		КонецЕсли;
	КонецЦикла;
	
	ШапкаДвижений  		= Макет.ПолучитьОбласть("ШД");
	КонецСтрокиДвижения = Макет.ПолучитьОбласть("КСД");
	ШапкаСтрокиДвижений = Макет.ПолучитьОбласть("ШСД");
	СтрокаМассиваПропущенныхРегистров = Макет.ПолучитьОбласть("СМПР");
	
	МассивПропущенныхРегистров = Новый Массив;
	
	Для Каждого видДвиженияДокумента ИЗ МетаданныеДокумента.Движения Цикл
		
		Попытка //Для движений по регистрам сведений
			Обороты = СокрЛП(видДвиженияДокумента.ВидРегистра) = "Обороты";
			
			видДвиженияДокументаПредставление = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(видДвиженияДокумента.Представление());
			ШапкаДвижений.параметры.НаименованиеРегистра = видДвиженияДокументаПредставление;
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ";
			
			Для Каждого измерение из видДвиженияДокумента.Измерения цикл
				Запрос.Текст = Запрос.Текст + "	РН." + Измерение.Имя + " КАК " + Измерение.Имя + ", ";
			КонецЦикла;
			Для Каждого ресурс из видДвиженияДокумента.Ресурсы цикл
				Запрос.Текст = Запрос.Текст + "	РН." + ресурс.Имя + " КАК " + ресурс.Имя + ", ";
			КонецЦикла;
			Для Каждого реквизит из видДвиженияДокумента.реквизиты цикл
				Запрос.Текст = Запрос.Текст + "	РН." + реквизит.Имя + " КАК " + реквизит.Имя + ", ";
			КонецЦикла;
			
			Запрос.Текст = Запрос.Текст + "	РН.Период КАК ПериодРН, ";
			
			Если Обороты Тогда
				Запрос.Текст = Запрос.Текст + " ""Обороты"" КАК ВидДвижения ИЗ РегистрНакопления." + видДвиженияДокумента.Имя + " КАК РН ГДЕ РН.Регистратор = &Регистратор";	
			Иначе
				Запрос.Текст = Запрос.Текст + " РН.ВидДвижения ИЗ РегистрНакопления." + видДвиженияДокумента.Имя + " КАК РН ГДЕ РН.Регистратор = &Регистратор";	
			КонецЕсли;
			
			Запрос.УстановитьПараметр("Регистратор", документ);
			
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				
				Результат.Вывести(ШапкаДвижений, 0);
				
				Результат.Вывести(ШапкаСтрокиДвижений, 1);
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				МассивСтрокОписанияПроводки = Новый Массив(19);
				сч = 0;
				Пока сч < 19 Цикл
					СтруктураСтрокиОписанияПроводки = Новый Структура("Используется", ЛОЖЬ);					
					МассивСтрокОписанияПроводки[сч] = СтруктураСтрокиОписанияПроводки;
					сч = сч + 1;
				КонецЦикла;
				сч = 0;
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					Если Обороты Тогда
						ВидДвижения = Неопределено;
					Иначе
						ВидДвижения = ВыборкаДетальныеЗаписи.ВидДвижения;
					КонецЕсли;
					
					Измерения  = "";
					Значения   = "";
					измерениеР = Неопределено;
					
					сч = 0;
					Для Каждого измерение ИЗ видДвиженияДокумента.Измерения Цикл
						ЗначениеТут = ВыборкаДетальныеЗаписи[Измерение.Имя];
						Если ПоказатьНезаполненныеЗначения
							ИЛИ ЗначениеЗаполнено(ЗначениеТут) Тогда
							
							МассивСтрокОписанияПроводки[сч].Вставить("Измерения", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(Измерение.Синоним));
							МассивСтрокОписанияПроводки[сч].Вставить("Значения", ЗначениеТут);
							МассивСтрокОписанияПроводки[сч].Вставить("измерениеР", ЗначениеТут);
							МассивСтрокОписанияПроводки[сч].Используется = ИСТИНА;
						КонецЕсли;
						сч = сч + 1;
					КонецЦикла;
					
					сч = 0;
					ресурсы   = "";
					ЗначенияР = "";
					Для Каждого ресурс из видДвиженияДокумента.ресурсы Цикл
						ЗначениеТут = ВыборкаДетальныеЗаписи[ресурс.Имя];
						Если ПоказатьНезаполненныеЗначения
							ИЛИ ЗначениеЗаполнено(ЗначениеТут) Тогда
							
							МассивСтрокОписанияПроводки[сч].Вставить("ресурсы", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(ресурс.Синоним));
							МассивСтрокОписанияПроводки[сч].Вставить("ЗначенияР", ЗначениеТут);
							МассивСтрокОписанияПроводки[сч].Используется = ИСТИНА;
						КонецЕсли;
						сч = сч + 1;
					КонецЦикла;
					
					сч = 0;
					реквизиты = "";
					ЗначенияРеквизитов = "";
					реквизитР = Неопределено;
					Для Каждого реквизит из видДвиженияДокумента.реквизиты Цикл
						ЗначениеТут = ВыборкаДетальныеЗаписи[реквизит.Имя];
						Если ПоказатьНезаполненныеЗначения
							ИЛИ ЗначениеЗаполнено(ЗначениеТут) Тогда
							
							МассивСтрокОписанияПроводки[сч].Вставить("реквизиты", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(реквизит.Синоним));
							МассивСтрокОписанияПроводки[сч].Вставить("ЗначенияРеквизитов", ЗначениеТут);
							МассивСтрокОписанияПроводки[сч].Вставить("реквизитР", ЗначениеТут);
							МассивСтрокОписанияПроводки[сч].Используется = ИСТИНА;
						КонецЕсли;
						сч = сч + 1;
					КонецЦикла;
					
					Если Обороты Тогда
						ВидДвижения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Обороты");	
					КонецЕсли;
					
					Если НЕ ВыборкаДетальныеЗаписи.ПериодРН = Дата Тогда
						ВидДвижения = формат(ВыборкаДетальныеЗаписи.ПериодРН,  "ДФ='dd.MM.yy ЧЧ:мм'") + Символы.ПС + ВидДвижения;
					КонецЕсли;
					
					МассивСтрокОписанияПроводки[0].Вставить("виддвижения", ВидДвижения);
					
					Для Каждого ЭлементМассиваОписания Из МассивСтрокОписанияПроводки Цикл
						Если ЭлементМассиваОписания.Используется Тогда
							СтрокаДвижения = Макет.ПолучитьОбласть("СД"); //надо здесь, чтобы с нуля
							СтрокаДвижения.Параметры.Заполнить(ЭлементМассиваОписания);
							Результат.Вывести(СтрокаДвижения, 1);
						КонецЕсли;
					КонецЦикла;
					
					Результат.Вывести(КонецСтрокиДвижения, 1);					
				КонецЦикла;
			Иначе
				МассивПропущенныхРегистров.Добавить(видДвиженияДокументаПредставление);
				
			КонецЕсли;		
			
		Исключение
		КонецПопытки;
		
	КонецЦикла;
	
	Если НЕ МассивПропущенныхРегистров.Количество() = 0 Тогда
		Результат.Вывести(Макет.ПолучитьОбласть("Пропуск"), 0);
	КонецЕсли;
	
	Для Каждого ЭлементМассиваПропущенныхРегистров Из МассивПропущенныхРегистров Цикл					
		СтрокаМассиваПропущенныхРегистров.Параметры.НаименованиеРегистра = ЭлементМассиваПропущенныхРегистров;
		Результат.Вывести(СтрокаМассиваПропущенныхРегистров, 0);
	КонецЦикла;
	
	Результат.ЗакончитьАвтогруппировкуСтрок();
	ПроверитьНеобходимостьДобавитьДату();
	
КонецПроцедуры

&НаКлиенте
Процедура формироватьотчетподвижениям()
	
	сформироватьНаСервере();
	
	Результат.ОтображатьСетку = ЛОЖЬ;
	Результат.Защита          = ИСТИНА;
	Результат.ТолькоПросмотр      = ЛОЖЬ;
	Результат.ОтображатьЗаголовки = ЛОЖЬ;
	
КонецПроцедуры


&НаКлиенте
Процедура ПоказатьНезаполненныеЗначенияПриИзменении(Элемент)
	формироватьотчетподвижениям();
КонецПроцедуры
