//sza140530-0320 SZA: 
//sza130915-1233 : 

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                         // ПРИ ОТКРЫТИИ	
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	Если НЕ ЗначениеЗаполнено(ПериодДляОтчета) Тогда
		ПериодДляОтчета.ДатаНачала = НачалоМесяца(ОбщийМодульКлиент.ПользователяТекущаяДата());
		ПериодДляОтчета.ДатаОкончания = КонецДня(ОбщийМодульКлиент.ПользователяТекущаяДата());
		ДатаНачала = ПериодДляОтчета.ДатаНачала;
		ДатаОкончания = ПериодДляОтчета.ДатаОкончания;		
	КонецЕсли;	
	ЗаданиеПараметровИКомпоновкаОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодДляОтчетаПриИзменении(Элемент)
	ДатаНачала = ПериодДляОтчета.ДатаНачала;
	ДатаОкончания = ПериодДляОтчета.ДатаОкончания;
	ЗаданиеПараметровИКомпоновкаОтчета();
КонецПроцедуры

Процедура ЗаданиеПараметровИКомпоновкаОтчета() //Экспорт	
	
	//	отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаНачала", ПериодДляОтчета.ДатаНачала);
	//	отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаОкончания", ПериодДляОтчета.ДатаОкончания);
	Если НЕ ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных") Тогда
	Если ЗначениеЗаполнено(ДокументПланПродаж) Тогда
		СформироватьПланФактныйОтчетНаСервере();
		Результат.показатьуровеньгруппировокстрок(0);
		
	КонецЕсли;	
			  КонецЕсли;
	
КонецПроцедуры //СменаПериода

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	ПериодДляОтчета.ДатаНачала = ДатаНачала;
	Если ДатаОкончания < ДатаНачала Тогда
		ДатаОкончания = ДатаНачала;
		ПериодДляОтчета.ДатаОкончания = КонецДня(ДатаОкончания);
	КонецЕсли;
	ЗаданиеПараметровИКомпоновкаОтчета();
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	ПериодДляОтчета.ДатаОкончания = ДатаОкончания;
	Если ДатаОкончания < ДатаНачала Тогда
		ДатаНачала = ДатаОкончания;
		ПериодДляОтчета.ДатаНачала = НачалоДня(ДатаНачала);
	КонецЕсли;
	ЗаданиеПараметровИКомпоновкаОтчета();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                                  // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002400", ЭтаФорма, Отказ, );	
	
	Если НЕ Отказ
		И ЗначениеЗаполнено(параметры.ДокументПланПродаж) Тогда
		
		ДокументПланПродаж = параметры.ДокументПланПродаж;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПланФактныйОтчет(Команда)
	
	Если ЗначениеЗаполнено(ДокументПланПродаж) Тогда
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет формирование отчета.."));
		СформироватьПланФактныйОтчетНаСервере();
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Документ План продаж не указан!");
		Сообщение.Поле = "ДокументПланПродаж";
		Сообщение.Сообщить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПланФактныйОтчетНаСервере()
	
	ТаблицаРезультат = ДокументПланПродаж.Товары.Выгрузить();	
	ТаблицаРезультат.Колонки.Добавить("СуммаПродаж");
	ТаблицаРезультат.Колонки.Добавить("СуммаВыполнено");
	ТаблицаРезультат.Колонки.Добавить("КоличествоПродаж");
	ТаблицаРезультат.Колонки.Добавить("КоличествоВыполнено");
	ТаблицаРезультат.Колонки.Добавить("ДокументПланПродаж");	
	
	ДатаНачала = НачалоДня(ДокументПланПродаж.ДатаНачала);
	ДатаОкончания = КонецДня(ДокументПланПродаж.ДатаОкончания); 
	
	Для Каждого СтрокаПлана Из ТаблицаРезультат Цикл
		СтрокаПлана.СуммаПродаж = 0;
		СтрокаПлана.КоличествоПродаж = 0;
		СтрокаПлана.КоличествоВыполнено = 0;
		СтрокаПлана.ДокументПланПродаж = ДокументПланПродаж.Ссылка;
		
		СтрокаПланаНоменклатураИлиГруппа = СтрокаПлана.НоменклатураИлиГруппа;
		Если ЗначениеЗаполнено(СтрокаПланаНоменклатураИлиГруппа) Тогда
			СтрокаПлана.СуммаПродаж = 0;
			СтрокаПлана.КоличествоПродаж = 0;
			СтрокаПлана.СуммаВыполнено = 0;
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПродажиОбороты.КоличествоОборот КАК Количество,
			                |	ПродажиОбороты.СуммаОборот КАК Сумма,
							|	ПродажиОбороты.Номенклатура КАК Номенклатура
			                |ИЗ РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, , ) КАК ПродажиОбороты
							| ГДЕ ";
			
			Если ТипЗнч(СтрокаПланаНоменклатураИлиГруппа) = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
				Запрос.Текст = Запрос.Текст + "	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа ";
				Запрос.УстановитьПараметр("НоменклатурнаяГруппа", СтрокаПланаНоменклатураИлиГруппа);
			ИначеЕсли СтрокаПланаНоменклатураИлиГруппа.ЭтоГруппа Тогда
				Запрос.Текст = Запрос.Текст + "	ПродажиОбороты.Номенклатура В ИЕРАРХИИ(&ГруппаНоменклатуры) ";
				Запрос.УстановитьПараметр("ГруппаНоменклатуры", СтрокаПланаНоменклатураИлиГруппа);
			Иначе
				Запрос.Текст = Запрос.Текст + "	ПродажиОбороты.Номенклатура = &Номенклатура ";
				Запрос.УстановитьПараметр("Номенклатура", СтрокаПланаНоменклатураИлиГруппа);
			КонецЕсли; 
			
			Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
			Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				СтрокаПлана.СуммаПродаж = СтрокаПлана.СуммаПродаж + ВыборкаДетальныеЗаписи.Сумма;
				СтрокаПлана.КоличествоПродаж = СтрокаПлана.КоличествоПродаж + ВыборкаДетальныеЗаписи.Количество;
				
				Если НЕ СтрокаПлана.Количество = 0 Тогда
					СтрокаПлана.КоличествоВыполнено = СтрокаПлана.КоличествоПродаж / (СтрокаПлана.Количество / 100);
				Иначе
					СтрокаПлана.КоличествоВыполнено = 100;
				КонецЕсли;
				Если НЕ СтрокаПлана.Сумма = 0 Тогда
					СтрокаПлана.СуммаВыполнено = СтрокаПлана.СуммаПродаж / (СтрокаПлана.Сумма / 100);
				Иначе
					СтрокаПлана.СуммаВыполнено = 100;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла; 	 	
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТаблицаРезультат", ТаблицаРезультат); 
	
	Попытка	
		Схема = Отчеты.ПланФактныйАнализПродаж.ПолучитьМакет("СхемаКД");
		Настройки = Отчет.КомпоновщикНастроек.Настройки;    
		
		ДанныеРасшифровки = новый ДанныеРасшифровкиКомпоновкиДанных;
		
		Компоновщик = Новый КомпоновщикМакетаКомпоновкиДанных;
		Макет = Компоновщик.Выполнить(Схема,Настройки, ДанныеРасшифровки);
		ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
		
		ПроцессорКомпоновки.Инициализировать(Макет, ВнешниеНаборыДанных, ДанныеРасшифровки);
		Результат.Очистить();
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(Результат);
		ПроцессорВывода.Вывести(ПроцессорКомпоновки);		
		ПроверитьНеобходимостьДобавитьДату();
		
	Исключение 	
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ОписаниеОшибки();
		Сообщение.Сообщить();
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументПланПродажПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ДокументПланПродаж) Тогда
		Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Идет формирование отчета.."));
		СформироватьПланФактныйОтчетНаСервере();
		Результат.показатьуровеньгруппировокстрок(0);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(ПериодДляОтчета) Тогда
        ПериодДляОтчета.Вариант = ВариантСтандартногоПериода.Вчера;
		ДатаНачала = ПериодДляОтчета.ДатаНачала;
		ДатаОкончания = ПериодДляОтчета.ДатаОкончания;		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ДокументПланПродаж) Тогда
		СформироватьПланФактныйОтчетНаСервере();
		Результат.показатьуровеньгруппировокстрок(0);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
процедура ПроверитьНеобходимостьДобавитьДату()
	
	Если ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ДобавлятьТекущуюДатуИВремяВоВсеПечатныеФормы") Тогда
		МакетДатыВремени = ПолучитьОбщийМакет("МакетДатыВремени");
		ТаблицаТекущейДатыВремени = МакетДатыВремени.ПолучитьОбласть("Ш");
		ТаблицаТекущейДатыВремени.Параметры.ТекущаяДатаИВремя = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
		результат.Вывести(ТаблицаТекущейДатыВремени);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатПриАктивизацииОбласти(Элемент)
	
	РасчетСуммыПоЯчейкам(Результат);
	Элементы.ГруппаСуммВыделеныхЯчеек.Видимость = не КоличествоЧисел = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетСуммыПоЯчейкам(ТабДок)
	
	СуммаЯчеек 		= 0;
	ВыделеноЯчеек 	= 0;
	КоличествоЧисел = 0;              
	
	СоответствиеЯчеек = Новый Соответствие;
	ОписаниеТипов = Новый ОписаниеТипов("Число");
	
	Для Каждого ВыделеннаяОбласть Из ТабДок.ВыделенныеОбласти Цикл 
		Для Индекс1 = ВыделеннаяОбласть.Лево По ВыделеннаяОбласть.Право Цикл 
			Для Индекс2 = ВыделеннаяОбласть.Верх По ВыделеннаяОбласть.Низ Цикл 
				
				Область = Результат.Область(Индекс2, Индекс1, Индекс2, Индекс1); 
				Значение = ОписаниеТипов.ПривестиЗначение(Область.Текст); 
				СоответствиеЯчеек.Вставить(Область.Имя, Значение); 
				ВыделеноЯчеек = ВыделеноЯчеек + 1;
				
			КонецЦикла; 
		КонецЦикла; 
	КонецЦикла;
	
	Для каждого Ячейка Из СоответствиеЯчеек Цикл 
		Значение = Ячейка.Значение; 
		Если Значение <> 0 Тогда 
			СуммаЯчеек = СуммаЯчеек + Значение; 
			КоличествоЧисел = КоличествоЧисел + 1; 
		КонецЕсли; 
	КонецЦикла;
	
	Если КоличествоЧисел > 1 Тогда
		СреднееЗначение = СуммаЯчеек / КоличествоЧисел;
	Иначе
		СреднееЗначение = 0;
	КонецЕсли;
	
КонецПроцедуры	
