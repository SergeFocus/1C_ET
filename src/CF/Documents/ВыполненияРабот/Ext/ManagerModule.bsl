// sza140610-1559  
// sza140206-2323  
Процедура Печать(ТабДок, Ссылка) Экспорт
	
	ТабДок.ИмяПараметровПечати  = "ДокВыполненияРабот" + СокрЛП(ИмяКомпьютера());
	ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	
	ТабДок.Очистить();
	
	СсылкаНаОбъектПечати = Ссылка[0];
	
	РазрядМетаданных = ""; ИмяМетаданных = "";
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(Перечисления.ВидыПечатныхФорм.ВыполнениеРабот, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ТабДок = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ТабДок, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		
	Иначе		
		Макет = Документы.ВыполненияРабот.ПолучитьМакет("Печать");
		
		ЯзыкДокументов = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(ССылка[0].Клиент, , ЛОЖЬ);	
		Макет.КодЯзыкаМакета = ЯзыкДокументов.Код;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ВыполненияРабот.Ссылка,
		|	ВыполненияРабот.ВерсияДанных,
		|	ВыполненияРабот.ПометкаУдаления,
		|	ВыполненияРабот.Номер,
		|	ВыполненияРабот.Дата,
		|	ВыполненияРабот.Проведен,
		|	ВыполненияРабот.Клиент,
		|	ВыполненияРабот.Организация,
		|	ВыполненияРабот.Договор,
		|	ВыполненияРабот.ЗаказКлиента,
		|	ВыполненияРабот.ВидЦен,
		|	ВыполненияРабот.Результат,
		|	ВыполненияРабот.ХранилищеДенег,
		|	ВыполненияРабот.ДатаПлан,
		|	ВыполненияРабот.РезультатПлан,
		|	ВыполненияРабот.Актуален,
		|	ВыполненияРабот.БезПлана,
		|	ВыполненияРабот.Номенклатура,
		|	ВыполненияРабот.СерияНоменклатуры,
		|	ВыполненияРабот.СкладДляОбъектаВыполненияРабот,
		|	ВыполненияРабот.ДатаПоступленияОбъектаРаботНаНашСклад,
		|	ВыполненияРабот.КомментарийПриПоступленииОбъектаРабот,
		|	ВыполненияРабот.ДатаВыдачиОбъектаРаботКлиентуОбратно,
		|	ВыполненияРабот.КомментарийПриВыдачеОбъектаРабот,
		|	ВыполненияРабот.Комментарий,
		|	ВыполненияРабот.Ответственный,
		|	ВыполненияРабот.ДатаСоздания,
		|	ВыполненияРабот.ДатаРедакции,
		|	ВыполненияРабот.ПредметСделки,
		|	ВыполненияРабот.Оплаты.(
		|		Ссылка,
		|		НомерСтроки,
		|		ДатаПлан,
		|		Дата,
		|		План,
		|		Сумма,
		|		Валюта,
		|		Курс,
		|		ХранилищеДенег,
		|		ФормаОплаты,
		|		ОСтроке
		|	),
		|	ВыполненияРабот.Расходы.(
		|		Ссылка,
		|		НомерСтроки,
		|		ДатаПлан,
		|		Дата,
		|		Поставщик,
		|		Статья,
		|		План,
		|		Сумма,
		|		Валюта,
		|		Курс,
		|		ХранилищеДенег,
		|		ФормаОплаты,
		|		Договор,
		|		Сотрудник,
		|		ОСтроке
		|	),
		|	ВыполненияРабот.Товары.(
		|		Ссылка,
		|		НомерСтроки,
		|		ВаловаяПрибыль,
		|		ВаловаяПрибыльПлан,
		|		Валюта,
		|		ВалютаПлан,
		|		Дата,
		|		ДатаПлан,
		|		Количество,
		|		КоличествоПлан,
		|		Курс,
		|		КурсПлан,
		|		Номенклатура,
		|		ОСтроке,
		|		План,
		|		ПроцентСкидки,
		|		ПроцентСкидкиПлан,
		|		СерияНоменклатуры,
		|		Склад,
		|		Сотрудник,
		|		Сумма,
		|		СуммаБезСкидки,
		|		СуммаБезСкидкиПлан,
		|		Цена,
		|		ЦенаПлан,
		|		ЕдиницаИзмерения
		|	),
		|	ВыполненияРабот.ОбъектКлиента,
		|	ВыполненияРабот.ПричинаЦельРабот,
		|	ВыполненияРабот.ВнешнийВид,
		|	ВыполненияРабот.Комплектность,
		|	ВыполненияРабот.ДатаПродажи,
		|	ВыполненияРабот.ОрганизацияПродавец,
		|	ВыполненияРабот.ТипРаботы,
		|	ВыполненияРабот.ДатаОповещения,
		|	ВыполненияРабот.ДатаОтправки,
		|	ВыполненияРабот.ТоварОтправлен,
		|	ВыполненияРабот.КлиентОповещен,
		|	ВыполненияРабот.ТалонТрек,
		|	ВыполненияРабот.СпособДоставки,
		|	ВыполненияРабот.ЗадействованныеСредства.(
		|		Ссылка,
		|		НомерСтроки,
		|		Средство,
		|		ДатаНачала,
		|		ДатаОкончания,
		|		Коэффициент,
		|		ОСтроке
		|	),
		|	ВыполненияРабот.НомерСчета,
		|	ВыполненияРабот.ДатаСчета
		|ИЗ
		|	Документ.ВыполненияРабот КАК ВыполненияРабот
		|ГДЕ
		|	ВыполненияРабот.Ссылка В(&Ссылка)";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
		Шапка 				= Макет.ПолучитьОбласть("Шапка");
		ОбластьРаботыШапка 	= Макет.ПолучитьОбласть("РаботыШапка");
		ОбластьРаботы 		= Макет.ПолучитьОбласть("Работы");
		ОбластьРаботыПлан 	= Макет.ПолучитьОбласть("РаботыПлан");
		ОбластьОплатыШапка 	= Макет.ПолучитьОбласть("ОплатыШапка");
		ОбластьОплаты 		= Макет.ПолучитьОбласть("Оплаты");
		ОбластьОплатыПлан 	= Макет.ПолучитьОбласть("ОплатыПлан");
		ОбластьРасходыШапка = Макет.ПолучитьОбласть("РасходыШапка");
		ОбластьРасходы 		= Макет.ПолучитьОбласть("Расходы");
		ОбластьРасходыПлан 	= Макет.ПолучитьОбласть("РасходыПлан");
		Подвал 				= Макет.ПолучитьОбласть("Подвал");
		ДвижениеОбъекта 	= Макет.ПолучитьОбласть("ДвижениеОбъекта");
		ОбластьЗадействованныеСредстваШапка = Макет.ПолучитьОбласть("ЗадействованныеСредстваШапка");
		ОбластьЗадействованныеСредства 		= Макет.ПолучитьОбласть("ЗадействованныеСредства");
		ВестиУчетСобственныхЮридическихЛицПС= ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетСобственныхЮридическихЛиц");
		
		ОтключитьПланированиеВДокументеВыполненияРабот = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ОтключитьПланированиеВДокументеВыполненияРабот");
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		Пока Выборка.Следующий() Цикл
			
			БезПлана = ОтключитьПланированиеВДокументеВыполненияРабот ИЛИ Выборка.БезПлана;
			Клиент = Выборка.Клиент;
			
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			Если ВестиУчетСобственныхЮридическихЛицПС
				И ЗначениеЗаполнено(Выборка.Организация) Тогда
				
				ОбщийМодульСервер.ДобавитьШапкуОрганизации(ТабДок, Выборка.Организация, ЯзыкДокументов);
			КонецЕсли;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
			ТабДок.Вывести(ОбластьЗаголовок);
			
			Шапка.Параметры.Заполнить(Выборка);
			СтруктураДополнительныПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
			Если НЕ ВестиУчетСобственныхЮридическихЛицПС
				ИЛИ не ЗначениеЗаполнено(Выборка.Организация) Тогда
				
				Шапка.Параметры.ТекстВШапкеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВШапкеДокументовПриПечати;	
			Иначе
				Шапка.Параметры.ТекстВШапкеДокументовПриПечати = "";
			КонецЕсли;
			
			Шапка.Параметры.КлиентПредставление 	 = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Выборка.Клиент, ЯзыкДокументов);
			Шапка.Параметры.ОрганизацияПредставление = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Выборка.Организация, ЯзыкДокументов);
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			
			Если Выборка.Актуален
				И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ДобавитьФункцииПриемаИВыдачиОбъектаРаботДокументуВыполненияРабот") Тогда
				
				ДвижениеОбъекта.Параметры.Заполнить(Выборка);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ДвижениеОбъекта);
				ТабДок.Вывести(ДвижениеОбъекта);
			КонецЕсли;
			
			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьТекстовоеПолеПредметСделки")
				И НЕ ПустаяСтрока(Выборка.ПредметСделки) Тогда
				
				ПредметСделки = Макет.ПолучитьОбласть("ПредметСделки");
				ПредметСделки.Параметры.Заполнить(Выборка);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ПредметСделки);
				ТабДок.Вывести(ПредметСделки);
			КонецЕсли;
			
			ВыборкаРаботы = Выборка.Товары.Выбрать();
			Если ВыборкаРаботы.Количество() > 0 тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРаботыШапка);
				ТабДок.Вывести(ОбластьРаботыШапка);
				Пока ВыборкаРаботы.Следующий() Цикл
					Если НЕ безплана Тогда
						ОбластьРаботыПлан.Параметры.Заполнить(ВыборкаРаботы);
						ОбластьРаботыПлан.Параметры.ПредставлениеНоменклатуры = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаРаботы.Номенклатура, ЯзыкДокументов, Клиент);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРаботыПлан);
						ТабДок.Вывести(ОбластьРаботыПлан, ВыборкаРаботы.Уровень());
					КонецЕсли;
					ОбластьРаботы.Параметры.Заполнить(ВыборкаРаботы);
					ОбластьРаботы.Параметры.ПредставлениеНоменклатуры = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаРаботы.Номенклатура, ЯзыкДокументов, Клиент);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРаботы);
					ТабДок.Вывести(ОбластьРаботы, ВыборкаРаботы.Уровень());
				КонецЦикла;
			КонецЕсли;
			
			ВыборкаОплаты = Выборка.Оплаты.Выбрать();
			Если ВыборкаОплаты.Количество() > 0 тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьОплатыШапка);
				ТабДок.Вывести(ОбластьОплатыШапка);
				Пока ВыборкаОплаты.Следующий() Цикл
					Если НЕ безплана Тогда
						ОбластьОплатыПлан.Параметры.Заполнить(ВыборкаРаботы);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьОплатыПлан);
						ТабДок.Вывести(ОбластьОплатыПлан, ВыборкаРаботы.Уровень());
					КонецЕсли;
					ОбластьОплаты.Параметры.Заполнить(ВыборкаОплаты);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьОплаты);
					ТабДок.Вывести(ОбластьОплаты, ВыборкаОплаты.Уровень());
				КонецЦикла;                              	
			КонецЕсли;
			
			ВыборкаРасходы = Выборка.Расходы.Выбрать();
			Если ВыборкаРасходы.Количество() > 0 тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРасходыШапка);
				ТабДок.Вывести(ОбластьРасходыШапка);
				Пока ВыборкаРасходы.Следующий() Цикл
					Если НЕ безплана Тогда
						ОбластьРасходыПлан.Параметры.Заполнить(ВыборкаРаботы);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРасходыПлан);
						ТабДок.Вывести(ОбластьРасходыПлан, ВыборкаРаботы.Уровень());
					КонецЕсли;
					ОбластьРасходы.Параметры.Заполнить(ВыборкаРасходы);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРасходы);
					ТабДок.Вывести(ОбластьРасходы, ВыборкаРасходы.Уровень());
				КонецЦикла;                             	
			КонецЕсли;
			
			ВыборкаЗадействованныеСредства = Выборка.ЗадействованныеСредства.Выбрать();
			Если ВыборкаЗадействованныеСредства.Количество() > 0 тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗадействованныеСредстваШапка);
				ТабДок.Вывести(ОбластьЗадействованныеСредстваШапка);
				
				Пока ВыборкаЗадействованныеСредства.Следующий() Цикл
					ОбластьЗадействованныеСредства.Параметры.Заполнить(ВыборкаЗадействованныеСредства);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗадействованныеСредства);
					ТабДок.Вывести(ОбластьЗадействованныеСредства, ВыборкаЗадействованныеСредства.Уровень());
				КонецЦикла;                             	
			КонецЕсли;
			
			Подвал.Параметры.Заполнить(Выборка);
			Подвал.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВПодвалеДокументовПриПечати;
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
			ТабДок.Вывести(Подвал);
			
			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетИнформацииОДоставкеВДокументахРасхода") Тогда
				ИнформацияОДоставке = Макет.ПолучитьОбласть("ИнформацияОДоставке");
				ИнформацияОДоставке.Параметры.Заполнить(Выборка);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ИнформацияОДоставке);
				ТабДок.Вывести(ИнформацияОДоставке);
			КонецЕсли;
			
			ВставлятьРазделительСтраниц = ИСТИНА;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура Смета(ТабДок, Ссылка) Экспорт
	
	ТабДок.ИмяПараметровПечати  = "ДокСметаВыполненияРабот" + СокрЛП(ИмяКомпьютера());
	ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	
	ТабДок.Очистить();
	
	СсылкаНаОбъектПечати = Ссылка[0];
	
	РазрядМетаданных = ""; ИмяМетаданных = "";
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(Перечисления.ВидыПечатныхФорм.СметаВыполненияРабот, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ТабДок = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ТабДок, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		
	Иначе		
		Макет = Документы.ВыполненияРабот.ПолучитьМакет("Смета");
		ЯзыкДокументов = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(ССылка[0].Клиент, , ЛОЖЬ);	
		Макет.КодЯзыкаМакета = ЯзыкДокументов.Код;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ВыполненияРабот.ДатаПлан,
		|	ВыполненияРабот.Клиент,
		|	ВыполненияРабот.Комментарий,
		|	ВыполненияРабот.Номенклатура,
		|	ВыполненияРабот.Номер,
		|	ВыполненияРабот.СерияНоменклатуры,
		|	ВыполненияРабот.ПредметСделки,
		|	ВыполненияРабот.Товары.(
		|		ДатаПлан,
		|		Номенклатура,
		|		Количество,
		|		Цена,
		|		ПроцентСкидки,
		|		СуммаБезСкидки,
		|		План,
		|		ОСтроке,
		|		КоличествоПлан,
		|		ЦенаПлан,
		|		ПроцентСкидкиПлан,
		|		СуммаБезСкидкиПлан )
		|ИЗ Документ.ВыполненияРабот КАК ВыполненияРабот
		|ГДЕ ВыполненияРабот.Ссылка В(&Ссылка)";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
		Шапка 				= Макет.ПолучитьОбласть("Шапка");
		ОбластьРаботыШапка 	= Макет.ПолучитьОбласть("РаботыШапка");
		ОбластьРаботы 		= Макет.ПолучитьОбласть("Работы");
		Подвал 				= Макет.ПолучитьОбласть("Подвал");
		
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
			ТабДок.Вывести(ОбластьЗаголовок);
			
			Шапка.Параметры.Заполнить(Выборка);
			Клиент = Выборка.Клиент;
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			
			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьТекстовоеПолеПредметСделки")
				И НЕ ПустаяСтрока(Выборка.ПредметСделки) Тогда
				
				ПредметСделки = Макет.ПолучитьОбласть("ПредметСделки");
				ПредметСделки.Параметры.Заполнить(Выборка);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ПредметСделки);
				ТабДок.Вывести(ПредметСделки);
			КонецЕсли;
			
			ВыборкаРаботы = Выборка.Товары.Выбрать();
			Если НЕ ВыборкаРаботы.Количество() = 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРаботыШапка);
				ТабДок.Вывести(ОбластьРаботыШапка);
				
				ИтогоПлан = 0;
				
				Пока ВыборкаРаботы.Следующий() Цикл
					ОбластьРаботы.Параметры.Заполнить(ВыборкаРаботы);
					ОбластьРаботы.Параметры.ПредставлениеНоменклатуры = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаРаботы.Номенклатура, ЯзыкДокументов, Клиент);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРаботы);
					ТабДок.Вывести(ОбластьРаботы, ВыборкаРаботы.Уровень());
					ИтогоПлан = ИтогоПлан + ВыборкаРаботы.План;
				КонецЦикла;	
			КонецЕсли;
			
			Подвал.Параметры.Заполнить(Выборка);
			Подвал.Параметры.Валюта = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
			Подвал.Параметры.ИтогоПлан = ИтогоПлан;
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
			ТабДок.Вывести(Подвал);
			
			ВставлятьРазделительСтраниц = ИСТИНА;
		КонецЦикла;	
	КонецЕсли;	
	
КонецПроцедуры
