//sza140610-1559  
//sza140206-2323  
Процедура Печать(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.ВыполненияРабот.ПолучитьМакет("Печать");
	
	ЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(ССылка[0].Клиент, , ЛОЖЬ);	
	Макет.КодЯзыкаМакета = ЯзыкаМакета.Код;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВыполненияРабот.Ссылка,
	               |	ВыполненияРабот.ВерсияДанных,
	               |	ВыполненияРабот.ПометкаУдаления,
	               |	ВыполненияРабот.Номер,
	               |	ВыполненияРабот.Дата,
	               |	ВыполненияРабот.Проведен,
	               |	ВыполненияРабот.Клиент,
	               |	ВыполненияРабот.Организация,
	               |	ВыполненияРабот.Договор,
	               |	ВыполненияРабот.ЗаказКлиента,
	               |	ВыполненияРабот.ВидЦен,
	               |	ВыполненияРабот.Результат,
	               |	ВыполненияРабот.ХранилищеДенег,
	               |	ВыполненияРабот.ДатаПлан,
	               |	ВыполненияРабот.РезультатПлан,
	               |	ВыполненияРабот.Актуален,
	               |	ВыполненияРабот.БезПлана,
	               |	ВыполненияРабот.Номенклатура,
	               |	ВыполненияРабот.СерияНоменклатуры,
	               |	ВыполненияРабот.СкладДляОбъектаВыполненияРабот,
	               |	ВыполненияРабот.ДатаПоступленияОбъектаРаботНаНашСклад,
	               |	ВыполненияРабот.КомментарийПриПоступленииОбъектаРабот,
	               |	ВыполненияРабот.ДатаВыдачиОбъектаРаботКлиентуОбратно,
	               |	ВыполненияРабот.КомментарийПриВыдачеОбъектаРабот,
	               |	ВыполненияРабот.Комментарий,
	               |	ВыполненияРабот.Ответственный,
	               |	ВыполненияРабот.ДатаСоздания,
	               |	ВыполненияРабот.ДатаРедакции,
	               |	ВыполненияРабот.Оплаты.(
	               |		Ссылка,
	               |		НомерСтроки,
	               |		ДатаПлан,
	               |		Дата,
	               |		План,
	               |		Сумма,
	               |		Валюта,
	               |		Курс,
	               |		ХранилищеДенег,
	               |		ФормаОплаты,
	               |		ОСтроке
	               |	),
	               |	ВыполненияРабот.Расходы.(
	               |		Ссылка,
	               |		НомерСтроки,
	               |		ДатаПлан,
	               |		Дата,
	               |		Поставщик,
	               |		Статья,
	               |		План,
	               |		Сумма,
	               |		Валюта,
	               |		Курс,
	               |		ХранилищеДенег,
	               |		ФормаОплаты,
	               |		Договор,
	               |		Сотрудник,
	               |		ОСтроке
	               |	),
	               |	ВыполненияРабот.Товары.(
	               |		Ссылка,
	               |		НомерСтроки,
	               |		ВаловаяПрибыль,
	               |		ВаловаяПрибыльПлан,
	               |		Валюта,
	               |		ВалютаПлан,
	               |		Дата,
	               |		ДатаПлан,
	               |		Количество,
	               |		КоличествоПлан,
	               |		Курс,
	               |		КурсПлан,
	               |		Номенклатура,
	               |		ОСтроке,
	               |		План,
	               |		ПроцентСкидки,
	               |		ПроцентСкидкиПлан,
	               |		СерияНоменклатуры,
	               |		Склад,
	               |		Сотрудник,
	               |		Сумма,
	               |		СуммаБезСкидки,
	               |		СуммаБезСкидкиПлан,
	               |		Цена,
	               |		ЦенаПлан,
	               |		ЕдиницаИзмерения
	               |	),
	               |	ВыполненияРабот.ОбъектКлиента,
	               |	ВыполненияРабот.ПричинаЦельРабот,
	               |	ВыполненияРабот.ВнешнийВид,
	               |	ВыполненияРабот.Комплектность,
	               |	ВыполненияРабот.ДатаПродажи,
	               |	ВыполненияРабот.ОрганизацияПродавец,
	               |	ВыполненияРабот.ТипРаботы,
	               |	ВыполненияРабот.ДатаОповещения,
	               |	ВыполненияРабот.ДатаОтправки,
	               |	ВыполненияРабот.ТоварОтправлен,
	               |	ВыполненияРабот.КлиентОповещен,
	               |	ВыполненияРабот.ТалонТрек,
	               |	ВыполненияРабот.СпособДоставки,
	               |	ВыполненияРабот.ЗадействованныеСредства.(
	               |		Ссылка,
	               |		НомерСтроки,
	               |		Средство,
	               |		ДатаНачала,
	               |		ДатаОкончания,
	               |		Коэффициент,
	               |		ОСтроке
	               |	),
	               |	ВыполненияРабот.НомерСчета,
	               |	ВыполненияРабот.ДатаСчета
	               |ИЗ
	               |	Документ.ВыполненияРабот КАК ВыполненияРабот
	               |ГДЕ
	               |	ВыполненияРабот.Ссылка В(&Ссылка)";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
	Шапка 				= Макет.ПолучитьОбласть("Шапка");
	ОбластьРаботыШапка 	= Макет.ПолучитьОбласть("РаботыШапка");
	ОбластьРаботы 		= Макет.ПолучитьОбласть("Работы");
	ОбластьРаботыПлан 	= Макет.ПолучитьОбласть("РаботыПлан");
	ОбластьОплатыШапка 	= Макет.ПолучитьОбласть("ОплатыШапка");
	ОбластьОплаты 		= Макет.ПолучитьОбласть("Оплаты");
	ОбластьОплатыПлан 	= Макет.ПолучитьОбласть("ОплатыПлан");
	ОбластьРасходыШапка = Макет.ПолучитьОбласть("РасходыШапка");
	ОбластьРасходы 		= Макет.ПолучитьОбласть("Расходы");
	ОбластьРасходыПлан 	= Макет.ПолучитьОбласть("РасходыПлан");
	Подвал 				= Макет.ПолучитьОбласть("Подвал");
	ДвижениеОбъекта 	= Макет.ПолучитьОбласть("ДвижениеОбъекта");
	ОбластьЗадействованныеСредстваШапка = Макет.ПолучитьОбласть("ЗадействованныеСредстваШапка");
	ОбластьЗадействованныеСредства 		= Макет.ПолучитьОбласть("ЗадействованныеСредства");
	
	ТабДок.Очистить();
	
	ОтключитьПланированиеВДокументеВыполненияРабот = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ОтключитьПланированиеВДокументеВыполненияРабот");
	ВставлятьРазделительСтраниц = ЛОЖЬ;
	Пока Выборка.Следующий() Цикл
		
		БезПлана = ОтключитьПланированиеВДокументеВыполненияРабот ИЛИ Выборка.БезПлана;
		Клиент = Выборка.Клиент;
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Если параметрысеанса.ВестиУчетСобственныхЮридическихЛицПС
			И ЗначениеЗаполнено(Выборка.Организация) Тогда
			
			ОбщийМодульСервер.ДобавитьШапкуОрганизации(ТабДок, Выборка.Организация);
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		СтруктураДополнительныПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
		Если НЕ параметрысеанса.ВестиУчетСобственныхЮридическихЛицПС
			ИЛИ не ЗначениеЗаполнено(Выборка.Организация) Тогда
			
			Шапка.Параметры.ТекстВШапкеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВШапкеДокументовПриПечати;	
		Иначе
			Шапка.Параметры.ТекстВШапкеДокументовПриПечати = "";
		КонецЕсли;
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		Если Выборка.Актуален
			И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ДобавитьФункцииПриемаИВыдачиОбъектаРаботДокументуВыполненияРабот") Тогда
			
			ДвижениеОбъекта.Параметры.Заполнить(Выборка);
			ТабДок.Вывести(ДвижениеОбъекта);
		КонецЕсли;
		
		ВыборкаРаботы = Выборка.Товары.Выбрать();
		Если ВыборкаРаботы.Количество() > 0 тогда
			ТабДок.Вывести(ОбластьРаботыШапка);
			Пока ВыборкаРаботы.Следующий() Цикл
				Если НЕ безплана Тогда
					ОбластьРаботыПлан.Параметры.Заполнить(ВыборкаРаботы);
					ОбластьРаботыПлан.Параметры.ПредставлениеНоменклатуры = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаРаботы.Номенклатура, ЯзыкаМакета, Клиент);
					ТабДок.Вывести(ОбластьРаботыПлан, ВыборкаРаботы.Уровень());
				КонецЕсли;
				ОбластьРаботы.Параметры.Заполнить(ВыборкаРаботы);
				ОбластьРаботы.Параметры.ПредставлениеНоменклатуры = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаРаботы.Номенклатура, ЯзыкаМакета, Клиент);
				ТабДок.Вывести(ОбластьРаботы, ВыборкаРаботы.Уровень());
			КонецЦикла;
		КонецЕсли;
		
		ВыборкаОплаты = Выборка.Оплаты.Выбрать();
		Если ВыборкаОплаты.Количество() > 0 тогда
			ТабДок.Вывести(ОбластьОплатыШапка);
			Пока ВыборкаОплаты.Следующий() Цикл
				Если НЕ безплана Тогда
					ОбластьОплатыПлан.Параметры.Заполнить(ВыборкаРаботы);
					ТабДок.Вывести(ОбластьОплатыПлан, ВыборкаРаботы.Уровень());
				КонецЕсли;
				ОбластьОплаты.Параметры.Заполнить(ВыборкаОплаты);
				ТабДок.Вывести(ОбластьОплаты, ВыборкаОплаты.Уровень());
			КонецЦикла;                              	
		КонецЕсли;
		
		ВыборкаРасходы = Выборка.Расходы.Выбрать();
		Если ВыборкаРасходы.Количество() > 0 тогда
			ТабДок.Вывести(ОбластьРасходыШапка);
			Пока ВыборкаРасходы.Следующий() Цикл
				Если НЕ безплана Тогда
					ОбластьРасходыПлан.Параметры.Заполнить(ВыборкаРаботы);
					ТабДок.Вывести(ОбластьРасходыПлан, ВыборкаРаботы.Уровень());
				КонецЕсли;
				ОбластьРасходы.Параметры.Заполнить(ВыборкаРасходы);
				ТабДок.Вывести(ОбластьРасходы, ВыборкаРасходы.Уровень());
			КонецЦикла;                             	
		КонецЕсли;
		
		ВыборкаЗадействованныеСредства = Выборка.ЗадействованныеСредства.Выбрать();
		Если ВыборкаЗадействованныеСредства.Количество() > 0 тогда
			ТабДок.Вывести(ОбластьЗадействованныеСредстваШапка);
			
			Пока ВыборкаЗадействованныеСредства.Следующий() Цикл
				ОбластьЗадействованныеСредства.Параметры.Заполнить(ВыборкаЗадействованныеСредства);
				ТабДок.Вывести(ОбластьЗадействованныеСредства, ВыборкаЗадействованныеСредства.Уровень());
			КонецЦикла;                             	
		КонецЕсли;
		
		Подвал.Параметры.Заполнить(Выборка);
		Подвал.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВПодвалеДокументовПриПечати;
		ТабДок.Вывести(Подвал);
		
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("УчитыватьИнформациюОДоставкеВДокументахРасхода") Тогда
			ИнформацияОДоставке = Макет.ПолучитьОбласть("ИнформацияОДоставке");
			ИнформацияОДоставке.Параметры.Заполнить(Выборка);
			ТабДок.Вывести(ИнформацияОДоставке);
		КонецЕсли;
		
		ВставлятьРазделительСтраниц = ИСТИНА;
	КонецЦикла;
	
КонецПроцедуры

Процедура Смета(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.ВыполненияРабот.ПолучитьМакет("Смета");
	ЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(ССылка[0].Клиент, , ЛОЖЬ);	
	Макет.КодЯзыкаМакета = ЯзыкаМакета.Код;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ВыполненияРабот.ДатаПлан,
	|	ВыполненияРабот.Клиент,
	|	ВыполненияРабот.Комментарий,
	|	ВыполненияРабот.Номенклатура,
	|	ВыполненияРабот.Номер,
	|	ВыполненияРабот.СерияНоменклатуры,
	|	ВыполненияРабот.Товары.(
	|		ДатаПлан,
	|		Номенклатура,
	|		Количество,
	|		Цена,
	|		ПроцентСкидки,
	|		СуммаБезСкидки,
	|		План,
	|		ОСтроке,
	|		КоличествоПлан,
	|		ЦенаПлан,
	|		ПроцентСкидкиПлан,
	|		СуммаБезСкидкиПлан )
	|ИЗ Документ.ВыполненияРабот КАК ВыполненияРабот
	|ГДЕ ВыполненияРабот.Ссылка В(&Ссылка)";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
	Шапка 				= Макет.ПолучитьОбласть("Шапка");
	ОбластьРаботыШапка 	= Макет.ПолучитьОбласть("РаботыШапка");
	ОбластьРаботы 		= Макет.ПолучитьОбласть("Работы");
	Подвал 				= Макет.ПолучитьОбласть("Подвал");
	
	ТабДок.Очистить();
	
	ВставлятьРазделительСтраниц = ЛОЖЬ;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		Клиент = Выборка.Клиент;
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		ТабДок.Вывести(ОбластьРаботыШапка);
		ВыборкаРаботы = Выборка.Товары.Выбрать();
		ИтогоПлан = 0;
		
		Пока ВыборкаРаботы.Следующий() Цикл
			ОбластьРаботы.Параметры.Заполнить(ВыборкаРаботы);
			ОбластьРаботы.Параметры.ПредставлениеНоменклатуры = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаРаботы.Номенклатура, ЯзыкаМакета, Клиент);
			ТабДок.Вывести(ОбластьРаботы, ВыборкаРаботы.Уровень());
			ИтогоПлан = ИтогоПлан + ВыборкаРаботы.План;
		КонецЦикла;
		
		Подвал.Параметры.Заполнить(Выборка);
		Подвал.Параметры.Валюта = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
		Подвал.Параметры.ИтогоПлан = ИтогоПлан;
		ТабДок.Вывести(Подвал);
		
		ВставлятьРазделительСтраниц = ИСТИНА;
	КонецЦикла;
	
КонецПроцедуры
