//sza140701-1327  
//sza140409-0205  
//sza130920-1735 : 
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещенияТовара") Тогда
			ВидЦен = ДанныеЗаполнения.ВидЦен;
			Комментарий = ДанныеЗаполнения.Комментарий;
			Для Каждого ТекСтрокаТовара Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТовара.Номенклатура;
				НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовара.ЕдиницаИзмерения;
				НоваяСтрока.Цена = ТекСтрокаТовара.Цена;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступленияТовара") Тогда
			ВидЦен = ДанныеЗаполнения.ВидЦен;
			Комментарий = ДанныеЗаполнения.Комментарий;
			Для Каждого ТекСтрокаТовара Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТовара.Номенклатура;
				НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовара.ЕдиницаИзмерения;
				НоваяСтрока.Цена = ТекСтрокаТовара.Цена;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходыТовара") Тогда
			ВидЦен = ДанныеЗаполнения.ВидЦен;
			Комментарий = ДанныеЗаполнения.Комментарий;
			Для Каждого ТекСтрокаТовара Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТовара.Номенклатура;
				НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовара.ЕдиницаИзмерения;
				НоваяСтрока.Цена = ТекСтрокаТовара.Цена;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Инвентаризации") Тогда
			ВидЦен = ДанныеЗаполнения.ВидЦен;
			Комментарий = ДанныеЗаполнения.Комментарий;
			Для Каждого ТекСтрокаТовара Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТовара.Номенклатура;
				НоваяСтрока.Цена = ТекСтрокаТовара.Цена;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КорректировкиИРегистрацияОстатков") Тогда
			ВидЦен = ДанныеЗаполнения.ВидЦен;
			Комментарий = ДанныеЗаполнения.Комментарий;
			Для Каждого ТекСтрокаТовара Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТовара.Номенклатура;
				НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовара.ЕдиницаИзмерения;
				НоваяСтрока.Цена = ТекСтрокаТовара.Цена;
			КонецЦикла;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если НеПроводить Тогда
		НеПроводить = ЛОЖЬ;
		Записать(РежимЗаписиДокумента.Запись);
	Иначе
		Если НЕ Отказ Тогда
			
			ОбщийМодульСервер.УдалитьСвязанныеЦены(Ссылка);
			
			Товары.Свернуть("Номенклатура, Цена, СтараяЦена, РазницаЦены", "Комментарий");
			
			МассивПустыхСтрок  = Новый массив;
			массивноменклатуры = Новый массив;
			
			Для Каждого СтрокаТовара из товары цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТовара.Номенклатура) Тогда
					МассивПустыхСтрок.Добавить(СтрокаТовара);
					
				Иначеесли не СтрокаТовара.РазницаЦены = 0
					И НЕ массивноменклатуры.Найти(СтрокаТовара.Номенклатура) = Неопределено тогда
					
					Если ОбщийМодульПовторВТеченииСервера.ВыводитьСообщенияМожно() Тогда
						ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("На строке") + " № " + СтрокаТовара.НомерСтроки + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("повторяется номенклатура") + ":" + СтрокаТовара.Номенклатура, , Ссылка);
					КонецЕсли;
					Отказ = ИСТИНА;			
					
				Иначе
					массивноменклатуры.Добавить(СтрокаТовара.Номенклатура);
					
				КонецЕсли;                                    	
			КонецЦикла;
			
			Если НЕ Отказ Тогда
				Для Каждого СтрокаТовара из МассивПустыхСтрок цикл
					товары.Удалить(СтрокаТовара);	
				КонецЦикла;	
				
				Если ОбщийМодульПовтор.ПолучитьПараметрСеанса("ИспользоватьСложныйМеханизмЦенПС") Тогда
					Если ЗначениеЗаполнено(ВидЦен) Тогда
						
						Для Каждого СтрокаТовара Из Товары Цикл
							
							Если ЗначениеЗаполнено(СтрокаТовара.Номенклатура) 
								И НЕ СтрокаТовара.Цена = СтрокаТовара.СтараяЦена Тогда
								
								ОбщийМодульСервер.УстановитьЦенуИВсеЗависимые(ВидЦен, СтрокаТовара, Ссылка, Комментарий, Дата, , , , , , СтрокаТовара.ЕдиницаИзмерения);
								
							КонецЕсли;
						КонецЦикла; 	
					КонецЕсли;
					
				Иначе
					Для Каждого СтрокаТовара Из Товары Цикл
						Если ЗначениеЗаполнено(СтрокаТовара.Цена) Тогда
							НоменклатураОбъект = СтрокаТовара.Номенклатура.ПолучитьОбъект();
							НоменклатураОбъект.Цена = СтрокаТовара.Цена;
							НоменклатураОбъект.Записать();
						КонецЕсли;					
					КонецЦикла;
				КонецЕсли;
				
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если НЕ Отказ Тогда		
		Попытка //ЭтотОбъект
			Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002351", , Отказ, ЭтотОбъект);	
		Исключение 
		КонецПопытки;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		ОбщийМодульСервер.УдалитьСвязанныеЦены(Ссылка);	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ отказ 
		И товары.итог("Цена") = 0     // или товары.итог("разница") = 0 ?
		И РежимЗаписи = РежимЗаписиДокумента.Проведение тогда
		
		РежимЗаписи = РежимЗаписиДокумента.Запись;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Комментарий = "";
КонецПроцедуры
