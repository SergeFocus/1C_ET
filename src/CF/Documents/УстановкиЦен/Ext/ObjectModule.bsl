// sza151210-2342 про
// sza151031-1633 с тендера
// sza150727-1815 цены поставщиков
// sza140701-1327  
// sza140409-0205  
// sza130920-1735 : 
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещенияТовара") Тогда
			ВидЦен = ДанныеЗаполнения.ВидЦен;
			Комментарий = ДанныеЗаполнения.Комментарий;
			Для Каждого ТекСтрокаТовара Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТовара.Номенклатура;
				НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовара.ЕдиницаИзмерения;
				НоваяСтрока.Цена = ТекСтрокаТовара.Цена;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступленияТовара") Тогда
			ВидЦен = ДанныеЗаполнения.ВидЦен;
			Комментарий = ДанныеЗаполнения.Комментарий;
			Для Каждого ТекСтрокаТовара Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТовара.Номенклатура;
				НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовара.ЕдиницаИзмерения;
				НоваяСтрока.Цена = ТекСтрокаТовара.Цена;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходыТовара") Тогда
			ВидЦен = ДанныеЗаполнения.ВидЦен;
			Комментарий = ДанныеЗаполнения.Комментарий;
			Для Каждого ТекСтрокаТовара Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТовара.Номенклатура;
				НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовара.ЕдиницаИзмерения;
				НоваяСтрока.Цена = ТекСтрокаТовара.Цена;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Инвентаризации") Тогда
			ВидЦен = ДанныеЗаполнения.ВидЦен;
			Комментарий = ДанныеЗаполнения.Комментарий;
			Для Каждого ТекСтрокаТовара Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТовара.Номенклатура;
				НоваяСтрока.Цена = ТекСтрокаТовара.Цена;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КорректировкиИРегистрацияОстатков") Тогда
			ВидЦен = ДанныеЗаполнения.ВидЦен;
			Комментарий = ДанныеЗаполнения.Комментарий;
			Для Каждого ТекСтрокаТовара Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТовара.Номенклатура;
				НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовара.ЕдиницаИзмерения;
				НоваяСтрока.Цена = ТекСтрокаТовара.Цена;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Тендеры") Тогда
			ДляЦенПоставщика = ИСТИНА;
			ВидЦен = ДанныеЗаполнения.ВидЦен;
			Комментарий = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("По результатам тендера");
			ВсегоСумма = 0;
			Для Каждого ТекСтрокаПредложения Из ДанныеЗаполнения.Предложения Цикл
				Если ТекСтрокаТовара.Тендер Тогда
					ВсегоСумма = ВсегоСумма + ТекСтрокаПредложения.Сумма;
					Поставщик = ТекСтрокаПредложения.Поставщик;
					Договор = ТекСтрокаПредложения.Договор;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Для Каждого ТекСтрокаТовара Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТовара.Номенклатура;
				НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовара.ЕдиницаИзмерения;
				НоваяСтрока.Цена = ВсегоСумма;
			КонецЦикла;
			
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если НеПроводить Тогда
		НеПроводить = ЛОЖЬ;
		Записать(РежимЗаписиДокумента.Запись);
		
	Иначе
		Если НЕ Отказ Тогда
			
			ОбщийМодульСервер.УдалитьСвязанныеЦены(Ссылка);
			
			Товары.Свернуть("Номенклатура, Цена, СтараяЦена, РазницаЦены, ЕдиницаИзмерения", "Комментарий");
			
			МассивПустыхСтрок  = Новый массив;
			МассивНоменклатуры = Новый массив;
			
			Для Каждого СтрокаТовара Из Товары Цикл
				
				НоменклатураСтроки = СтрокаТовара.Номенклатура;
				
				Если НЕ ЗначениеЗаполнено(НоменклатураСтроки) Тогда
					МассивПустыхСтрок.Добавить(СтрокаТовара);
					
				Иначеесли не СтрокаТовара.РазницаЦены = 0
					И НЕ МассивНоменклатуры.Найти(НоменклатураСтроки) = Неопределено тогда
					
					Если ОбщийМодульПовторВТеченииСервера.ВыводитьСообщенияМожно() Тогда
						ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("На строке") + " № " + СтрокаТовара.НомерСтроки + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("повторяется номенклатура") + ":" + НоменклатураСтроки, , Ссылка);
					КонецЕсли;
					Отказ = ИСТИНА;			
					
				Иначе
					МассивНоменклатуры.Добавить(НоменклатураСтроки);
					
				КонецЕсли;                                    	
			КонецЦикла;
			
			Если НЕ Отказ Тогда
				Для Каждого СтрокаТовара Из МассивПустыхСтрок Цикл
					товары.Удалить(СтрокаТовара);	
				КонецЦикла;	
				
				Если НЕ ДляЦенПоставщика Тогда
					
					Если ОбщийМодульПовтор.ПолучитьПараметрСеанса("ИспользоватьСложныйМеханизмЦенПС") Тогда
						Если ЗначениеЗаполнено(ВидЦен) Тогда
							
							Для Каждого СтрокаТовара Из Товары Цикл
								
								Если ЗначениеЗаполнено(СтрокаТовара.Номенклатура) 
									И НЕ СтрокаТовара.Цена = СтрокаТовара.СтараяЦена Тогда
									
									ОбщийМодульСервер.УстановитьЦенуИВсеЗависимые(ВидЦен, СтрокаТовара, Ссылка, Комментарий, Дата, , , , , , СтрокаТовара.ЕдиницаИзмерения);
									
								КонецЕсли;
							КонецЦикла; 	
						КонецЕсли;
						
					Иначе
						Для Каждого СтрокаТовара Из Товары Цикл
							Если ЗначениеЗаполнено(СтрокаТовара.Цена) Тогда
								НоменклатураОбъект = СтрокаТовара.Номенклатура.ПолучитьОбъект();
								НоменклатураОбъект.Цена = СтрокаТовара.Цена;
								НоменклатураОбъект.Записать();
							КонецЕсли;					
						КонецЦикла;
						
					КонецЕсли;	
					
				Иначе				
					Если ОбщийМодульПовтор.ПолучитьПараметрСеанса("ИспользоватьСложныйМеханизмЦенПС") Тогда
						Если ЗначениеЗаполнено(ВидЦен) Тогда
							
							Для Каждого СтрокаТовара Из Товары Цикл
								
								Если ЗначениеЗаполнено(СтрокаТовара.Номенклатура) 
									И НЕ СтрокаТовара.Цена = СтрокаТовара.СтараяЦена Тогда
									
									ОбщийМодульСервер.УстановитьЦенуПоставщика(ВидЦен, СтрокаТовара, Договор, Комментарий, Дата, Поставщик, Ссылка);
								КонецЕсли;							
							КонецЦикла;
						Иначе
							Если ОбщийМодульПовторВТеченииСервера.ВыводитьСообщенияМожно() Тогда
								ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("не указан Вид Цен!"), , Ссылка);
							КонецЕсли;
						КонецЕсли;
						
					Иначе
						Для Каждого СтрокаТовара Из Товары Цикл
							Если ЗначениеЗаполнено(СтрокаТовара.Цена) Тогда
								НоменклатураОбъект = СтрокаТовара.Номенклатура.ПолучитьОбъект();
								НоменклатураОбъект.Цена = СтрокаТовара.Цена;
								НоменклатураОбъект.Записать();
							КонецЕсли;					
						КонецЦикла;
						
					КонецЕсли;	
				КонецЕсли;
				
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если НЕ Отказ Тогда		
		Попытка // ЭтотОбъект
			Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002351", , Отказ, ЭтотОбъект);	
		Исключение 
		КонецПопытки;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		ОбщийМодульСервер.УдалитьСвязанныеЦены(Ссылка);	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ Отказ 
		И Товары.Итог("Цена") = 0     // или товары.итог("разница") = 0 ?
		И РежимЗаписи = РежимЗаписиДокумента.Проведение тогда
		
		РежимЗаписи = РежимЗаписиДокумента.Запись;
		
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ФормироватьОписаниеТаблицОбъектовДляИхСписков") Тогда
			ОбщийМодульСервер.ОформитьОписаниеТаблицы(ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Комментарий = "";
КонецПроцедуры
