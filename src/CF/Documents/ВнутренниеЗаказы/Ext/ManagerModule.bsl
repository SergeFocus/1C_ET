// sza151217-2317

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	Процедура Печать(ДокументДляПечати, Ссылка) Экспорт

		ДокументДляПечати.ИмяПараметровПечати  = "ДокВнутреннийЗаказ" + СокрЛП(ИмяКомпьютера());
		ДокументДляПечати.КлючПараметровПечати = ДокументДляПечати.ИмяПараметровПечати;
		ДокументДляПечати.Очистить();

		Дата = Ссылка[0].Дата;
		ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(ПредопределенноеЗначение("Перечисление.ВидыПечатныхФорм.ВнутреннийЗаказ"), Дата);
		Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
			ДокументДляПечати = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ДокументДляПечати, Ссылка[0], "Документы", "ВнутренниеЗаказы");
		Иначе
			Макет  = Документы.ВнутренниеЗаказы.ПолучитьМакет("Печать");

			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ВнутренниеЗаказы.Выполнен,
			|	ВнутренниеЗаказы.Дата,
			|	ВнутренниеЗаказы.ДатаПоступления,
			|	ВЫРАЗИТЬ(ВнутренниеЗаказы.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
			|	ВнутренниеЗаказы.Номер,
			|	ВнутренниеЗаказы.Склад,
			|	ВнутренниеЗаказы.СкладДонор,
			|	ВнутренниеЗаказы.Сотрудник,
			|	ВнутренниеЗаказы.ТовараВКоличестве,
			|	ВнутренниеЗаказы.Товары.(
			|		НомерСтроки,
			|		Номенклатура,
			|		Количество,
			|		ОСтроке)
			|ИЗ Документ.ВнутренниеЗаказы КАК ВнутренниеЗаказы
			|ГДЕ ВнутренниеЗаказы.Ссылка В (&Ссылка)";
			Запрос.Параметры.Вставить("Ссылка", Ссылка);

			Выборка = Запрос.Выполнить().Выбрать();
			ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
			Шапка 			 	= Макет.ПолучитьОбласть("Шапка");
			ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка");
			ОбластьТовары 		= Макет.ПолучитьОбласть("Товары");
			Подвал 				= Макет.ПолучитьОбласть("Подвал");
			ОбластьПодписи		= Макет.ПолучитьОбласть("Подписи");
			ДокументДляПечати.Очистить();
			ВставлятьРазделительСтраниц = Ложь;

			Пока Выборка.Следующий() Цикл
				Если ВставлятьРазделительСтраниц Тогда
					ДокументДляПечати.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;

				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
				ДокументДляПечати.Вывести(ОбластьЗаголовок);
				Шапка.Параметры.Заполнить(Выборка);
				СтруктураДополнительныхПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
				Шапка.Параметры.ТекстВШапкеДокументовПриПечати   = СтруктураДополнительныхПараметровМакета.ТекстВШапкеДокументовПриПечати ;
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
				ДокументДляПечати.Вывести(Шапка, Выборка.Уровень());
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТоварыШапка);
				ДокументДляПечати.Вывести(ОбластьТоварыШапка);
				ВыборкаТовары = Выборка.Товары.Выбрать();

				Пока ВыборкаТовары.Следующий() Цикл
					ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
					ОбластьТовары.Параметры.НоменклатураНаименование = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаТовары.Номенклатура);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТовары);
					ДокументДляПечати.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());

				КонецЦикла;

				Подвал.Параметры.Заполнить(Выборка);
				Подвал.Параметры.Выполнен = ?(Выборка.Выполнен, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заказ выполнен"), "");
				Подвал.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныхПараметровМакета.ТекстВПодвалеДокументовПриПечати;
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
				ДокументДляПечати.Вывести(Подвал);

				Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетЗарплатыСотрудников") Тогда
					ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
					ОбластьПодписи.Параметры.Заполнить(Выборка);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьПодписи);
					ДокументДляПечати.Вывести(ОбластьПодписи);
				КонецЕсли;

				ВставлятьРазделительСтраниц = ИСТИНА;

			КонецЦикла;
		КонецЕсли;

	КонецПроцедуры

#КонецЕсли
