#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// sza151210-2332
// sza150928-0204 
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Номенклатура") Тогда
		НоваяСтрока = Товары.Добавить();
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Номенклатура = ДанныеЗаполнения.Ссылка;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Склады") Тогда
		Склад = ДанныеЗаполнения.Ссылка;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходыТовара") Тогда
		Склад = ДанныеЗаполнения.Склад;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.ОСтроке = ТекСтрокаТовары.ОСтроке;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВнутренниеЗаказы") Тогда		
		Выполнен = ДанныеЗаполнения.Выполнен;
		Ответственный = ДанныеЗаполнения.Ответственный;
		Склад = ДанныеЗаполнения.СкладДонор;
		СкладДонор = ДанныеЗаполнения.Склад;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.ОСтроке = ТекСтрокаТовары.ОСтроке;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещенияТовара") Тогда		
		Склад = ДанныеЗаполнения.Склад;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.ОСтроке = ТекСтрокаТовары.ОСтроке;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.События") Тогда		
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.ОСтроке = ТекСтрокаТовары.ОСтроке;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Инвентаризации") Тогда		
		Склад = ДанныеЗаполнения.Склад;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			Если ТекСтрокаТовары.КоличествоРазница > 1 Тогда
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Количество = ТекСтрокаТовары.КоличествоРазница;
				НоваяСтрока.ОСтроке = ТекСтрокаТовары.Комментарий;
				НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;	
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступленияТовара") Тогда		
		СкладДонор = ДанныеЗаполнения.Склад;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.ОСтроке = ТекСтрокаТовары.ОСтроке;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Комплектация") Тогда		
		СкладДонор = ДанныеЗаполнения.Склад;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.ОСтроке = ТекСтрокаТовары.ОСтроке;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПланыПродаж") Тогда		
		Склад = ДанныеЗаполнения.Склад;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.НоменклатураИлиГруппа;
			НоваяСтрока.ОСтроке = ТекСтрокаТовары.ОСтроке;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если НеПроводить Тогда
		НеПроводить = ЛОЖЬ;
		Записать(РежимЗаписиДокумента.Запись);
		
	Иначе
		Если НЕ Отказ Тогда
			
			Движения.ВнутренниеЗаказыТоваров.Записать();			
			
			Если НЕ Сторный Тогда
				ВидДвиженияНакопленияПриход = ВидДвиженияНакопления.Приход;
				ВидДвиженияНакопленияРасход = ВидДвиженияНакопления.Расход;
			Иначе
				ВидДвиженияНакопленияПриход = ВидДвиженияНакопления.Расход;
				ВидДвиженияНакопленияРасход = ВидДвиженияНакопления.Приход;
			КонецЕсли;
			
			СтруктураТаблиц    = ОбщийМодульСервер.ПолучитьТаблицуОстатковВнутреннихЗаказов(Ссылка, Склад, ДатаПоступления);
			ТаблицаВнутреннихЗаказов = СтруктураТаблиц.ТаблицаВнутреннихЗаказов;	
			
			Для Каждого ТекСтрокаТовара Из Товары Цикл
				
				Номенклатура = ТекСтрокаТовара.Номенклатура;
				Количество   = ТекСтрокаТовара.Количество;
				
				Движение = Движения.ВнутренниеЗаказыТоваров.Добавить();					
				Движение.Количество 	= Количество;	
				Движение.ВидДвижения 	= ВидДвиженияНакопленияПриход;
				Движение.Период 		= Дата ;
				Движение.Номенклатура 	= Номенклатура;
				Движение.Склад 			= Склад;
				
				Если Выполнен Тогда
					
					СтрокаСписанияВнутреннегоЗаказа = ТаблицаВнутреннихЗаказов.Найти(Номенклатура, "Номенклатура");
					Если НЕ СтрокаСписанияВнутреннегоЗаказа = Неопределено Тогда	
						
						КоличествоНедополученнойРанее = СтрокаСписанияВнутреннегоЗаказа.Количество;
						
						Если КоличествоНедополученнойРанее > 0 Тогда
							
							Если КоличествоНедополученнойРанее > Количество Тогда
								КоличествоКСписанию = Количество;
							Иначе
								КоличествоКСписанию = КоличествоНедополученнойРанее;
							КонецЕсли;
							
							Движение = Движения.ВнутренниеЗаказыТоваров.Добавить();					
							Движение.Количество 	= КоличествоКСписанию;	
							Движение.ВидДвижения 	= ВидДвиженияНакопленияРасход;
							Движение.Период 		= ДатаПоступления ;
							Движение.Номенклатура 	= Номенклатура;
							Движение.Склад 			= Склад;	
						КонецЕсли;	
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;			
		КонецЕсли;	
		
		Движения.ВнутренниеЗаказыТоваров.Записывать = НЕ Отказ;	
	КонецЕсли;
	
КонецПроцедуры
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
Если ОбменДанными.Загрузка Тогда 
     Возврат; 
 КонецЕсли; 
 
 Если НЕ Отказ
		И НЕ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("МассоваяЗагрузка", ИСТИНА)
		И Модифицированность() 
		И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Если НЕ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПриАвтоматическомПерепроведенииДокументовОтменитьПроверкиНаОтказ") Тогда
			ПодготовкаКПроведению(Отказ);	
		КонецЕсли;
		
		Если ТовараВКоличестве 	= 0
			И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			
			РежимЗаписи = РежимЗаписиДокумента.Запись;
		КонецЕсли;	
		
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ФормироватьОписаниеТаблицОбъектовДляИхСписков") Тогда
			ОбщийМодульСервер.ОформитьОписаниеТаблицы(ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
Процедура ПодготовкаКПроведению(Отказ) Экспорт
	
	Если НЕ Отказ
		И НЕ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("МассоваяЗагрузка", ИСТИНА) Тогда
		
		Если Дата > ТекущаяДата() 
			И ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002900", , , ЭтотОбъект) Тогда
			
			Дата = ТекущаяДата();
			ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Дата и время документа установлены сейчас."));			
		КонецЕсли;
		
		Если НЕ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("НеСворачиватьТоварыПоКоличествуВоВсехДокументах") Тогда			
			Товары.Свернуть("Номенклатура, ОСтроке", "Количество");	
		КонецЕсли;
		
		МассивПустыхСтрок  = Новый Массив;
		МассивНоменклатуры = Новый Массив;
		
		Для Каждого СтрокаТовары Из товары Цикл
			
			НоменклатураСтроки = СтрокаТовары.Номенклатура;
			
			НоменклатураПовторяется = НЕ МассивНоменклатуры.Найти(НоменклатураСтроки) = Неопределено;
			
			Если НЕ ЗначениеЗаполнено(НоменклатураСтроки) Тогда
				МассивПустыхСтрок.Добавить(СтрокаТовары);
				
			ИначеЕсли НоменклатураПовторяется Тогда
				
				Если ОбщийМодульПовторВТеченииСервера.ВыводитьСообщенияМожно() Тогда
					ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В строке") + " № " + СтрокаТовары.НомерСтроки + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("повторяется номенклатура") + ": " + НоменклатураСтроки, , Ссылка);
				КонецЕсли;
				
			Иначе
				МассивНоменклатуры.Добавить(НоменклатураСтроки);
			КонецЕсли;                                    	
		КонецЦикла;
		
		Для Каждого СтрокаТовары Из МассивПустыхСтрок Цикл
			Товары.Удалить(СтрокаТовары);	
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры
Процедура ПриКопировании(ОбъектКопирования)
	Комментарий = "";
КонецПроцедуры

#КонецЕсли