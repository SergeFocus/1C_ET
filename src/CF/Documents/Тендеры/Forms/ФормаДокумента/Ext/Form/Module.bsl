// sza151101-0141 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("001853", ЭтаФорма, Отказ, Объект);
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ВестиУчетПоНаправлениямДеятельности = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоНаправлениямДеятельности");
		
		Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
			
			Объект.Сторный = ЛОЖЬ; // При копировании
			Объект.ДокументСторно = Неопределено;
			
			Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
				Объект.Склад = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("СкладПоУмолчанию");		
				Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
					Объект.Склад = ОбщийМодульПовтор.ЗначениеПредопределенного("Справочники.Склады.ОсновнойСклад");
				КонецЕсли;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Объект.ВидЦен ) Тогда
				Объект.ВидЦен = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВидЦенПриходованияТовараПоУмолчанию");
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
				Объект.Организация = ОбщийМодульПовтор.ЗначениеПредопределенного("Справочники.Организации.ОсновноеПредприятие");
			КонецЕсли;
			
			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПродажПоСотрудникам")
				И НЕ ЗначениеЗаполнено(Объект.Сотрудник) Тогда
				
				Объект.Сотрудник = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("СотрудникРеализацииПоУмолчанию");
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Объект.Сотрудник) Тогда
				Объект.Сотрудник = ОбщийМодульПовтор.ПолучитьТекущегоСотрудника();
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Объект.Валюта) Тогда
				Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
					Объект.Валюта = Объект.ВидЦен.ВалютаЦены;
				Иначе
					Объект.Валюта = ОбщийМодульПовтор.ЗначениеПредопределенного("Справочники.Валюты.ОсновнаяВалюта");	
				КонецЕсли;
			КонецЕсли;
			
			Объект.Курс = ОбновитьКурс(Объект.Валюта, Объект.Дата);	
			Объект.СтатусТендера = ПредопределенноеЗначение("Перечисление.СтатусыТендеров.Формируется");
		КонецЕсли;	
		
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВсеРеквизитыШапкиДокументовВПервуюЗакладкуРежимБольшихТаблицДляМалыхМониторов") Тогда
			Элементы.Переместить(Элементы.ШапкаСлева, Элементы.ГруппаАльтернативногоВидаСлева);
			Элементы.ГруппаНомерДата.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			Элементы.Переместить(Элементы.ШапкаСправа, Элементы.ГруппаАльтернативногоВидаСправа);
			Элементы.Переместить(Элементы.Подвал, Элементы.ГруппаАльтернативногоВидаСлева);
			Элементы.Переместить(Элементы.ГруппаКомментария, Элементы.ГруппаАльтернативногоВидаСлева);
			Элементы.Переместить(Элементы.ГруппаСтандартныхРеквизитов, Элементы.ГруппаАльтернативногоВидаСлева);
		КонецЕсли;
		
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.ТоварыКоличество);
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.ТовараВКоличестве, , ИСТИНА);	
		
		Элементы.РезультатыТендера.Видимость = ЗначениеЗаполнено(Объект.Поставщик);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция   ОбновитьКурс(Знач Валюта, Знач Дата)
	
	Если ЗначениеЗаполнено(Валюта) Тогда
		Возврат ОбщийМодульПовтор.ПолучитьТекущийКурс(Валюта, Дата);
	Иначе
		Возврат 1;	
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Объект.Ссылка, ИСТИНА);
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбработатьБлокировку(ИСТИНА);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаСервере
Процедура ОбработатьБлокировку(Знач ПриСозданииФормы = ЛОЖЬ)
	
	Если ОбщийМодульСервер.ОбработатьБлокировку(Объект, ЭтаФорма, ПриСозданииФормы) Тогда
		
	Иначе
		
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	СкладПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СкладПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.Склад)
		И ВестиУчетПоНаправлениямДеятельности
		И НЕ ЗначениеЗаполнено(Объект.НаправлениеДеятельности) Тогда
		
		ОбновитьЗначениеНаправленияДеятельности();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗначениеНаправленияДеятельности()				
	Объект.НаправлениеДеятельности = ОбщийМодульСервер.ОпределитьНаправлениеДеятельности(, , Объект.Организация, , Объект.Склад, Объект.Сотрудник);	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбработатьБлокировку();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьДокументНаКлиенте()
	
	Объект.ТовараВКоличестве = Объект.Товары.Итог("Количество");
	Объект.ТовараНаСумму 	 = 0;
	Объект.Поставщик = ПредопределенноеЗначение("Справочник.Поставщики.ПустаяСсылка");
	Объект.Договор   = ПредопределенноеЗначение("Справочник.Договора.ПустаяСсылка");
	
	Для Каждого СтрокаПредложения Из Объект.Предложения Цикл
		Если СтрокаПредложения.Тендер Тогда
			Объект.ТовараНаСумму = СтрокаПредложения.Сумма;
			Объект.Поставщик = СтрокаПредложения.Поставщик;
			Объект.Договор = СтрокаПредложения.Договор;
			Если Объект.ДатаПоставки = '00010101000000' Тогда
				Объект.ДатаПоставки = СтрокаПредложения.ДатаПоставки;
			КонецЕсли;
			Если НЕ Объект.СтатусТендера = ПредопределенноеЗначение("Перечисление.СтатусыТендеров.Состоялся") Тогда
				Объект.СтатусТендера = ПредопределенноеЗначение("Перечисление.СтатусыТендеров.Состоялся")
			КонецЕсли;
			
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредложенияПриИзменении(Элемент)
	ПересчитатьДокументНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	ПересчитатьДокументНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	глПроверятьСообщения = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ПредложенияСуммаВВалютеПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Предложения.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекСтрока.Валюта) Тогда
		ТекСтрока.Валюта = Объект.Валюта;
		ТекСтрока.Курс = ОбновитьКурс(ТекСтрока.Валюта, Объект.Дата);
	КонецЕсли;
	
	Если ТекСтрока.Курс = 0 Тогда
		ТекСтрока.Курс = ОбновитьКурс(ТекСтрока.Валюта, Объект.Дата);
	КонецЕсли;
	ТекСтрока.Сумма = ОбщийМодульСервер.ПоКурсу(ТекСтрока.СуммаВВалюте, , ТекСтрока.Валюта, Объект.Дата, ТекСтрока.Курс);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредложенияВалютаПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Предложения.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекСтрока.Валюта) Тогда
		ТекСтрока.Валюта = Объект.Валюта;
		ТекСтрока.Курс = ОбновитьКурс(ТекСтрока.Валюта, Объект.Дата);
	КонецЕсли;
	
	Если ТекСтрока.Курс = 0 Тогда
		ТекСтрока.Курс = ОбновитьКурс(ТекСтрока.Валюта, Объект.Дата);
	КонецЕсли;
	ТекСтрока.Сумма = ОбщийМодульСервер.ПоКурсу(ТекСтрока.СуммаВВалюте, , ТекСтрока.Валюта, Объект.Дата, ТекСтрока.Курс);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредложенияКурсПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Предложения.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекСтрока.Валюта) Тогда
		ТекСтрока.Валюта = Объект.Валюта;
	КонецЕсли;
	
	Если ТекСтрока.Курс = 0 Тогда
		ТекСтрока.Курс = ОбновитьКурс(ТекСтрока.Валюта, Объект.Дата);
	КонецЕсли;
	ТекСтрока.Сумма = ОбщийМодульСервер.ПоКурсу(ТекСтрока.СуммаВВалюте, , ТекСтрока.Валюта, Объект.Дата, ТекСтрока.Курс);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредложенияСуммаПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Предложения.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекСтрока.Валюта) Тогда
		ТекСтрока.Валюта = Объект.Валюта;
		ТекСтрока.Курс = ОбновитьКурс(ТекСтрока.Валюта, Объект.Дата);
	КонецЕсли;
	
	Если ТекСтрока.Курс = 0 Тогда
		ТекСтрока.Курс = ОбновитьКурс(ТекСтрока.Валюта, Объект.Дата);
	КонецЕсли;
	ТекСтрока.СуммаВВалюте = ОбщийМодульСервер.ПоКурсу(ТекСтрока.Сумма, ТекСтрока.Валюта, , Объект.Дата, ТекСтрока.Курс);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредложенияТендерПриИзменении(Элемент)
	
	Если Элементы.Предложения.ТекущиеДанные.Тендер Тогда
		Элементы.Предложения.ТекущиеДанные.Тендер = ПредложенияТендерПриИзмененииНаСервере(Элементы.Предложения.ТекущаяСтрока);	
	Иначе
		Объект.Поставщик = ПредопределенноеЗначение("Справочник.Поставщики.ПустаяСсылка");
		Объект.Договор = ПредопределенноеЗначение("Справочник.Договора.ПустаяСсылка");
	КонецЕсли;
	
	Элементы.РезультатыТендера.Видимость = ЗначениеЗаполнено(Объект.Поставщик);
	
КонецПроцедуры

&НаСервере
Функция   ПредложенияТендерПриИзмененииНаСервере(Знач НомерСтроки)
	
	ЭтаСтрокаТендера = Объект.Предложения[НомерСтроки];
	Если НЕ ЗначениеЗаполнено(ЭтаСтрокаТендера.Поставщик) Тогда
		Возврат ЛОЖЬ;
	Иначе
		Объект.Поставщик = ЭтаСтрокаТендера.Поставщик;
		Объект.Договор = ЭтаСтрокаТендера.Договор;
		Объект.ДатаПоставки = ЭтаСтрокаТендера.ДатаПоставки;
	КонецЕсли;
	
	СчетчикПредложений = 0;
	Для Каждого СтрокаПредложения Из Объект.Предложения Цикл
		Если СтрокаПредложения.Тендер
			И НЕ СчетчикПредложений = НомерСтроки Тогда
			
			СтрокаПредложения.Тендер = ЛОЖЬ;
		КонецЕсли;
		СчетчикПредложений = СчетчикПредложений + 1;
	КонецЦикла;
	
	Возврат ИСТИНА;
	
КонецФункции
