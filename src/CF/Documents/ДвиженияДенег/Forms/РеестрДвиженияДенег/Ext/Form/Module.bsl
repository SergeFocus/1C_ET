//sza140619-1559  
//sza140619-1318  
&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	ХранилищеДенегПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)	
	
	ДатаОкончания = Дата;	
	ХранилищеДенегПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПриход(Команда)	
	
	ДобавитьСтрокуНаСервере();		
	ЭтаФорма.ТекущийЭлемент = Элементы.РеестрДвиженияДенег;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуНаСервере(Знач ЭтоПриход = ИСТИНА)
	
	СтрокаДенег = РеестрДвиженияДенег.Добавить();
	СтрокаДенег.ПриходДенег = ЭтоПриход;
	ДатаПользователя = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
	Если началодня(дата) = НачалоДня(ДатаПользователя) Тогда
		СтрокаДенег.Дата 			 = ДатаПользователя;
	Иначе
		СтрокаДенег.Дата 			 = Дата;
	КонецЕсли;				
	СтрокаДенег.Организация 	 = Организация;
	СтрокаДенег.ХранилищеДенег   = ХранилищеДенег;
	СтрокаДенег.ФормаОплаты 	 = ФормаОплаты;
	СтрокаДенег.Валюта 			 = ?(ЗначениеЗаполнено(ХранилищеДенег), ХранилищеДенег.Валюта, Валюта);
	СтрокаДенег.Курс 			 = ОбщийМодульПовтор.ПолучитьТекущийКурс(СтрокаДенег.Валюта, Дата);
	Элементы.РеестрДвиженияДенег.ТекущаяСтрока 	= СтрокаДенег.ПолучитьИдентификатор();
	Элементы.РеестрДвиженияДенег.ТекущийЭлемент = Элементы.РеестрДвиженияДенегСумма;		
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВсеДвижения(Команда)
	
	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Проведение документов.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
	ЗаписатьВсеДвиженияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВсеДвиженияНаСервере()
	
	Для Каждого СтрокаДенег Из РеестрДвиженияДенег Цикл
		
		Если НЕ СтрокаДенег.НельзяРедактироватьВТаблице Тогда
			
			ДокументДвиженияДенег = Неопределено;
			Если НЕ ЗначениеЗаполнено(СтрокаДенег.Ссылка) Тогда
				ДокументДвиженияДенег = Документы.ДвиженияДенег.СоздатьДокумент();
				
			ИначеЕсли СтрокаДенег.ВнесеныИзменения Тогда
				
				ДокументДвиженияДенег = СтрокаДенег.Ссылка.получитьОбъект();
			КонецЕсли;
			
			Если НЕ ДокументДвиженияДенег = Неопределено ТОгда
				ДокументДвиженияДенег.Дата 		  = СтрокаДенег.Дата;
				ДокументДвиженияДенег.Валюта 	  = СтрокаДенег.Валюта;
				ДокументДвиженияДенег.Договор 	  = СтрокаДенег.Договор;
				ДокументДвиженияДенег.ЕстьПриход  = СтрокаДенег.ПриходДенег;
				ДокументДвиженияДенег.ЕстьРасход  = НЕ СтрокаДенег.ПриходДенег;
				ДокументДвиженияДенег.Заказ 	  = СтрокаДенег.Заказ;
				ДокументДвиженияДенег.Комментарий = СтрокаДенег.Комментарий;
				ДокументДвиженияДенег.Курс 		  = СтрокаДенег.Курс;
				ДокументДвиженияДенег.Организация = СтрокаДенег.Организация;
				ДокументДвиженияДенег.Статья 	  = СтрокаДенег.Статья;
				ДокументДвиженияДенег.ПриходДенег = Строкаденег.ПриходДенег;
				ДокументДвиженияДенег.Сумма 	  = СтрокаДенег.Сумма;
				ДокументДвиженияДенег.СуммаПриход = ?(СтрокаДенег.ПриходДенег, СтрокаДенег.Сумма, 0);
				ДокументДвиженияДенег.СуммаРасход = ?(СтрокаДенег.ПриходДенег, 0, СтрокаДенег.Сумма);
				ДокументДвиженияДенег.ФормаОплаты = СтрокаДенег.ФормаОплаты;
				ДокументДвиженияДенег.КлиентПоставщик 	= СтрокаДенег.КлиентПоставщик;
				ДокументДвиженияДенег.ХранилищеДенег 	= СтрокаДенег.ХранилищеДенег;
				ДокументДвиженияДенег.НомерПлатежногоДокумента = СтрокаДенег.НомерПлатежногоДокумента;
				ДокументДвиженияДенег.ПодготовкаКПроведению(ЛОЖЬ);
				
				Попытка 
					ДокументДвиженияДенег.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
					СтрокаДенег.Ссылка = ДокументДвиженияДенег.Ссылка;
					СтрокаДенег.ВнесеныИзменения = ЛОЖЬ;
				Исключение 	
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В строке") + " " + СтрокаДенег.НомерСтроки + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ОписаниеОшибки();
					Сообщение.Сообщить();
					
				КонецПопытки;		
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Проведение документов.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
	ЗаписатьВсеДвиженияНаСервере();
	Закрыть();
	
КонецПроцедуры

&НаСервере
Функция   НетНеЗаписаных()
	
	Результат = ИСТИНА;
	
	Для Каждого СтрокаДенег Из РеестрДвиженияДенег Цикл
		Если СтрокаДенег.ВнесеныИзменения Тогда
			Результат = ЛОЖЬ;
			прервать;
		КонецЕсли;	
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьВидимостьКолонок()
	
	Элементы.РеестрДвиженияДенегДата.Видимость 							= НЕ ДатаНачала = ДатаОкончания ИЛИ ПоказатьДополнительныеКолонки;
	Элементы.РеестрДвиженияДенегХранилищеДенег.Видимость 				= ВестиУчетДенегВНесколькихХранилищах И ПоказатьДополнительныеКолонки;
	Элементы.РеестрДвиженияДенегФормаОплаты.Видимость 					= НЕ ВестиУчетДенегВНесколькихХранилищах И ПоказатьДополнительныеКолонки;
	Элементы.РеестрДвиженияДенегОрганизация.Видимость 					= ВестиУчетСобственныхЮридическихЛиц И ПоказатьДополнительныеКолонки;
	Элементы.РеестрДвиженияДенегНомерПлатежногоДокумента.Видимость 		= ПоказатьДополнительныеКолонки;
	Элементы.РеестрДвиженияДенегВнесеныИзменения.Видимость 				= ПоказатьДополнительныеКолонки;
	Элементы.РеестрДвиженияДенегСсылка.Видимость 						= ПоказатьДополнительныеКолонки;
	Элементы.РеестрДвиженияДенегНельзяРедактироватьВТаблице.Видимость 	= ПоказатьДополнительныеКолонки;
	Элементы.РеестрДвиженияДенегПриход.Видимость 						= ПоказатьДополнительныеКолонки;
	
КонецПроцедуры

Процедура ОбновитьОстатки()	
	
	текущийОстаток = ОбщийМодульСервер.ПолучитьОстатокДенег(Дата, ФормаОплаты, Валюта, ХранилищеДенег);
	ОбновитьЧтоПолучилось();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЧтоПолучилось()
	
	СуммаДвижений = 0;
	Для Каждого СтрокаДенег Из РеестрДвиженияДенег Цикл
		СуммаДвижений = СуммаДвижений + ?(СтрокаДенег.ПриходДенег, 1, -1) * (СтрокаДенег.Сумма * ?(СтрокаДенег.Курс = 0, 1, СтрокаДенег.Курс));	
	КонецЦикла;
	ОстатокСУчетомДвижений = текущийОстаток + СуммаДвижений;
	
	Элементы.СуммаДвижений.Видимость = Не СуммаДвижений = 0;
	Элементы.ОстатокСУчетомДвижений.Видимость = НЕ ОстатокСУчетомДвижений = 0;
	Элементы.НаименованиеОсновнойВалюты1.Видимость = НЕ ОстатокСУчетомДвижений =0 ИЛи Не СуммаДвижений = 0;
	
Конецпроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ НетНеЗаписаных()
		И НЕ Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Отменить все изменения?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		
		Отказ = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСпрятатьДополнительныеКолонки(Команда)
	
	ПоказатьДополнительныеКолонки = НЕ ПоказатьДополнительныеКолонки;
	ОбновитьВидимостьКолонок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Дата = ОбщийМодульКлиент.ПользователяТекущаяДата();
	КонецЕсли;
	
	ПрочитатьЗаПериодКлиент(ИСТИНА);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000890", ЭтаФорма, Отказ, );
	
	Если НЕ Отказ Тогда
		НаименованиеОсновнойВалюты 			= ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта").Наименование;
		ВестиУчетДенегВНесколькихХранилищах = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетДенегВНесколькихХранилищах");
		ВестиУчетСобственныхЮридическихЛиц  = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетСобственныхЮридическихЛиц");
		ВестиУчетВалют 						= ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетВалют");
		
		Если НЕ ЗначениеЗаполнено(Организация) Тогда
			Организация = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ОрганизацияПоУмолчанию");
		КонецЕсли;
		Если ЗначениеЗаполнено(ХранилищеДенег) Тогда
			ФормаОплаты = ХранилищеДенег.ФормаОплаты;
			Валюта 		= ХранилищеДенег.Валюта;
		Иначе
			Валюта 		= ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ФормаОплаты) Тогда
			ФормаОплаты = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ФормаОплатыПоУмолчанию");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Дата) Тогда
			Дата = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
			ДатаНачала 		= НачалоДня(Дата);
			ДатаОкончания   = Дата
		КонецЕсли;
		
		ОбновитьОстатки();	
		ПрочитатьЗаПериодНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьЗаПериод(Команда)	
	ПрочитатьЗаПериодКлиент();	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьЗаПериодКлиент(Знач БезВыбораПериода = ЛОЖЬ)
	
	Если НетНеЗаписаных()
		ИЛИ Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Отменить все изменения?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		
		Если НЕ БезВыбораПериода тогда
			КомандыВопроса = Новый Массив(2, 3);
			КомандыВопроса[0][0] = "OK";
			КомандыВопроса[0][1] = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Готово");
			КомандыВопроса[0][2] = "Результат = Новый Структура(""ДатаНачала, ДатаОкончания"", ВыбранныйПериод.ДатаНачала, ВыбранныйПериод.ДатаОкончания);";
			КомандыВопроса[1][0] = "НЕТ";
			КомандыВопроса[1][1] = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Отмена");
			КомандыВопроса[1][2] = "Результат = Неопределено;";
			ПараметрыФормы = Новый Структура("СтруктураКнопокИПоведения", КомандыВопроса);
			ПараметрыФормы.Вставить("ЗаголовокФормы", "");
			ПараметрыФормы.Вставить("ЭтоВыборПериода", ИСТИНА);
			ПараметрыФормы.Вставить("ДатаНачала", ДатаНачала);
			ПараметрыФормы.Вставить("ДатаОкончания", ДатаОкончания);
			ПараметрыФормы.Вставить("ТекстВопроса", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите период движений денег?"));
			ФормаВопроса = ПолучитьФорму("ОбщаяФорма.ФормаВопроса", ПараметрыФормы);
			ОтветПользователя = ФормаВопроса.ОткрытьМодально();
			Если НЕ ОтветПользователя = Неопределено Тогда
				ДатаНачала 		= ОтветПользователя.ДатаНачала;
				ДатаОкончания 	= ОтветПользователя.ДатаОкончания;
				ПрочитатьЗаПериодНаСервере();
				Дата = ДатаОкончания;
			КонецЕсли;
			
		Иначе
			ПрочитатьЗаПериодНаСервере();
			Дата = ДатаОкончания;
		КонецЕсли;
		
		ОбновитьЧтоПолучилось();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьЗаПериодНаСервере()
	
	РеестрДвиженияДенег.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДвиженияДенег.Ссылка,
	|	ДвиженияДенег.Дата,
	|	ДвиженияДенег.Валюта,
	|	ДвиженияДенег.ВНесколькоСтрок,
	|	ДвиженияДенег.Договор,
	|	ДвиженияДенег.Заказ,
	|	ДвиженияДенег.КлиентПоставщик,
	|	ДвиженияДенег.Комментарий,
	|	ДвиженияДенег.Курс,
	|	ДвиженияДенег.НачислениеИВыплатаЗаработнойПлаты,
	|	ДвиженияДенег.ОбменВалют,
	|	ДвиженияДенег.Организация,
	|	ДвиженияДенег.ПриходДенег,
	|	ДвиженияДенег.Статья,
	|	ДвиженияДенег.Сумма,
	|	ДвиженияДенег.ФормаОплаты,
	|	ДвиженияДенег.ХранилищеДенег,
	|	ДвиженияДенег.НомерПлатежногоДокумента
	|ИЗ
	|	Документ.ДвиженияДенег КАК ДвиженияДенег
	|ГДЕ
	|	ДвиженияДенег.Проведен = ИСТИНА
	|	И ДвиженияДенег.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И (&НетОрганизация
	|			ИЛИ ДвиженияДенег.Организация = &Организация)
	|	И (&НетХранилищеДенег ИЛИ ДвиженияДенег.ХранилищеДенег = &ХранилищеДенег)
	|	И (&НетВалюта ИЛИ ДвиженияДенег.Валюта = &Валюта)
	|	И (&НетФормаОплаты ИЛИ ДвиженияДенег.ФормаОплаты = &ФормаОплаты)";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("НетОрганизация", не ВестиУчетСобственныхЮридическихЛиц или не ЗначениеЗаполнено(Организация));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НетВалюта", не ВестиУчетВалют или НЕ ЗначениеЗаполнено(Валюта));
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.УстановитьПараметр("НетХранилищеДенег", не ВестиУчетДенегВНесколькихХранилищах или НЕ ЗначениеЗаполнено(ХранилищеДенег));
	Запрос.УстановитьПараметр("ХранилищеДенег", ХранилищеДенег);
	Запрос.УстановитьПараметр("НетФормаОплаты", ВестиУчетДенегВНесколькихХранилищах или не ЗначениеЗаполнено(ФормаОплаты ));
	Запрос.УстановитьПараметр("ФормаОплаты", ФормаОплаты);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокаДенег = РеестрДвиженияДенег.Добавить();
		
		СтрокаДенег.Ссылка 			= ВыборкаДетальныеЗаписи.Ссылка;
		СтрокаДенег.Дата 			= ВыборкаДетальныеЗаписи.Дата;
		СтрокаДенег.Валюта 			= ВыборкаДетальныеЗаписи.Валюта;
		СтрокаДенег.Договор 		= ВыборкаДетальныеЗаписи.Договор;
		СтрокаДенег.Заказ 			= ВыборкаДетальныеЗаписи.Заказ;
		СтрокаДенег.КлиентПоставщик = ВыборкаДетальныеЗаписи.КлиентПоставщик;
		СтрокаДенег.Комментарий 	= ВыборкаДетальныеЗаписи.Комментарий;
		СтрокаДенег.Курс 			= ВыборкаДетальныеЗаписи.Курс;
		СтрокаДенег.Организация 	= ВыборкаДетальныеЗаписи.Организация;
		СтрокаДенег.ПриходДенег 	= ВыборкаДетальныеЗаписи.ПриходДенег;
		СтрокаДенег.Статья 			= ВыборкаДетальныеЗаписи.Статья;
		СтрокаДенег.Сумма 			= ВыборкаДетальныеЗаписи.Сумма;
		СтрокаДенег.ФормаОплаты 	= ВыборкаДетальныеЗаписи.ФормаОплаты;
		СтрокаДенег.ХранилищеДенег 	= ВыборкаДетальныеЗаписи.ХранилищеДенег;
		СтрокаДенег.НомерПлатежногоДокумента = ВыборкаДетальныеЗаписи.НомерПлатежногоДокумента;
		
		СтрокаДенег.ВнесеныИзменения = ЛОЖЬ;
		Если ВыборкаДетальныеЗаписи.ВНесколькоСтрок
			ИЛИ ВыборкаДетальныеЗаписи.НачислениеИВыплатаЗаработнойПлаты
			ИЛИ ВыборкаДетальныеЗаписи.ОбменВалют Тогда
			
			СтрокаДенег.НельзяРедактироватьВТаблице = ИСТИНА;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура РеестрДвиженияДенегВалютаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РеестрДвиженияДенег.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Валюта) Тогда
		ТекущиеДанные.Курс = ОбщийМодульПовтор.ПолучитьТекущийКурс(ТекущиеДанные.Валюта, Дата);
		ОбновитьЧтоПолучилось();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеестрДвиженияДенегКурсПриИзменении(Элемент)
	ОбновитьЧтоПолучилось();
КонецПроцедуры

&НаКлиенте
Процедура РеестрДвиженияДенегПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.РеестрДвиженияДенег.ТекущиеДанные;
	Если НЕ ТекущиеДанные.НельзяРедактироватьВТаблице Тогда
		Если НоваяСтрока Тогда
			ДатаПользователя = ОбщийМодульКлиент.ПользователяТекущаяДата();
			Если началодня(дата) = НачалоДня(ДатаПользователя) Тогда
				ТекущиеДанные.Дата 			 = ДатаПользователя;
			Иначе
				ТекущиеДанные.Дата 			 = Дата;
			КонецЕсли;			
			ТекущиеДанные.Организация 	 = Организация;
			ТекущиеДанные.ХранилищеДенег = ХранилищеДенег;
			ТекущиеДанные.ФормаОплаты 	 = ФормаОплаты;
			ТекущиеДанные.Валюта 	     = ?(ЗначениеЗаполнено(ХранилищеДенег), ОбщийМодульКлиент.ПолучитьЗначениеРеквизита(ХранилищеДенег, "Валюта"), Валюта);
			ТекущиеДанные.Курс 			 = ОбщийМодульПовтор.ПолучитьТекущийКурс(ТекущиеДанные.Валюта, Дата);
		КонецЕсли;
		ТекущиеДанные.ВнесеныИзменения = ИСТИНА;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеестрДвиженияДенегСуммаПриИзменении(Элемент)
	ОбновитьЧтоПолучилось();
КонецПроцедуры

&НаКлиенте
Процедура ФормаОплатыПриИзменении(Элемент)
	ХранилищеДенегПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ХранилищеДенегПриИзменении(Элемент)
	ХранилищеДенегПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ХранилищеДенегПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(ХранилищеДенег) Тогда
		ФормаОплаты = ХранилищеДенег.ФормаОплаты;
		Валюта 		= ХранилищеДенег.Валюта;
	КонецЕсли;
	текущийОстаток = ОбщийМодульСервер.ПолучитьОстатокДенег(Дата, ФормаОплаты, Валюта, ХранилищеДенег);
	ОбновитьЧтоПолучилось();
	
КонецПроцедуры



