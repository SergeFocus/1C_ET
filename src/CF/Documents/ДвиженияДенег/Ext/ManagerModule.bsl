// sza150602-1728 получ представл
// sza131203-0420  
// sza130909-2142 :
Процедура Ведомость(ТабДок, Ссылка) Экспорт
	
	ТабДок.ИмяПараметровПечати  = "ДокДвижениеДенегВедомость" + СокрЛП(ИмяКомпьютера());
	ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	
	ТабДок.Очистить();
	
	СсылкаНаОбъектПечати = Ссылка[0];
	
	РазрядМетаданных = ""; ИмяМетаданных = "";
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(Перечисления.ВидыПечатныхФорм.ДвижениеДенег, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ТабДок = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ТабДок, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		
	Иначе		
		Макет = Документы.ДвиженияДенег.ПолучитьМакет("Ведомость");
		Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ДвиженияДенег.Дата,
		|	ДвиженияДенег.Комментарий,
		|	ДвиженияДенег.Номер,
		|	ДвиженияДенег.Сумма,
		|	ДвиженияДенег.ФормаОплаты,
		|	ДвиженияДенег.Зарплата.(
		|		Ссылка,
		|		НомерСтроки,
		|		Сотрудник,
		|		ВидНачисления,
		|		Размер,
		|		Количество,
		|		СуммаНачисления,
		|		ВалютаНачисления,
		|		Курс,
		|		Сумма,
		|		Валюта,
		|		ДатаНачала,
		|		ДатаОкончания,
		|		Комментарий,
		|		ХранилищеДенег
		|	),
		|	ДвиженияДенег.ХранилищеДенег
		|ИЗ Документ.ДвиженияДенег КАК ДвиженияДенег
		|ГДЕ ДвиженияДенег.Ссылка В(&Ссылка)";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
		Шапка 				= Макет.ПолучитьОбласть("Шапка");
		ОбластьШапкаСотрудника = Макет.ПолучитьОбласть("ШС");
		ОбластьСотрудник	= Макет.ПолучитьОбласть("С");
		Подвал 				= Макет.ПолучитьОбласть("Подвал");
		ОбластьЗарплата 	= Макет.ПолучитьОбласть("Зарплата");
		ОбластьЗарплатаШапка= Макет.ПолучитьОбласть("ЗарплатаШапка");
		
		ОсновнаяВалюта = Справочники.Валюты.ОсновнаяВалюта ;
		СтруктураДополнительныПараметровМакета 				= ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
		Шапка.Параметры.ТекстВШапкеДокументовПриПечати   	= СтруктураДополнительныПараметровМакета.ТекстВШапкеДокументовПриПечати;
		Подвал.Параметры.ТекстВПодвалеДокументовПриПечати 	= СтруктураДополнительныПараметровМакета.ТекстВПодвалеДокументовПриПечати;
		
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		Пока Выборка.Следующий() Цикл
			
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
			ТабДок.Вывести(ОбластьЗаголовок);
			
			Шапка.Параметры.Заполнить(Выборка);
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗарплатаШапка);
			ТабДок.Вывести(ОбластьЗарплатаШапка);
			
			ТаблицаПоСотрудникам = Новый ТаблицаЗначений;
			ТаблицаПоСотрудникам.колонки.Добавить("Сотрудник");
			ТаблицаПоСотрудникам.колонки.Добавить("СуммаНачисления");
			ТаблицаПоСотрудникам.колонки.Добавить("Сумма");
			
			ВыборкаЗарплата = Выборка.Зарплата.Выбрать();
			Пока ВыборкаЗарплата.Следующий() Цикл
				ОбластьЗарплата.Параметры.Заполнить(ВыборкаЗарплата);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗарплата);
				ТабДок.Вывести(ОбластьЗарплата, ВыборкаЗарплата.Уровень());
				
				строкапосотруднику = ТаблицаПоСотрудникам.Добавить();
				строкапосотруднику.сотрудник 		= ВыборкаЗарплата.сотрудник;
				строкапосотруднику.СуммаНачисления 	= ОбщийМодульСервер.ПоКурсу(ВыборкаЗарплата.СуммаНачисления, , ВыборкаЗарплата.ВалютаНачисления, Выборка.Дата);
				строкапосотруднику.Сумма 			= ОбщийМодульСервер.ПоКурсу(ВыборкаЗарплата.Сумма, , ВыборкаЗарплата.Валюта, Выборка.Дата);
			КонецЦикла;		
			
			Если НЕ ТаблицаПоСотрудникам.Количество() = 0 Тогда
				
				ТаблицаПоСотрудникам.Свернуть("Сотрудник", "СуммаНачисления, Сумма");
				ТаблицаПоСотрудникам.Сортировать("Сотрудник");
				
				ТаблицаПоСотрудникам.колонки.Добавить("Остаток");
				
				ОбластьШапкаСотрудника.Параметры.ОсновнаяВалюта = ОсновнаяВалюта;
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьШапкаСотрудника);
				ТабДок.Вывести(ОбластьШапкаСотрудника);                         	
				
				Для Каждого строкапосотруднику Из ТаблицаПоСотрудникам Цикл
					строкапосотруднику.остаток = строкапосотруднику.СуммаНачисления - строкапосотруднику.Сумма;
					ОбластьСотрудник.Параметры.Заполнить(строкапосотруднику);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьСотрудник);
					ТабДок.Вывести(ОбластьСотрудник);
				КонецЦикла;
			КонецЕсли;
			
			Подвал.Параметры.Заполнить(Выборка);
			Подвал.Параметры.валюта = ОсновнаяВалюта;
			Если ЗначениеЗаполнено(Выборка.ХранилищеДенег) Тогда
				Подвал.Параметры.ФормаОплаты = Выборка.ХранилищеДенег;
			КонецЕсли;
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
			ТабДок.Вывести(Подвал);
			
			ВставлятьРазделительСтраниц = ИСТИНА;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьДокумента(ТабДок, Ссылка) Экспорт
	
	ТабДок.ИмяПараметровПечати  = "ДокДвижениеДенег" + СокрЛП(ИмяКомпьютера());
	ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	
	ТабДок.Очистить();
	
	СсылкаНаОбъектПечати = Ссылка[0];
	
	РазрядМетаданных = ""; ИмяМетаданных = "";
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(Перечисления.ВидыПечатныхФорм.Ведомость, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ТабДок = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ТабДок, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		
	Иначе		
		Макет = Документы.ДвиженияДенег.ПолучитьМакет("Печать");
		ЯзыкДокументов = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(ССылка[0].КлиентПоставщик, , ЛОЖЬ);	
		Макет.КодЯзыкаМакета = ЯзыкДокументов.Код;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ДвиженияДенег.Дата,
		|	ДвиженияДенег.КлиентПоставщик,
		|	ДвиженияДенег.ПриходДенег,
		|	ДвиженияДенег.Статья,
		|	ДвиженияДенег.Сумма,
		|	ДвиженияДенег.ФормаОплаты,
		|	ДвиженияДенег.Комментарий,
		|	ДвиженияДенег.Валюта,
		|	ДвиженияДенег.ОбменВалют,
		|	ДвиженияДенег.Курс,
		|	ДвиженияДенег.СуммаОбмена,
		|	ДвиженияДенег.ВалютаОбмена,
		|	ДвиженияДенег.КурсОбмена,
		|	ДвиженияДенег.Ответственный,
		|	ДвиженияДенег.ДатаСоздания,
		|	ДвиженияДенег.ДатаРедакции,
		|	ДвиженияДенег.НачислениеИВыплатаЗаработнойПлаты,
		|	ДвиженияДенег.Платежи.(
		|		Ссылка,
		|		НомерСтроки,
		|		ПриходИлиРасход,
		|		Сумма,
		|		Валюта,
		|		Курс,
		|		Статья,
		|		ФормаОплаты,
		|		ХранилищеДенег,
		|		Заказ
		|	),
		|	ДвиженияДенег.Зарплата.(
		|		Ссылка,
		|		НомерСтроки,
		|		Сотрудник,
		|		ВидНачисления,
		|		Размер,
		|		Количество,
		|		СуммаНачисления,
		|		ВалютаНачисления,
		|		Курс,
		|		Сумма,
		|		Валюта,
		|		ДатаНачала,
		|		ДатаОкончания,
		|		КлиентПоставщик,
		|		Комментарий,
		|		ХранилищеДенег
		|	),
		|	ДвиженияДенег.Организация,
		|	ДвиженияДенег.Договор,
		|	ДвиженияДенег.ХранилищеДенег,
		|	ДвиженияДенег.Заказ,
		|	ДвиженияДенег.Номер
		|ИЗ Документ.ДвиженияДенег КАК ДвиженияДенег
		|ГДЕ ДвиженияДенег.Ссылка В(&Ссылка)";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		Шапка 	  = Макет.ПолучитьОбласть("Шапка");
		ОбластьПШ = Макет.ПолучитьОбласть("Ш");
		ОбластьПС = Макет.ПолучитьОбласть("С");
		
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			Если ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВестиУчетСобственныхЮридическихЛицПС")
				И ЗначениеЗаполнено(Выборка.Организация) Тогда
				
				ОбщийМодульСервер.ДобавитьШапкуОрганизации(ТабДок, Выборка.Организация, ЯзыкДокументов);
			КонецЕсли;
			
			Если Выборка.НачислениеИВыплатаЗаработнойПлаты Тогда 			
				ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Начисление, расчет и выдача Заработной платы", ЯзыкДокументов)
			Иначе
				
				Если Выборка.ОбменВалют Тогда
					ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Обмен валют", ЯзыкДокументов);
					ТекстОбменВалют = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на", ЯзыкДокументов) + " " + Выборка.СуммаОбмена + " " + Выборка.ВалютаОбмена;
				Иначе			
					ИмяДокумента = ?(Выборка.ПриходДенег, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поступление денег", ЯзыкДокументов), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Расход денег", ЯзыкДокументов));
					ТекстОбменВалют = "";
				КонецЕсли;	
			КонецЕсли;
			
			ОбластьЗаголовок.Параметры.ИмяДокумента = ИмяДокумента;
			ТабДок.Вывести(ОбластьЗаголовок);
			
			Шапка.Параметры.Заполнить(Выборка);
			Если ЗначениеЗаполнено(Выборка.КлиентПоставщик) Тогда
				Если ТипЗнч(Выборка.КлиентПоставщик) = Тип("СправочникСсылка.Клиенты") Тогда
					Шапка.Параметры.КлиентЗаголовок  = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Клиент", ЯзыкДокументов) + ": ";
				Иначе
					Шапка.Параметры.КлиентЗаголовок  = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поставщик", ЯзыкДокументов) + ": ";
				КонецЕсли;
				
				Шапка.Параметры.КлиентПоставщик = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Выборка.КлиентПоставщик, ЯзыкДокументов);
				
			Иначе
				Шапка.Параметры.КлиентПоставщик  = "";
				Шапка.Параметры.КлиентЗаголовок  = "";
			КонецЕсли;
			
			Если НЕ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетВалют") Тогда
				Шапка.Параметры.Валюта = "";
			КонецЕсли;
			
			Шапка.Параметры.ТекстОбменВалют = ТекстОбменВалют;
			
			СтруктураДополнительныПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
			Если НЕ ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВестиУчетСобственныхЮридическихЛицПС")
				ИЛИ не ЗначениеЗаполнено(Выборка.Организация) Тогда
				
				Шапка.Параметры.ТекстВШапкеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВШапкеДокументовПриПечати;	
			Иначе
				Шапка.Параметры.ТекстВШапкеДокументовПриПечати = "";
			КонецЕсли;
			Шапка.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВПодвалеДокументовПриПечати;
			
			ХранилищеДенег = Выборка.ХранилищеДенег;
			Если ЗначениеЗаполнено(ХранилищеДенег) Тогда
				Шапка.Параметры.ФормаОплаты = ХранилищеДенег;
			КонецЕсли;
			
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			
			ВыборкаС = Выборка.платежи.Выбрать();
			Если НЕ ВыборкаС.количество() = 0 Тогда
				ТабДок.Вывести(ОбластьПШ);
				
				Пока ВыборкаС.Следующий() Цикл
					
					ОбластьПС.Параметры.Заполнить(ВыборкаС);
					ХранилищеДенег = ВыборкаС.ХранилищеДенег;
					Если ЗначениеЗаполнено(ХранилищеДенег) Тогда
						ОбластьПС.Параметры.ФормаОплаты = ХранилищеДенег;
					КонецЕсли;
					
					ТабДок.Вывести(ОбластьПС, ВыборкаС.Уровень());
				КонецЦикла;
			КонецЕсли;
			
			ВставлятьРазделительСтраниц = ИСТИНА;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	ДанныеСсылка  = Данные.Ссылка;
	Представление = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(ДанныеСсылка.ВидДокумента) + " " + ДанныеСсылка.Номер + " - " + формат(ДанныеСсылка.Дата, "ДФ='dd.MM.yy ЧЧ:мм'");
	СтандартнаяОбработка = ЛОЖЬ;
	
КонецПроцедуры
