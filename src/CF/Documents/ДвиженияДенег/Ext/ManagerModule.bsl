// sza150602-1728
// sza131203-0420
// sza130909-2142 :

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

	Процедура Ведомость(ДокументДляПечати, Ссылка) Экспорт

		ДокументДляПечати.ИмяПараметровПечати  = "ДокДвижениеДенегВедомость" + СокрЛП(ИмяКомпьютера());
		ДокументДляПечати.КлючПараметровПечати = ДокументДляПечати.ИмяПараметровПечати;
		ДокументДляПечати.Очистить();
		СсылкаНаОбъектПечати = Ссылка[0];
		РазрядМетаданных = ""; ИмяМетаданных = "";
		ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(Перечисления.ВидыПечатныхФорм.ДвижениеДенег, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);

		Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
			ДокументДляПечати = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ДокументДляПечати, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		Иначе
			Макет = Документы.ДвиженияДенег.ПолучитьМакет("Ведомость");
			Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();

			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ДвиженияДенег.Дата,
			|	ВЫРАЗИТЬ(ДвиженияДенег.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
			|	ДвиженияДенег.Номер,
			|	ДвиженияДенег.Сумма,
			|	ДвиженияДенег.ФормаОплаты,
			|	ДвиженияДенег.Зарплата.(
			|		Ссылка,
			|		НомерСтроки,
			|		Сотрудник,
			|		ВидНачисления,
			|		Размер,
			|		Количество,
			|		СуммаНачисления,
			|		ВалютаНачисления,
			|		Курс,
			|		Сумма,
			|		Валюта,
			|		ДатаНачала,
			|		ДатаОкончания,
			|		Комментарий,
			|		ХранилищеДенег
			|	),
			|	ДвиженияДенег.ХранилищеДенег
			|ИЗ Документ.ДвиженияДенег КАК ДвиженияДенег
			|ГДЕ ДвиженияДенег.Ссылка В(&Ссылка)";
			Запрос.Параметры.Вставить("Ссылка", Ссылка);

			Выборка = Запрос.Выполнить().Выбрать();
			ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
			Шапка 				= Макет.ПолучитьОбласть("Шапка");
			ОбластьШапкаСотрудника = Макет.ПолучитьОбласть("ШС");
			ОбластьСотрудник	= Макет.ПолучитьОбласть("С");
			Подвал 				= Макет.ПолучитьОбласть("Подвал");
			ОбластьЗарплата 	= Макет.ПолучитьОбласть("Зарплата");
			ОбластьЗарплатаШапка= Макет.ПолучитьОбласть("ЗарплатаШапка");
			ОсновнаяВалюта = Справочники.Валюты.ОсновнаяВалюта ;
			СтруктураДополнительныхПараметровМакета 			= ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
			Шапка.Параметры.ТекстВШапкеДокументовПриПечати   	= СтруктураДополнительныхПараметровМакета.ТекстВШапкеДокументовПриПечати;
			Подвал.Параметры.ТекстВПодвалеДокументовПриПечати 	= СтруктураДополнительныхПараметровМакета.ТекстВПодвалеДокументовПриПечати;
			ВставлятьРазделительСтраниц = ЛОЖЬ;

			Пока Выборка.Следующий() Цикл
				Если ВставлятьРазделительСтраниц Тогда
					ДокументДляПечати.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;

				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
				ДокументДляПечати.Вывести(ОбластьЗаголовок);
				Шапка.Параметры.Заполнить(Выборка);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
				ДокументДляПечати.Вывести(Шапка, Выборка.Уровень());
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗарплатаШапка);
				ДокументДляПечати.Вывести(ОбластьЗарплатаШапка);
				ТаблицаПоСотрудникам = Новый ТаблицаЗначений;
				ТаблицаПоСотрудникам.Колонки.Добавить("Сотрудник");
				ТаблицаПоСотрудникам.Колонки.Добавить("СуммаНачисления");
				ТаблицаПоСотрудникам.Колонки.Добавить("Сумма");
				ВыборкаЗарплата = Выборка.Зарплата.Выбрать();

				Пока ВыборкаЗарплата.Следующий() Цикл
					ОбластьЗарплата.Параметры.Заполнить(ВыборкаЗарплата);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗарплата);
					ДокументДляПечати.Вывести(ОбластьЗарплата, ВыборкаЗарплата.Уровень());
					СтрокаПоСотруднику = ТаблицаПоСотрудникам.Добавить();
					СтрокаПоСотруднику.Сотрудник 		= ВыборкаЗарплата.Сотрудник;
					СтрокаПоСотруднику.СуммаНачисления 	= ОбщийМодульСервер.ПоКурсу(ВыборкаЗарплата.СуммаНачисления, , ВыборкаЗарплата.ВалютаНачисления, Выборка.Дата);
					СтрокаПоСотруднику.Сумма 			= ОбщийМодульСервер.ПоКурсу(ВыборкаЗарплата.Сумма, , ВыборкаЗарплата.Валюта, Выборка.Дата);
				КонецЦикла;

				Если НЕ ТаблицаПоСотрудникам.Количество() = 0 Тогда
					ТаблицаПоСотрудникам.Свернуть("Сотрудник", "СуммаНачисления, Сумма");
					ТаблицаПоСотрудникам.Сортировать("Сотрудник");
					ТаблицаПоСотрудникам.Колонки.Добавить("Остаток");
					ОбластьШапкаСотрудника.Параметры.ОсновнаяВалюта = ОсновнаяВалюта;
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьШапкаСотрудника);
					ДокументДляПечати.Вывести(ОбластьШапкаСотрудника);

					Для Каждого СтрокаПоСотруднику Из ТаблицаПоСотрудникам Цикл
						СтрокаПоСотруднику.остаток = СтрокаПоСотруднику.СуммаНачисления - СтрокаПоСотруднику.Сумма;
						ОбластьСотрудник.Параметры.Заполнить(СтрокаПоСотруднику);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьСотрудник);
						ДокументДляПечати.Вывести(ОбластьСотрудник);

					КонецЦикла;
				КонецЕсли;

				Подвал.Параметры.Заполнить(Выборка);
				Подвал.Параметры.Валюта = ОсновнаяВалюта;
				Если ЗначениеЗаполнено(Выборка.ХранилищеДенег) Тогда
					Подвал.Параметры.ФормаОплаты = Выборка.ХранилищеДенег;
				КонецЕсли;

				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
				ДокументДляПечати.Вывести(Подвал);
				ВставлятьРазделительСтраниц = ИСТИНА;
			КонецЦикла;
		КонецЕсли;

	КонецПроцедуры

	Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)

		ДанныеСсылка  = Данные.Ссылка;
		Представление = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(ДанныеСсылка.ВидДокумента) + " " + ДанныеСсылка.Номер + " - " + формат(ДанныеСсылка.Дата, "ДФ='dd.MM.yy ЧЧ:мм'");
		СтандартнаяОбработка = ЛОЖЬ;

	КонецПроцедуры

	Процедура ПечатьДокумента(ДокументДляПечати, Ссылка) Экспорт

		ДокументДляПечати.ИмяПараметровПечати  = "ДокДвижениеДенег" + СокрЛП(ИмяКомпьютера());
		ДокументДляПечати.КлючПараметровПечати = ДокументДляПечати.ИмяПараметровПечати;
		ДокументДляПечати.Очистить();
		СсылкаНаОбъектПечати = Ссылка[0];
		РазрядМетаданных = ""; ИмяМетаданных = "";
		ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(Перечисления.ВидыПечатныхФорм.Ведомость, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);

		Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
			ДокументДляПечати = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ДокументДляПечати, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		Иначе
			Макет = Документы.ДвиженияДенег.ПолучитьМакет("Печать");
			ЯзыкДокументов = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(ССылка[0].КлиентПоставщик, , ЛОЖЬ);
			Макет.КодЯзыкаМакета = ЯзыкДокументов.Код;

			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ДвиженияДенег.Дата,
			|	ДвиженияДенег.КлиентПоставщик,
			|	ДвиженияДенег.ПриходДенег,
			|	ДвиженияДенег.Статья,
			|	ДвиженияДенег.Сумма,
			|	ДвиженияДенег.ФормаОплаты,
			|	ВЫРАЗИТЬ(ДвиженияДенег.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
			|	ДвиженияДенег.Валюта,
			|	ДвиженияДенег.ОбменВалют,
			|	ДвиженияДенег.Курс,
			|	ДвиженияДенег.СуммаОбмена,
			|	ДвиженияДенег.ВалютаОбмена,
			|	ДвиженияДенег.КурсОбмена,
			|	ДвиженияДенег.Ответственный,
			|	ДвиженияДенег.ДатаСоздания,
			|	ДвиженияДенег.ДатаРедакции,
			|	ДвиженияДенег.НачислениеИВыплатаЗаработнойПлаты,
			|	ДвиженияДенег.Платежи.(
			|		Ссылка,
			|		НомерСтроки,
			|		ПриходИлиРасход,
			|		Сумма,
			|		Валюта,
			|		Курс,
			|		Статья,
			|		ФормаОплаты,
			|		ХранилищеДенег,
			|		Заказ
			|	),
			|	ДвиженияДенег.Зарплата.(
			|		Ссылка,
			|		НомерСтроки,
			|		Сотрудник,
			|		ВидНачисления,
			|		Размер,
			|		Количество,
			|		СуммаНачисления,
			|		ВалютаНачисления,
			|		Курс,
			|		Сумма,
			|		Валюта,
			|		ДатаНачала,
			|		ДатаОкончания,
			|		КлиентПоставщик,
			|		Комментарий,
			|		ХранилищеДенег
			|	),
			|	ДвиженияДенег.Организация,
			|	ДвиженияДенег.Договор,
			|	ДвиженияДенег.ХранилищеДенег,
			|	ДвиженияДенег.Заказ,
			|	ДвиженияДенег.Номер
			|ИЗ Документ.ДвиженияДенег КАК ДвиженияДенег
			|ГДЕ ДвиженияДенег.Ссылка В(&Ссылка)";
			Запрос.Параметры.Вставить("Ссылка", Ссылка);

			Выборка = Запрос.Выполнить().Выбрать();
			ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
			Шапка 	  = Макет.ПолучитьОбласть("Шапка");
			ОбластьПШ = Макет.ПолучитьОбласть("Ш");
			ОбластьПС = Макет.ПолучитьОбласть("С");
			ВставлятьРазделительСтраниц = ЛОЖЬ;

			Пока Выборка.Следующий() Цикл
				Если ВставлятьРазделительСтраниц Тогда
					ДокументДляПечати.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;

				Если ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВестиУчетСобственныхЮридическихЛицПС")
					И ЗначениеЗаполнено(Выборка.Организация) Тогда

					ОбщийМодульСервер.ДобавитьШапкуОрганизации(ДокументДляПечати, Выборка.Организация, ЯзыкДокументов);
				КонецЕсли;

				Если Выборка.НачислениеИВыплатаЗаработнойПлаты Тогда
					ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Начисление, расчет и выдача Заработной платы", ЯзыкДокументов)
				Иначе
					Если Выборка.ОбменВалют Тогда

						ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Обмен валют", ЯзыкДокументов);
						ТекстОбменВалют = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на", ЯзыкДокументов) + " " + Выборка.СуммаОбмена + " " + Выборка.ВалютаОбмена;
					Иначе
						ИмяДокумента = ?(Выборка.ПриходДенег, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поступление денег", ЯзыкДокументов), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Расход денег", ЯзыкДокументов));
						ТекстОбменВалют = "";
					КонецЕсли;
				КонецЕсли;

				ОбластьЗаголовок.Параметры.ИмяДокумента = ИмяДокумента;
				ДокументДляПечати.Вывести(ОбластьЗаголовок);
				Шапка.Параметры.Заполнить(Выборка);
				Если ЗначениеЗаполнено(Выборка.КлиентПоставщик) Тогда
					Если ТипЗнч(Выборка.КлиентПоставщик) = Тип("СправочникСсылка.Клиенты") Тогда
						Шапка.Параметры.КлиентЗаголовок  = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Клиент", ЯзыкДокументов) + ": ";
					Иначе
						Шапка.Параметры.КлиентЗаголовок  = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поставщик", ЯзыкДокументов) + ": ";
					КонецЕсли;

					Шапка.Параметры.КлиентПоставщик = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Выборка.КлиентПоставщик, ЯзыкДокументов);
				Иначе
					Шапка.Параметры.КлиентПоставщик  = "";
					Шапка.Параметры.КлиентЗаголовок  = "";
				КонецЕсли;

				Если НЕ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетВалют") Тогда
					Шапка.Параметры.Валюта = "";
				КонецЕсли;

				Шапка.Параметры.ТекстОбменВалют = ТекстОбменВалют;
				СтруктураДополнительныхПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();

				Если НЕ ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВестиУчетСобственныхЮридическихЛицПС")
					ИЛИ НЕ ЗначениеЗаполнено(Выборка.Организация) Тогда

					Шапка.Параметры.ТекстВШапкеДокументовПриПечати = СтруктураДополнительныхПараметровМакета.ТекстВШапкеДокументовПриПечати;
				Иначе
					Шапка.Параметры.ТекстВШапкеДокументовПриПечати = "";
				КонецЕсли;

				Шапка.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныхПараметровМакета.ТекстВПодвалеДокументовПриПечати;
				ХранилищеДенег = Выборка.ХранилищеДенег;
				Если ЗначениеЗаполнено(ХранилищеДенег) Тогда
					Шапка.Параметры.ФормаОплаты = ХранилищеДенег;
				КонецЕсли;

				ДокументДляПечати.Вывести(Шапка, Выборка.Уровень());
				ВыборкаС = Выборка.платежи.Выбрать();
				Если НЕ ВыборкаС.количество() = 0 Тогда
					ДокументДляПечати.Вывести(ОбластьПШ);

					Пока ВыборкаС.Следующий() Цикл
						ОбластьПС.Параметры.Заполнить(ВыборкаС);
						ХранилищеДенег = ВыборкаС.ХранилищеДенег;
						Если ЗначениеЗаполнено(ХранилищеДенег) Тогда
							ОбластьПС.Параметры.ФормаОплаты = ХранилищеДенег;
						КонецЕсли;

						ДокументДляПечати.Вывести(ОбластьПС, ВыборкаС.Уровень());
					КонецЦикла;
				КонецЕсли;

				ВставлятьРазделительСтраниц = ИСТИНА;

			КонецЦикла;
		КонецЕсли;

	КонецПроцедуры

#КонецЕсли
