// sza140710-0154  
// sza140610-1702  
// sza140530-0346  
&НаКлиенте
Процедура ДополнительнаяИнформацияВидИнформацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура("ТипВладельца", ДопИнфоТипВладельца);
	ФормаВыбораВидаИнформации = ПолучитьФорму("Справочник.ДополнительныеРеквизиты.ФормаВыбора", ПараметрыФормы, ЭтаФорма);	
	ВидИнформации = ФормаВыбораВидаИнформации.ОткрытьМодально();
	Если ЗначениеЗаполнено(ВидИнформации) Тогда
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.ВидИнформации = ВидИнформации;
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.Информация = ОбщийМодульКлиент.ПолучитьЗначениеПоУмолчаниюПоляДополнительнойИнформации(ВидИнформации);
		СтандартнаяОбработка = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияПриИзменении(Элемент)
	ДопИнформацияИзменена = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДоходамиЗаПрошлыйПериод(Команда)
	
	Если Объект.ИтогоДоходов = 0 Тогда
		ЗаполнитьДоходамиЗаПрошлыйПериодФрагмент();
	Иначе
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьДоходамиЗаПрошлыйПериодЗавершение1", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Очистить таблицу планов доходов?"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДоходамиЗаПрошлыйПериодЗавершение1(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаполнитьДоходамиЗаПрошлыйПериодФрагмент();	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДоходамиЗаПрошлыйПериодФрагмент()
		
		Дата = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
		ПоказатьВводДаты(Новый ОписаниеОповещения("ЗаполнитьДоходамиЗаПрошлыйПериодЗавершение", ЭтаФорма, Новый Структура("Дата", Дата)), Дата, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите период заполнения") + ":", ЧастиДаты.Дата);	
		
	КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДоходамиЗаПрошлыйПериодЗавершение(Дата1, ДополнительныеПараметры) Экспорт
	
	Дата = ?(Дата1 = Неопределено, ДополнительныеПараметры.Дата, Дата1);	
	
	ЗаполнитьДоходамиЗаПрошлыйПериодНаСервере(Дата);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоходамиЗаПрошлыйПериодНаСервере(Знач Дата, Знач Приход = ИСТИНА)
	
	Если Приход Тогда
		Объект.ПланДохода.Очистить();
	Иначе
		Объект.ПланРасхода.Очистить();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ Деньги.Статья КАК СтатьяДвиженияДенег,
	|	Деньги.СуммаВВалюте КАК Сумма,
	|	Деньги.Валюта
	|ИЗ РегистрНакопления.Деньги КАК Деньги
	|ГДЕ Деньги.ВидДвижения = &ВидДвижения
	|	И Деньги.Период МЕЖДУ &ДатаНачала И &ДатаОкончания";
	
	Запрос.УстановитьПараметр("ВидДвижения", ?(Приход, ВидДвиженияНакопления.Приход, ВидДвиженияНакопления.Расход));
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		План = РезультатЗапроса.Выгрузить();
		План.Свернуть("СтатьяДвиженияДенег, Валюта", "Сумма");
		План.Колонки.Добавить("Курс");
		
		Для Каждого СтрокаПлана Из План Цикл
			СтрокаПлана.Курс = ОбщийМодульПовтор.ПолучитьТекущийКурс(СтрокаПлана.Валюта, Объект.Дата);	
		КонецЦикла;
		
		Если Приход Тогда
			Объект.ПланДохода.Загрузить(План);
		Иначе
			Объект.ПланРасхода.Загрузить(План);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРасходамиЗаПрошлыйПериод(Команда)
	
	Если Объект.ИтогоДоходов = 0 Тогда
		ЗаполнитьРасходамиЗаПрошлыйПериодФрагмент();
	Иначе
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьРасходамиЗаПрошлыйПериодЗавершение1", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Очистить таблицу планов расходов?"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРасходамиЗаПрошлыйПериодФрагмент()
	
	Дата = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
	ПоказатьВводДаты(Новый ОписаниеОповещения("ЗаполнитьРасходамиЗаПрошлыйПериодЗавершение", ЭтаФорма, Новый Структура("Дата", Дата)), Дата, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите период заполнения") + ":", ЧастиДаты.Дата);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРасходамиЗаПрошлыйПериодЗавершение1(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаполнитьРасходамиЗаПрошлыйПериодФрагмент();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРасходамиЗаПрошлыйПериодЗавершение(Дата1, ДополнительныеПараметры) Экспорт
	
	Дата = ?(Дата1 = Неопределено, ДополнительныеПараметры.Дата, Дата1);	
	
	ЗаполнитьДоходамиЗаПрошлыйПериодНаСервере(Дата, ЛОЖЬ);

КонецПроцедуры

&НаСервере
Процедура ОбработатьБлокировку(ПриСозданииФормы = ЛОЖЬ)
	
	Если ОбщийМодульСервер.ОбработатьБлокировку(Объект, ЭтаФорма, ПриСозданииФормы) Тогда
		Элементы.ПланРасходаЗаполнитьРасходамиЗаПрошлыйПериод.Доступность = ЛОЖЬ;
		Элементы.ПланДоходаЗаполнитьДоходамиЗаПрошлыйПериод.Доступность = ЛОЖЬ;
	Иначе
		Элементы.ПланРасходаЗаполнитьРасходамиЗаПрошлыйПериод.Доступность = ИСТИНА;
		Элементы.ПланДоходаЗаполнитьДоходамиЗаПрошлыйПериод.Доступность = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПересчетИтогов();
	глПроверятьСообщения = ИСТИНА;
	
КонецПроцедуры

&НаСервере
Процедура ПересчетИтогов()
	
	Если ВестиУчетВалют Тогда
		Сумма = 0;
		Для Каждого СтрокаПлана Из Объект.ПланДохода Цикл
			Сумма = Сумма + СтрокаПлана.Сумма * ?(СтрокаПлана.Курс = 0, 1, СтрокаПлана.Курс);
		КонецЦикла;
		Объект.ИтогоДоходов  = Сумма;
		
		Сумма = 0;
		Для Каждого СтрокаПлана Из Объект.ПланРасхода Цикл
			Сумма = Сумма + СтрокаПлана.Сумма * ?(СтрокаПлана.Курс = 0, 1, СтрокаПлана.Курс);
		КонецЦикла;
		Объект.ИтогоРасходов  = Сумма;
		
	Иначе
		Объект.ИтогоДоходов  = Объект.ПланДохода.Итог("Сумма");
		Объект.ИтогоРасходов = Объект.ПланРасхода.Итог("Сумма");
	КонецЕсли;
	Объект.Разница = Объект.ИтогоДоходов - Объект.ИтогоРасходов;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланДоходаВалютаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ПланДохода.ТекущиеДанные;
	ТекущаяСтрока.Курс = ОбщийМодульПовтор.ПолучитьТекущийКурс(ТекущаяСтрока.Валюта, Объект.Дата);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланДоходаПриИзменении(Элемент)
	ПересчетИтогов();
КонецПроцедуры

&НаКлиенте
Процедура ПланДоходаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока 
		И НЕ Копирование Тогда
		
		СтрокаПлана = Элементы.ПланДохода.ТекущиеДанные;
		СтрокаПлана.Валюта = ОсновнаяВалюта;
		СтрокаПлана.Курс = 1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланРасходаВалютаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ПланРасхода.ТекущиеДанные;
	ТекущаяСтрока.Курс = ОбщийМодульПовтор.ПолучитьТекущийКурс(ТекущаяСтрока.Валюта, Объект.Дата);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланРасходаПриИзменении(Элемент)
	ПересчетИтогов();
КонецПроцедуры

&НаКлиенте
Процедура ПланРасходаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока 
		И НЕ Копирование Тогда
		
		СтрокаПлана = Элементы.ПланДохода.ТекущиеДанные;
		СтрокаПлана.Валюта = ОсновнаяВалюта;
		СтрокаПлана.Курс = 1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбработатьБлокировку();
	
	Если ДопИнформацияИзменена Тогда
		ОбщийМодульСервисСервер.ЗаписатьДополнительнуюИнформацию(Объект.Ссылка, ДополнительнаяИнформация);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Объект.Ссылка, ИСТИНА);
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбработатьБлокировку(ИСТИНА);		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002450", ЭтаФорма, Отказ, Объект);
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ОбъектСсылка = Объект.Ссылка;
		
		ВестиУчетПоНаправлениямДеятельности = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоНаправлениямДеятельности");
		
		ДопИнфоТипВладельца = ОбщийМодульПовтор.ПолучитьТипВладельца(ОбъектСсылка); 	
		ОбщийМодульСервисСервер.ЗаполнитьДополнительнуюИнформацию(ОбъектСсылка, ДополнительнаяИнформация, ДопИнфоТипВладельца);		
		
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВсеРеквизитыШапкиДокументовВПервуюЗакладкуРежимБольшихТаблицДляМалыхМониторов") Тогда
			Элементы.Переместить(Элементы.ГруппаШапки, Элементы.СтраницаШапки);
			Элементы.Переместить(Элементы.Дополнительно, Элементы.СтраницаШапки);
			Элементы.Переместить(Элементы.ГруппаСтандартныхРеквизитов, Элементы.СтраницаШапки);			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.Ссылка) 
			И НЕ ЗначениеЗаполнено(Объект.МесяцПланирования) Тогда
			
			Объект.МесяцПланирования = КонецМесяца(ОбщийМодульСервисСервер.ПользователяТекущаяДата()) + 3600;
		КонецЕсли;
		
		Если НЕ ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВестиУчетНоменклатурыВРазрезеНоменклатурныхГруппПС") Тогда
			Элементы.ТоварыНоменклатураИлиГруппа.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Номенклатура или Группа");
		КонецЕсли;
		
		Элементы.ДополнительнаяИнформация.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиДополнительнуюИнформациюДляДвиженияДенег");
		
		ВестиУчетВалют = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетВалют");
		ОсновнаяВалюта = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
		НаименованиеОсновнойВалюты = ОсновнаяВалюта.Наименование ;
		
		Если ПараметрыСеанса.ВерсияПриложения < 803050000 
			ИЛИ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВместоТумблеровПоказыватьГалочки") Тогда
			
			Если НЕ ПараметрыСеанса.ВерсияПриложения < 803050000 Тогда
				Выполнить(" Элементы.ПланНеАктуален.ВидФлажка = ВидФлажка.Флажок; ");	
			КонецЕсли;
			Элементы.ПланНеАктуален.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("План НЕ актуален");
			Элементы.ПланНеАктуален.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
