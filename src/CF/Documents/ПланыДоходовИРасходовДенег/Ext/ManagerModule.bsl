// sza140530-1704 : 
Процедура НаПечать(ТабДок, Ссылка) Экспорт
	
	ТабДок.ИмяПараметровПечати  = "ДокПланДохРасх" + СокрЛП(ИмяКомпьютера());
	ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	
	ТабДок.Очистить();
	
	СсылкаНаОбъектПечати = Ссылка[0];
	
	РазрядМетаданных = ""; ИмяМетаданных = "";
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ТабДок = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ТабДок, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		
	Иначе		
		Макет = Документы.ПланыДоходовИРасходовДенег.ПолучитьМакет("НаПечать");
		Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ПланыДоходовИРасходовДенег.Дата,
		|	ПланыДоходовИРасходовДенег.ДатаРедакции,
		|	ПланыДоходовИРасходовДенег.ДатаСоздания,
		|	ПланыДоходовИРасходовДенег.ИтогоДоходов,
		|	ПланыДоходовИРасходовДенег.ИтогоРасходов,
		|	ПланыДоходовИРасходовДенег.Комментарий,
		|	ПланыДоходовИРасходовДенег.МесяцПланирования,
		|	ПланыДоходовИРасходовДенег.Номер,
		|	ПланыДоходовИРасходовДенег.Ответственный,
		|	ПланыДоходовИРасходовДенег.ПланНеАктуален,
		|	ПланыДоходовИРасходовДенег.Разница,
		|	ПланыДоходовИРасходовДенег.ПланРасхода.(
		|		НомерСтроки,
		|		СтатьяДвиженияДенег,
		|		Сумма,
		|		Валюта,
		|		Курс,
		|		ОСтроке
		|	),
		|	ПланыДоходовИРасходовДенег.ПланДохода.(
		|		НомерСтроки,
		|		СтатьяДвиженияДенег,
		|		Сумма,
		|		Валюта,
		|		Курс,
		|		ОСтроке)
		|ИЗ Документ.ПланыДоходовИРасходовДенег КАК ПланыДоходовИРасходовДенег
		|ГДЕ ПланыДоходовИРасходовДенег.Ссылка В (&Ссылка)";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
		Шапка 					= Макет.ПолучитьОбласть("Шапка");
		ОбластьПланРасходаШапка = Макет.ПолучитьОбласть("ПланРасходаШапка");
		ОбластьПланРасхода 		= Макет.ПолучитьОбласть("ПланРасхода");
		ОбластьПланДоходаШапка 	= Макет.ПолучитьОбласть("ПланДоходаШапка");
		ОбластьПланДохода 		= Макет.ПолучитьОбласть("ПланДохода");
		Подвал 					= Макет.ПолучитьОбласть("Подвал");
		
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
			ТабДок.Вывести(ОбластьЗаголовок);
			
			Шапка.Параметры.Заполнить(Выборка);
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			
			ВыборкаПланРасхода = Выборка.ПланРасхода.Выбрать();
			Если НЕ ВыборкаПланРасхода.Количество() = 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьПланРасходаШапка);
				ТабДок.Вывести(ОбластьПланРасходаШапка);
				
				Пока ВыборкаПланРасхода.Следующий() Цикл
					ОбластьПланРасхода.Параметры.Заполнить(ВыборкаПланРасхода);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьПланРасхода);
					ТабДок.Вывести(ОбластьПланРасхода, ВыборкаПланРасхода.Уровень());
				КонецЦикла;	
			КонецЕсли;
			
			ВыборкаПланДохода = Выборка.ПланДохода.Выбрать();
			Если НЕ ВыборкаПланДохода.Количество() = 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьПланДоходаШапка);
				ТабДок.Вывести(ОбластьПланДоходаШапка);
				
				Пока ВыборкаПланДохода.Следующий() Цикл
					ОбластьПланДохода.Параметры.Заполнить(ВыборкаПланДохода);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьПланДохода);
					ТабДок.Вывести(ОбластьПланДохода, ВыборкаПланДохода.Уровень());
				КонецЦикла;	
			КонецЕсли;
			
			Подвал.Параметры.Заполнить(Выборка);
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
			ТабДок.Вывести(Подвал);
			
			ВставлятьРазделительСтраниц = ИСТИНА;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры
