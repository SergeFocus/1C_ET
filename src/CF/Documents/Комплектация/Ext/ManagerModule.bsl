// sza140610-1603  
// sza140411-0139  
Процедура НаПечать(ТабДок, Ссылка) Экспорт
	
	ТабДок.ИмяПараметровПечати  = "ДокКомплектация" + СокрЛП(ИмяКомпьютера());
	ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	
	ТабДок.Очистить();
	
	СсылкаНаОбъектПечати = Ссылка[0];
	
	РазрядМетаданных = ""; ИмяМетаданных = "";
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ТабДок = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ТабДок, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		
	Иначе		
		Макет = Документы.Комплектация.ПолучитьМакет("НаПечать");
		Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Комплектация.ВицЦенУчетаСтоимости,
		|	Комплектация.Дата,
		|	Комплектация.ДатаКомплектации,
		|	Комплектация.ДатаРедакции,
		|	Комплектация.ДатаСоздания,
		|	Комплектация.Комментарий,
		|	Комплектация.Номер,
		|	Комплектация.ОбщееВремяКомплектации,
		|	Комплектация.Ответственный,
		|	Комплектация.Склад,
		|	Комплектация.СкладМатериалов,
		|	Комплектация.СуммаДополнительныхРасходов,
		|	Комплектация.ТовараВКоличестве,
		|	Комплектация.ТовараНаСумму,
		|	Комплектация.УстанавливатьЦенуУказаннуюВТаблицеВКачествеЦеныДляРеализацииТовара,
		|	Комплектация.ДополнительныеРасходы.(
		|		НомерСтроки,
		|		Статья,
		|		ХранилищеДенег,
		|		ФормаОплаты,
		|		Сумма,
		|		Валюта,
		|		Курс,
		|		НеРаспределятьНаСтоимость,
		|		ОСтроке
		|	),
		|	Комплектация.ЗадействованныеСредства.(
		|		НомерСтроки,
		|		Средство,
		|		ДатаНачала,
		|		ДатаОкончания,
		|		Коэффициент,
		|		ОСтроке
		|	),
		|	Комплектация.Материалы.(
		|		НомерСтроки,
		|		Номенклатура,
		|		СерияНоменклатуры,
		|		Количество,
		|		Цена,
		|		Сумма,
		|		ОСтроке
		|	),
		|	Комплектация.Работы.(
		|		НомерСтроки,
		|		Сотрудник,
		|		Номенклатура,
		|		Количество,
		|		ВремяВыполнения,
		|		ОСтроке
		|	),
		|	Комплектация.Спецификации.(
		|		НомерСтроки,
		|		Спецификация
		|	),
		|	Комплектация.Товары.(
		|		НомерСтроки,
		|		Номенклатура,
		|		СерияНоменклатуры,
		|		Спецификация,
		|		ЕдиницаИзмерения,
		|		Количество,
		|		Цена,
		|		Сумма,
		|		ОСтроке
		|	),
		|	Комплектация.Разукомплектация
		|ИЗ Документ.Комплектация КАК Комплектация
		|ГДЕ Комплектация.Ссылка В(&Ссылка)";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
		Шапка 				= Макет.ПолучитьОбласть("Шапка");
		ОбластьДополнительныеРасходыШапка 	= Макет.ПолучитьОбласть("ДополнительныеРасходыШапка");
		ОбластьДополнительныеРасходы 		= Макет.ПолучитьОбласть("ДополнительныеРасходы");
		ОбластьЗадействованныеСредстваШапка = Макет.ПолучитьОбласть("ЗадействованныеСредстваШапка");
		ОбластьЗадействованныеСредства 		= Макет.ПолучитьОбласть("ЗадействованныеСредства");
		ОбластьМатериалыШапка 		= Макет.ПолучитьОбласть("МатериалыШапка");
		ОбластьМатериалы 			= Макет.ПолучитьОбласть("Материалы");
		ОбластьРаботыШапка 			= Макет.ПолучитьОбласть("РаботыШапка");
		ОбластьРаботы 				= Макет.ПолучитьОбласть("Работы");
		ОбластьСпецификацииШапка 	= Макет.ПолучитьОбласть("СпецификацииШапка");
		ОбластьСпецификации 		= Макет.ПолучитьОбласть("Спецификации");
		ОбластьТоварыШапка 			= Макет.ПолучитьОбласть("ТоварыШапка");
		ОбластьТовары 				= Макет.ПолучитьОбласть("Товары");
		Подвал 						= Макет.ПолучитьОбласть("Подвал");
		
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ОбластьЗаголовок.Параметры.ИмяДокумента = ?(Выборка.Разукомплектация, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Разукомплектация"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Комплектация"));
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
			ТабДок.Вывести(ОбластьЗаголовок);
			
			Шапка.Параметры.Заполнить(Выборка);
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			
			ВыборкаСпецификации = Выборка.Спецификации.Выбрать();
			Если ВыборкаСпецификации.Количество() > 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьСпецификацииШапка);
				ТабДок.Вывести(ОбластьСпецификацииШапка);
				Пока ВыборкаСпецификации.Следующий() Цикл
					ОбластьСпецификации.Параметры.Заполнить(ВыборкаСпецификации);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьСпецификации);
					ТабДок.Вывести(ОбластьСпецификации, ВыборкаСпецификации.Уровень());
				КонецЦикла;	
			КонецЕсли;
			
			ВыборкаТовары = Выборка.Товары.Выбрать();
			Если ВыборкаТовары.Количество() > 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТоварыШапка);
				ТабДок.Вывести(ОбластьТоварыШапка);		
				Пока ВыборкаТовары.Следующий() Цикл
					ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТовары);
					ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
				КонецЦикла;                        	
			КонецЕсли;
			
			ВыборкаМатериалы = Выборка.Материалы.Выбрать();
			Если ВыборкаМатериалы.Количество() > 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьМатериалыШапка);
				ТабДок.Вывести(ОбластьМатериалыШапка);
				
				Пока ВыборкаМатериалы.Следующий() Цикл
					ОбластьМатериалы.Параметры.Заполнить(ВыборкаМатериалы);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьМатериалы);
					ТабДок.Вывести(ОбластьМатериалы, ВыборкаМатериалы.Уровень());
				КонецЦикла;                        	
			КонецЕсли;
			
			ВыборкаДополнительныеРасходы = Выборка.ДополнительныеРасходы.Выбрать();
			Если ВыборкаДополнительныеРасходы.Количество() > 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьДополнительныеРасходыШапка);
				ТабДок.Вывести(ОбластьДополнительныеРасходыШапка);
				
				Пока ВыборкаДополнительныеРасходы.Следующий() Цикл
					ОбластьДополнительныеРасходы.Параметры.Заполнить(ВыборкаДополнительныеРасходы);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьДополнительныеРасходы);
					ТабДок.Вывести(ОбластьДополнительныеРасходы, ВыборкаДополнительныеРасходы.Уровень());
				КонецЦикла;                        	
			КонецЕсли;
			
			ВыборкаЗадействованныеСредства = Выборка.ЗадействованныеСредства.Выбрать();
			Если ВыборкаЗадействованныеСредства.Количество() > 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗадействованныеСредстваШапка);
				ТабДок.Вывести(ОбластьЗадействованныеСредстваШапка);
				
				Пока ВыборкаЗадействованныеСредства.Следующий() Цикл
					ОбластьЗадействованныеСредства.Параметры.Заполнить(ВыборкаЗадействованныеСредства);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗадействованныеСредства);
					ТабДок.Вывести(ОбластьЗадействованныеСредства, ВыборкаЗадействованныеСредства.Уровень());
				КонецЦикла;	
			КонецЕсли;
			
			ВыборкаРаботы = Выборка.Работы.Выбрать();
			Если ВыборкаРаботы.Количество() > 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРаботыШапка);
				ТабДок.Вывести(ОбластьРаботыШапка);
				
				Пока ВыборкаРаботы.Следующий() Цикл
					ОбластьРаботы.Параметры.Заполнить(ВыборкаРаботы);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРаботы);
					ТабДок.Вывести(ОбластьРаботы, ВыборкаРаботы.Уровень());				
				КонецЦикла;	
			КонецЕсли;
			
			Подвал.Параметры.Заполнить(Выборка);
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
			ТабДок.Вывести(Подвал);
			
			ВставлятьРазделительСтраниц = ИСТИНА;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры
