// sza140610-1603
// sza140411-0139

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	Процедура НаПечать(ДокументДляПечати, Ссылка) Экспорт

		ДокументДляПечати.ИмяПараметровПечати  = "ДокКомплектация" + СокрЛП(ИмяКомпьютера());
		ДокументДляПечати.КлючПараметровПечати = ДокументДляПечати.ИмяПараметровПечати;
		ДокументДляПечати.Очистить();
		СсылкаНаОбъектПечати = Ссылка[0];
		РазрядМетаданных = ""; ИмяМетаданных = "";
		ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);

		Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
			ДокументДляПечати = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ДокументДляПечати, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		Иначе
			Макет = Документы.Комплектация.ПолучитьМакет("НаПечать");
			Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();

			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	Комплектация.ВидЦенУчетаСтоимости,
			|	Комплектация.Дата,
			|	Комплектация.ДатаКомплектации,
			|	Комплектация.ДатаРедакции,
			|	Комплектация.ДатаСоздания,
			|	ВЫРАЗИТЬ(Комплектация.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
			|	Комплектация.Номер,
			|	Комплектация.ОбщееВремяКомплектации,
			|	Комплектация.Ответственный,
			|	Комплектация.Склад,
			|	Комплектация.СкладМатериалов,
			|	Комплектация.СуммаДополнительныхРасходов,
			|	Комплектация.ТовараВКоличестве,
			|	Комплектация.ТовараНаСумму,
			|	Комплектация.УстанавливатьЦенуУказаннуюВТаблицеВКачествеЦеныДляРеализацииТовара,
			|	Комплектация.ДополнительныеРасходы.(
			|		НомерСтроки,
			|		Статья,
			|		ХранилищеДенег,
			|		ФормаОплаты,
			|		Сумма,
			|		Валюта,
			|		Курс,
			|		НеРаспределятьНаСтоимость,
			|		ОСтроке
			|	),
			|	Комплектация.ЗадействованныеСредства.(
			|		НомерСтроки,
			|		Средство,
			|		ДатаНачала,
			|		ДатаОкончания,
			|		Коэффициент,
			|		ОСтроке
			|	),
			|	Комплектация.Материалы.(
			|		НомерСтроки,
			|		Номенклатура,
			|		СерияНоменклатуры,
			|		Количество,
			|		Цена,
			|		Сумма,
			|		ОСтроке
			|	),
			|	Комплектация.Работы.(
			|		НомерСтроки,
			|		Сотрудник,
			|		Номенклатура,
			|		Количество,
			|		ВремяВыполнения,
			|		ОСтроке
			|	),
			|	Комплектация.Спецификации.(
			|		НомерСтроки,
			|		Спецификация
			|	),
			|	Комплектация.Товары.(
			|		НомерСтроки,
			|		Номенклатура,
			|		СерияНоменклатуры,
			|		Спецификация,
			|		ЕдиницаИзмерения,
			|		Количество,
			|		Цена,
			|		Сумма,
			|		ОСтроке
			|	),
			|	Комплектация.Разукомплектация
			|ИЗ Документ.Комплектация КАК Комплектация
			|ГДЕ Комплектация.Ссылка В(&Ссылка)";
			Запрос.Параметры.Вставить("Ссылка", Ссылка);

			Выборка = Запрос.Выполнить().Выбрать();
			ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
			Шапка 				= Макет.ПолучитьОбласть("Шапка");
			ОбластьДополнительныеРасходыШапка 	= Макет.ПолучитьОбласть("ДополнительныеРасходыШапка");
			ОбластьДополнительныеРасходы 		= Макет.ПолучитьОбласть("ДополнительныеРасходы");
			ОбластьЗадействованныеСредстваШапка = Макет.ПолучитьОбласть("ЗадействованныеСредстваШапка");
			ОбластьЗадействованныеСредства 		= Макет.ПолучитьОбласть("ЗадействованныеСредства");
			ОбластьМатериалыШапка 		= Макет.ПолучитьОбласть("МатериалыШапка");
			ОбластьМатериалы 			= Макет.ПолучитьОбласть("Материалы");
			ОбластьРаботыШапка 			= Макет.ПолучитьОбласть("РаботыШапка");
			ОбластьРаботы 				= Макет.ПолучитьОбласть("Работы");
			ОбластьСпецификацииШапка 	= Макет.ПолучитьОбласть("СпецификацииШапка");
			ОбластьСпецификации 		= Макет.ПолучитьОбласть("Спецификации");
			ОбластьТоварыШапка 			= Макет.ПолучитьОбласть("ТоварыШапка");
			ОбластьТовары 				= Макет.ПолучитьОбласть("Товары");
			Подвал 						= Макет.ПолучитьОбласть("Подвал");
			ВставлятьРазделительСтраниц = ЛОЖЬ;

			Пока Выборка.Следующий() Цикл
				Если ВставлятьРазделительСтраниц Тогда
					ДокументДляПечати.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;

				ОбластьЗаголовок.Параметры.ИмяДокумента = ?(Выборка.Разукомплектация, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Демонтаж"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Комплектация"));
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
				ДокументДляПечати.Вывести(ОбластьЗаголовок);
				Шапка.Параметры.Заполнить(Выборка);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
				ДокументДляПечати.Вывести(Шапка, Выборка.Уровень());
				ВыборкаСпецификации = Выборка.Спецификации.Выбрать();

				Если ВыборкаСпецификации.Количество() > 0 Тогда
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьСпецификацииШапка);
					ДокументДляПечати.Вывести(ОбластьСпецификацииШапка);
					Пока ВыборкаСпецификации.Следующий() Цикл
						ОбластьСпецификации.Параметры.Заполнить(ВыборкаСпецификации);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьСпецификации);
						ДокументДляПечати.Вывести(ОбластьСпецификации, ВыборкаСпецификации.Уровень());

					КонецЦикла;
				КонецЕсли;

				ВыборкаТовары = Выборка.Товары.Выбрать();

				Если ВыборкаТовары.Количество() > 0 Тогда
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТоварыШапка);
					ДокументДляПечати.Вывести(ОбластьТоварыШапка);
					Пока ВыборкаТовары.Следующий() Цикл
						ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТовары);
						ДокументДляПечати.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());

					КонецЦикла;
				КонецЕсли;

				ВыборкаМатериалы = Выборка.Материалы.Выбрать();

				Если ВыборкаМатериалы.Количество() > 0 Тогда
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьМатериалыШапка);
					ДокументДляПечати.Вывести(ОбластьМатериалыШапка);
					Пока ВыборкаМатериалы.Следующий() Цикл
						ОбластьМатериалы.Параметры.Заполнить(ВыборкаМатериалы);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьМатериалы);
						ДокументДляПечати.Вывести(ОбластьМатериалы, ВыборкаМатериалы.Уровень());

					КонецЦикла;
				КонецЕсли;

				ВыборкаДополнительныеРасходы = Выборка.ДополнительныеРасходы.Выбрать();

				Если ВыборкаДополнительныеРасходы.Количество() > 0 Тогда
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьДополнительныеРасходыШапка);
					ДокументДляПечати.Вывести(ОбластьДополнительныеРасходыШапка);
					Пока ВыборкаДополнительныеРасходы.Следующий() Цикл
						ОбластьДополнительныеРасходы.Параметры.Заполнить(ВыборкаДополнительныеРасходы);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьДополнительныеРасходы);
						ДокументДляПечати.Вывести(ОбластьДополнительныеРасходы, ВыборкаДополнительныеРасходы.Уровень());

					КонецЦикла;
				КонецЕсли;

				ВыборкаЗадействованныеСредства = Выборка.ЗадействованныеСредства.Выбрать();

				Если ВыборкаЗадействованныеСредства.Количество() > 0 Тогда
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗадействованныеСредстваШапка);
					ДокументДляПечати.Вывести(ОбластьЗадействованныеСредстваШапка);
					Пока ВыборкаЗадействованныеСредства.Следующий() Цикл
						ОбластьЗадействованныеСредства.Параметры.Заполнить(ВыборкаЗадействованныеСредства);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗадействованныеСредства);
						ДокументДляПечати.Вывести(ОбластьЗадействованныеСредства, ВыборкаЗадействованныеСредства.Уровень());

					КонецЦикла;
				КонецЕсли;

				ВыборкаРаботы = Выборка.Работы.Выбрать();

				Если ВыборкаРаботы.Количество() > 0 Тогда
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРаботыШапка);
					ДокументДляПечати.Вывести(ОбластьРаботыШапка);
					Пока ВыборкаРаботы.Следующий() Цикл
						ОбластьРаботы.Параметры.Заполнить(ВыборкаРаботы);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРаботы);
						ДокументДляПечати.Вывести(ОбластьРаботы, ВыборкаРаботы.Уровень());

					КонецЦикла;
				КонецЕсли;

				Подвал.Параметры.Заполнить(Выборка);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
				ДокументДляПечати.Вывести(Подвал);
				ВставлятьРазделительСтраниц = ИСТИНА;

			КонецЦикла;
		КонецЕсли;

	КонецПроцедуры

#КонецЕсли
