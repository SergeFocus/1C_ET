#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// sza141228-1525
// sza140601-0422
// sza130909-2143 :
Процедура Печать(ДокументДляПечати, Ссылка) Экспорт

	ДокументДляПечати.ИмяПараметровПечати  = "ДокПеремещение" + СокрЛП(ИмяКомпьютера());
	ДокументДляПечати.КлючПараметровПечати = ДокументДляПечати.ИмяПараметровПечати;
	ДокументДляПечати.Очистить();
	Дата = Ссылка[0].Дата;
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(ПредопределенноеЗначение("Перечисление.ВидыПечатныхФорм.ПеремещениеТоваров"), Дата);

	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ДокументДляПечати = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ДокументДляПечати, Ссылка[0], "Документы", "ПеремещенияТовара");
	Иначе

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ПеремещенияТовара.Ссылка,
		|	ПеремещенияТовара.ВерсияДанных,
		|	ПеремещенияТовара.ПометкаУдаления,
		|	ПеремещенияТовара.Номер,
		|	ПеремещенияТовара.Дата,
		|	ПеремещенияТовара.Проведен,
		|	ПеремещенияТовара.Склад,
		|	ПеремещенияТовара.СкладКуда,
		|	ПеремещенияТовара.ВидЦен,
		|	ПеремещенияТовара.ТовараНаСумму,
		|	ПеремещенияТовара.ТовараВКоличестве,
		|	ПеремещенияТовара.СкладВПути,
		|	ПеремещенияТовара.ДатаПрибытия,
		|	ВЫРАЗИТЬ(ПеремещенияТовара.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
		|	ПеремещенияТовара.СпособДоставки,
		|	ПеремещенияТовара.ТалонТрек,
		|	ПеремещенияТовара.ТоварОтправлен,
		|	ПеремещенияТовара.ДатаОтправки,
		|	ПеремещенияТовара.НеПроводить,
		|	ПеремещенияТовара.Ответственный,
		|	ПеремещенияТовара.ДатаСоздания,
		|	ПеремещенияТовара.ДатаРедакции,
		|	ПеремещенияТовара.Товары.(
		|		Ссылка,
		|		НомерСтроки,
		|		Номенклатура,
		|		СерияНоменклатуры,
		|		ЕдиницаИзмерения,
		|		Количество,
		|		Цена,
		|		Сумма,
		|		ОСтроке
		|	),
		|	ПеремещенияТовара.Выдал,
		|	ПеремещенияТовара.Принял
		|ИЗ Документ.ПеремещенияТовара КАК ПеремещенияТовара
		|ГДЕ ПеремещенияТовара.Ссылка В(&Ссылка)";
		Запрос.Параметры.Вставить("Ссылка", Ссылка);

		Выборка = Запрос.Выполнить().Выбрать();
		Макет = Документы.ПеремещенияТовара.ПолучитьМакет("Печать");
		Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
		ВыводитьВПечатиПеремещенияАртикулыИСуммы = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВыводитьВПечатиПеремещенияАртикулыИСуммы");
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");

		Если ВыводитьВПечатиПеремещенияАртикулыИСуммы Тогда
			Шапка 				= Макет.ПолучитьОбласть("Шапка1");
			ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка1");
			ОбластьТовары 		= Макет.ПолучитьОбласть("Товары1");
			Подвал 				= Макет.ПолучитьОбласть("Подвал1");
		Иначе
			Шапка 				= Макет.ПолучитьОбласть("Шапка");
			ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка");
			ОбластьТовары 		= Макет.ПолучитьОбласть("Товары");
			Подвал 				= Макет.ПолучитьОбласть("Подвал");
		КонецЕсли;

		ОбластьПодписи		= Макет.ПолучитьОбласть("Подписи");
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ДокументДляПечати.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;

			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
			ДокументДляПечати.Вывести(ОбластьЗаголовок);
			ТовараНаСумму	  = 0;
			ТовараВКоличестве = 0;
			Шапка.Параметры.Заполнить(Выборка);
			СтруктураДополнительныхПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
			Шапка.Параметры.ТекстВШапкеДокументовПриПечати   = СтруктураДополнительныхПараметровМакета.ТекстВШапкеДокументовПриПечати ;
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
			ДокументДляПечати.Вывести(Шапка, Выборка.Уровень());
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТоварыШапка);
			ДокументДляПечати.Вывести(ОбластьТоварыШапка);
			ВыборкаТовары = Выборка.Товары.Выбрать();

			Пока ВыборкаТовары.Следующий() Цикл
				ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
				Если ВыводитьВПечатиПеремещенияАртикулыИСуммы Тогда
					ОбластьТовары.Параметры.Артикул	= ВыборкаТовары.Номенклатура.Артикул;
					ТовараНаСумму	  = ТовараНаСумму + ВыборкаТовары.сумма;
					ТовараВКоличестве = ТовараВКоличестве + ВыборкаТовары.количество;
				КонецЕсли;

				ОбластьТовары.Параметры.НоменклатураНаименование = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаТовары.Номенклатура);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТовары);
				ДокументДляПечати.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
			КонецЦикла;

			Подвал.Параметры.Заполнить(Выборка);
			Подвал.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныхПараметровМакета.ТекстВПодвалеДокументовПриПечати;
			Если ВыводитьВПечатиПеремещенияАртикулыИСуммы Тогда
				Подвал.Параметры.Валюта = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
				Подвал.Параметры.ТовараНаСумму = ТовараНаСумму;
				Подвал.Параметры.ТовараВКоличестве = ТовараВКоличестве;
			КонецЕсли;

			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
			ДокументДляПечати.Вывести(Подвал);

			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетИнформацииОДоставкеВДокументахРасхода")
				ИЛИ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетИнформацииОДоставкеВДокументахПоступления") Тогда

				ИнформацияОДоставке = Макет.ПолучитьОбласть("ИнформацияОДоставке");
				ИнформацияОДоставке.Параметры.Заполнить(Выборка);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ИнформацияОДоставке);
				ДокументДляПечати.Вывести(ИнформацияОДоставке);
			КонецЕсли;

			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетЗарплатыСотрудников") Тогда
				ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
				ОбластьПодписи.Параметры.Заполнить(Выборка);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьПодписи);
				ДокументДляПечати.Вывести(ОбластьПодписи);
			КонецЕсли;

			ВставлятьРазделительСтраниц = ИСТИНА;

		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ПечатьБезСерий(ДокументДляПечати, Ссылка) Экспорт

	ДокументДляПечати.ИмяПараметровПечати  = "ДокПеремещениеБезСерий" + СокрЛП(ИмяКомпьютера());
	ДокументДляПечати.КлючПараметровПечати = ДокументДляПечати.ИмяПараметровПечати;
	ДокументДляПечати.Очистить();
	Дата = Ссылка[0].Дата;
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(ПредопределенноеЗначение("Перечисление.ВидыПечатныхФорм.ПеремещениеТоваров"), Дата);

	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ДокументДляПечати = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ДокументДляПечати, Ссылка[0], "Документы", "ПеремещенияТовара");
	Иначе
		Макет = Документы.ПеремещенияТовара.ПолучитьМакет("Печать");
		Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(ССылка[0].Клиент);

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПеремещенияТовара.Ссылка,
		               |	ПеремещенияТовара.ВерсияДанных,
		               |	ПеремещенияТовара.ПометкаУдаления,
		               |	ПеремещенияТовара.Номер,
		               |	ПеремещенияТовара.Дата,
		               |	ПеремещенияТовара.Проведен,
		               |	ПеремещенияТовара.Склад,
		               |	ПеремещенияТовара.СкладКуда,
		               |	ПеремещенияТовара.ВидЦен,
		               |	ПеремещенияТовара.ТовараНаСумму,
		               |	ПеремещенияТовара.ТовараВКоличестве,
		               |	ПеремещенияТовара.СкладВПути,
		               |	ПеремещенияТовара.ДатаПрибытия,
		               |	ВЫРАЗИТЬ(ПеремещенияТовара.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
		               |	ПеремещенияТовара.СпособДоставки,
		               |	ПеремещенияТовара.ТалонТрек,
		               |	ПеремещенияТовара.ТоварОтправлен,
		               |	ПеремещенияТовара.ДатаОтправки,
		               |	ПеремещенияТовара.НеПроводить,
		               |	ПеремещенияТовара.Ответственный,
		               |	ПеремещенияТовара.ДатаСоздания,
		               |	ПеремещенияТовара.ДатаРедакции,
		               |	ПеремещенияТовара.Товары.(
		               |		Ссылка,
		               |		НомерСтроки,
		               |		Номенклатура,
		               |		СерияНоменклатуры,
		               |		ЕдиницаИзмерения,
		               |		Количество,
		               |		Цена,
		               |		Сумма,
		               |		ОСтроке
		               |	),
		               |	ПеремещенияТовара.Выдал,
		               |	ПеремещенияТовара.Принял
		               |ИЗ
		               |	Документ.ПеремещенияТовара КАК ПеремещенияТовара
		               |ГДЕ
		               |	ПеремещенияТовара.Ссылка В(&Ссылка)";
		Запрос.Параметры.Вставить("Ссылка", Ссылка);

		Выборка = Запрос.Выполнить().Выбрать();
		ВыводитьВПечатиПеремещенияАртикулыИСуммы = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВыводитьВПечатиПеремещенияАртикулыИСуммы");
		ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
		Если ВыводитьВПечатиПеремещенияАртикулыИСуммы Тогда
			Шапка 				= Макет.ПолучитьОбласть("Шапка1");
			ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка1");
			ОбластьТовары 		= Макет.ПолучитьОбласть("Товары1");
		Иначе
			Шапка 				= Макет.ПолучитьОбласть("Шапка");
			ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка");
			ОбластьТовары 		= Макет.ПолучитьОбласть("Товары");
		КонецЕсли;

		Подвал 				= Макет.ПолучитьОбласть("Подвал");
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ДокументДляПечати.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;

			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
			ДокументДляПечати.Вывести(ОбластьЗаголовок);
			ТовараНаСумму	  = 0;
			ТовараВКоличестве = 0;
			Шапка.Параметры.Заполнить(Выборка);
			СтруктураДополнительныхПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
			Шапка.Параметры.ТекстВШапкеДокументовПриПечати   = СтруктураДополнительныхПараметровМакета.ТекстВШапкеДокументовПриПечати ;
			ДокументДляПечати.Вывести(Шапка, Выборка.Уровень());
			ДокументДляПечати.Вывести(ОбластьТоварыШапка);
			ТаблицаТоваров = Ссылка.Товары.Выгрузить();
			ТаблицаТоваров.Свернуть("Номенклатура, Цена", "Количество, Сумма");

			Для Каждого ВыборкаТовары Из ТаблицаТоваров Цикл
				ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
				ОбластьТовары.Параметры.НоменклатураНаименование = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаТовары.Номенклатура);
				Если ВыводитьВПечатиПеремещенияАртикулыИСуммы Тогда
					ОбластьТовары.Параметры.Артикул	= ВыборкаТовары.Номенклатура.Артикул;
					ТовараНаСумму	  = ТовараНаСумму + ВыборкаТовары.сумма;
					ТовараВКоличестве = ТовараВКоличестве + ВыборкаТовары.количество;
				КонецЕсли;

				ДокументДляПечати.Вывести(ОбластьТовары);

			КонецЦикла;

			Подвал.Параметры.Заполнить(Выборка);
			Подвал.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныхПараметровМакета.ТекстВПодвалеДокументовПриПечати;
			Если ВыводитьВПечатиПеремещенияАртикулыИСуммы Тогда
				ОбластьТовары.Параметры.Валюта = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
				ОбластьТовары.Параметры.ТовараНаСумму = ТовараНаСумму;
				ОбластьТовары.Параметры.ТовараВКоличестве = ТовараВКоличестве;
			КонецЕсли;

			ДокументДляПечати.Вывести(Подвал);

			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетЗарплатыСотрудников") Тогда
				ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
				ОбластьПодписи.Параметры.Заполнить(Выборка);
				ДокументДляПечати.Вывести(ОбластьПодписи);
			КонецЕсли;

			ВставлятьРазделительСтраниц = ИСТИНА;

		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

#КонецЕсли
