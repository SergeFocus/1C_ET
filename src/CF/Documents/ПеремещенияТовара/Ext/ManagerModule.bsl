// sza141228-1525 
// sza140601-0422  
// sza130909-2143 : 
Процедура Печать(ТабДок, Ссылка) Экспорт
	
	ТабДок.ИмяПараметровПечати  = "ДокПеремещение" + СокрЛП(ИмяКомпьютера());
	ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	
	ТабДок.Очистить();
	
	Дата = Ссылка[0].Дата;
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(ПредопределенноеЗначение("Перечисление.ВидыПечатныхФорм.ПеремещениеТоваров"), Дата);
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ТабДок = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ТабДок, Ссылка[0], "Документы", "ПеремещенияТовара");
		
	Иначе		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ПеремещенияТовара.Ссылка,
		|	ПеремещенияТовара.ВерсияДанных,
		|	ПеремещенияТовара.ПометкаУдаления,
		|	ПеремещенияТовара.Номер,
		|	ПеремещенияТовара.Дата,
		|	ПеремещенияТовара.Проведен,
		|	ПеремещенияТовара.Склад,
		|	ПеремещенияТовара.СкладКуда,
		|	ПеремещенияТовара.ВидЦен,
		|	ПеремещенияТовара.ТовараНаСумму,
		|	ПеремещенияТовара.ТовараВКоличестве,
		|	ПеремещенияТовара.СкладВПути,
		|	ПеремещенияТовара.ДатаПрибытия,
		|	ПеремещенияТовара.Комментарий,
		|	ПеремещенияТовара.СпособДоставки,
		|	ПеремещенияТовара.ТалонТрек,
		|	ПеремещенияТовара.ТоварОтправлен,
		|	ПеремещенияТовара.ДатаОтправки,
		|	ПеремещенияТовара.НеПроводить,
		|	ПеремещенияТовара.Ответственный,
		|	ПеремещенияТовара.ДатаСоздания,
		|	ПеремещенияТовара.ДатаРедакции,
		|	ПеремещенияТовара.Товары.(
		|		Ссылка,
		|		НомерСтроки,
		|		Номенклатура,
		|		СерияНоменклатуры,
		|		ЕдиницаИзмерения,
		|		Количество,
		|		Цена,
		|		Сумма,
		|		ОСтроке
		|	),
		|	ПеремещенияТовара.Выдал,
		|	ПеремещенияТовара.Принял
		|ИЗ
		|	Документ.ПеремещенияТовара КАК ПеремещенияТовара
		|ГДЕ
		|	ПеремещенияТовара.Ссылка В(&Ссылка)";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Макет = Документы.ПеремещенияТовара.ПолучитьМакет("Печать");
		Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();	
		
		ВыводитьВПечатиПеремещенияАртикулыИСуммы = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВыводитьВПечатиПеремещенияАртикулыИСуммы");
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		Если ВыводитьВПечатиПеремещенияАртикулыИСуммы Тогда
			Шапка 				= Макет.ПолучитьОбласть("Шапка1");
			ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка1");
			ОбластьТовары 		= Макет.ПолучитьОбласть("Товары1");	
			Подвал 				= Макет.ПолучитьОбласть("Подвал1");
		Иначе
			Шапка 				= Макет.ПолучитьОбласть("Шапка");
			ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка");
			ОбластьТовары 		= Макет.ПолучитьОбласть("Товары");	
			Подвал 				= Макет.ПолучитьОбласть("Подвал");
		КонецЕсли;
		
		ОбластьПодписи		= Макет.ПолучитьОбласть("Подписи");
		
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
			ТабДок.Вывести(ОбластьЗаголовок);	
			
			ТовараНаСумму	  = 0;
			ТовараВКоличестве = 0;
			
			Шапка.Параметры.Заполнить(Выборка);
			
			СтруктураДополнительныПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
			Шапка.Параметры.ТекстВШапкеДокументовПриПечати   = СтруктураДополнительныПараметровМакета.ТекстВШапкеДокументовПриПечати ;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТоварыШапка);
			ТабДок.Вывести(ОбластьТоварыШапка);
			ВыборкаТовары = Выборка.Товары.Выбрать();
			Пока ВыборкаТовары.Следующий() Цикл
				ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);	
				
				Если ВыводитьВПечатиПеремещенияАртикулыИСуммы Тогда
					ОбластьТовары.Параметры.Артикул	= ВыборкаТовары.Номенклатура.Артикул;
					ТовараНаСумму	  = ТовараНаСумму + ВыборкаТовары.сумма;
					ТовараВКоличестве = ТовараВКоличестве + ВыборкаТовары.количество;
				КонецЕсли;
				
				ОбластьТовары.Параметры.НоменклатураНаименование = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаТовары.Номенклатура);
				
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТовары);				
				ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
			КонецЦикла;
			
			Подвал.Параметры.Заполнить(Выборка);
			Подвал.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВПодвалеДокументовПриПечати;
			
			Если ВыводитьВПечатиПеремещенияАртикулыИСуммы Тогда
				Подвал.Параметры.Валюта = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
				Подвал.Параметры.ТовараНаСумму = ТовараНаСумму;
				Подвал.Параметры.ТовараВКоличестве = ТовараВКоличестве;
			КонецЕсли;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
			ТабДок.Вывести(Подвал);
			
			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетИнформацииОДоставкеВДокументахРасхода")
				ИЛИ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетИнформацииОДоставкеВДокументахПоступления") Тогда
				
				ИнформацияОДоставке = Макет.ПолучитьОбласть("ИнформацияОДоставке");
				ИнформацияОДоставке.Параметры.Заполнить(Выборка);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ИнформацияОДоставке);
				ТабДок.Вывести(ИнформацияОДоставке);
			КонецЕсли;
			
			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетЗарплатыСотрудников") Тогда
				ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
				ОбластьПодписи.Параметры.Заполнить(Выборка);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьПодписи);
				ТабДок.Вывести(ОбластьПодписи);
			КонецЕсли;
			
			ВставлятьРазделительСтраниц = ИСТИНА;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьБезСерий(ТабДок, Ссылка) Экспорт
	
	ТабДок.ИмяПараметровПечати  = "ДокПеремещениеБезСерий" + СокрЛП(ИмяКомпьютера());
	ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	
	ТабДок.Очистить();
	
	Дата = Ссылка[0].Дата;
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(ПредопределенноеЗначение("Перечисление.ВидыПечатныхФорм.ПеремещениеТоваров"), Дата);
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ТабДок = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ТабДок, Ссылка[0], "Документы", "ПеремещенияТовара");
		
	Иначе		
		Макет = Документы.ПеремещенияТовара.ПолучитьМакет("Печать");
		Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(ССылка[0].Клиент);
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПеремещенияТовара.Ссылка,
		               |	ПеремещенияТовара.ВерсияДанных,
		               |	ПеремещенияТовара.ПометкаУдаления,
		               |	ПеремещенияТовара.Номер,
		               |	ПеремещенияТовара.Дата,
		               |	ПеремещенияТовара.Проведен,
		               |	ПеремещенияТовара.Склад,
		               |	ПеремещенияТовара.СкладКуда,
		               |	ПеремещенияТовара.ВидЦен,
		               |	ПеремещенияТовара.ТовараНаСумму,
		               |	ПеремещенияТовара.ТовараВКоличестве,
		               |	ПеремещенияТовара.СкладВПути,
		               |	ПеремещенияТовара.ДатаПрибытия,
		               |	ПеремещенияТовара.Комментарий,
		               |	ПеремещенияТовара.СпособДоставки,
		               |	ПеремещенияТовара.ТалонТрек,
		               |	ПеремещенияТовара.ТоварОтправлен,
		               |	ПеремещенияТовара.ДатаОтправки,
		               |	ПеремещенияТовара.НеПроводить,
		               |	ПеремещенияТовара.Ответственный,
		               |	ПеремещенияТовара.ДатаСоздания,
		               |	ПеремещенияТовара.ДатаРедакции,
		               |	ПеремещенияТовара.Товары.(
		               |		Ссылка,
		               |		НомерСтроки,
		               |		Номенклатура,
		               |		СерияНоменклатуры,
		               |		ЕдиницаИзмерения,
		               |		Количество,
		               |		Цена,
		               |		Сумма,
		               |		ОСтроке
		               |	),
		               |	ПеремещенияТовара.Выдал,
		               |	ПеремещенияТовара.Принял
		               |ИЗ
		               |	Документ.ПеремещенияТовара КАК ПеремещенияТовара
		               |ГДЕ
		               |	ПеремещенияТовара.Ссылка В(&Ссылка)";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ВыводитьВПечатиПеремещенияАртикулыИСуммы = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВыводитьВПечатиПеремещенияАртикулыИСуммы");
		
		ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
		Если ВыводитьВПечатиПеремещенияАртикулыИСуммы Тогда
			Шапка 				= Макет.ПолучитьОбласть("Шапка1");
			ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка1");
			ОбластьТовары 		= Макет.ПолучитьОбласть("Товары1");	
		Иначе
			Шапка 				= Макет.ПолучитьОбласть("Шапка");
			ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка");
			ОбластьТовары 		= Макет.ПолучитьОбласть("Товары");	
		КонецЕсли;
		Подвал 				= Макет.ПолучитьОбласть("Подвал");
		
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
			ТабДок.Вывести(ОбластьЗаголовок);
			ТовараНаСумму	  = 0;
			ТовараВКоличестве = 0;
			
			Шапка.Параметры.Заполнить(Выборка);
			
			СтруктураДополнительныПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
			Шапка.Параметры.ТекстВШапкеДокументовПриПечати   = СтруктураДополнительныПараметровМакета.ТекстВШапкеДокументовПриПечати ;
			
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			
			ТабДок.Вывести(ОбластьТоварыШапка);
			
			ТаблицаТоваров = Ссылка.Товары.Выгрузить();
			ТаблицаТоваров.Свернуть("Номенклатура, Цена", "Количество, Сумма"); 
			Для Каждого ВыборкаТовары Из ТаблицаТоваров Цикл
				ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
				ОбластьТовары.Параметры.НоменклатураНаименование = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаТовары.Номенклатура);
				
				Если ВыводитьВПечатиПеремещенияАртикулыИСуммы Тогда
					ОбластьТовары.Параметры.Артикул	= ВыборкаТовары.Номенклатура.Артикул;
					ТовараНаСумму	  = ТовараНаСумму + ВыборкаТовары.сумма;
					ТовараВКоличестве = ТовараВКоличестве + ВыборкаТовары.количество;
				КонецЕсли;
				
				ТабДок.Вывести(ОбластьТовары);
			КонецЦикла;		
			
			Подвал.Параметры.Заполнить(Выборка);
			Подвал.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВПодвалеДокументовПриПечати;
			
			Если ВыводитьВПечатиПеремещенияАртикулыИСуммы Тогда
				ОбластьТовары.Параметры.Валюта = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
				ОбластьТовары.Параметры.ТовараНаСумму = ТовараНаСумму;
				ОбластьТовары.Параметры.ТовараВКоличестве = ТовараВКоличестве;
			КонецЕсли;
			
			ТабДок.Вывести(Подвал);
			
			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетЗарплатыСотрудников") Тогда
				ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
				ОбластьПодписи.Параметры.Заполнить(Выборка);
				ТабДок.Вывести(ОбластьПодписи);
			КонецЕсли;
			
			ВставлятьРазделительСтраниц = ИСТИНА;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры
