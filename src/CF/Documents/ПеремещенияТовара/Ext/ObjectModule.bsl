//sza140610-1354 Хозяин: 
//sza130915-1930 : 

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если НеПроводить Тогда
		НеПроводить = Ложь;
	Иначе
	Если НЕ Отказ Тогда
		
		движения.Товары.Записать();
		
		ПоведениеПрограммыПриРасходеТоваровНижеРекомендованногоМинимальногоОстатка = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПоведениеПрограммыПриРасходеТоваровНижеРекомендованногоМинимальногоОстатка");
		ПоведениеПрограммыПриРасходеТоваровБезОстатка = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПоведениеПрограммыПриРасходеТоваровБезОстатка");
		ВидДвиженияНакопленияРасход = ВидДвиженияНакопления.Расход;
		ВидДвиженияНакопленияПриход = ВидДвиженияНакопления.Приход;
		
		ОстаткиСледуетПроверять = (ЗначениеЗаполнено(ПоведениеПрограммыПриРасходеТоваровНижеРекомендованногоМинимальногоОстатка)
		И НЕ ПоведениеПрограммыПриРасходеТоваровНижеРекомендованногоМинимальногоОстатка = Перечисления.ИгнорироватьРазрешитьЗапретить.Игнорировать )
		ИЛИ (ЗначениеЗаполнено(ПоведениеПрограммыПриРасходеТоваровБезОстатка)
		И НЕ ПоведениеПрограммыПриРасходеТоваровБезОстатка = Перечисления.ИгнорироватьРазрешитьЗапретить.Игнорировать) ;
		
		СтруктураТаблиц 	= ОбщийМодульСервер.ПолучитьТаблицыЦенСписанияИОстатков(ссылка, склад, дата, ОстаткиСледуетПроверять);
		ТаблицаЦенСписания  = СтруктураТаблиц.ТаблицаЦенСписания;
		если ОстаткиСледуетПроверять тогда
			ГТ = СтруктураТаблиц.ТаблицаОстатков;	
		КонецЕсли;
		
		ИспользуетсяСкладВПути = ЗначениеЗаполнено(ДатаПрибытия) и не ДатаПрибытия = дата и ЗначениеЗаполнено(СкладВПути);
		
		Для Каждого ТекСтрокаТовара Из Товары Цикл
			
			Номенклатура = ТекСтрокаТовара.Номенклатура;
			НоменклатураПредопределенный = ОбщийМодульПовтор.ТоварНеУчитываетсяПоКоличеству(Номенклатура);
			КомментарийСтроки = ?(ЗначениеЗаполнено(ТекСтрокаТовара.ОСтроке), ТекСтрокаТовара.ОСтроке, Комментарий);
			
			Количество = ?(ЗначениеЗаполнено(ТекСтрокаТовара.ЕдиницаИзмерения), ТекСтрокаТовара.ЕдиницаИзмерения.Количество * ТекСтрокаТовара.Количество, ТекСтрокаТовара.Количество);
			
			СуммаОстаток 	  = 0;
			КоличествоОстаток = 0;
			
			если ОстаткиСледуетПроверять тогда
				СтрокаОстаток = ГТ.найти(номенклатура, "Номенклатура");
				Если не СтрокаОстаток = Неопределено Тогда
					КоличествоОстаток = СтрокаОстаток.КоличествоОстаток;
					СуммаОстаток = СтрокаОстаток.СуммаОстаток;
				КонецЕсли;
			КонецЕсли;
			
			Если ОстаткиСледуетПроверять
				и НЕ НоменклатураПредопределенный
				и НЕ ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПриАвтоматическомПерепроведенииДокументовОтменитьПроверкиНаОтказ") Тогда
				
				Отказ = ОбщийМодульСервер.ПроверитьОстатокТоваров(ПоведениеПрограммыПриРасходеТоваровНижеРекомендованногоМинимальногоОстатка, ПоведениеПрограммыПриРасходеТоваровБезОстатка, Склад, Номенклатура, ТекСтрокаТовара.Количество, Дата, Истина, КоличествоОстаток, Ссылка);
			КонецЕсли;				
			
			если не отказ тогда
				Если ОбщийМодульПовтор.ЭтоНабор(Номенклатура) Тогда				
					отказ = ОбработатьДвиженияДляНабора(Отказ, Номенклатура, Количество, ТекСтрокаТовара.Сумма, ПоведениеПрограммыПриРасходеТоваровНижеРекомендованногоМинимальногоОстатка, ПоведениеПрограммыПриРасходеТоваровБезОстатка);
					
				ИначеЕсли НЕ НоменклатураПредопределенный Тогда
					
					СтруктураОстатка = новый Структура;
					СтруктураОстатка.Вставить("Количество", КоличествоОстаток);
					СтруктураОстатка.Вставить("Сумма", СуммаОстаток);
					
					Движение = Движения.Товары.Добавить(); 				
					Движение.Количество 	= Количество;						
					Движение.ВидДвижения 	= ВидДвиженияНакопленияРасход;
					Движение.Период 		= Дата;
					Движение.Номенклатура 	= Номенклатура;
					Движение.СерияНоменклатуры = ТекСтрокаТовара.СерияНоменклатуры;
					
					Движение.Склад 			= Склад;
					Движение.Комментарий	= КомментарийСтроки;
					
					если не ТаблицаЦенСписания = Неопределено тогда
						СтрокаЦеныСписания = ТаблицаЦенСписания.найти(номенклатура, "Номенклатура");
						Если не СтрокаЦеныСписания = Неопределено Тогда
							ЦенаСписания = СтрокаЦеныСписания.Цена;
						иначе
							ЦенаСписания = ОбщийМодульСервер.ПолучитьЦенуНаСервере(номенклатура, истина, дата, ложь, , , , , Ссылка, , ТекСтрокаТовара.ЕдиницаИзмерения);
						КонецЕсли;
					иначе
						ЦенаСписания = ОбщийМодульСервер.ПолучитьЦенуНаСервере(номенклатура, истина, дата, ложь, , , , , Ссылка, , ТекСтрокаТовара.ЕдиницаИзмерения);
					КонецЕсли;
					
					СуммаСписания = ЦенаСписания * ТекСтрокаТовара.Количество;
					Движение.Сумма = СуммаСписания;					
					
					Если ИспользуетсяСкладВПути Тогда
						
						Движение = Движения.Товары.Добавить();
						Движение.ВидДвижения 	= ВидДвиженияНакопленияПриход;
						Движение.Период 		= Дата;
						Движение.Номенклатура 	= Номенклатура;
						Движение.СерияНоменклатуры = ТекСтрокаТовара.СерияНоменклатуры;
						Движение.Склад 			= СкладВПути;	
						Движение.Количество 	= Количество;					
						Движение.Сумма 			= СуммаСписания;
						Движение.Комментарий	= КомментарийСтроки;
						
						Движение = Движения.Товары.Добавить();
						Движение.ВидДвижения 	= ВидДвиженияНакопленияРасход;
						Движение.Период 		= ДатаПрибытия;
						Движение.Номенклатура 	= Номенклатура;
						Движение.СерияНоменклатуры = ТекСтрокаТовара.СерияНоменклатуры;
						Движение.Склад 			= СкладВПути;	
						Движение.Количество 	= Количество;					
						Движение.Сумма 			= СуммаСписания;
						Движение.Комментарий	= КомментарийСтроки;
						
					КонецЕсли;
					
					Движение = Движения.Товары.Добавить();
					Движение.ВидДвижения 	= ВидДвиженияНакопленияПриход;
					Движение.Период 		= ?(ИспользуетсяСкладВПути, ДатаПрибытия, Дата);
					Движение.Номенклатура 	= Номенклатура;
					Движение.СерияНоменклатуры = ТекСтрокаТовара.СерияНоменклатуры;
					Движение.Склад 			= СкладКуда;					
					Движение.Количество 	= Количество;					
					Движение.Сумма 			= СуммаСписания;
					Движение.Комментарий	= КомментарийСтроки;
					
				КонецЕсли;
			КонецЕсли;		
		КонецЦикла;	
	КонецЕсли;
	
	движения.Товары.Записывать = НЕ Отказ;	
										  КонецЕсли;
	
КонецПроцедуры

Функция   ОбработатьДвиженияДляНабора(Отказ, Номенклатура, КоличествоВх, Сумма = 0, ПоведениеПрограммыПриРасходеТоваровНижеРекомендованногоМинимальногоОстатка, ПоведениеПрограммыПриРасходеТоваровБезОстатка) //для вложенных наборов
	
	общкво = Номенклатура.Состав.Итог("Количество");
	Если общкво = 0 Тогда
		общкво = 1;
	КонецЕсли;
	
	для каждого СтрокаСоставаНабора из Номенклатура.Состав цикл
		
		НоменклатураСостава = СтрокаСоставаНабора.Номенклатура;
		Количество = КоличествоВх * СтрокаСоставаНабора.Количество * ?(ЗначениеЗаполнено(СтрокаСоставаНабора.ЕдиницаИзмерения), СтрокаСоставаНабора.ЕдиницаИзмерения.Количество, 1);
		
		СуммаЭлемента = 0; //СуммаЭлемента при перемещении пренебречь
		
		Если НоменклатураСостава.ЭтоНабор = ИСТИНА Тогда
			ОбработатьДвиженияДляНабора(Отказ, НоменклатураСостава, КоличествоВх * СтрокаСоставаНабора.количество, СуммаЭлемента, ПоведениеПрограммыПриРасходеТоваровНижеРекомендованногоМинимальногоОстатка, ПоведениеПрограммыПриРасходеТоваровБезОстатка);
		иначе
			
			ЭлементПредопределенный = ОбщийМодульПовтор.ТоварНеУчитываетсяПоКоличеству(НоменклатураСостава);
			
			если не ЭлементПредопределенный тогда
				
				Отказ = ОбщийМодульСервер.ПроверитьОстатокТоваров(ПоведениеПрограммыПриРасходеТоваровНижеРекомендованногоМинимальногоОстатка, ПоведениеПрограммыПриРасходеТоваровБезОстатка, Склад, НоменклатураСостава, Количество, Дата, Истина, , Ссылка);
				
				если не отказ тогда
					Движение = Движения.Товары.Добавить();													
					Движение.Количество 	= Количество;	
					Движение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
					Движение.Период 		= Дата;
					Движение.Номенклатура 	= НоменклатураСостава;
					Движение.Склад 			= Склад;
					
					ЦенаСписания  	= ОбщийМодульСервер.ПолучитьЦенуСписания(НоменклатураСостава, Количество, Дата);
					СуммаСписания 	= ЦенаСписания * Количество;
					Движение.Сумма 	= СуммаСписания;
					
					Движение = Движения.Товары.Добавить();
					Движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
					Движение.Период 		= Дата;
					Движение.Номенклатура 	= НоменклатураСостава;
					Движение.Склад 			= СкладКуда;
					Движение.Количество	 	= Количество;						
					Движение.Сумма			= СуммаСписания;     	
				КонецЕсли;		
			КонецЕсли;		
		КонецЕсли;
		
	КонецЦикла;	
	
	Возврат Отказ;
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	если не отказ Тогда 
		Если Модифицированность() Тогда
			Если ДатаПрибытия < дата Тогда
				ДатаПрибытия = дата;
			КонецЕсли;
			
			Если РежимЗаписи = РежимЗаписиДокумента.Проведение тогда
				
				Если НЕ ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПриАвтоматическомПерепроведенииДокументовОтменитьПроверкиНаОтказ") Тогда
					ПодготовкаКПроведению(Отказ);	
				КонецЕсли;
				
				если ТовараВКоличестве = 0
					и РежимЗаписи = РежимЗаписиДокумента.Проведение тогда
					
					РежимЗаписи = РежимЗаписиДокумента.Запись;
				КонецЕсли;			
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПодготовкаКПроведению(Отказ) Экспорт
	
	если не ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("НеСворачиватьТоварыПоКоличествуВоВсехДокументах") тогда
		Товары.Свернуть("Номенклатура, СерияНоменклатуры, Цена, ЕдиницаИзмерения, ОСтроке", "Количество, Сумма");	
	КонецЕсли;
	
	массивпустыхстрок 	= новый массив;
	массивноменклатуры 	= Новый массив;
	
	для каждого СтрокаТовары из товары цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТовары.Номенклатура) Тогда     				
			массивпустыхстрок.Добавить(СтрокаТовары);
			
		ИначеЕсли СтрокаТовары.Номенклатура.НеОтслеживатьОстаток Тогда
			
			если ОбщийМодульПовторВТеченииСервера.ВыводитьСообщенияМожно() тогда
				//Сообщение = Новый СообщениеПользователю;
				//Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В строке №") + " " + СтрокаТовары.НомерСтроки + символы.ПС + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("попытка перенести номенклатуру, которая не учитывается по количеству:") + " " + СтрокаТовары.Номенклатура;
				//Сообщение.Сообщить();	
				ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В строке №") + " " + СтрокаТовары.НомерСтроки + символы.ПС + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("попытка перенести номенклатуру, которая не учитывается по количеству:") + " " + СтрокаТовары.Номенклатура, , Ссылка);
			КонецЕсли;
			
			Отказ = Истина;
			
		иначеесли не массивноменклатуры.Найти(СтрокаТовары.Номенклатура) = Неопределено тогда
			
			если ОбщийМодульПовторВТеченииСервера.ВыводитьСообщенияМожно() тогда
				//Сообщение = Новый СообщениеПользователю;
				//Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В строке №") + " " + СтрокаТовары.НомерСтроки + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(" повторяется номенклатура:") + " " + СтрокаТовары.Номенклатура;
				//Сообщение.Сообщить();
				ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В строке №") + " " + СтрокаТовары.НомерСтроки + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(" повторяется номенклатура:") + " " + СтрокаТовары.Номенклатура, , Ссылка);
			КонецЕсли;				
			
		иначе
			массивноменклатуры.Добавить(СтрокаТовары.Номенклатура);
			
		КонецЕсли;                                    	
	КонецЦикла;
	
	Если НЕ Отказ Тогда
		
		для каждого СтрокаТовары из массивпустыхстрок цикл
			товары.Удалить(СтрокаТовары);	
		КонецЦикла;
		
		если Склад = СкладКуда тогда
			если ОбщийМодульПовторВТеченииСервера.ВыводитьСообщенияМожно() тогда
				//Сообщение = Новый СообщениеПользователю;
				//Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Нельзя выбирать в качестве источника и получателя один склад!");
				//Сообщение.Сообщить();                                               	
				ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Нельзя выбирать в качестве источника и получателя один склад!"), , Ссылка);
			КонецЕсли;
			отказ = истина;		
			
		иначе
			ОбщийМодульТоварСервер.ПроверитьИСортироватьТаблицуТовары(ЭтотОбъект);
			
			ТовараВКоличестве = товары.итог("Количество");
			Если ЗначениеЗаполнено(ВидЦен) Тогда
				ТовараНаСумму = ОбщийМодульСервер.ПоКурсу(товары.Итог("Сумма"), ВидЦен.ВалютаЦены, , Дата);
			Иначе
				ТовараНаСумму = товары.Итог("Сумма");
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступленияТовара") Тогда
			Комментарий 		= ДанныеЗаполнения.Комментарий;
			Склад 				= ДанныеЗаполнения.Склад;
			ВидЦен 				= ДанныеЗаполнения.ВидЦен;
			ТовараВКоличестве 	= ДанныеЗаполнения.ТовараВКоличестве;
			ТовараНаСумму 		= ДанныеЗаполнения.ТовараНаСумму;
			
			Для Каждого ТекСтрокаТовара Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура 	= ТекСтрокаТовара.Номенклатура;
				НоваяСтрока.СерияНоменклатуры = ТекСтрокаТовара.СерияНоменклатуры;
				НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовара.ЕдиницаИзмерения;
				НоваяСтрока.Количество 		= ТекСтрокаТовара.Количество;
				НоваяСтрока.Цена 			= ТекСтрокаТовара.Цена;
				НоваяСтрока.Сумма 			= ТекСтрокаТовара.Сумма;
				НоваяСтрока.ОСтроке			= ТекСтрокаТовара.ОСтроке;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КорректировкиИРегистрацияОстатков") Тогда
			Комментарий 		= ДанныеЗаполнения.Комментарий;
			ВидЦен 				= ДанныеЗаполнения.ВидЦен;
			ТовараВКоличестве 	= ДанныеЗаполнения.ТовараВКоличестве;
			ТовараНаСумму 		= ДанныеЗаполнения.ТовараНаСумму;
			
			Для Каждого ТекСтрокаТовара Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура 	= ТекСтрокаТовара.Номенклатура;
				НоваяСтрока.СерияНоменклатуры = ТекСтрокаТовара.СерияНоменклатуры;
				НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовара.ЕдиницаИзмерения;
				НоваяСтрока.Количество 		= ТекСтрокаТовара.Количество;
				НоваяСтрока.Цена 			= ТекСтрокаТовара.Цена;
				НоваяСтрока.Сумма 			= НоваяСтрока.Цена * НоваяСтрока.Количество ;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УстановкиЦен") Тогда
			Комментарий = ДанныеЗаполнения.Комментарий;
			ВидЦен 		= ДанныеЗаполнения.ВидЦен;
			Для Каждого ТекСтрокаТовара Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Количество 		= 1;
				НоваяСтрока.Номенклатура 	= ТекСтрокаТовара.Номенклатура;
				НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовара.ЕдиницаИзмерения;
				НоваяСтрока.Цена 			= ТекСтрокаТовара.Цена;
				НоваяСтрока.Сумма 			= НоваяСтрока.Цена *НоваяСтрока.Количество;
			КонецЦикла;
			
		КонецЕсли;	
		
		ТовараВКоличестве 	= Товары.Итог("Количество");
		ТовараНаСумму 		= Товары.Итог("Сумма");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ЭтотОбъект.комментарий = "";
КонецПроцедуры
