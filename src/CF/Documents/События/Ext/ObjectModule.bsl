#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// sza151210-2339 про
// sza150926-0208 
Процедура ЗаполнитьПоВидуСобытий() Экспорт
	
	ВидСобытия = ВидСобытия;
	
	Если ВидСобытия.ЗаполняютсяТиповыеЗначения 
		И НЕ ЗначениеЗаполнено(ЭтотОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВидСобытия);
		
		Если НЕ ЗначениеЗаполнено(Сотрудник) Тогда
			Сотрудник = ОбщийМодульПовтор.ПолучитьТекущегоСотрудника();
		КонецЕсли;			
	КонецЕсли;
	
	Если ВидСобытия.УчебноПрактическоеЗанятие Тогда
		
	КонецЕсли;
	
	Если ВидСобытия.ПриСозданииНовогоСобытияПрочитатьВсеИзПредыдущего
		И НЕ ЗначениеЗаполнено(ЭтотОбъект.Ссылка) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	События.Ссылка
		|ИЗ Документ.События КАК События
		|ГДЕ События.Сотрудник = &Сотрудник
		|	И События.ВидСобытия = &ВидСобытия
		|	И События.Дата < &ТекущаяДата
		|	И События.ПометкаУдаления = ЛОЖЬ
		|УПОРЯДОЧИТЬ ПО События.Дата УБЫВ";
		
		Запрос.УстановитьПараметр("ВидСобытия", ВидСобытия);
		Запрос.УстановитьПараметр("Сотрудник", Сотрудник); // может быть пустой
		Запрос.УстановитьПараметр("ТекущаяДата", Дата);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			ВыборкаДетальныеЗаписи.Следующий();			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаДетальныеЗаписи.Ссылка);			
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Клиенты") Тогда
		Контакт = ДанныеЗаполнения.Контакт;
		Клиент = ДанныеЗаполнения.Ссылка;
		ВидСобытия = Справочники.ВидыСобытий.НайтиПоНаименованию(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Встреча с клиентом"));
		
		СтрокаТаблицы = Клиенты.Добавить();
		СтрокаТаблицы.Клиент = Клиент;
		СтрокаТаблицы.Контакт = Контакт;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Поставщики") Тогда
		Контакт = ДанныеЗаполнения.Контакт;
		Поставщик = ДанныеЗаполнения.Ссылка;
		ВидСобытия = Справочники.ВидыСобытий.НайтиПоНаименованию(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Встреча с поставщиком"));
		
		СтрокаТаблицы = Поставщики.Добавить();
		СтрокаТаблицы.Поставщик = Поставщик;
		СтрокаТаблицы.Контакт = Контакт;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ВидыСобытий") Тогда
		
		ВидСобытия = ДанныеЗаполнения.Ссылка;
		ЗаполнитьПоВидуСобытий();
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Организации") Тогда
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		Организация = ДанныеЗаполнения.Ссылка;
		
		СтрокаТаблицы = Организации.Добавить();
		СтрокаТаблицы.Организация = Организация;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		Организация = ДанныеЗаполнения.Организация;
		Сотрудник = ДанныеЗаполнения.Ссылка;
		
		ВидСобытия = Справочники.ВидыСобытий.НайтиПоНаименованию(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Собрание сотрудников"));
		
		Для Каждого ТекСтрокаСклады Из ДанныеЗаполнения.Склады Цикл
			НоваяСтрока = Склады.Добавить();
			НоваяСтрока.ОСтроке = ТекСтрокаСклады.ОСтроке;
			НоваяСтрока.Склад = ТекСтрокаСклады.Склад;
		КонецЦикла;
		
		СтрокаТаблицы = Организации.Добавить();
		СтрокаТаблицы.Организация = Организация;
		СтрокаТаблицы = Сотрудники.Добавить();
		СтрокаТаблицы.Сотрудник = Сотрудник;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВыполненияРабот") Тогда
		Клиент = ДанныеЗаполнения.Клиент;
		Организация = ДанныеЗаполнения.Организация;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		Тема = СокрЛП(ДанныеЗаполнения.Ссылка);
		
		СтрокаТаблицы = Клиенты.Добавить();
		СтрокаТаблицы.Клиент = Клиент;
		СтрокаТаблицы.Контакт = Контакт;
		
		СтрокаТаблицы = Организации.Добавить();
		СтрокаТаблицы.Организация = Организация;
		СтрокаТаблицы = Сотрудники.Добавить();
		СтрокаТаблицы.Сотрудник = Сотрудник;
		
		СтрокаТаблицы = ДокументыСобытия.Добавить();
		СтрокаТаблицы.Документ = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.ОСтроке = ДанныеЗаполнения.Комментарий;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ДвиженияДенег") Тогда
		Организация = ДанныеЗаполнения.Организация;
		Тема = СокрЛП(ДанныеЗаполнения.Ссылка);
		
		СтрокаТаблицы = Организации.Добавить();
		СтрокаТаблицы.Организация = Организация;
		
		СтрокаТаблицы = ДокументыСобытия.Добавить();
		СтрокаТаблицы.Документ = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.ОСтроке = ДанныеЗаполнения.Комментарий;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОказанияУслугЗаВремя") Тогда
		Клиент = ДанныеЗаполнения.Клиент;
		Организация = ДанныеЗаполнения.Организация;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		Тема = СокрЛП(ДанныеЗаполнения.Ссылка);
		
		СтрокаТаблицы = Клиенты.Добавить();
		СтрокаТаблицы.Клиент = Клиент;
		СтрокаТаблицы.Контакт = Контакт;
		
		СтрокаТаблицы = Организации.Добавить();
		СтрокаТаблицы.Организация = Организация;
		СтрокаТаблицы = Сотрудники.Добавить();
		СтрокаТаблицы.Сотрудник = Сотрудник;
		
		СтрокаТаблицы = ДокументыСобытия.Добавить();
		СтрокаТаблицы.Документ = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.ОСтроке = ДанныеЗаполнения.Комментарий;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Инвентаризации") Тогда
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		Тема = СокрЛП(ДанныеЗаполнения.Ссылка);
		
		СтрокаТаблицы = Сотрудники.Добавить();
		СтрокаТаблицы.Сотрудник = Сотрудник;
		
		СтрокаТаблицы = ДокументыСобытия.Добавить();
		СтрокаТаблицы.Документ = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.ОСтроке = ДанныеЗаполнения.Комментарий;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КорректировкиИРегистрацияОстатков") Тогда
		Тема = СокрЛП(ДанныеЗаполнения.Ссылка);
		
		СтрокаТаблицы = ДокументыСобытия.Добавить();
		СтрокаТаблицы.Документ = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.ОСтроке = ДанныеЗаполнения.Комментарий;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещенияТовара") Тогда
		Тема = СокрЛП(ДанныеЗаполнения.Ссылка);
		
		СтрокаТаблицы = ДокументыСобытия.Добавить();
		СтрокаТаблицы.Документ = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.ОСтроке = ДанныеЗаполнения.Комментарий;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступленияТовара") Тогда
		Организация = ДанныеЗаполнения.Организация;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		Тема = СокрЛП(ДанныеЗаполнения.Ссылка);
		
		СтрокаТаблицы = Организации.Добавить();
		СтрокаТаблицы.Организация = Организация;
		СтрокаТаблицы = Сотрудники.Добавить();
		СтрокаТаблицы.Сотрудник = Сотрудник;
		
		СтрокаТаблицы = ДокументыСобытия.Добавить();
		СтрокаТаблицы.Документ = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.ОСтроке = ДанныеЗаполнения.Комментарий;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходыТовара") Тогда
		Организация = ДанныеЗаполнения.Организация;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		Тема = СокрЛП(ДанныеЗаполнения.Ссылка);
		
		СтрокаТаблицы = Организации.Добавить();
		СтрокаТаблицы.Организация = Организация;
		СтрокаТаблицы = Сотрудники.Добавить();
		СтрокаТаблицы.Сотрудник = Сотрудник;
		
		СтрокаТаблицы = ДокументыСобытия.Добавить();
		СтрокаТаблицы.Документ = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.ОСтроке = ДанныеЗаполнения.Комментарий;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.События") Тогда
		АдресПомещения = ДанныеЗаполнения.АдресПомещения;
		ДатаРедакции = ДанныеЗаполнения.ДатаРедакции;
		ДатаСоздания = ДанныеЗаполнения.ДатаСоздания;
		Клиент = ДанныеЗаполнения.Клиент;
		Контакт = ДанныеЗаполнения.Контакт;
		Направление = ДанныеЗаполнения.Направление;
		НеПроводить = ДанныеЗаполнения.НеПроводить;
		Организация = ДанныеЗаполнения.Организация;
		Ответственный = ДанныеЗаполнения.Ответственный;
		Поставщик = ДанныеЗаполнения.Поставщик;
		Результат = ДанныеЗаполнения.Результат;
		СкладСписанияРекламнойПродукции = ДанныеЗаполнения.СкладСписанияРекламнойПродукции;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		ДокументСторно = ДанныеЗаполнения.Ссылка;
		Тема = СокрЛП(ДанныеЗаполнения.Ссылка);
		Сторный = ДанныеЗаполнения.Сторный;
		
		Для Каждого ТекСтрокаАдресаПочты Из ДанныеЗаполнения.АдресаПочты Цикл
			НоваяСтрока = АдресаПочты.Добавить();
			НоваяСтрока.Адрес = ТекСтрокаАдресаПочты.Адрес;
			НоваяСтрока.ОСтроке = ТекСтрокаАдресаПочты.ОСтроке;
		КонецЦикла;
		Для Каждого ТекСтрокаДоговора Из ДанныеЗаполнения.Договора Цикл
			НоваяСтрока = Договора.Добавить();
			НоваяСтрока.Договор = ТекСтрокаДоговора.Договор;
			НоваяСтрока.ОСтроке = ТекСтрокаДоговора.ОСтроке;
		КонецЦикла;
		Для Каждого ТекСтрокаДокументы Из ДанныеЗаполнения.Документы Цикл
			НоваяСтрока = ДокументыСобытия.Добавить();
			НоваяСтрока.Документ = ТекСтрокаДокументы.Документ;
			НоваяСтрока.ОСтроке = ТекСтрокаДокументы.ОСтроке;
		КонецЦикла;
		Для Каждого ТекСтрокаЗадействованныеСредства Из ДанныеЗаполнения.ЗадействованныеСредства Цикл
			НоваяСтрока = ЗадействованныеСредства.Добавить();
			НоваяСтрока.ДатаНачала = ТекСтрокаЗадействованныеСредства.ДатаНачала;
			НоваяСтрока.ДатаОкончания = ТекСтрокаЗадействованныеСредства.ДатаОкончания;
			НоваяСтрока.Коэффициент = ТекСтрокаЗадействованныеСредства.Коэффициент;
			НоваяСтрока.ОСтроке = ТекСтрокаЗадействованныеСредства.ОСтроке;
			НоваяСтрока.Средство = ТекСтрокаЗадействованныеСредства.Средство;
		КонецЦикла;
		Для Каждого ТекСтрокаКлиенты Из ДанныеЗаполнения.Клиенты Цикл
			НоваяСтрока = Клиенты.Добавить();
			НоваяСтрока.Клиент = ТекСтрокаКлиенты.Клиент;
			НоваяСтрока.Контакт = ТекСтрокаКлиенты.Контакт;
			НоваяСтрока.Место = ТекСтрокаКлиенты.Место;
			НоваяСтрока.НеУчаствовал = ТекСтрокаКлиенты.НеУчаствовал;
			НоваяСтрока.ОСтроке = ТекСтрокаКлиенты.ОСтроке;
			НоваяСтрока.Результат = ТекСтрокаКлиенты.Результат;
		КонецЦикла;
		Для Каждого ТекСтрокаНаправления Из ДанныеЗаполнения.Направления Цикл
			НоваяСтрока = Направления.Добавить();
			НоваяСтрока.Направление = ТекСтрокаНаправления.Направление;
			НоваяСтрока.ОСтроке = ТекСтрокаНаправления.ОСтроке;
		КонецЦикла;
		Для Каждого ТекСтрокаОбъектыКлиентов Из ДанныеЗаполнения.ОбъектыКлиентов Цикл
			НоваяСтрока = ОбъектыКлиентов.Добавить();
			НоваяСтрока.ОбъектКлиента = ТекСтрокаОбъектыКлиентов.ОбъектКлиента;
			НоваяСтрока.ОСтроке = ТекСтрокаОбъектыКлиентов.ОСтроке;
			НоваяСтрока.Результат = ТекСтрокаОбъектыКлиентов.Результат;
		КонецЦикла;
		Для Каждого ТекСтрокаОрганизации Из ДанныеЗаполнения.Организации Цикл
			НоваяСтрока = Организации.Добавить();
			НоваяСтрока.Организация = ТекСтрокаОрганизации.Организация;
			НоваяСтрока.ОСтроке = ТекСтрокаОрганизации.ОСтроке;
		КонецЦикла;
		Для Каждого ТекСтрокаПодразделения Из ДанныеЗаполнения.Подразделения Цикл
			НоваяСтрока = Подразделения.Добавить();
			НоваяСтрока.ОСтроке = ТекСтрокаПодразделения.ОСтроке;
			НоваяСтрока.Подразделение = ТекСтрокаПодразделения.Подразделение;
			НоваяСтрока.Результат = ТекСтрокаПодразделения.Результат;
		КонецЦикла;
		Для Каждого ТекСтрокаПомещения Из ДанныеЗаполнения.Помещения Цикл
			НоваяСтрока = Помещения.Добавить();
			НоваяСтрока.АдресПомещения = ТекСтрокаПомещения.АдресПомещения;
			НоваяСтрока.ОСтроке = ТекСтрокаПомещения.ОСтроке;
		КонецЦикла;
		Для Каждого ТекСтрокаПоставщики Из ДанныеЗаполнения.Поставщики Цикл
			НоваяСтрока = Поставщики.Добавить();
			НоваяСтрока.Контакт = ТекСтрокаПоставщики.Контакт;
			НоваяСтрока.Место = ТекСтрокаПоставщики.Место;
			НоваяСтрока.НеУчаствовал = ТекСтрокаПоставщики.НеУчаствовал;
			НоваяСтрока.ОСтроке = ТекСтрокаПоставщики.ОСтроке;
			НоваяСтрока.Поставщик = ТекСтрокаПоставщики.Поставщик;
			НоваяСтрока.Результат = ТекСтрокаПоставщики.Результат;
		КонецЦикла;
		Для Каждого ТекСтрокаПроизводители Из ДанныеЗаполнения.Производители Цикл
			НоваяСтрока = Производители.Добавить();
			НоваяСтрока.ОСтроке = ТекСтрокаПроизводители.ОСтроке;
			НоваяСтрока.Производитель = ТекСтрокаПроизводители.Производитель;
		КонецЦикла;
		Для Каждого ТекСтрокаРегионыИЛокации Из ДанныеЗаполнения.РегионыИЛокации Цикл
			НоваяСтрока = РегионыИЛокации.Добавить();
			НоваяСтрока.Локация = ТекСтрокаРегионыИЛокации.Локация;
			НоваяСтрока.ОСтроке = ТекСтрокаРегионыИЛокации.ОСтроке;
			НоваяСтрока.Регион = ТекСтрокаРегионыИЛокации.Регион;
		КонецЦикла;
		Для Каждого ТекСтрокаРекламнаяПродукция Из ДанныеЗаполнения.РекламнаяПродукция Цикл
			НоваяСтрока = РекламнаяПродукция.Добавить();
			НоваяСтрока.Номенклатура = ТекСтрокаРекламнаяПродукция.Номенклатура;
			НоваяСтрока.ОСтроке = ТекСтрокаРекламнаяПродукция.ОСтроке;
			НоваяСтрока.Списано = ТекСтрокаРекламнаяПродукция.Списано;
		КонецЦикла;
		Для Каждого ТекСтрокаСклады Из ДанныеЗаполнения.Склады Цикл
			НоваяСтрока = Склады.Добавить();
			НоваяСтрока.Дата = ТекСтрокаСклады.Дата;
			НоваяСтрока.ОСтроке = ТекСтрокаСклады.ОСтроке;
			НоваяСтрока.Склад = ТекСтрокаСклады.Склад;
		КонецЦикла;
		Для Каждого ТекСтрокаСотрудники Из ДанныеЗаполнения.Сотрудники Цикл
			НоваяСтрока = Сотрудники.Добавить();
			НоваяСтрока.Место = ТекСтрокаСотрудники.Место;
			НоваяСтрока.НеУчаствовал = ТекСтрокаСотрудники.НеУчаствовал;
			НоваяСтрока.ОСтроке = ТекСтрокаСотрудники.ОСтроке;
			НоваяСтрока.Результат = ТекСтрокаСотрудники.Результат;
			НоваяСтрока.Сотрудник = ТекСтрокаСотрудники.Сотрудник;
		КонецЦикла;
		Для Каждого ТекСтрокаТелефоны Из ДанныеЗаполнения.Телефоны Цикл
			НоваяСтрока = Телефоны.Добавить();
			НоваяСтрока.Длительность = ТекСтрокаТелефоны.Длительность;
			НоваяСтрока.ОСтроке = ТекСтрокаТелефоны.ОСтроке;
			НоваяСтрока.Телефон = ТекСтрокаТелефоны.Телефон;
		КонецЦикла;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.ОСтроке = ТекСтрокаТовары.ОСтроке;
			НоваяСтрока.СерияНоменклатуры = ТекСтрокаТовары.СерияНоменклатуры;
		КонецЦикла;
		Для Каждого ТекСтрокаЭлементыДанных Из ДанныеЗаполнения.ЭлементыДанных Цикл
			НоваяСтрока = ЭлементыДанных.Добавить();
			НоваяСтрока.ОСтроке = ТекСтрокаЭлементыДанных.ОСтроке;
			НоваяСтрока.СсылкаНаЭлемент = ТекСтрокаЭлементыДанных.СсылкаНаЭлемент;
		КонецЦикла;
		
		СтрокаТаблицы = Поставщики.Добавить();
		СтрокаТаблицы.Поставщик = Поставщик;
		СтрокаТаблицы.Контакт = Контакт;
		
		СтрокаТаблицы = Клиенты.Добавить();
		СтрокаТаблицы.Клиент = Клиент;
		СтрокаТаблицы.Контакт = Контакт;
		
		СтрокаТаблицы = Организации.Добавить();
		СтрокаТаблицы.Организация = Организация;
		СтрокаТаблицы = Сотрудники.Добавить();
		СтрокаТаблицы.Сотрудник = Сотрудник;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТаблицыДанных") Тогда
		Тема = СокрЛП(ДанныеЗаполнения.Ссылка);
		
		СтрокаТаблицы = ДокументыСобытия.Добавить();
		СтрокаТаблицы.Документ = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.ОСтроке = ДанныеЗаполнения.Комментарий;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УстановкиЦен") Тогда
		Поставщик = ДанныеЗаполнения.Поставщик;
		Тема = СокрЛП(ДанныеЗаполнения.Ссылка);
		
		СтрокаТаблицы = Поставщики.Добавить();
		СтрокаТаблицы.Поставщик = Поставщик;
		СтрокаТаблицы.Контакт = Контакт;		
		
		СтрокаТаблицы = ДокументыСобытия.Добавить();
		СтрокаТаблицы.Документ = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.ОСтроке = ДанныеЗаполнения.Комментарий;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтчетыКомиссионеров") Тогда
		Клиент = ДанныеЗаполнения.Клиент;
		Организация = ДанныеЗаполнения.Организация;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		Тема = СокрЛП(ДанныеЗаполнения.Ссылка);
		
		СтрокаТаблицы = Клиенты.Добавить();
		СтрокаТаблицы.Клиент = Клиент;
		СтрокаТаблицы.Контакт = Контакт;
		
		СтрокаТаблицы = Организации.Добавить();
		СтрокаТаблицы.Организация = Организация;
		СтрокаТаблицы = Сотрудники.Добавить();
		СтрокаТаблицы.Сотрудник = Сотрудник;
		
		СтрокаТаблицы = ДокументыСобытия.Добавить();
		СтрокаТаблицы.Документ = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.ОСтроке = ДанныеЗаполнения.Комментарий;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПланыДоходовИРасходовДенег") Тогда
		Тема = СокрЛП(ДанныеЗаполнения.Ссылка);
		
		СтрокаТаблицы = ДокументыСобытия.Добавить();
		СтрокаТаблицы.Документ = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.ОСтроке = ДанныеЗаполнения.Комментарий;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПланыПродаж") Тогда
		Тема = СокрЛП(ДанныеЗаполнения.Ссылка);
		
		СтрокаТаблицы = ДокументыСобытия.Добавить();
		СтрокаТаблицы.Документ = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.ОСтроке = ДанныеЗаполнения.Комментарий;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Номенклатура") Тогда
		Тема = ДанныеЗаполнения.Наименование;
		
		СтрокаТаблицы = ДокументыСобытия.Добавить();
		СтрокаТаблицы.Документ = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.ОСтроке = ДанныеЗаполнения.Комментарий;
		
		СтрокаТаблицы = Товары.Добавить();
		СтрокаТаблицы.Номенклатура = ДанныеЗаполнения.Ссылка;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ОбъектыКлиентов") Тогда
		Тема = ДанныеЗаполнения.Наименование;
		
		СтрокаТаблицы = ДокументыСобытия.Добавить();
		СтрокаТаблицы.Документ = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.ОСтроке = ДанныеЗаполнения.Комментарий;
		
		СтрокаТаблицы = ОбъектыКлиентов.Добавить();
		СтрокаТаблицы.ОбъектКлиента = ДанныеЗаполнения.Ссылка;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Склады") Тогда
		Тема = ДанныеЗаполнения.Наименование;
		
		СтрокаТаблицы = ДокументыСобытия.Добавить();
		СтрокаТаблицы.Документ = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.ОСтроке = ДанныеЗаполнения.Комментарий;
		
		СтрокаТаблицы = Склады.Добавить();
		СтрокаТаблицы.Склад = ДанныеЗаполнения.Ссылка;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Договора") Тогда
		Тема = ДанныеЗаполнения.Наименование;
		Организация = ДанныеЗаполнения.Организация;
		
		СтрокаТаблицы = Организации.Добавить();
		СтрокаТаблицы.Организация = Организация;
		
		СтрокаТаблицы = Договора.Добавить();
		СтрокаТаблицы.Договор = ДанныеЗаполнения.Ссылка;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Подразделения") Тогда
		Тема = ДанныеЗаполнения.Наименование;
		Организация = ДанныеЗаполнения.Организация;
		
		СтрокаТаблицы = Организации.Добавить();
		СтрокаТаблицы.Организация = Организация;
		
		СтрокаТаблицы = Подразделения.Добавить();
		СтрокаТаблицы.Подразделение = ДанныеЗаполнения.Ссылка;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.СерииНоменклатуры") Тогда
		Тема = ДанныеЗаполнения.Наименование;
		
		СтрокаТаблицы = Товары.Добавить();
		СтрокаТаблицы.СерияНоменклатуры = ДанныеЗаполнения.Ссылка;
		СтрокаТаблицы.Номенклатура = ДанныеЗаполнения.Владелец;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.СредстваПредприятия") Тогда
		Тема = ДанныеЗаполнения.Наименование;
		
		СтрокаТаблицы = ЭлементыДанных.Добавить();
		СтрокаТаблицы.СсылкаНаЭлемент = ДанныеЗаполнения.Ссылка;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Регионы") Тогда
		Тема = ДанныеЗаполнения.Наименование;
		
		СтрокаТаблицы = ЭлементыДанных.Добавить();
		СтрокаТаблицы.СсылкаНаЭлемент = ДанныеЗаполнения.Ссылка;
		
	КонецЕсли;
	
КонецПроцедуры
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если НеПроводить Тогда
		НеПроводить = ЛОЖЬ;
		Записать(РежимЗаписиДокумента.Запись);
		
	Иначе
		Если НЕ Отказ Тогда
			
			Движения.Товары.Записать();
			Движения.Деньги.Записать();
			Движения.ЗадействованныеСредстваПредприятия.Записать();
			
			Если ЗначениеЗаполнено(ВидСобытия) Тогда
				Если ВидСобытия.ИспользуетсяРекламнаяПродукция Тогда
					
					Если НЕ Сторный Тогда
						ВидДвиженияНакопленияПриход = ВидДвиженияНакопления.Приход;
						ВидДвиженияНакопленияРасход = ВидДвиженияНакопления.Расход;
					Иначе
						ВидДвиженияНакопленияПриход = ВидДвиженияНакопления.Расход;
						ВидДвиженияНакопленияРасход = ВидДвиженияНакопления.Приход;
					КонецЕсли;
					
					Для Каждого ТекСтрокаРекламнаяПродукция Из РекламнаяПродукция Цикл
						Движение = Движения.Товары.Добавить();
						Движение.ВидДвижения 	= ВидДвиженияНакопленияРасход;
						Движение.Период 		= Дата;
						Движение.Номенклатура 	= ТекСтрокаРекламнаяПродукция.Номенклатура;
						Движение.Склад 			= СкладСписанияРекламнойПродукции;
						Движение.Количество 	= ТекСтрокаРекламнаяПродукция.Списано;
						Движение.Комментарий 	= ТекСтрокаРекламнаяПродукция.ОСтроке;
					КонецЦикла;	
				КонецЕсли;
				
				Если ВидСобытия.ЗадействованыСредстваПредприятия
					И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетСредствПредприятия") Тогда
					
					Для Каждого ТекСтрокаЗадействованныеСредства Из ЗадействованныеСредства Цикл
						Движение = Движения.ЗадействованныеСредстваПредприятия.Добавить();
						Движение.Период 		= Дата;
						Движение.Средство 		= ТекСтрокаЗадействованныеСредства.Средство;
						Движение.Количество 	= ТекСтрокаЗадействованныеСредства.Коэффициент;
						Движение.Комментарий 	= Комментарий;
						Движение.ДатаОкончания 	= ДатаОкончания;
					КонецЦикла;	
				КонецЕсли;
				
				Если ВидСобытия.ПредполагаютсяСобственныеРасходыДенег
					И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетДвиженияДенег") Тогда
					
					Для Каждого ТекСтрокаСобственныхРасходов Из СобственныеРасходы Цикл
						Движение = Движения.Деньги.Добавить();
						Движение.Период 		= ?(ТекСтрокаСобственныхРасходов.ДатаРасхода = '00010101000000', Дата, ТекСтрокаСобственныхРасходов.ДатаРасхода);
						Движение.Валюта			= ТекСтрокаСобственныхРасходов.Валюта;
						Движение.ВидДвижения	= ВидДвиженияНакопленияРасход;
						Движение.Сумма			= ТекСтрокаСобственныхРасходов.Сумма * ТекСтрокаСобственныхРасходов.Курс;
						Движение.Статья			= ТекСтрокаСобственныхРасходов.Статья;
						Движение.СуммаВВалюте	= ТекСтрокаСобственныхРасходов.Сумма;
						Движение.ФормаОплаты	= ?(ЗначениеЗаполнено(ТекСтрокаСобственныхРасходов.ХранилищеДенег), ТекСтрокаСобственныхРасходов.ХранилищеДенег.ФормаОплаты, ТекСтрокаСобственныхРасходов.ФормаОплаты);
						Движение.ХранилищеДенег	= ТекСтрокаСобственныхРасходов.ХранилищеДенег;
					КонецЦикла;	
				КонецЕсли;
				
			КонецЕсли;
			
			Движения.Товары.Записывать = НЕ Отказ;
			Движения.Деньги.Записывать = НЕ Отказ;
			Движения.ЗадействованныеСредстваПредприятия.Записывать = НЕ Отказ;
			
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если НЕ Отказ Тогда		
		Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000971", , Отказ, ЭтотОбъект);	
	КонецЕсли;
	
КонецПроцедуры
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
Если ОбменДанными.Загрузка Тогда 
     Возврат; 
 КонецЕсли; 
 
 Если НЕ Отказ
		И НЕ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("МассоваяЗагрузка", ИСТИНА)
		И Модифицированность() 
		И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Если НЕ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПриАвтоматическомПерепроведенииДокументовОтменитьПроверкиНаОтказ") Тогда
			ПодготовкаКПроведению(Отказ);	
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВидСобытия)
			И РежимЗаписи 		= РежимЗаписиДокумента.Проведение Тогда
			
			РежимЗаписи = РежимЗаписиДокумента.Запись;
		КонецЕсли;	
		
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ФормироватьОписаниеТаблицОбъектовДляИхСписков") Тогда
			ОбщийМодульСервер.ОформитьОписаниеТаблицы(ЭтотОбъект);
			ОбщийМодульСервер.ОформитьОписаниеТаблицы(ЭтотОбъект, "Клиенты", "Клиент", "-");
			ОбщийМодульСервер.ОформитьОписаниеТаблицы(ЭтотОбъект, "Сотрудники", "Сотрудник", "-");
			ОбщийМодульСервер.ОформитьОписаниеТаблицы(ЭтотОбъект, "Поставщики", "Поставщик", "-");
			ОбщийМодульСервер.ОформитьОписаниеТаблицы(ЭтотОбъект, "Направления", "Направление", "-");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
Процедура ПодготовкаКПроведению(Отказ) Экспорт
	
	Если НЕ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("МассоваяЗагрузка", ИСТИНА) Тогда
		Если НЕ Отказ Тогда
			Если Дата > ТекущаяДата() 
				И ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002900", , , ЭтотОбъект) Тогда
				
				Дата = ТекущаяДата();
				ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Дата и время документа установлены сейчас."));
			КонецЕсли;	
		КонецЕсли;		
		
		Если НЕ ЗначениеЗаполнено(ДатаОкончания) Тогда
			ДатаОкончания = Дата;		
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры
Процедура ПриКопировании(ОбъектКопирования)
	Комментарий = "";
КонецПроцедуры

#КонецЕсли