// sza151102-0445 
// sza150924-0308 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000971", ЭтаФорма, Отказ, );
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;	
		
		ОбщийМодульСервер.ОбеспечитьСписокОтборов(Список);	
		
		Сотрудник = ОбщийМодульПовтор.ПолучитьТекущегоСотрудника();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 25
		|	События.ВидСобытия,
		|	События.Дата КАК Дата
		|ИЗ Документ.События КАК События
		|ГДЕ События.ПометкаУдаления = ЛОЖЬ
		|	И События.Сотрудник = &Сотрудник
		|УПОРЯДОЧИТЬ ПО Дата УБЫВ";
		
		Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			МассивКодов = Новый Массив;
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				ЧастыйВидСобытия = ВыборкаДетальныеЗаписи.ВидСобытия;
				КодВида = ЧастыйВидСобытия.Код;
				
				Если МассивКодов.Найти(КодВида) = Неопределено Тогда
					МассивКодов.Добавить(КодВида);
					
					НоваяКоманда = Команды.Добавить("КнопкаКоманды" + КодВида);
					НоваяКоманда.Действие  = "ОткрытьКнопкуКоманды";
					
					НоваяКоманда = Элементы.Добавить("КнопкаКоманды" + КодВида, тип("КнопкаФормы"), Элементы.ГруппаЧастыхВидовСобытий);
					НоваяКоманда.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Новое") + ": " + СокрЛП(ЧастыйВидСобытия);
					СтрокаКоманда = ТаблицаКоманд.Добавить();
					СтрокаКоманда.Код = КодВида;
					СтрокаКоманда.ВидСобытий = ЧастыйВидСобытия.Ссылка;
					
					НоваяКоманда.ИмяКоманды = "КнопкаКоманды" + КодВида;	
				КонецЕсли;
				
				Если МассивКодов.Количество() = 10 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	ОбновитьПроверитьОтбор();
	ПодключитьОбработчикОжидания("ПослеИзображенияОкнаФормы", 0.3, ИСТИНА);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзображенияОкнаФормы() // Когда окно уже нарисовано пользователю
	ЭтаФорма.Элементы.ФормаЗакрыть.Видимость = НЕ ЭтаФорма.Окно = Неопределено;	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоВидуСобытийПриИзменении(Элемент)
	ОбновитьПроверитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПроверитьОтбор()
	
	ОбщийМодульКлиент.УстановитьЭлементОтбора(
	Список.Отбор,
	"ВидСобытия",
	ОтборПоВидуСобытий,
	ВидСравненияКомпоновкиДанных.Равно,
	, ЗначениеЗаполнено(ОтборПоВидуСобытий)
	);
	
	ОбщийМодульКлиент.УстановитьЭлементОтбора(
	Список.Отбор,
	"Сотрудник",
	ОтборПоСотруднику,
	ВидСравненияКомпоновкиДанных.Равно,
	, ЗначениеЗаполнено(ОтборПоСотруднику)
	);
	
	ОбщийМодульКлиент.УстановитьЭлементОтбора(
	Список.Отбор,
	"Клиент",
	ОтборПоКлиенту,
	ВидСравненияКомпоновкиДанных.Равно,
	, ЗначениеЗаполнено(ОтборПоКлиенту)
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоСотрудникуПриИзменении(Элемент)
	ОбновитьПроверитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоКлиентуПриИзменении(Элемент)
	ОбновитьПроверитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКнопкуКоманды(Команда)
	
	Если Команда.Имя = "КнопкаЗакрыть" Тогда
		Закрыть();
	Иначе		
		ВидСобытий = ВыполнитьЭтуКомандуНаСервере(Команда.Имя);
		Если ЗначениеЗаполнено(ВидСобытий) Тогда
			ПараметрыФормы = Новый Структура("ВидСобытий", ВидСобытий);
			ОткрытьФорму("Документ.События.ФормаОбъекта", ПараметрыФормы);	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция   ВыполнитьЭтуКомандуНаСервере(Знач ИмяКоманды)
	
	Результат = Неопределено;
	
	КодКоманды = СтрЗаменить(ИмяКоманды, "КнопкаКоманды", "");
	ПараметрыОтбора = Новый Структура("Код", КодКоманды);
	СтрокиКоманда = ТаблицаКоманд.НайтиСтроки(ПараметрыОтбора);
	Если НЕ СтрокиКоманда.Количество() = 0 Тогда
		Попытка			
			Результат = СтрокиКоманда[0].ВидСобытий;
		Исключение
			ТекстОписаниеОшибки = ОписаниеОшибки();
			Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ТекстОписаниеОшибки);
		КонецПопытки;	                             	
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
