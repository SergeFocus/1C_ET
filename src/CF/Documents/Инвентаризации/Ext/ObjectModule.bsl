//sza140119-0157 
//sza130909-0335 : 

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	если не отказ
		и Модифицированность()
		и РежимЗаписи = РежимЗаписиДокумента.Проведение тогда
		
		Если НЕ ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПриАвтоматическомПерепроведенииДокументовОтменитьПроверкиНаОтказ") Тогда
			ПодготовкаКПроведению(Отказ);	
		КонецЕсли;
		
		если не отказ
			и Товары.Количество() = 0 
			и РежимЗаписи = РежимЗаписиДокумента.Проведение тогда
			
			РежимЗаписи = РежимЗаписиДокумента.Запись;
		КонецЕсли;	                      	
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовкаКПроведению(Отказ) Экспорт
	
	массивпустыхстрок  = новый массив;
	массивноменклатуры = Новый массив;
	
	для каждого СтрокаТовары из товары цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТовары.Номенклатура) тогда   				
			
			массивпустыхстрок.Добавить(СтрокаТовары);
			
		иначеесли ОбщийМодульПовтор.ТоварНеУчитываетсяПоКоличеству(СтрокаТовары.Номенклатура)
			или ОбщийМодульПовтор.ЭтоНабор(СтрокаТовары.Номенклатура) Тогда
			
			если ОбщийМодульПовторВТеченииСервера.ВыводитьСообщенияМожно() тогда
				//Сообщение = Новый СообщениеПользователю;
				//Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В строке №") + " " + СтрокаТовары.НомерСтроки + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(" номенклатура без количественного учета:" + СтрокаТовары.Номенклатура);
				//Сообщение.Сообщить();	
				ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В строке №") + " " + СтрокаТовары.НомерСтроки + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(" номенклатура без количественного учета:" + СтрокаТовары.Номенклатура), , Ссылка);
			КонецЕсли;
			Отказ = истина;
			
		иначеесли не массивноменклатуры.Найти(СтрокаТовары.Номенклатура) = Неопределено тогда
			если ОбщийМодульПовторВТеченииСервера.ВыводитьСообщенияМожно() тогда
				//Сообщение = Новый СообщениеПользователю;
				//Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В строке №") + " " + СтрокаТовары.НомерСтроки + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(" повторяется номенклатура:" + СтрокаТовары.Номенклатура);
				//Сообщение.Сообщить();
				ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В строке №") + " " + СтрокаТовары.НомерСтроки + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(" повторяется номенклатура:" + СтрокаТовары.Номенклатура), , Ссылка);
			КонецЕсли;
			Отказ = истина;
			
		иначе
			массивноменклатуры.Добавить(СтрокаТовары.Номенклатура);
			
		КонецЕсли;                                    	
	КонецЦикла;
	
	если не отказ тогда
		для каждого СтрокаТовары из массивпустыхстрок цикл
			товары.Удалить(СтрокаТовары);	
		КонецЦикла;
		
		ОбщийМодульТоварСервер.ПроверитьИСортироватьТаблицуТовары(ЭтотОбъект);
		
		ТовараВКоличестве = Товары.Итог("КоличествоРазница");
		ТовараНаСумму 	  = товары.Итог("СуммаРазница");	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	если не отказ
		и НЕ ЗначениеЗаполнено(СвязанныйДокументРеализации) тогда
		
		движения.ВаловаяПрибыль.Записать();
		движения.Деньги.Записать();
		движения.Зарплата.Записать();
		движения.Товары.Записать();
		
		ИспользоватьСложныйМеханизмЦен = ПараметрыСеанса.ИспользоватьСложныйМеханизмЦенПС ;
		ВестиУчетВаловойПрибыли = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВестиУчетВаловойПрибыли");
		
		Если ЗначениеЗаполнено(видцен) Тогда
			ВалютаЦены = видцен.ВалютаЦены;
			курс = ОбщийМодульПовтор.ПолучитьТекущийКурс(ВалютаЦены, Дата);
		Иначе
			ВалютаЦены = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
			Курс = 1;
		КонецЕсли;
		
		ВидДвиженияНакопленияПриход = ВидДвиженияНакопления.Приход;
		ВидДвиженияНакопленияРасход = ВидДвиженияНакопления.Расход;
		ГТ = ОбщийМодульСервер.СформироватьТаблицуОстатков(ссылка, Склад, дата);
		
		Для Каждого ТекСтрокаТовары Из Товары Цикл
			
			СуммаТов = ТекСтрокаТовары.Суммаразница * курс;	
			Номенклатура = ТекСтрокаТовары.Номенклатура;
			КомментарийСтроки = ?(ЗначениеЗаполнено(текстрокатовары.Коментарий), текстрокатовары.Коментарий, Комментарий);
			
			если ТекСтрокаТовары.КоличествоРазница < 0 тогда
				
				ЦенаСписания = ОбщийМодульСервер.ПолучитьЦенуСписания(Номенклатура, -ТекСтрокаТовары.КоличествоРазница, Дата);//, СтруктураОстатка);
				
				Если НЕ ОбщийМодульПовтор.ТоварНеУчитываетсяПоКоличеству(Номенклатура) Тогда
					
					СтрокаОстаток = ГТ.найти(номенклатура, "Номенклатура");
					Если не СтрокаОстаток = Неопределено Тогда
						КоличествоОстаток = СтрокаОстаток.КоличествоОстаток;
						СуммаОстаток = СтрокаОстаток.СуммаОстаток;
					иначе
						СуммаОстаток 		= 0;
						КоличествоОстаток 	= 0;
					КонецЕсли;
					
					СтруктураОстатка = новый Структура;
					СтруктураОстатка.Вставить("Количество", КоличествоОстаток);
					СтруктураОстатка.Вставить("Сумма", СуммаОстаток);
					
					Если НЕ НеПроизводитьОприходованиеИСписаниеЭтимДокументом Тогда
						Движение = Движения.Товары.Добавить();
						Движение.ВидДвижения 	= ВидДвиженияНакопленияРасход;
						Движение.Период 		= Дата;
						Движение.Номенклатура 	= Номенклатура;					
						Движение.Склад 			= Склад;  					
						Движение.Количество 	= -ТекСтрокаТовары.КоличествоРазница;					
						Движение.Сумма 			= ЦенаСписания * Движение.Количество;	
						Движение.Комментарий	= КомментарийСтроки;
						Движение.СерияНоменклатуры 			= ТекСтрокаТовары.СерияНоменклатуры;
						Движение.СписаниеИлиОприходование 	= истина;					
					КонецЕсли;
					
				КонецЕсли;
				
				Если ВестиУчетВаловойПрибыли Тогда
					
					Движение = Движения.ВаловаяПрибыль.Добавить();
					Движение.ВидДвижения 	= ВидДвиженияНакопленияПриход;
					Движение.Период 		= Дата;
					Движение.Номенклатура 	= Номенклатура;
					Движение.Комментарий 	= КомментарийСтроки;
					
					Если ЦенаСписания = 0 Тогда
						Движение.Сумма 			= -СуммаТов;						
						Движение.ПроцентНаценки = 100;
					Иначе
						Движение.Сумма 			= ( -СуммаТов) - (ЦенаСписания * (-ТекСтрокаТовары.КоличествоРазница));
						ЦнаПоКурсу = ОбщийМодульСервер.ПоКурсу(ТекСтрокаТовары.Цена, , ВалютаЦены, Дата);
						Движение.ПроцентНаценки = (ЦнаПоКурсу / (ЦенаСписания / 100)) - 100 ;
						Движение.РентабельностьПродаж = (ЦенаСписания / ?(ЦнаПоКурсу = 0, 1, ЦнаПоКурсу)) * 100;
						
					КонецЕсли; 			
					
				КонецЕсли;
				
			ИначеЕсли ТекСтрокаТовары.КоличествоРазница > 0 тогда
				
				Если НЕ ОбщийМодульПовтор.ТоварНеУчитываетсяПоКоличеству(Номенклатура) Тогда
					
					Если НЕ НеПроизводитьОприходованиеИСписаниеЭтимДокументом Тогда
						Движение = Движения.Товары.Добавить();
						Движение.ВидДвижения 	= ВидДвиженияНакопленияПриход;
						Движение.Период 		= Дата;
						Движение.Номенклатура 	= Номенклатура;
						Движение.Склад 			= Склад;					
						Движение.Количество 	= ТекСтрокаТовары.КоличествоРазница;
						Движение.Комментарий	= КомментарийСтроки;					
						Движение.Сумма 			= СуммаТов;
						Движение.СерияНоменклатуры 			= ТекСтрокаТовары.СерияНоменклатуры;
						Движение.СписаниеИлиОприходование 	= истина;   	
					КонецЕсли;
					
				КонецЕсли;				
			КонецЕсли;
			
		КонецЦикла;
		
		Если ОтразитьВЗаработнойПлате Тогда
			
			Если ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВестиУчетЗарплатыСотрудников") Тогда
				
				ОсновнаяВалюта = ОбщийМодульПовтор.ЗначениеПредопределенного("Справочники.Валюты.ОсновнаяВалюта");
				
				Движения.Зарплата.Записывать = Истина;
				Для Каждого СтрокаОтражения Из ОтражениеВЗарплате Цикл
					
					Движение = Движения.Зарплата.Добавить();
					Движение.ВидДвижения 	= ВидДвиженияНакопленияПриход;
					Движение.Период 		= Дата;
					Движение.ВидНачисления 	= Перечисления.ВидыНачислений.Другое;
					Движение.Сумма 			= СтрокаОтражения.Сумма;	
					Движение.СуммаВВалюте 	= СтрокаОтражения.Сумма;
					Движение.Валюта 		= ОсновнаяВалюта;
					Движение.Комментарий 	= ?(ЗначениеЗаполнено(СтрокаОтражения.ОСтроке), СтрокаОтражения.ОСтроке, Комментарий);
					Движение.Сотрудник 		= СтрокаОтражения.Сотрудник;
					Движение.ОписаниеНачисления = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("По результатам инвентаризации") + " " + Номер + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(" от") + " " + Дата;
					
				КонецЦикла;	
			КонецЕсли;
			
		ИначеЕсли ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВестиУчетДвиженияДенег") Тогда
			
			ВалютаДок = ?(ЗначениеЗаполнено(Валюта), Валюта, ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта"));
			
			Если ЗначениеЗаполнено(ХранилищеДенег) Тогда
				ФормаОплаты = ХранилищеДенег.ФормаОплаты;
			Иначе
				ФормаОплаты = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ФормаОплатыДляДенегВДокументахРасходаИПриходаТоваров") ;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ФормаОплаты) Тогда
				ФормаОплаты = перечисления.ФормыОплаты.Наличные;
			КонецЕсли;
			
			СуммаДенег = ВыбылоДенег - ПоступилоДенег;
			если не СуммаДенег = 0 тогда
				
				Если НЕ ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПриАвтоматическомПерепроведенииДокументовОтменитьПроверкиНаОтказ") Тогда
					Отказ = ОбщийМодульСервер.ПроверитьОстатокДенежныхСредств(СуммаДенег, Дата, ФормаОплаты, ВалютаДок, ХранилищеДенег, , Ссылка);
				КонецЕсли;
			
				если не отказ 
					и ВыбылоДенег > 0 тогда				
					
					Движения.Деньги.Записывать = Истина;
					Движение = Движения.Деньги.Добавить();
					Движение.ВидДвижения 	= ВидДвиженияНакопленияРасход;
					Движение.Период 		= Дата;
					Движение.Статья 		= СтатьяВыбытия;
					Движение.Сумма 			= ОбщийМодульСервер.ПоКурсу(ВыбылоДенег, ВалютаДок, , Дата);	
					Движение.Валюта			= ВалютаДок;
					Движение.СуммаВВалюте 	= ВыбылоДенег;
					Движение.ХранилищеДенег = ХранилищеДенег;
					Движение.ФормаОплаты 	= ФормаОплаты;
				КонецЕсли;
				
				если не отказ 
					и ПоступилоДенег > 0 тогда
					
					Движения.Деньги.Записывать = Истина;
					Движение = Движения.Деньги.Добавить();
					Движение.ВидДвижения 	= ВидДвиженияНакопленияПриход;
					Движение.Период 		= Дата;
					Движение.Статья 		= СтатьяПоступления;
					Движение.Сумма 			= ОбщийМодульСервер.ПоКурсу(ПоступилоДенег, ВалютаДок, , Дата);	
					Движение.Валюта			= ВалютаДок;
					Движение.СуммаВВалюте 	= ПоступилоДенег;
					Движение.ХранилищеДенег = ХранилищеДенег;
					Движение.ФормаОплаты 	= ФормаОплаты;
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Движения.ВаловаяПрибыль.Записывать = НЕ Отказ;	
	Движения.Деньги.Записывать 		= НЕ Отказ;	
	Движения.Зарплата.Записывать 	= НЕ Отказ;	
	Движения.Товары.Записывать 		= НЕ Отказ;	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступленияТовара") Тогда
			Комментарий = ДанныеЗаполнения.Комментарий;
			Склад 		= ДанныеЗаполнения.Склад;
			ВидЦен 		= ДанныеЗаполнения.ВидЦен;
			Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура 		= ТекСтрокаТовары.Номенклатура;
				НоваяСтрока.СерияНоменклатуры 	= ТекСтрокаТовары.СерияНоменклатуры;
				НоваяСтрока.Цена 				= ТекСтрокаТовары.Цена;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходыТовара") Тогда
			Комментарий = ДанныеЗаполнения.Комментарий;
			Склад 		= ДанныеЗаполнения.Склад;
			ВидЦен 		= ДанныеЗаполнения.ВидЦен;
			Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура 		= ТекСтрокаТовары.Номенклатура;
				НоваяСтрока.СерияНоменклатуры 	= ТекСтрокаТовары.СерияНоменклатуры;
				НоваяСтрока.Цена 				= ТекСтрокаТовары.Цена;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещенияТовара") Тогда
			Комментарий = ДанныеЗаполнения.Комментарий;
			Склад 		= ДанныеЗаполнения.Склад;
			ВидЦен 		= ДанныеЗаполнения.ВидЦен;
			Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура 		= ТекСтрокаТовары.Номенклатура;
				НоваяСтрока.СерияНоменклатуры 	= ТекСтрокаТовары.СерияНоменклатуры;
				НоваяСтрока.Цена 				= ТекСтрокаТовары.Цена;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КорректировкиИРегистрацияОстатков") Тогда
			ВидЦен 		= ДанныеЗаполнения.ВидЦен;
			Комментарий = ДанныеЗаполнения.Комментарий;
			Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура 		= ТекСтрокаТовары.Номенклатура;
				НоваяСтрока.СерияНоменклатуры 	= ТекСтрокаТовары.СерияНоменклатуры;
				НоваяСтрока.Цена 				= ТекСтрокаТовары.Цена;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УстановкиЦен") Тогда
			ВидЦен 		= ДанныеЗаполнения.ВидЦен;
			Комментарий = ДанныеЗаполнения.Комментарий;
			Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Номенклатура 		= ТекСтрокаТовары.Номенклатура;
				НоваяСтрока.Цена 				= ТекСтрокаТовары.Цена;
			КонецЦикла;
			
		КонецЕсли;
		
		Для Каждого СтрокаТовара из Товары Цикл
			СтрокаТовара.КоличествоУчет = ОбщийМодульСервер.ПолучитьОстатокТовара(СтрокаТовара.номенклатура, Склад, ?(ЗначениеЗаполнено(Дата), дата, ОбщийМодульСервисСервер.ПользователяТекущаяДата()));
			
			Если ОбщийМодульПовтор.ПолучитьПараметрСеанса("ИспользоватьСкидкиПС") Тогда
				
				ПроцентСкидки = ОбщийМодульСервер.ПолучитьПроцентСкидкиНаСервере(СтрокаТовара.Номенклатура, строкатовара.КоличествоПоФакту, ВидЦен); //акция ном
				если не процентскидки = 0 
					и не СтрокаТовара.Цена = 0 тогда
					
					СтрокаТовара.Цена  = СтрокаТовара.Цена - (СтрокаТовара.Цена / 100 * ПроцентСкидки);	
				КонецЕсли;                                     	
			КонецЕсли;
			
			СтрокаТовара.СуммаУчет 			= СтрокаТовара.КоличествоУчет * СтрокаТовара.Цена;
			СтрокаТовара.СуммаПоФакту 		= СтрокаТовара.КоличествоПоФакту * СтрокаТовара.Цена;
			СтрокаТовара.КоличествоРазница 	= СтрокаТовара.КоличествоПоФакту - СтрокаТовара.КоличествоУчет;
			СтрокаТовара.СуммаРазница 		= СтрокаТовара.СуммаПоФакту - СтрокаТовара.суммаУчет;
			
		КонецЦикла;       	
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ЭтотОбъект.комментарий = "";
КонецПроцедуры
