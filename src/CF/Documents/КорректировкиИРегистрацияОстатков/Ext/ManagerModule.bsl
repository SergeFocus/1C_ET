// sza150110-0320
// sza140115-1057 :
// sza130909-2146 :

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)

		ЗначенияЗаполнения = Неопределено;
		Попытка
			ВзаимозачетДолгаКонтрагентов = Параметры.Ключ.ВзаимозачетДолгаКонтрагентов;
		Исключение
			ВзаимозачетДолгаКонтрагентов = ЛОЖЬ;
		КонецПопытки;

		Если Параметры.свойство("ВзаимозачетДолгаКонтрагентов")
			// // или (Параметры.свойство("ЗначенияЗаполнения", ЗначенияЗаполнения)
			// // И ЗначенияЗаполнения.ВзаимозачетДолгаКонтрагентов)
			ИЛИ ВзаимозачетДолгаКонтрагентов Тогда

			СтандартнаяОбработка = ЛОЖЬ;

			Если ВидФормы = "ФормаСписка" Тогда
				ВыбраннаяФорма = "ФормаСпискаДокументовВзаимозачетаДолгаКонтрагентов";
			ИначеЕсли ВидФормы = "ФормаОбъекта" Тогда
				ВыбраннаяФорма = "ФормаДокументаВзаимозачетаДолгаКонтрагентов";
			Иначе
				ВыбраннаяФорма = "ФормаВыбораДокументовВзаимозачетаДолгаКонтрагентов";
			КонецЕсли;
		КонецЕсли;

	КонецПроцедуры

	Процедура Печать(ДокументДляПечати, Ссылка) Экспорт

		ДокументДляПечати.ИмяПараметровПечати  = "докКорректировка" + СокрЛП(ИмяКомпьютера());
		ДокументДляПечати.КлючПараметровПечати = ДокументДляПечати.ИмяПараметровПечати;
		ДокументДляПечати.Очистить();
		СсылкаНаОбъектПечати = Ссылка[0];
		РазрядМетаданных = ""; ИмяМетаданных = "";
		ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);

		Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
			ДокументДляПечати = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ДокументДляПечати, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		Иначе
			Макет = Документы.КорректировкиИРегистрацияОстатков.ПолучитьМакет("Печать");
			Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();

			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	КорректировкиИРегистрацияОстатков.ВидЦен,
			|	КорректировкиИРегистрацияОстатков.Дата,
			|	ВЫРАЗИТЬ(КорректировкиИРегистрацияОстатков.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
			|	КорректировкиИРегистрацияОстатков.ОстатокДенег,
			|	КорректировкиИРегистрацияОстатков.ТовараВКоличестве,
			|	КорректировкиИРегистрацияОстатков.ТовараНаСумму,
			|	КорректировкиИРегистрацияОстатков.Расчеты.(
			|		Клиент,
			|		Сумма,
			|		Комментарий,
			|		Договор,
			|		Ссылка,
			|		НомерСтроки, ОстатокДнейОтсрочки
			|	),
			|	КорректировкиИРегистрацияОстатков.Цены.(
			|		Номенклатура,
			|		ВидЦен,
			|		Цена,
			|		Ссылка,
			|		НомерСтроки,
			|		ОСтроке
			|	),
			|	КорректировкиИРегистрацияОстатков.РасчетыСПоставщиками.(
			|		Поставщик,
			|		Сумма,
			|		Комментарий,
			|		Договор,
			|		Ссылка,
			|		НомерСтроки,
			|		ОстатокДнейОтсрочки
			|	),
			|	КорректировкиИРегистрацияОстатков.Деньги.(
			|		Ссылка,
			|		НомерСтроки,
			|		ОстатокДенег,
			|		Валюта,
			|		Статья,
			|		ХранилищеДенег,
			|		ФормаОплаты,
			|		ОСтроке
			|	),
			|	КорректировкиИРегистрацияОстатков.Номер,
			|	КорректировкиИРегистрацияОстатков.Товары.(
			|		Ссылка,
			|		НомерСтроки,
			|		Склад,
			|		Номенклатура,
			|		СерияНоменклатуры,
			|		ЕдиницаИзмерения,
			|		Количество,
			|		Цена,
			|		Сумма,
			|		ОСтроке
			|	),
			|	КорректировкиИРегистрацияОстатков.Ссылка,
			|	КорректировкиИРегистрацияОстатков.ВерсияДанных,
			|	КорректировкиИРегистрацияОстатков.ПометкаУдаления,
			|	КорректировкиИРегистрацияОстатков.Номер,
			|	КорректировкиИРегистрацияОстатков.Проведен,
			|	КорректировкиИРегистрацияОстатков.УстанавливатьЦенуУказаннуюВТаблицеВКачествеЦеныДляРеализацииТовара,
			|	КорректировкиИРегистрацияОстатков.ОстатокЗарплаты,
			|	КорректировкиИРегистрацияОстатков.ВзаимозачетДолгаКонтрагентов,
			|	КорректировкиИРегистрацияОстатков.НеУстанавливатьЗависимыеЦены,
			|	КорректировкиИРегистрацияОстатков.НеПроводить,
			|	КорректировкиИРегистрацияОстатков.Сторный,
			|	КорректировкиИРегистрацияОстатков.ДокументСторно,
			|	КорректировкиИРегистрацияОстатков.Ответственный,
			|	КорректировкиИРегистрацияОстатков.ДатаСоздания,
			|	КорректировкиИРегистрацияОстатков.ДатаРедакции,
			|	КорректировкиИРегистрацияОстатков.НаправлениеДеятельности,
			|	КорректировкиИРегистрацияОстатков.Зарплата.(
			|		Ссылка,
			|		НомерСтроки,
			|		Сотрудник,
			|		ВидНачисления,
			|		Сумма,
			|		Валюта,
			|		Комментарий,
			|		ОписаниеНачисления
			|	),
			|	КорректировкиИРегистрацияОстатков.ТоварыПереданныеНаКомиссию.(
			|		Ссылка,
			|		НомерСтроки,
			|		Номенклатура,
			|		СерияНоменклатуры,
			|		Клиент,
			|		Договор,
			|		Количество,
			|		Цена,
			|		Сумма,
			|		ДатаПередачиНаКомиссию,
			|		ДатаОтчетаПоКомиссии,
			|		ОСтроке
			|	)
			|ИЗ Документ.КорректировкиИРегистрацияОстатков КАК КорректировкиИРегистрацияОстатков
			|ГДЕ КорректировкиИРегистрацияОстатков.Ссылка В(&Ссылка)";
			Запрос.Параметры.Вставить("Ссылка", Ссылка);

			Выборка = Запрос.Выполнить().Выбрать();
			ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
			Шапка 				= Макет.ПолучитьОбласть("Шапка");
			ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка");
			ОбластьТовары 		= Макет.ПолучитьОбласть("Товары");
			ОбластьРасчетыШапка = Макет.ПолучитьОбласть("РасчетыШапка");
			ОбластьРасчеты 		= Макет.ПолучитьОбласть("Расчеты");
			ОбластьЦеныШапка 	= Макет.ПолучитьОбласть("ЦеныШапка");
			ОбластьЦены 		= Макет.ПолучитьОбласть("Цены");
			ОбластьОстаткиШапка = Макет.ПолучитьОбласть("ОстаткиШапка");
			ОбластьОстатки 		= Макет.ПолучитьОбласть("Остатки");
			ОбластьЗарплатаШапка 	= Макет.ПолучитьОбласть("ШапкаЗарплата");
			ОбластьЗарплата 		= Макет.ПолучитьОбласть("СтрокаЗарплата");
			ТоварыПереданныеНаКомиссиюШапка  = Макет.ПолучитьОбласть("ШапкаТоварыПереданныеНаКомиссию");
			ОбластьТоварыПереданныеНаКомиссию= Макет.ПолучитьОбласть("СтрокаТоварыПереданныеНаКомиссию");
			ОбластьРасчетыСПоставщикамиШапка = Макет.ПолучитьОбласть("РасчетыСПоставщикамиШапка");
			ОбластьРасчетыСПоставщиками 	 = Макет.ПолучитьОбласть("РасчетыСПоставщиками");
			Подвал 							 = Макет.ПолучитьОбласть("Подвал");
			валюта = Справочники.Валюты.ОсновнаяВалюта ;
			ВставлятьРазделительСтраниц = ЛОЖЬ;

			Пока Выборка.Следующий() Цикл
				Если ВставлятьРазделительСтраниц Тогда
					ДокументДляПечати.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;

				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
				ДокументДляПечати.Вывести(ОбластьЗаголовок);
				Шапка.Параметры.Заполнить(Выборка);
				Шапка.Параметры.валюта = ?(ЗначениеЗаполнено(Выборка.ВидЦен), Выборка.ВидЦен.ВалютаЦены, "");
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
				ДокументДляПечати.Вывести(Шапка, Выборка.Уровень());
				ВыборкаТовары = Выборка.Товары.Выбрать();

				Если НЕ ВыборкаТовары.Количество() = 0 Тогда
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТоварыШапка);
					ДокументДляПечати.Вывести(ОбластьТоварыШапка);
					Пока ВыборкаТовары.Следующий() Цикл
						ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТовары);
						ДокументДляПечати.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());

					КонецЦикла;
				КонецЕсли;

				ВыборкаРасчеты = Выборка.Расчеты.Выбрать();

				Если НЕ ВыборкаРасчеты.Количество() = 0 Тогда
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРасчетыШапка);
					ДокументДляПечати.Вывести(ОбластьРасчетыШапка);
					Пока ВыборкаРасчеты.Следующий() Цикл
						ОбластьРасчеты.Параметры.Заполнить(ВыборкаРасчеты);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРасчеты);
						ДокументДляПечати.Вывести(ОбластьРасчеты, ВыборкаРасчеты.Уровень());

					КонецЦикла;
				КонецЕсли;

				ВыборкаРасчетыСПоставщиками = Выборка.РасчетыСПоставщиками.Выбрать();

				Если НЕ ВыборкаРасчетыСПоставщиками.Количество() = 0 Тогда
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРасчетыСПоставщикамиШапка);
					ДокументДляПечати.Вывести(ОбластьРасчетыСПоставщикамиШапка);
					Пока ВыборкаРасчетыСПоставщиками.Следующий() Цикл
						ОбластьРасчетыСПоставщиками.Параметры.Заполнить(ВыборкаРасчетыСПоставщиками);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРасчетыСПоставщиками);
						ДокументДляПечати.Вывести(ОбластьРасчетыСПоставщиками, ВыборкаРасчетыСПоставщиками.Уровень());

					КонецЦикла;
				КонецЕсли;

				ВыборкаОстатки = Выборка.Деньги.Выбрать();

				Если НЕ ВыборкаОстатки.Количество() = 0 Тогда
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьОстаткиШапка);
					ДокументДляПечати.Вывести(ОбластьОстаткиШапка);
					Пока ВыборкаОстатки.Следующий() Цикл
						ОбластьОстатки.Параметры.Заполнить(ВыборкаОстатки);
						ОбластьОстатки.Параметры.Аналитика = "" + ВыборкаОстатки.Статья + " " + ВыборкаОстатки.ХранилищеДенег + " " + ВыборкаОстатки.ФормаОплаты;
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьОстатки);
						ДокументДляПечати.Вывести(ОбластьОстатки, ВыборкаОстатки.Уровень());

					КонецЦикла;
				КонецЕсли;

				ВыборкаЦены = Выборка.Цены.Выбрать();

				Если НЕ ВыборкаЦены.Количество() = 0 Тогда
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЦеныШапка);
					ДокументДляПечати.Вывести(ОбластьЦеныШапка);
					Пока ВыборкаЦены.Следующий() Цикл
						ОбластьЦены.Параметры.Заполнить(ВыборкаЦены);
						ОбластьЦены.Параметры.валюта = ?(ЗначениеЗаполнено(Выборка.ВидЦен), Выборка.ВидЦен.ВалютаЦены, валюта);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЦены);
						ДокументДляПечати.Вывести(ОбластьЦены, ВыборкаЦены.Уровень());

					КонецЦикла;
				КонецЕсли;

				ВыборкаЗарплата = Выборка.Зарплата.Выбрать();

				Если НЕ ВыборкаЗарплата.Количество() = 0 Тогда
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗарплатаШапка);
					ДокументДляПечати.Вывести(ОбластьЗарплатаШапка);
					Пока ВыборкаЗарплата.Следующий() Цикл
						ОбластьЗарплата.Параметры.Заполнить(ВыборкаЗарплата);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗарплата);
						ДокументДляПечати.Вывести(ОбластьЗарплата, ВыборкаЗарплата.Уровень());

					КонецЦикла;
				КонецЕсли;

				ВыборкаТоварыПереданныеНаКомиссию = Выборка.ТоварыПереданныеНаКомиссию.Выбрать();

				Если НЕ ВыборкаТоварыПереданныеНаКомиссию.Количество() = 0 Тогда
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ТоварыПереданныеНаКомиссиюШапка);
					ДокументДляПечати.Вывести(ТоварыПереданныеНаКомиссиюШапка);
					Пока ВыборкаТоварыПереданныеНаКомиссию.Следующий() Цикл
						ОбластьТоварыПереданныеНаКомиссию.Параметры.Заполнить(ВыборкаТоварыПереданныеНаКомиссию);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТоварыПереданныеНаКомиссию);
						ДокументДляПечати.Вывести(ОбластьТоварыПереданныеНаКомиссию, ВыборкаТоварыПереданныеНаКомиссию.Уровень());

					КонецЦикла;
				КонецЕсли;

				Подвал.Параметры.Заполнить(Выборка);
				Подвал.Параметры.Валюта = Валюта;
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
				ДокументДляПечати.Вывести(Подвал);
				ВставлятьРазделительСтраниц = ИСТИНА;

			КонецЦикла;
		КонецЕсли;

	КонецПроцедуры

#КонецЕсли
