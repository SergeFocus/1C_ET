//sza150110-0320 
//sza140115-1057 : 
//sza130909-2146 : 
Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	ЗначенияЗаполнения = Неопределено;
	Попытка 
		ВзаимозачетДолгаКонтрагентов = Параметры.Ключ.ВзаимозачетДолгаКонтрагентов;
	Исключение 	
		ВзаимозачетДолгаКонтрагентов = ЛОЖЬ;		
	КонецПопытки;
	
	Если Параметры.свойство("ВзаимозачетДолгаКонтрагентов")
		////или (Параметры.свойство("ЗначенияЗаполнения", ЗначенияЗаполнения)
		////И ЗначенияЗаполнения.ВзаимозачетДолгаКонтрагентов)
		ИЛИ ВзаимозачетДолгаКонтрагентов Тогда
		
		СтандартнаяОбработка = ЛОЖЬ;
		
		Если ВидФормы = "ФормаСписка" Тогда
			ВыбраннаяФорма = "ФормаСпискаДокументовВзаимозачетаДолгаКонтрагентов";
			
		ИначеЕсли ВидФормы = "ФормаОбъекта" Тогда
			ВыбраннаяФорма = "ФормаДокументаВзаимоЗачетаДолгаКонтрагентов";
			
		Иначе
			ВыбраннаяФорма = "ФормаВыбораДокументовВзаимозачетаДолгаКонтрагентов";
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура Печать(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.КорректировкиИРегистрацияОстатков.ПолучитьМакет("Печать");
	Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КорректировкиИРегистрацияОстатков.ВидЦен,
	|	КорректировкиИРегистрацияОстатков.Дата,
	|	КорректировкиИРегистрацияОстатков.Комментарий,
	|	КорректировкиИРегистрацияОстатков.ОстатокДенег,
	|	КорректировкиИРегистрацияОстатков.ТовараВКоличестве,
	|	КорректировкиИРегистрацияОстатков.ТовараНаСумму,
	|	КорректировкиИРегистрацияОстатков.Расчеты.(
	|		Клиент,
	|		Сумма,
	|		Комментарий,
	|		Договор
	|	),
	|	КорректировкиИРегистрацияОстатков.Цены.(
	|		Номенклатура,
	|		ВидЦен,
	|		Цена
	|	),
	|	КорректировкиИРегистрацияОстатков.РасчетыСПоставщиками.(
	|		Поставщик,
	|		Сумма,
	|		Комментарий,
	|		Договор
	|	),
	|	КорректировкиИРегистрацияОстатков.Деньги.(
	|		Ссылка,
	|		НомерСтроки,
	|		ОстатокДенег,
	|		Валюта,
	|		Статья,
	|		ХранилищеДенег,
	|		ФормаОплаты
	|	),
	|	КорректировкиИРегистрацияОстатков.Номер,
	|	КорректировкиИРегистрацияОстатков.Товары.(
	|		Ссылка,
	|		НомерСтроки,
	|		Склад,
	|		Номенклатура,
	|		СерияНоменклатуры,
	|		ЕдиницаИзмерения,
	|		Количество,
	|		Цена,
	|		Сумма,
	|		ОСтроке
	|	)
	|ИЗ Документ.КорректировкиИРегистрацияОстатков КАК КорректировкиИРегистрацияОстатков
	|ГДЕ КорректировкиИРегистрацияОстатков.Ссылка В(&Ссылка)";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
	Шапка 				= Макет.ПолучитьОбласть("Шапка");
	ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка");
	ОбластьТовары 		= Макет.ПолучитьОбласть("Товары");
	ОбластьРасчетыШапка = Макет.ПолучитьОбласть("РасчетыШапка");
	ОбластьРасчеты 		= Макет.ПолучитьОбласть("Расчеты");
	ОбластьЦеныШапка 	= Макет.ПолучитьОбласть("ЦеныШапка");
	ОбластьЦены 		= Макет.ПолучитьОбласть("Цены");
	ОбластьОстаткиШапка = Макет.ПолучитьОбласть("ОстаткиШапка");
	ОбластьОстатки 		= Макет.ПолучитьОбласть("Остатки");
	ОбластьРасчетыСПоставщикамиШапка = Макет.ПолучитьОбласть("РасчетыСПоставщикамиШапка");
	ОбластьРасчетыСПоставщиками 	 = Макет.ПолучитьОбласть("РасчетыСПоставщиками");
	Подвал 							 = Макет.ПолучитьОбласть("Подвал");

	ТабДок.Очистить();
	
	валюта = Справочники.Валюты.ОсновнаяВалюта ;

	ВставлятьРазделительСтраниц = ЛОЖЬ;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		Шапка.Параметры.валюта = ?(ЗначениеЗаполнено(Выборка.ВидЦен), Выборка.ВидЦен.ВалютаЦены, "");
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		ВыборкаТовары = Выборка.Товары.Выбрать();
		Если НЕ ВыборкаТовары.Количество() = 0 Тогда
			ТабДок.Вывести(ОбластьТоварыШапка);
			Пока ВыборкаТовары.Следующий() Цикл
				ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
				ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
			КонецЦикла;	
		КонецЕсли;
		
		ВыборкаРасчеты = Выборка.Расчеты.Выбрать();
		Если НЕ ВыборкаРасчеты.Количество() = 0 Тогда
			ТабДок.Вывести(ОбластьРасчетыШапка);
			Пока ВыборкаРасчеты.Следующий() Цикл
				ОбластьРасчеты.Параметры.Заполнить(ВыборкаРасчеты);
				ТабДок.Вывести(ОбластьРасчеты, ВыборкаРасчеты.Уровень());
			КонецЦикла;	
		КонецЕсли;
		
		ВыборкаРасчетыСПоставщиками = Выборка.РасчетыСПоставщиками.Выбрать();
		Если НЕ ВыборкаРасчетыСПоставщиками.Количество() = 0 Тогда
			ТабДок.Вывести(ОбластьРасчетыСПоставщикамиШапка);
			Пока ВыборкаРасчетыСПоставщиками.Следующий() Цикл
				ОбластьРасчетыСПоставщиками.Параметры.Заполнить(ВыборкаРасчетыСПоставщиками);
				ТабДок.Вывести(ОбластьРасчетыСПоставщиками, ВыборкаРасчетыСПоставщиками.Уровень());
			КонецЦикла;	
		КонецЕсли;
		
		ВыборкаОстатки = Выборка.Деньги.Выбрать();
		Если НЕ ВыборкаОстатки.Количество() = 0 Тогда
			ТабДок.Вывести(ОбластьОстаткиШапка);
			Пока ВыборкаОстатки.Следующий() Цикл
				ОбластьОстатки.Параметры.Заполнить(ВыборкаОстатки);
				ОбластьОстатки.Параметры.Аналитика = "" + ВыборкаОстатки.Статья + " " + ВыборкаОстатки.ХранилищеДенег + " " + ВыборкаОстатки.ФормаОплаты;
				ТабДок.Вывести(ОбластьОстатки, ВыборкаОстатки.Уровень());
			КонецЦикла;	
		КонецЕсли;
		
		ВыборкаЦены = Выборка.Цены.Выбрать();
		Если НЕ ВыборкаЦены.Количество() = 0 Тогда
			ТабДок.Вывести(ОбластьЦеныШапка);
			Пока ВыборкаЦены.Следующий() Цикл
				ОбластьЦены.Параметры.Заполнить(ВыборкаЦены);
				ОбластьЦены.Параметры.валюта = ?(ЗначениеЗаполнено(Выборка.ВидЦен), Выборка.ВидЦен.ВалютаЦены, валюта);
				ТабДок.Вывести(ОбластьЦены, ВыборкаЦены.Уровень());
			КонецЦикла;	
		КонецЕсли;
		
		Подвал.Параметры.Заполнить(Выборка);
		Подвал.Параметры.валюта = валюта;
		ТабДок.Вывести(Подвал);

		ВставлятьРазделительСтраниц = ИСТИНА;
	КонецЦикла;
	
КонецПроцедуры
