// sza151117-0323 представление
// sza140723-1727
// sza140409-0124

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	Процедура НаПечать(ДокументДляПечати, Ссылка) Экспорт

		ДокументДляПечати.ИмяПараметровПечати  = "докТаблицаДанных" + СокрЛП(ИмяКомпьютера());
		ДокументДляПечати.КлючПараметровПечати = ДокументДляПечати.ИмяПараметровПечати;
		ДокументДляПечати.Очистить();
		СсылкаНаОбъектПечати = Ссылка[0];

		РазрядМетаданных = ""; ИмяМетаданных = "";
		ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
			ДокументДляПечати = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ДокументДляПечати, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		Иначе
			Макет = Документы.ТаблицыДанных.ПолучитьМакет("НаПечать");
			Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();

			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ТаблицыДанных.Дата,
			|	ТаблицыДанных.ДатаРедакции,
			|	ТаблицыДанных.ДатаСоздания,
			|	ВЫРАЗИТЬ(ТаблицыДанных.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
			|	ТаблицыДанных.Номер,
			|	ТаблицыДанных.Ответственный,
			|	ТаблицыДанных.ТипДокумента,
			|	ТаблицыДанных.ОписаниеШапки.(
			|		НомерСтроки,
			|		РеквизитШапки,
			|		ОписаниеРеквизитаШапки,
			|		ЗначениеРеквизитаШапки
			|	),
			|	ТаблицыДанных.ОписаниеКолонок.(
			|		НомерСтроки,
			|		РеквизитПоле,
			|		ТипПоля,
			|		ОписаниеПоляКолонки
			|	),
			|	ТаблицыДанных.ТаблицаСДанными.(
			|		НомерСтроки,
			|		ЗначениеПоляТаблицы1,
			|		ЗначениеПоляТаблицы2,
			|		ЗначениеПоляТаблицы3,
			|		ЗначениеПоляТаблицы4,
			|		ЗначениеПоляТаблицы5,
			|		ЗначениеПоляТаблицы6,
			|		ЗначениеПоляТаблицы7,
			|		ЗначениеПоляТаблицы8,
			|		ЗначениеПоляТаблицы9,
			|		ЗначениеПоляТаблицы10,
			|		ОСтроке
			|	),
			|	ТаблицыДанных.ЧислоЗаписей
			|ИЗ Документ.ТаблицыДанных КАК ТаблицыДанных
			|ГДЕ ТаблицыДанных.Ссылка В(&Ссылка)";
			Запрос.Параметры.Вставить("Ссылка", Ссылка);

			Выборка = Запрос.Выполнить().Выбрать();
			ОбластьЗаголовок 			= Макет.ПолучитьОбласть("Заголовок");
			Шапка 						= Макет.ПолучитьОбласть("Шапка");
			ОбластьОписаниеШапкиШапка 	= Макет.ПолучитьОбласть("ОписаниеШапкиШапка");
			ОбластьОписаниеШапки 		= Макет.ПолучитьОбласть("ОписаниеШапки");
			ОбластьОписаниеКолонокШапка = Макет.ПолучитьОбласть("ОписаниеКолонокШапка");
			ОбластьОписаниеКолонок 		= Макет.ПолучитьОбласть("ОписаниеКолонок");
			ОбластьТаблицаСДаннымиШапка	= Макет.ПолучитьОбласть("ТаблицаСДаннымиШапка");
			ОбластьТаблицаСДанными 		= Макет.ПолучитьОбласть("ТаблицаСДанными");
			Подвал 						= Макет.ПолучитьОбласть("Подвал");
			ВставлятьРазделительСтраниц = ЛОЖЬ;

			Пока Выборка.Следующий() Цикл
				Если ВставлятьРазделительСтраниц Тогда
					ДокументДляПечати.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;

				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
				ДокументДляПечати.Вывести(ОбластьЗаголовок);
				Шапка.Параметры.Заполнить(Выборка);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
				ДокументДляПечати.Вывести(Шапка, Выборка.Уровень());
				ВыборкаОписаниеШапки = Выборка.ОписаниеШапки.Выбрать();

				Если НЕ ВыборкаОписаниеШапки.Количество() = 0 Тогда
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьОписаниеШапкиШапка);
					ДокументДляПечати.Вывести(ОбластьОписаниеШапкиШапка);
					Пока ВыборкаОписаниеШапки.Следующий() Цикл
						ОбластьОписаниеШапки.Параметры.Заполнить(ВыборкаОписаниеШапки);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьОписаниеШапки);
						ДокументДляПечати.Вывести(ОбластьОписаниеШапки, ВыборкаОписаниеШапки.Уровень());

					КонецЦикла;
				КонецЕсли;

				ВыборкаОписаниеКолонок = Выборка.ОписаниеКолонок.Выбрать();

				Если НЕ ВыборкаОписаниеКолонок.Количество() = 0 Тогда
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьОписаниеКолонокШапка);
					ДокументДляПечати.Вывести(ОбластьОписаниеКолонокШапка);
					Пока ВыборкаОписаниеКолонок.Следующий() Цикл
						ОбластьОписаниеКолонок.Параметры.Заполнить(ВыборкаОписаниеКолонок);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьОписаниеКолонок);
						ДокументДляПечати.Вывести(ОбластьОписаниеКолонок, ВыборкаОписаниеКолонок.Уровень());

					КонецЦикла;
				КонецЕсли;

				ВыборкаТаблицаСДанными = Выборка.ТаблицаСДанными.Выбрать();

				Если НЕ ВыборкаТаблицаСДанными.Количество() = 0 Тогда
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТаблицаСДаннымиШапка);
					ДокументДляПечати.Вывести(ОбластьТаблицаСДаннымиШапка);
					Пока ВыборкаТаблицаСДанными.Следующий() Цикл
						ОбластьТаблицаСДанными.Параметры.Заполнить(ВыборкаТаблицаСДанными);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТаблицаСДанными);
						ДокументДляПечати.Вывести(ОбластьТаблицаСДанными, ВыборкаТаблицаСДанными.Уровень());

					КонецЦикла;
				КонецЕсли;

				Подвал.Параметры.Заполнить(Выборка);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
				ДокументДляПечати.Вывести(Подвал);
				ВставлятьРазделительСтраниц = ИСТИНА;

			КонецЦикла;
		КонецЕсли;

	КонецПроцедуры

	Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)

		ПредставлениеДокументаТаблицыДанных = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПредставлениеДокументаТаблицыДанных");
		Если НЕ ПустаяСтрока(ПредставлениеДокументаТаблицыДанных) Тогда
			СтандартнаяОбработка = ЛОЖЬ;
			Если НЕ ПустаяСтрока(Данные.Ссылка.ОбщееНаименование) Тогда
				Представление = Данные.Ссылка.ОбщееНаименование;
			Иначе
				Представление = ПредставлениеДокументаТаблицыДанных + " " + Данные.Номер + Символы.Таб + " " + Формат(Данные.Дата,  "ДФ='dd.MM.yy'");
			КонецЕсли;
		КонецЕсли;

	КонецПроцедуры

#КонецЕсли
