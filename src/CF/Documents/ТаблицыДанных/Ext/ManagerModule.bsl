// sza151117-0323 представление
// sza140723-1727
// sza140409-0124  
Процедура НаПечать(ТабДок, Ссылка) Экспорт
	
	ТабДок.ИмяПараметровПечати  = "докТаблицаДанных" + СокрЛП(ИмяКомпьютера());
	ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	
	ТабДок.Очистить();
	
	СсылкаНаОбъектПечати = Ссылка[0];
	
	РазрядМетаданных = ""; ИмяМетаданных = "";
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ТабДок = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ТабДок, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		
	Иначе		
		Макет = Документы.ТаблицыДанных.ПолучитьМакет("НаПечать");
		Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ТаблицыДанных.Дата,
		|	ТаблицыДанных.ДатаРедакции,
		|	ТаблицыДанных.ДатаСоздания,
		|	ТаблицыДанных.Комментарий,
		|	ТаблицыДанных.Номер,
		|	ТаблицыДанных.Ответственный,
		|	ТаблицыДанных.ТипДокумента,
		|	ТаблицыДанных.ОписаниеШапки.(
		|		НомерСтроки,
		|		РеквизитШапки,
		|		ОписаниеРеквизитаШапки,
		|		ЗначениеРевизитаШапки
		|	),
		|	ТаблицыДанных.ОписаниеКолонок.(
		|		НомерСтроки,
		|		РеквизитПоле,
		|		ТипПоля,
		|		ОписаниеПоляКолонки
		|	),
		|	ТаблицыДанных.ТаблицаСДанными.(
		|		НомерСтроки,
		|		ЗначениеПоляТаблицы1,
		|		ЗначениеПоляТаблицы2,
		|		ЗначениеПоляТаблицы3,
		|		ЗначениеПоляТаблицы4,
		|		ЗначениеПоляТаблицы5,
		|		ЗначениеПоляТаблицы6,
		|		ЗначениеПоляТаблицы7,
		|		ЗначениеПоляТаблицы8,
		|		ЗначениеПоляТаблицы9,
		|		ЗначениеПоляТаблицы10,
		|		ОСтроке
		|	),
		|	ТаблицыДанных.ЧислоЗаписей
		|ИЗ Документ.ТаблицыДанных КАК ТаблицыДанных
		|ГДЕ ТаблицыДанных.Ссылка В(&Ссылка)";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбластьЗаголовок 			= Макет.ПолучитьОбласть("Заголовок");
		Шапка 						= Макет.ПолучитьОбласть("Шапка");
		ОбластьОписаниеШапкиШапка 	= Макет.ПолучитьОбласть("ОписаниеШапкиШапка");
		ОбластьОписаниеШапки 		= Макет.ПолучитьОбласть("ОписаниеШапки");
		ОбластьОписаниеКолонокШапка = Макет.ПолучитьОбласть("ОписаниеКолонокШапка");
		ОбластьОписаниеКолонок 		= Макет.ПолучитьОбласть("ОписаниеКолонок");
		ОбластьТаблицаСДаннымиШапка	= Макет.ПолучитьОбласть("ТаблицаСДаннымиШапка");
		ОбластьТаблицаСДанными 		= Макет.ПолучитьОбласть("ТаблицаСДанными");
		Подвал 						= Макет.ПолучитьОбласть("Подвал");
		
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
			ТабДок.Вывести(ОбластьЗаголовок);
			
			Шапка.Параметры.Заполнить(Выборка);
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			
			ВыборкаОписаниеШапки = Выборка.ОписаниеШапки.Выбрать();
			Если НЕ ВыборкаОписаниеШапки.Количество() = 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьОписаниеШапкиШапка);
				ТабДок.Вывести(ОбластьОписаниеШапкиШапка);
				
				Пока ВыборкаОписаниеШапки.Следующий() Цикл
					ОбластьОписаниеШапки.Параметры.Заполнить(ВыборкаОписаниеШапки);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьОписаниеШапки);
					ТабДок.Вывести(ОбластьОписаниеШапки, ВыборкаОписаниеШапки.Уровень());
				КонецЦикла;	
			КонецЕсли;
			
			ВыборкаОписаниеКолонок = Выборка.ОписаниеКолонок.Выбрать();
			Если НЕ ВыборкаОписаниеКолонок.Количество() = 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьОписаниеКолонокШапка);
				ТабДок.Вывести(ОбластьОписаниеКолонокШапка);
				
				Пока ВыборкаОписаниеКолонок.Следующий() Цикл
					ОбластьОписаниеКолонок.Параметры.Заполнить(ВыборкаОписаниеКолонок);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьОписаниеКолонок);
					ТабДок.Вывести(ОбластьОписаниеКолонок, ВыборкаОписаниеКолонок.Уровень());
				КонецЦикла;	
			КонецЕсли;
			
			ВыборкаТаблицаСДанными = Выборка.ТаблицаСДанными.Выбрать();
			Если НЕ ВыборкаТаблицаСДанными.Количество() = 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТаблицаСДаннымиШапка);
				ТабДок.Вывести(ОбластьТаблицаСДаннымиШапка);
				
				Пока ВыборкаТаблицаСДанными.Следующий() Цикл
					ОбластьТаблицаСДанными.Параметры.Заполнить(ВыборкаТаблицаСДанными);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТаблицаСДанными);
					ТабДок.Вывести(ОбластьТаблицаСДанными, ВыборкаТаблицаСДанными.Уровень());
				КонецЦикла;	
			КонецЕсли;
			
			Подвал.Параметры.Заполнить(Выборка);
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
			ТабДок.Вывести(Подвал);
			
			ВставлятьРазделительСтраниц = ИСТИНА;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	ПредставлениеДокументаТаблицыДанных = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПредставлениеДокументаТаблицыДанных");
	Если НЕ ПустаяСтрока(ПредставлениеДокументаТаблицыДанных) Тогда
		СтандартнаяОбработка = ЛОЖЬ;
		
		Если НЕ ПустаяСтрока(Данные.Ссылка.ОбщееНаименование) Тогда
			Представление = Данные.Ссылка.ОбщееНаименование;
		Иначе
			Представление = ПредставлениеДокументаТаблицыДанных + " " + Данные.Номер + Символы.Таб + " " + Формат(Данные.Дата,  "ДФ='dd.MM.yy'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
