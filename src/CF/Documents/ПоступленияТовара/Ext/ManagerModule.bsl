// sza140525-0344  
// sza130909-2143 : 
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	ДанныеСсылка  = Данные.Ссылка;
	Представление = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(ДанныеСсылка.ВидДокумента) + " " + ДанныеСсылка.Номер + " - " + формат(ДанныеСсылка.Дата, "ДФ='dd.MM.yy ЧЧ:мм'");
	СтандартнаяОбработка = ЛОЖЬ;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	ЗначенияЗаполнения = Неопределено;
	Попытка 
		ЭтоЗаказ = Параметры.Ключ.ЭтоЗаказ;
	Исключение 	
		ЭтоЗаказ = ЛОЖЬ;		
	КонецПопытки;
	
	Если Параметры.свойство("ЭтоЗаказ")
		ИЛИ ЭтоЗаказ Тогда
		
		СтандартнаяОбработка = ЛОЖЬ;
		
		Если ВидФормы = "ФормаСписка" Тогда
			ВыбраннаяФорма = "ФормаСпискаЗаказов";
			
		ИначеЕсли ВидФормы = "ФормаОбъекта" Тогда
			ВыбраннаяФорма = "ФормаДокументаЗаказ";
			
		Иначе
			ВыбраннаяФорма = "ФормаВыбораЗаказов";
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура Печать(ТабДок, Ссылка) Экспорт
	
	ТабДок.ИмяПараметровПечати  = "ДокПоступление" + СокрЛП(ИмяКомпьютера());
	ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	
	ТабДок.Очистить();
	
	СсылкаНаОбъектПечати = Ссылка[0];
	ЭтоЗаказ = СсылкаНаОбъектПечати.ЭтоЗаказ;
	
	Если ЭтоЗаказ Тогда
		ВидПроизвольнойПечатнойФормы = Перечисления.ВидыПечатныхФорм.ЗаказПоставщику;
	Иначе
		ВидПроизвольнойПечатнойФормы = Перечисления.ВидыПечатныхФорм.ПоступлениеТовара;
	КонецЕсли;
	РазрядМетаданных = ""; ИмяМетаданных = "";
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(ВидПроизвольнойПечатнойФормы, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ТабДок = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ТабДок, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		
	Иначе		
		Макет = Документы.ПоступленияТовара.ПолучитьМакет("Печать");
		ЯзыкДокументов = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(ССылка[0].КлиентПоставщик, , ЛОЖЬ);	
		Макет.КодЯзыкаМакета = ЯзыкДокументов.Код;
		
		Запрос = Новый Запрос;	
		Запрос.Текст = "ВЫБРАТЬ
		|	ПоступленияТовара.ВыбылоДенег,
		|	ПоступленияТовара.Дата,
		|	ПоступленияТовара.КлиентПоставщик,
		|	ПоступленияТовара.Комментарий,
		|	ПоступленияТовара.Склад,
		|	ПоступленияТовара.ТовараВКоличестве,
		|	ПоступленияТовара.ТовараНаСумму,
		|	ПоступленияТовара.ВидЦен,
		|	ПоступленияТовара.Валюта,
		|	ПоступленияТовара.Договор,
		|	ПоступленияТовара.Организация,
		|	ПоступленияТовара.ЗаказКлиента,
		|	ПоступленияТовара.ЗаказОплачен,
		|	ПоступленияТовара.ЗаказСогласован,
		|	ПоступленияТовара.ЗаказДатаПлана,
		|	ПоступленияТовара.ЗаказДатаФакта,
		|	ПоступленияТовара.ЗаказПоставщику,
		|	ПоступленияТовара.ЭтоЗаказ,
		|	ПоступленияТовара.ДополнительныеРасходы.(
		|		Ссылка,
		|		НомерСтроки,
		|		Статья,
		|		Сумма,
		|		Валюта,
		|		Курс,
		|		НеРаспределятьНаСтоимость,
		|		ОСтроке
		|	),
		|	ПоступленияТовара.Номер,
		|	ПоступленияТовара.Товары.(
		|		Ссылка,
		|		НомерСтроки,
		|		Номенклатура,
		|		СерияНоменклатуры,
		|		Количество,
		|		Цена,
		|		Сумма,
		|		ЗаказКлиента,
		|		ЗаказПоставщику,
		|		ЕдиницаИзмерения,
		|		ОСтроке
		|	),
		|	ПоступленияТовара.СпособДоставки,
		|	ПоступленияТовара.ТалонТрек,
		|	ПоступленияТовара.ТоварОтправлен,
		|	ПоступленияТовара.ДатаОтправки
		|ИЗ Документ.ПоступленияТовара КАК ПоступленияТовара
		|ГДЕ ПоступленияТовара.Ссылка В(&Ссылка)";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
		Шапка 				= Макет.ПолучитьОбласть("Шапка");
		ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка");
		ОбластьТовары 	= Макет.ПолучитьОбласть("Товары");
		ОбластьДРШ		= Макет.ПолучитьОбласть("ДРШ");
		ОбластьДРС		= Макет.ПолучитьОбласть("ДРС");
		Подвал 			= Макет.ПолучитьОбласть("Подвал");
		
		валюта = ОбщийМодульПовтор.ЗначениеПредопределенного("Справочники.Валюты.ОсновнаяВалюта");
		
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			Если ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВестиУчетСобственныхЮридическихЛицПС")
				И ЗначениеЗаполнено(Выборка.Организация) Тогда
				
				ОбщийМодульСервер.ДобавитьШапкуОрганизации(ТабДок, Выборка.Организация, ЯзыкДокументов);
			КонецЕсли;
			
			КлиентПоставщик = Выборка.КлиентПоставщик;
			ПредставлениеПлательщика = СокрЛП(ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(КлиентПоставщик, ЯзыкДокументов));
			
			Если выборка.этозаказ тогда
				ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заказ Поставщику", ЯзыкДокументов);
				КлиентПоставщикЗаголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поставщик", ЯзыкДокументов) + ": ";
				
			Иначе
				Если ЗначениеЗаполнено(КлиентПоставщик) Тогда
					
					Если ТипЗнч(КлиентПоставщик) = Тип("СправочникСсылка.Клиенты") Тогда
						ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Возврат от Клиента", ЯзыкДокументов);
						КлиентПоставщикЗаголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Клиент", ЯзыкДокументов) + ": ";
					Иначе
						ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поступление от Поставщика", ЯзыкДокументов);
						КлиентПоставщикЗаголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поставщик", ЯзыкДокументов) + ": ";
					КонецЕсли;
					
				Иначе
					ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поступление товара", ЯзыкДокументов);
					КлиентПоставщикЗаголовок = "";
				КонецЕсли;  	
			КонецЕсли;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
			ТабДок.Вывести(ОбластьЗаголовок);
			
			Шапка.Параметры.Заполнить(Выборка);
			Шапка.Параметры.Контрагент = КлиентПоставщик;
			Шапка.Параметры.КлиентПоставщик = ПредставлениеПлательщика;
			
			СтруктураДополнительныПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
			Если НЕ параметрысеанса.ВестиУчетСобственныхЮридическихЛицПС
				ИЛИ не ЗначениеЗаполнено(Выборка.Организация) Тогда
				
				Шапка.Параметры.ТекстВШапкеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВШапкеДокументовПриПечати;	
			Иначе
				Шапка.Параметры.ТекстВШапкеДокументовПриПечати = "";
			КонецЕсли;
			
			Шапка.Параметры.КлиентПоставщикЗаголовок = КлиентПоставщикЗаголовок;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТоварыШапка);
			ТабДок.Вывести(ОбластьТоварыШапка);
			ВыборкаТовары = Выборка.Товары.Выбрать();
			Пока ВыборкаТовары.Следующий() Цикл
				ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
				ОбластьТовары.Параметры.НоменклатураНаименование = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаТовары.Номенклатура, , КлиентПоставщик);
				
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТовары);
				ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
			КонецЦикла;		
			
			ВыборкаДР = Выборка.ДополнительныеРасходы.Выбрать();
			Если НЕ ВыборкаДР.Количество() = 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьДРШ);
				ТабДок.Вывести(ОбластьДРШ);
				Пока ВыборкаДР.Следующий() Цикл
					ОбластьДРС.Параметры.Заполнить(ВыборкаДР);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьДРС);
					ТабДок.Вывести(ОбластьДРС, ВыборкаДР.Уровень());
				КонецЦикла;			
			КонецЕсли;
			
			Подвал.Параметры.Заполнить(Выборка);
			Подвал.Параметры.ВыбылоДенегТекст = ?(Выборка.ВыбылоДенег <> 0, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выбыло", ЯзыкДокументов) + " " + Формат(Выборка.ВыбылоДенег, "ЧЦ=15; ЧДЦ=2") + " " + ?(ЗначениеЗаполнено(Выборка.Валюта), Выборка.Валюта, Валюта), "");
			
			Подвал.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВПодвалеДокументовПриПечати;
			Подвал.Параметры.Валюта = Валюта;
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
			ТабДок.Вывести(Подвал);
			
			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетИнформацииОДоставкеВДокументахПоступления") Тогда
				ИнформацияОДоставке = Макет.ПолучитьОбласть("ИнформацияОДоставке");
				ИнформацияОДоставке.Параметры.Заполнить(Выборка);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ИнформацияОДоставке);
				ТабДок.Вывести(ИнформацияОДоставке);
			КонецЕсли;
			
			ВставлятьРазделительСтраниц = ИСТИНА;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьБезСерий(ТабДок, Ссылка) Экспорт
	
	ТабДок.ИмяПараметровПечати  = "ДокПоступлениеБезСерий" + СокрЛП(ИмяКомпьютера());
	ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	
	ТабДок.Очистить();
	
	СсылкаНаОбъектПечати = Ссылка[0];
	
	РазрядМетаданных = ""; ИмяМетаданных = "";
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ТабДок = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ТабДок, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		
	Иначе		
		Макет = Документы.ПоступленияТовара.ПолучитьМакет("Печать");
		ЯзыкДокументов = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(ССылка[0].КлиентПоставщик, , ЛОЖЬ);	
		Макет.КодЯзыкаМакета = ЯзыкДокументов.Код;
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ПоступленияТовара.ВыбылоДенег,
		|	ПоступленияТовара.Дата,
		|	ПоступленияТовара.КлиентПоставщик,
		|	ПоступленияТовара.Комментарий,
		|	ПоступленияТовара.Склад,
		|	ПоступленияТовара.ТовараВКоличестве,
		|	ПоступленияТовара.ТовараНаСумму,
		|	ПоступленияТовара.ВидЦен,
		|	ПоступленияТовара.Валюта,
		|	ПоступленияТовара.Договор,
		|	ПоступленияТовара.Организация,
		|	ПоступленияТовара.ЗаказКлиента,
		|	ПоступленияТовара.ЗаказОплачен,
		|	ПоступленияТовара.ЗаказСогласован,
		|	ПоступленияТовара.ЗаказДатаПлана,
		|	ПоступленияТовара.ЗаказДатаФакта,
		|	ПоступленияТовара.ЗаказПоставщику,
		|	ПоступленияТовара.ЭтоЗаказ,
		|	ПоступленияТовара.ДополнительныеРасходы.(
		|		Ссылка,
		|		НомерСтроки,
		|		Статья,
		|		Сумма,
		|		Валюта,
		|		Курс,
		|		НеРаспределятьНаСтоимость,
		|		ОСтроке
		|	),
		|	ПоступленияТовара.Номер,
		|	ПоступленияТовара.Товары.(
		|		Ссылка,
		|		НомерСтроки,
		|		Номенклатура,
		|		СерияНоменклатуры,
		|		Количество,
		|		Цена,
		|		Сумма,
		|		ЗаказКлиента,
		|		ЗаказПоставщику,
		|		ЕдиницаИзмерения,
		|		ОСтроке
		|	)
		|ИЗ Документ.ПоступленияТовара КАК ПоступленияТовара
		|ГДЕ ПоступленияТовара.Ссылка = &Ссылка";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
		Шапка 				= Макет.ПолучитьОбласть("Шапка");
		ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка");
		ОбластьТовары 	= Макет.ПолучитьОбласть("ТоварыБезСерий");
		ОбластьДРШ		= Макет.ПолучитьОбласть("ДРШ");
		ОбластьДРС		= Макет.ПолучитьОбласть("ДРС");
		Подвал 			= Макет.ПолучитьОбласть("Подвал");
		
		Валюта = ОбщийМодульПовтор.ЗначениеПредопределенного("Справочники.Валюты.ОсновнаяВалюта");
		
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			Если ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВестиУчетСобственныхЮридическихЛицПС")
				И ЗначениеЗаполнено(Выборка.Организация) Тогда
				
				ОбщийМодульСервер.ДобавитьШапкуОрганизации(ТабДок, Выборка.Организация, ЯзыкДокументов);
			КонецЕсли;
			
			КлиентПоставщик = Выборка.КлиентПоставщик;
			ПредставлениеПлательщика = СокрЛП(ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(КлиентПоставщик, ЯзыкДокументов));
			
			Если выборка.этозаказ тогда
				ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заказ Поставщику", ЯзыкДокументов);
				КлиентПоставщикЗаголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поставщик", ЯзыкДокументов) + ": ";
				
			Иначе
				Если ЗначениеЗаполнено(КлиентПоставщик) Тогда
					
					Если ТипЗнч(КлиентПоставщик) = Тип("СправочникСсылка.Клиенты") Тогда
						ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Возврат от Клиента", ЯзыкДокументов);		
						КлиентПоставщикЗаголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Клиент", ЯзыкДокументов) + ": ";
					Иначе
						ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поступление от Поставщика", ЯзыкДокументов);
						КлиентПоставщикЗаголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поставщик", ЯзыкДокументов) + ": ";
					КонецЕсли;
					
				Иначе
					ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поступление товара", ЯзыкДокументов);
					КлиентПоставщикЗаголовок = "";
				КонецЕсли;  	
			КонецЕсли;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
			ТабДок.Вывести(ОбластьЗаголовок);
			
			Шапка.Параметры.Заполнить(Выборка);
			Шапка.Параметры.КлиентПоставщик  = ПредставлениеПлательщика;
			Шапка.Параметры.Контрагент  = КлиентПоставщик;
			
			СтруктураДополнительныПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
			Если НЕ параметрысеанса.ВестиУчетСобственныхЮридическихЛицПС
				ИЛИ не ЗначениеЗаполнено(Выборка.Организация) Тогда
				
				Шапка.Параметры.ТекстВШапкеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВШапкеДокументовПриПечати;	
			Иначе
				Шапка.Параметры.ТекстВШапкеДокументовПриПечати = "";
			КонецЕсли;
			
			Шапка.Параметры.КлиентПоставщикЗаголовок = КлиентПоставщикЗаголовок;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТоварыШапка);
			ТабДок.Вывести(ОбластьТоварыШапка);
			ТаблицаТоваров = Ссылка.Товары.Выгрузить();
			ТаблицаТоваров.Свернуть("Номенклатура, Цена", "Количество, Сумма"); 
			Для Каждого ВыборкаТовары Из ТаблицаТоваров Цикл
				ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
				ОбластьТовары.Параметры.НоменклатураНаименование = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаТовары.Номенклатура, , КлиентПоставщик);
				
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТовары);
				ТабДок.Вывести(ОбластьТовары);
			КонецЦикла;		
			
			ВыборкаДР = Выборка.ДополнительныеРасходы.Выбрать();
			Если НЕ ВыборкаДР.Количество() = 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьДРШ);
				ТабДок.Вывести(ОбластьДРШ);
				Пока ВыборкаДР.Следующий() Цикл
					ОбластьДРС.Параметры.Заполнить(ВыборкаДР);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьДРС);
					ТабДок.Вывести(ОбластьДРС, ВыборкаДР.Уровень());
				КонецЦикла;			
			КонецЕсли;
			
			Подвал.Параметры.Заполнить(Выборка);
			Подвал.Параметры.ВыбылоДенегТекст = ?(Выборка.ВыбылоДенег <> 0, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выбыло", ЯзыкДокументов) + " " + Формат(Выборка.ВыбылоДенег, "ЧЦ=15; ЧДЦ=2") + " " + ?(ЗначениеЗаполнено(Выборка.Валюта), Выборка.Валюта, валюта), "");
			
			Подвал.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВПодвалеДокументовПриПечати;
			Подвал.Параметры.Валюта = Валюта;
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
			ТабДок.Вывести(Подвал);
			
			ВставлятьРазделительСтраниц = ИСТИНА;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры
