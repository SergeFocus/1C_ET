//sza140525-0344  
//sza130909-2143 : 
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	ДанныеСсылка = Данные.Ссылка;
	Представление = ДанныеСсылка.ВидДокумента + " " + ДанныеСсылка.Номер + " - " + формат(ДанныеСсылка.Дата, "ДФ='dd.MM.yy ЧЧ:мм'");
	СтандартнаяОбработка = ЛОЖЬ;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	ЗначенияЗаполнения = Неопределено;
	Попытка 
		ЭтоЗаказ = Параметры.Ключ.ЭтоЗаказ;
	Исключение 	
		ЭтоЗаказ = ЛОЖЬ;		
	КонецПопытки;
	
	Если Параметры.свойство("ЭтоЗаказ")
		ИЛИ ЭтоЗаказ Тогда
		
		СтандартнаяОбработка = ЛОЖЬ;
		
		Если ВидФормы = "ФормаСписка" Тогда
			ВыбраннаяФорма = "ФормаСпискаЗаказов";
			
		ИначеЕсли ВидФормы = "ФормаОбъекта" Тогда
			ВыбраннаяФорма = "ФормаДокументаЗаказ";
			
		Иначе
			ВыбраннаяФорма = "ФормаВыбораЗаказов";
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура Печать(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.ПоступленияТовара.ПолучитьМакет("Печать");
	Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(ССылка[0].КлиентПоставщик);
	
	Запрос = Новый Запрос;	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПоступленияТовара.ВыбылоДенег,
	|	ПоступленияТовара.Дата,
	|	ПоступленияТовара.КлиентПоставщик,
	|	ПоступленияТовара.Комментарий,
	|	ПоступленияТовара.Склад,
	|	ПоступленияТовара.ТовараВКоличестве,
	|	ПоступленияТовара.ТовараНаСумму,
	|	ПоступленияТовара.ВидЦен,
	|	ПоступленияТовара.Валюта,
	|	ПоступленияТовара.Договор,
	|	ПоступленияТовара.Организация,
	|	ПоступленияТовара.ЗаказКлиента,
	|	ПоступленияТовара.ЗаказОплачен,
	|	ПоступленияТовара.ЗаказСогласован,
	|	ПоступленияТовара.ЗаказДатаПлана,
	|	ПоступленияТовара.ЗаказДатаФакта,
	|	ПоступленияТовара.ЗаказПоставщику,
	|	ПоступленияТовара.ЭтоЗаказ,
	|	ПоступленияТовара.ДополнительныеРасходы.(
	|		Ссылка,
	|		НомерСтроки,
	|		Статья,
	|		Сумма,
	|		Валюта,
	|		Курс,
	|		НеРаспределятьНаСтоимость,
	|		ОСтроке
	|	),
	|	ПоступленияТовара.Номер,
	|	ПоступленияТовара.Товары.(
	|		Ссылка,
	|		НомерСтроки,
	|		Номенклатура,
	|		СерияНоменклатуры,
	|		Количество,
	|		Цена,
	|		Сумма,
	|		ЗаказКлиента,
	|		ЗаказПоставщику,
	|		ЕдиницаИзмерения,
	|		ОСтроке
	|	),
	|	ПоступленияТовара.СпособДоставки,
	|	ПоступленияТовара.ТалонТрек,
	|	ПоступленияТовара.ТоварОтправлен,
	|	ПоступленияТовара.ДатаОтправки
	|ИЗ
	|	Документ.ПоступленияТовара КАК ПоступленияТовара
	|ГДЕ
	|	ПоступленияТовара.Ссылка В(&Ссылка)";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
	Шапка 				= Макет.ПолучитьОбласть("Шапка");
	ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка");
	ОбластьТовары 	= Макет.ПолучитьОбласть("Товары");
	ОбластьДРШ		= Макет.ПолучитьОбласть("ДРШ");
	ОбластьДРС		= Макет.ПолучитьОбласть("ДРС");
	Подвал 			= Макет.ПолучитьОбласть("Подвал");
	
	ТабДок.Очистить();
	валюта = ОбщийМодульПовтор.ЗначениеПредопределенного("Справочники.Валюты.ОсновнаяВалюта");
	
	ВставлятьРазделительСтраниц = ЛОЖЬ;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Если ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВестиУчетСобственныхЮридическихЛицПС")
			И ЗначениеЗаполнено(Выборка.Организация) Тогда
			
			ОбщийМодульСервер.ДобавитьШапкуОрганизации(ТабДок, Выборка.Организация);
		КонецЕсли;
		
		КлиентПоставщик = Выборка.КлиентПоставщик;
		
		Если выборка.этозаказ тогда
			ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заказ Поставщику");
			КлиентПоставщикЗаголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поставщик") + ": ";
			
		Иначе
			Если ЗначениеЗаполнено(КлиентПоставщик) Тогда
				
				Если ТипЗнч(КлиентПоставщик) = Тип("СправочникСсылка.Клиенты") Тогда
					ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Возврат от Клиента");		
					КлиентПоставщикЗаголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Клиент") + ": ";
				Иначе
					ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поступление от Поставщика");
					КлиентПоставщикЗаголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поставщик") + ": ";
				КонецЕсли;
				
			Иначе
				ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поступление товара");
				КлиентПоставщикЗаголовок = "";
			КонецЕсли;  	
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		Если ЗначениеЗаполнено(КлиентПоставщик) 
			И НЕ ПустаяСтрока(КлиентПоставщик.НаименованиеДляПечати) Тогда
			
			Шапка.Параметры.КлиентПоставщик  = КлиентПоставщик.НаименованиеДляПечати;			
		КонецЕсли;
		
		СтруктураДополнительныПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
		Если НЕ параметрысеанса.ВестиУчетСобственныхЮридическихЛицПС
			ИЛИ не ЗначениеЗаполнено(Выборка.Организация) Тогда
			
			Шапка.Параметры.ТекстВШапкеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВШапкеДокументовПриПечати;	
		Иначе
			Шапка.Параметры.ТекстВШапкеДокументовПриПечати = "";
		КонецЕсли;
		
		Шапка.Параметры.КлиентПоставщикЗаголовок = КлиентПоставщикЗаголовок;
		
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		ТабДок.Вывести(ОбластьТоварыШапка);
		ВыборкаТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
			ОбластьТовары.Параметры.НоменклатураНаименование = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаТовары.Номенклатура, , КлиентПоставщик);
			
			ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
		КонецЦикла;		
		
		ВыборкаДР = Выборка.ДополнительныеРасходы.Выбрать();
		Если НЕ ВыборкаДР.Количество() = 0 Тогда
			ТабДок.Вывести(ОбластьДРШ);
			Пока ВыборкаДР.Следующий() Цикл
				ОбластьДРС.Параметры.Заполнить(ВыборкаДР);
				ТабДок.Вывести(ОбластьДРС, ВыборкаДР.Уровень());
			КонецЦикла;			
		КонецЕсли;
		
		Подвал.Параметры.Заполнить(Выборка);
		Подвал.Параметры.ВыбылоДенегТекст = ?(Выборка.ВыбылоДенег <> 0, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выбыло") + " " + Формат(Выборка.ВыбылоДенег, "ЧЦ=15; ЧДЦ=2") + " " + ?(ЗначениеЗаполнено(Выборка.Валюта), Выборка.Валюта, валюта), "");
		
		Подвал.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВПодвалеДокументовПриПечати;
		Подвал.Параметры.валюта = валюта;
		ТабДок.Вывести(Подвал);
		
			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("УчитыватьИнформациюОДоставкеВДокументахПоступления") Тогда
				 ИнформацияОДоставке = Макет.ПолучитьОбласть("ИнформацияОДоставке");
				 ИнформацияОДоставке.Параметры.Заполнить(Выборка);
				 ТабДок.Вывести(ИнформацияОДоставке);
			 КонецЕсли;
			 
		ВставлятьРазделительСтраниц = ИСТИНА;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПечатьБезСерий(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.ПоступленияТовара.ПолучитьМакет("Печать");
	Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов(ССылка[0].КлиентПоставщик);
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПоступленияТовара.ВыбылоДенег,
	|	ПоступленияТовара.Дата,
	|	ПоступленияТовара.КлиентПоставщик,
	|	ПоступленияТовара.Комментарий,
	|	ПоступленияТовара.Склад,
	|	ПоступленияТовара.ТовараВКоличестве,
	|	ПоступленияТовара.ТовараНаСумму,
	|	ПоступленияТовара.ВидЦен,
	|	ПоступленияТовара.Валюта,
	|	ПоступленияТовара.Договор,
	|	ПоступленияТовара.Организация,
	|	ПоступленияТовара.ЗаказКлиента,
	|	ПоступленияТовара.ЗаказОплачен,
	|	ПоступленияТовара.ЗаказСогласован,
	|	ПоступленияТовара.ЗаказДатаПлана,
	|	ПоступленияТовара.ЗаказДатаФакта,
	|	ПоступленияТовара.ЗаказПоставщику,
	|	ПоступленияТовара.ЭтоЗаказ,
	|	ПоступленияТовара.ДополнительныеРасходы.(
	|		Ссылка,
	|		НомерСтроки,
	|		Статья,
	|		Сумма,
	|		Валюта,
	|		Курс,
	|		НеРаспределятьНаСтоимость,
	|		ОСтроке
	|	),
	|	ПоступленияТовара.Номер,
	|	ПоступленияТовара.Товары.(
	|		Ссылка,
	|		НомерСтроки,
	|		Номенклатура,
	|		СерияНоменклатуры,
	|		Количество,
	|		Цена,
	|		Сумма,
	|		ЗаказКлиента,
	|		ЗаказПоставщику,
	|		ЕдиницаИзмерения,
	|		ОСтроке
	|	)
	|ИЗ Документ.ПоступленияТовара КАК ПоступленияТовара
	|ГДЕ ПоступленияТовара.Ссылка = &Ссылка";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
	Шапка 				= Макет.ПолучитьОбласть("Шапка");
	ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка");
	ОбластьТовары 	= Макет.ПолучитьОбласть("ТоварыБезСерий");
	ОбластьДРШ		= Макет.ПолучитьОбласть("ДРШ");
	ОбластьДРС		= Макет.ПолучитьОбласть("ДРС");
	Подвал 			= Макет.ПолучитьОбласть("Подвал");
	
	ТабДок.Очистить();
	Валюта = ОбщийМодульПовтор.ЗначениеПредопределенного("Справочники.Валюты.ОсновнаяВалюта");
	
	ВставлятьРазделительСтраниц = ЛОЖЬ;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Если ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВестиУчетСобственныхЮридическихЛицПС")
			И ЗначениеЗаполнено(Выборка.Организация) Тогда
			
			ОбщийМодульСервер.ДобавитьШапкуОрганизации(ТабДок, Выборка.Организация);
		КонецЕсли;
		
		КлиентПоставщик = Выборка.КлиентПоставщик;
		
		Если выборка.этозаказ тогда
			ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заказ Поставщику");
			КлиентПоставщикЗаголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поставщик") + ": ";
			
		Иначе
			Если ЗначениеЗаполнено(КлиентПоставщик) Тогда
				
				Если ТипЗнч(КлиентПоставщик) = Тип("СправочникСсылка.Клиенты") Тогда
					ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Возврат от Клиента");		
					КлиентПоставщикЗаголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Клиент") + ": ";
				Иначе
					ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поступление от Поставщика");
					КлиентПоставщикЗаголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поставщик") + ": ";
				КонецЕсли;
				
			Иначе
				ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поступление товара");
				КлиентПоставщикЗаголовок = "";
			КонецЕсли;  	
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		Если ЗначениеЗаполнено(КлиентПоставщик) 
			И НЕ ПустаяСтрока(КлиентПоставщик.НаименованиеДляПечати) Тогда
			
			Шапка.Параметры.КлиентПоставщик  = КлиентПоставщик.НаименованиеДляПечати;			
		КонецЕсли;
		
		СтруктураДополнительныПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
		Если НЕ параметрысеанса.ВестиУчетСобственныхЮридическихЛицПС
			ИЛИ не ЗначениеЗаполнено(Выборка.Организация) Тогда
			
			Шапка.Параметры.ТекстВШапкеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВШапкеДокументовПриПечати;	
		Иначе
			Шапка.Параметры.ТекстВШапкеДокументовПриПечати = "";
		КонецЕсли;
		
		Шапка.Параметры.КлиентПоставщикЗаголовок = КлиентПоставщикЗаголовок;
		
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		ТабДок.Вывести(ОбластьТоварыШапка);
		ТаблицаТоваров = Ссылка.Товары.Выгрузить();
		ТаблицаТоваров.Свернуть("Номенклатура, Цена", "Количество, Сумма"); 
		Для Каждого ВыборкаТовары Из ТаблицаТоваров Цикл
			ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
			ОбластьТовары.Параметры.НоменклатураНаименование = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаТовары.Номенклатура, , КлиентПоставщик);
			
			ТабДок.Вывести(ОбластьТовары);
		КонецЦикла;		
		
		ВыборкаДР = Выборка.ДополнительныеРасходы.Выбрать();
		Если НЕ ВыборкаДР.Количество() = 0 Тогда
			ТабДок.Вывести(ОбластьДРШ);
			Пока ВыборкаДР.Следующий() Цикл
				ОбластьДРС.Параметры.Заполнить(ВыборкаДР);
				ТабДок.Вывести(ОбластьДРС, ВыборкаДР.Уровень());
			КонецЦикла;			
		КонецЕсли;
		
		Подвал.Параметры.Заполнить(Выборка);
		Подвал.Параметры.ВыбылоДенегТекст = ?(Выборка.ВыбылоДенег <> 0, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выбыло") + " " + Формат(Выборка.ВыбылоДенег, "ЧЦ=15; ЧДЦ=2") + " " + ?(ЗначениеЗаполнено(Выборка.Валюта), Выборка.Валюта, валюта), "");
		
		Подвал.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВПодвалеДокументовПриПечати;
		Подвал.Параметры.валюта = валюта;
		ТабДок.Вывести(Подвал);
		
		ВставлятьРазделительСтраниц = ИСТИНА;
	КонецЦикла;
	
КонецПроцедуры
