//sza140119-0200
//sza131003-0226 : 

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступленияТовара") Тогда
			Комментарий = ДанныеЗаполнения.Комментарий;
			Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Количество 				= ТекСтрокаТовары.Количество;
				НоваяСтрока.НоменклатураИлиГруппа 	= ТекСтрокаТовары.Номенклатура;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УстановкиЦен") Тогда
			Комментарий = ДанныеЗаполнения.Комментарий;
			Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.НоменклатураИлиГруппа = ТекСтрокаТовары.Номенклатура;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Инвентаризации") Тогда
			Комментарий = ДанныеЗаполнения.Комментарий;
			Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Количество 				= ТекСтрокаТовары.КоличествоПоФакту;
				НоваяСтрока.НоменклатураИлиГруппа 	= ТекСтрокаТовары.Номенклатура;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПланыПродаж") Тогда
			ДатаНачала 		= НачалоДня(ДанныеЗаполнения.ДатаОкончания + 3600*24 + 1);
			ДатаОкончания 	= ДатаНачала + (ДанныеЗаполнения.ДатаОкончания - ДанныеЗаполнения.ДатаНачала);
			Комментарий 	= ДанныеЗаполнения.Комментарий;
			ПланНеАктуален 	= ДанныеЗаполнения.ПланНеАктуален;
			
			Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Количество 				= ТекСтрокаТовары.Количество;
				НоваяСтрока.НоменклатураИлиГруппа 	= ТекСтрокаТовары.НоменклатураИлиГруппа;
				НоваяСтрока.Сумма 					= ТекСтрокаТовары.Сумма;
			КонецЦикла;
			
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	массивпустыхстрок  = новый массив;
	массивноменклатуры = Новый массив;
	
	для каждого СтрокаТовары из товары цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТовары.НоменклатураИлиГруппа) Тогда
			массивпустыхстрок.Добавить(СтрокаТовары);
			
		иначеесли не массивноменклатуры.Найти(СтрокаТовары.НоменклатураИлиГруппа) = Неопределено тогда
			если ОбщийМодульПовторВТеченииСервера.ВыводитьСообщенияМожно() тогда
				//Сообщение = Новый СообщениеПользователю;
				//Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("На строке №") + " " + СтрокаТовары.НомерСтроки + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(" повторяется номенклатура:" + СтрокаТовары.НоменклатураИлиГруппа);
				//Сообщение.Сообщить();
				ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("На строке №") + " " + СтрокаТовары.НомерСтроки + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(" повторяется номенклатура:" + СтрокаТовары.НоменклатураИлиГруппа), , Ссылка);
			КонецЕсли;
		иначе
			массивноменклатуры.Добавить(СтрокаТовары.НоменклатураИлиГруппа);
			
		КонецЕсли;                                    	
	КонецЦикла;
	
	для каждого СтрокаТовары из массивпустыхстрок цикл
		товары.Удалить(СтрокаТовары);	
	КонецЦикла;	
	
	ОбщийМодульТоварСервер.ПроверитьИСортироватьТаблицуТовары(ЭтотОбъект, Истина);
	
	ТовараВКоличестве = товары.итог("Количество");
	ТовараНаСумму 	  = товары.Итог("Сумма");
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ЭтотОбъект.комментарий = "";
КонецПроцедуры
