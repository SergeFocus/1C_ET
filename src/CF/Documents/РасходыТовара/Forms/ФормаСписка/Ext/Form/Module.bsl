// sza140723-2324 сегодня
// sza140420-1529  
// sza131005-0218 : 

&НаКлиенте
Процедура ВводСКоличеством(Команда)
	
	СтруктураДляВВода = Новый Структура;
	СтруктураДляВВода.Вставить("Дата", ОбщийМодульКлиент.ПользователяТекущаяДата());
	СтруктураДляВВода.Вставить("БлокВидаЦенИЦены", ЛОЖЬ);
	СтруктураДляВВода.Вставить("ВызовИзРасходаТовара", ИСТИНА);
	
	СтруктураПараметров = ОбщийМодульКлиент.ВвестиНоменклатуруИКоличество(СтруктураДляВВода);	
	
	Если НЕ СтруктураПараметров = Неопределено Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Номенклатура", СтруктураПараметров.Номенклатура);
		ПараметрыФормы.Вставить("ЕдиницаИзмерения", СтруктураПараметров.ЕдиницаИзмерения);
		Цена = 0;
		СтруктураПараметров.Свойство("Цена", Цена);
		ПараметрыФормы.Вставить("Цена", Цена);
		ПараметрыФормы.Вставить("Количество", СтруктураПараметров.Количество);
		ПараметрыФормы.Вставить("ВидЦен", СтруктураПараметров.ВидЦен);
		ФормаДокумента = ПолучитьФорму("Документ.РасходыТовара.ФормаОбъекта", ПараметрыФормы);
		
		ФормаДокумента.Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыводНадписиПоФормуле()
	
	ПроизвольнаяНадписьФормыВидно = ЛОЖЬ;
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьФормулыАвтоНаименованияФормированияШтрихКодаИТекстаСШтрихКодом") Тогда
		
		Попытка
			СтруктураФормулы = ОбщийМодульПовтор.ОпределитьНужнуюФормулуДляНадписиНаФорме(ЭтаФорма.ИмяФормы);
			Если НЕ СтруктураФормулы = Неопределено Тогда
				
				Элементы.ОбновитьЗначениеПоФормулеНадписиФормы.Видимость = СтруктураФормулы.ВыводитьКнопкуОбновленияНадписи;
				Если СтруктураФормулы.ВыполнитьНаСервереСОбъектом Тогда
					Элементы.ПроизвольнаяНадписьФормы.Заголовок = ВыводНадписиПоФормулеНаСервере(СтруктураФормулы.Формула);
				Иначе
					Попытка 
						Выполнить(" Элементы.ПроизвольнаяНадписьФормы.Заголовок = " + СтруктураФормулы.Формула + ";");
					Исключение 	
					КонецПопытки;	
				КонецЕсли;
				
				ПроизвольнаяНадписьФормыВидно = ИСТИНА;
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Элементы.ПроизвольнаяНадписьФормы.Видимость = ПроизвольнаяНадписьФормыВидно;
	
КонецПроцедуры

&НаСервере
Функция   ВыводНадписиПоФормулеНаСервере(Знач Формула)
	
	Результат = "";
	Попытка 
		Выполнить(" Результат = " + Формула + ";");
	Исключение 	
	КонецПопытки;	
	
	Возврат Результат;
	
КонецФункции //ВыводНадписиПоФормулеНаСервере

&НаКлиенте
Процедура ОбновитьЗначениеПоФормулеНадписиФормы(Команда)
	ВыводНадписиПоФормуле();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПолученныйШтрихкодНаКлиенте(Знач ТекКод)
	
	Номенклатура = ОбработатьПолученныйШтрихкодНаСервере(ТекКод);
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Номенклатура", Номенклатура);
		ОткрытьФорму("Документ.РасходыТовара.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция   ОбработатьПолученныйШтрихкодНаСервере(Знач ТекКод, Знач Количество = 1)
	
	Результат = Неопределено;
	
	РезультатОбработки = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(ТекКод);
	Если ЗначениеЗаполнено(РезультатОбработки) Тогда
		Возврат РезультатОбработки;		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаАктивизации(АктивныйОбъект, Источник)
	
	Если ИспользоватьПодключаемоеОборудование
		И МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		
		ОписаниеОшибки = "" ;
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		ПоддерживаемыеТипыВО.Добавить("ДисплейПокупателя");
		Если НЕ МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении оборудования произошла ошибка") + ": " + ОписаниеОшибки + ".";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда
		
		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[1] = Неопределено Тогда
				ТекКод = Параметр[0];
			Иначе
				ТекКод = Параметр[1][1];
			КонецЕсли;
			
			ОбработатьПолученныйШтрихкодНаКлиенте(ТекКод);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзображенияОкнаФормы() // Когда окно уже нарисовано пользователю
	ЭтаФорма.Элементы.ФормаЗакрыть.Видимость = НЕ ЭтаФорма.Окно = Неопределено;	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                             // ПРИ ЗАКРЫТИИ
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
	
	Если ИспользоватьПодключаемоеОборудование Тогда
		ПоддерживаемыеТипыВО = Новый Массив ();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                        // ПРИ ОТКРЫТИИ
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	Если ИспользоватьПодключаемоеОборудование
		И МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		
		ОписаниеОшибки = "" ;
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		ПоддерживаемыеТипыВО.Добавить("ДисплейПокупателя");
		Если НЕ МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении оборудования произошла ошибка") + ": " + ОписаниеОшибки + ".";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
	УстановитьСегодня(ИСТИНА);
	
	ВыводНадписиПоФормуле();
	ПодключитьОбработчикОжидания("ПослеИзображенияОкнаФормы", 0.3, ИСТИНА);	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)         // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("001800", ЭтаФорма, Отказ, );
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ИспользоватьПодключаемоеОборудование = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьПодключаемоеОборудование");
		Элементы.СписокВводСКоличеством.Видимость = не ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("НеПоказыватьКомандуДобавленияНоменклатурыСКоличеством");
		
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.ТовараВКоличестве, , ИСТИНА);	
		ОбщийМодульСервер.ОбеспечитьСписокОтборов(Список);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Сегодня(Команда)
	
	УстановленоСегодня = НЕ УстановленоСегодня ;
	УстановитьСегодня();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСегодня(Знач СоСтарта = ЛОЖЬ)
	
	Сегодня = " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("СЕГОДНЯ");
	
	Если УстановленоСегодня Тогда
		ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + Сегодня;
		ЭтаФорма.Элементы.Дата.Заголовок = Сегодня;
		Элементы.ФормаУстановитьИнтервал.Видимость = ЛОЖЬ;
		Элементы.Список.Период = Неопределено;
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Дата");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Больше;
		ЭлементОтбора.Использование    = ИСТИНА;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементОтбора.ПравоеЗначение   = НачалоДня(ТекущаяДата());
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Дата");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Меньше;
		ЭлементОтбора.Использование    = ИСТИНА;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементОтбора.ПравоеЗначение   = КонецДня(ТекущаяДата()); 	
		
	ИначеЕсли НЕ СоСтарта Тогда
		Список.Отбор.Элементы.Очистить();
		ОбщийМодульСервер.ОбеспечитьСписокОтборов(Список);
		Элементы.ФормаУстановитьИнтервал.Видимость = ИСТИНА;
		
		ЭтаФорма.Заголовок = стрзаменить(ЭтаФорма.Заголовок, Сегодня, "");
		ЭтаФорма.Элементы.Дата.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Дата");
	КонецЕсли;
	
КонецПроцедуры
