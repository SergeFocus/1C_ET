//sza140420-1529 SZA: 
//sza131005-0218 : 

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                        // ПРИ ОТКРЫТИИ
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	Если ИспользоватьПодключаемоеОборудование И 
		МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		
		ОписаниеОшибки = "" ;
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		ПоддерживаемыеТипыВО.Добавить("ДисплейПокупателя");
		Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке( "При подключении оборудования произошла ошибка") + ": " + ОписаниеОшибки + ".";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
	УстановитьСегодня();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                             // ПРИ ЗАКРЫТИИ
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
	
	Если ИспользоватьПодключаемоеОборудование Тогда
		ПоддерживаемыеТипыВО = Новый Массив ();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("001800", ЭтаФорма, Отказ, );
	
	Если НЕ Отказ Тогда
		ИспользоватьПодключаемоеОборудование = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьПодключаемоеОборудование") ;
		Элементы.СписокВводСКоличеством.Видимость = не ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("НеПоказыватьКомандуДобавленияНоменклатурыСКоличеством") ;
		
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.ТовараВКоличестве, , Истина);	
		ОбщийМодульСервер.ОбеспечитьСписокОтборов(Список);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда
		
		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[ 1 ] = Неопределено Тогда
				ТекКод = Параметр[ 0 ];
			Иначе
				ТекКод = Параметр[ 1 ][ 1 ];
			КонецЕсли;
			
			ОбработатьПолученныйШКНаКлиенте(ТекКод);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПолученныйШКНаклиенте(ТекКод)
	
	Номенклатура = ОбработатьПолученныйШКНаСервере(ТекКод);
	если ЗначениеЗаполнено(Номенклатура) тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Номенклатура", Номенклатура);
		ФормаДокумента = получитьформу("Документ.РасходыТовара.ФормаОбъекта", ПараметрыФормы);
		ФормаДокумента.Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция   ОбработатьПолученныйШКНаСервере(Знач ТекКод, Знач Количество = 1)
	
	Результат = Неопределено;
	
	РезультатОбработки = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(ТекКод);
	Если ЗначениеЗаполнено(РезультатОбработки) Тогда
		Возврат РезультатОбработки;		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ВводСКоличеством(Команда)
	
	СтруктураДляВВода = Новый Структура;
	СтруктураДляВВода.Вставить("Дата", ОбщийМодульКлиент.ПользователяТекущаяДата());
	СтруктураДляВВода.Вставить("БлокВидаЦенИЦены", Ложь);
	СтруктураДляВВода.Вставить("ВызовИзРасходаТовара", истина);
	
	СтруктураПараметров = ОбщийМодульКлиент.ВвестиНоменклатуруИКоличество(СтруктураДляВВода);	
	
	Если НЕ СтруктураПараметров = Неопределено Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Номенклатура", СтруктураПараметров.Номенклатура);
		ПараметрыФормы.Вставить("ЕдиницаИзмерения", СтруктураПараметров.ЕдиницаИзмерения);
		Цена = 0;
		СтруктураПараметров.Свойство("Цена", Цена);
		ПараметрыФормы.Вставить("Цена", Цена);
		ПараметрыФормы.Вставить("Количество", СтруктураПараметров.Количество);
		ПараметрыФормы.Вставить("ВидЦен", СтруктураПараметров.ВидЦен);
		ФормаДокумента = получитьформу("Документ.РасходыТовара.ФормаОбъекта", ПараметрыФормы);
		
		ФормаДокумента.Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Сегодня(Команда)
	
	УстановленоСегодня  = не УстановленоСегодня ;
	УстановитьСегодня();
	
КонецПроцедуры

&НаСервере
ПРоцедура УстановитьСегодня()
	
	Сегодня = " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сегодня");
	
	если УстановленоСегодня тогда
		Этаформа.Заголовок = Этаформа.Заголовок + Сегодня;
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Дата");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Больше;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементОтбора.ПравоеЗначение   = началодня(ТекущаяДата());
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Дата");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Меньше;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементОтбора.ПравоеЗначение   = Конецдня(ТекущаяДата()); 	
		
	Иначе
		Список.Отбор.Элементы.Очистить();
		ОбщийМодульСервер.ОбеспечитьСписокОтборов(Список);	
		Этаформа.Заголовок = стрзаменить(Этаформа.Заголовок, Сегодня, "");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАктивизации(АктивныйОбъект, Источник)
	
	Если ИспользоватьПодключаемоеОборудование И 
		
		МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		ОписаниеОшибки = "" ;
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		ПоддерживаемыеТипыВО.Добавить("ДисплейПокупателя");
		Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке( "При подключении оборудования произошла ошибка") + ": " + ОписаниеОшибки + ".";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
