//sza140602-0141 SZA: 
//sza130909-2144 : 

Процедура Печать(ТабДок, Знач Ссылка, Знач ЭтоСчет = Ложь, Знач НоСчетЕсть = Ложь, Знач ЭтоВыполненияРабот = Ложь, Знач ЭтоТорг12 = Ложь, Знач ЭтоЗаказНаряд = Ложь, Знач ЗаголовокРасходнойНакладной = Неопределено, Знач ДваЭкземпляра = Ложь) Экспорт
	
	Если НЕ ТипЗнч(Ссылка) = Тип("ДокументСсылка.РасходыТовара") 
		И НЕ ТипЗнч(Ссылка) = Тип("ДокументСсылка.ВыполненияРабот") Тогда
		
		Ссылка = Ссылка[0].ссылка;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Если ЭтоВыполненияРабот Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВыполненияРабот.Ссылка,
		               |	ВыполненияРабот.ВерсияДанных,
		               |	ВыполненияРабот.ПометкаУдаления,
		               |	ВыполненияРабот.Номер,
		               |	ВыполненияРабот.Дата,
		               |	ВыполненияРабот.Проведен,
		               |	ВыполненияРабот.Клиент КАК КлиентПоставщик,
		               |	ВыполненияРабот.Организация,
		               |	ВыполненияРабот.Договор,
		               |	ВыполненияРабот.ЗаказКлиента,
		               |	ВыполненияРабот.ВидЦен,
		               |	ВыполненияРабот.Результат,
		               |	ВыполненияРабот.ХранилищеДенег,
		               |	ВыполненияРабот.ДатаПлан,
		               |	ВыполненияРабот.РезультатПлан,
		               |	ВыполненияРабот.Актуален,
		               |	ВыполненияРабот.БезПлана,
		               |	ВыполненияРабот.Номенклатура,
		               |	ВыполненияРабот.СерияНоменклатуры,
		               |	ВыполненияРабот.СкладДляОбъектаВыполненияРабот,
		               |	ВыполненияРабот.ДатаПоступленияОбъектаРаботНаНашСклад,
		               |	ВыполненияРабот.КомментарийПриПоступленииОбъектаРабот,
		               |	ВыполненияРабот.ДатаВыдачиОбъектаРаботКлиентуОбратно,
		               |	ВыполненияРабот.КомментарийПриВыдачеОбъектаРабот,
		               |	ВыполненияРабот.ОценочнаяСтоимостьОбъектаРабот,
		               |	ВыполненияРабот.Сотрудник,
		               |	ВыполненияРабот.ОбъектКлиента,
		               |	ВыполненияРабот.Комментарий,
		               |	ВыполненияРабот.Ответственный,
		               |	ВыполненияРабот.ДатаСоздания,
		               |	ВыполненияРабот.ДатаРедакции,
		               |	ВыполненияРабот.Товары.(
		               |		Ссылка,
		               |		НомерСтроки,
		               |		ВаловаяПрибыль,
		               |		ВаловаяПрибыльПлан,
		               |		Валюта,
		               |		ВалютаПлан,
		               |		Дата,
		               |		ДатаПлан,
		               |		Количество,
		               |		КоличествоПлан,
		               |		Курс,
		               |		КурсПлан,
		               |		Номенклатура,
		               |		ОСтроке,
		               |		План,
		               |		ПроцентСкидки,
		               |		ПроцентСкидкиПлан,
		               |		СерияНоменклатуры,
		               |		Склад,
		               |		Сотрудник,
		               |		Сумма,
		               |		СуммаБезСкидки,
		               |		СуммаБезСкидкиПлан,
		               |		Цена,
		               |		ЦенаПлан,
		               |		ЕдиницаИзмерения
		               |	),
		               |	ВыполненияРабот.Оплаты.(
		               |		Ссылка,
		               |		НомерСтроки,
		               |		ДатаПлан,
		               |		Дата,
		               |		План,
		               |		Сумма,
		               |		Валюта,
		               |		Курс,
		               |		ХранилищеДенег,
		               |		ФормаОплаты,
		               |		ВалютаПлан,
		               |		КурсПлан,
		               |		ОСтроке
		               |	),
		               |	ВыполненияРабот.Расходы.(
		               |		Ссылка,
		               |		НомерСтроки,
		               |		ДатаПлан,
		               |		Дата,
		               |		Поставщик,
		               |		Статья,
		               |		План,
		               |		Сумма,
		               |		Валюта,
		               |		Курс,
		               |		ХранилищеДенег,
		               |		ФормаОплаты,
		               |		Договор,
		               |		Сотрудник,
		               |		ВалютаПлан,
		               |		КурсПлан,
		               |		ОСтроке
		               |	),
		               |	ВыполненияРабот.ТипРаботы,
		               |	ВыполненияРабот.ОрганизацияПродавец,
		               |	ВыполненияРабот.ДатаПродажи,
		               |	ВыполненияРабот.ВнешнийВид,
		               |	ВыполненияРабот.Комплектность,
		               |	ВыполненияРабот.Валюта,
		               |	ВыполненияРабот.ПричинаЦельРабот,
		               |	ЕСТЬNULL(ВыполненияРабот.Клиент.Телефон, "") КАК Адрес,
		               |		ЕСТЬNULL(ВыполненияРабот.Клиент.Адрес, "") КАК Телефон
		               |ИЗ
		               |	Документ.ВыполненияРабот КАК ВыполненияРабот
		               |ГДЕ
		               |	ВыполненияРабот.Ссылка В(&Ссылка)";
		
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	РасходыТовара.Ссылка,
		               |	РасходыТовара.ВерсияДанных,
		               |	РасходыТовара.ПометкаУдаления,
		               |	РасходыТовара.Номер,
		               |	РасходыТовара.Дата,
		               |	РасходыТовара.Проведен,
		               |	РасходыТовара.Склад,
		               |	РасходыТовара.КлиентПоставщик,
		               |	РасходыТовара.ПоступилоДенег,
		               |	РасходыТовара.ВидЦен,
		               |	РасходыТовара.Валюта,
		               |	РасходыТовара.Курс,
		               |	РасходыТовара.Комментарий,
		               |	РасходыТовара.ВидДокумента,
		               |	РасходыТовара.ТовараНаСумму,
		               |	РасходыТовара.ТовараВКоличестве,
		               |	РасходыТовара.ПартияПриобретения,
		               |	РасходыТовара.Организация,
		               |	РасходыТовара.Договор,
		               |	РасходыТовара.ХранилищеДенег,
		               |	РасходыТовара.ЗаказКлиента,
		               |	РасходыТовара.ЭтоЗаказ,
		               |	РасходыТовара.ЗаказСогласован,
		               |	РасходыТовара.ЗаказОплачен,
		               |	РасходыТовара.ЗаказДатаПлана,
		               |	РасходыТовара.ЗаказДатаФакта,
		               |	РасходыТовара.ЗаказНомерПриРегистрации,
		               |	РасходыТовара.Сотрудник,
		               |	РасходыТовара.Ответственный,
		               |	РасходыТовара.ДатаСоздания,
		               |	РасходыТовара.ДатаРедакции,
		               |	РасходыТовара.Товары.(
		               |		Ссылка,
		               |		НомерСтроки,
		               |		Номенклатура,
		               |		СерияНоменклатуры,
		               |		Количество,
		               |		Цена,
		               |		Сумма,
		               |		ПроцентСкидки,
		               |		СуммаБезСкидки,
		               |		ЗаказКлиента,
		               |		ЕдиницаИзмерения,
		               |		ОСтроке
		               |	),
		               |	РасходыТовара.ПланОплаты.(
		               |		Ссылка,
		               |		НомерСтроки,
		               |		Дата,
		               |		ФормаОплаты,
		               |		ХранилищеДенег,
		               |		Сумма,
		               |		ОСтроке
		               |	),
		               |	РасходыТовара.Оплаты.(
		               |		Ссылка,
		               |		НомерСтроки,
		               |		ХранилищеДенег,
		               |		Сумма,
		               |		ФормаОплаты,
		               |		Валюта,
		               |		Курс,
		               |		ОСтроке
		               |	),
		               |	РасходыТовара.Адрес,
		               |	РасходыТовара.Телефон,
		               |	РасходыТовара.СпособДоставки,
		               |	РасходыТовара.ТалонТрек,
		               |	РасходыТовара.КлиентОповещен,
		               |	РасходыТовара.ТоварОтправлен,
		               |	РасходыТовара.ДатаОтправки,
		               |	РасходыТовара.ДатаОповещения
		               |ИЗ
		               |	Документ.РасходыТовара КАК РасходыТовара
		               |ГДЕ
		               |	РасходыТовара.Ссылка В(&Ссылка)";
		
	КонецЕсли;	
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка   = Запрос.Выполнить().Выбрать();
	
	валютаосн = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
	
	СуммаСкидки = 0;
	ЕстьСкидка  = Ложь;
	
	НеВыводитьНаПечатьДанныеОСкидкеПриПечатиРасходногоДокумента = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("НеВыводитьНаПечатьДанныеОСкидкеПриПечатиРасходногоДокумента");
	ИспользоватьСкидки = ОбщийМодульПовтор.ПолучитьПараметрСеанса("ИспользоватьСкидкиПС") И НЕ НеВыводитьНаПечатьДанныеОСкидкеПриПечатиРасходногоДокумента;
	
	Если ИспользоватьСкидки тогда
		Пока Выборка.Следующий() Цикл
			ВыборкаТовары = Выборка.Товары.Выбрать();
			Пока ВыборкаТовары.Следующий() Цикл
				
				Если НЕ ВыборкаТовары.СуммаБезСкидки = 0 Тогда
					Скидка = (ВыборкаТовары.Сумма - ВыборкаТовары.СуммаБезСкидки);
					Если НЕ ЕстьСкидка тогда 					
						ЕстьСкидка = не Скидка = 0;
					КонецЕсли;
					СуммаСкидки = СуммаСкидки + Скидка; //Не прерывать!
					
				конецесли;
			КонецЦикла;
			
		КонецЦикла;		
	КонецЕсли;
	
	Выборка.Сбросить();
	
	Если ЭтоТорг12 Тогда
		
		Макет = ПолучитьОбщийМакет("РегламентированныеДокументы2");		
		Шапка = Макет.ПолучитьОбласть("Шапка");
		
		ЗаголовокТаб  = Макет.ПолучитьОбласть("ЗаголовокТаб");
		НомерСтраницы = 1;
		
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		
		//ИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		//
		//ИтогоКоличествоМестНаСтранице
		//ИтогоМассаБруттоНаСтранице
		//ИтогоКоличествоНаСтранице
		//ИтогоСуммаБезНДСНаСтранице
		//ИтогоСуммаНДСНаСтранице
		//ИтогоСуммаСНДСНаСтранице
		
		ОбластьВсего  = Макет.ПолучитьОбласть("Всего");		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		ВставлятьРазделительСтраниц = Ложь;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ВыборкаВидЦен = Выборка.ВидЦен;
			Если ЗначениеЗаполнено(ВыборкаВидЦен) 
				И ЗначениеЗаполнено(ВыборкаВидЦен.ВалютаЦены) Тогда
				
				ВалютаЦены = ВыборкаВидЦен.ВалютаЦены;
			Иначе
				ВалютаЦены = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");				
			КонецЕсли;
			
			Организация = ?(ЗначениеЗаполнено(Выборка.Организация), Выборка.организация, ПредопределенноеЗначение("Справочник.Организации.ОсновноеПредприятие"));
			ПредставлениеОрганизации = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(организация);
			ДолжностьРуководителя 	 = Организация.ДолжностьРуководителя;
			
			Контрагент = Выборка.КлиентПоставщик;
			ПредставлениеПлательщика = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Контрагент);
			
			Договор = Выборка.договор;
			Если ЗначениеЗаполнено(Договор) Тогда
				ОснованиеНомер = Договор.НомерДоговора;
				ОснованиеДата  = Договор.ДатаЗаключения;
			Иначе
				ОснованиеНомер = "";
				ОснованиеДата  = "";
				Договор = "";	
			КонецЕсли;
			
			Сотрудник = Выборка.Сотрудник;
			Если ЗначениеЗаполнено(Сотрудник) Тогда
				Подразделение = ОбщийМодульСервер.ПолучитьПодразделениеСотрудника(Сотрудник, Выборка.Дата);
				ПредставлениеПодразделения = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Подразделение);
			Иначе
				Подразделение = "";
				ПредставлениеПодразделения = "";
			КонецЕсли;
			
			Шапка.Параметры.Организация 				= Организация;
			Шапка.Параметры.ПредставлениеОрганизации 	= ПредставлениеОрганизации;
			Шапка.Параметры.Контрагент 					= Контрагент;
			Шапка.Параметры.ПредставлениеПлательщика 	= ПредставлениеПлательщика;
			Шапка.Параметры.Основание 					= Договор;
			Шапка.Параметры.ПредставлениеПодразделения 	= ПредставлениеПодразделения;
			Шапка.Параметры.Подразделение 				= Подразделение;		
			Шапка.Параметры.Грузополучатель 			= Контрагент;
			Шапка.Параметры.ПредставлениеПоставщика 	= ПредставлениеОрганизации;
			
			АдресДоставки = Выборка.Адрес;
			Если ЗначениеЗаполнено(Контрагент) Тогда
				Если НЕ ЗначениеЗаполнено(АдресДоставки) Тогда			
					АдресДоставки = Контрагент.Адрес;
				КонецЕсли;	
				
				ОКПО = Контрагент.ОКПО;
				Шапка.Параметры.ГрузополучательПоОКПО = ОКПО;
				Шапка.Параметры.ПлательщикПоОКПО 	  = ОКПО;
			Иначе
				Шапка.Параметры.ГрузополучательПоОКПО = "";
				Шапка.Параметры.ПлательщикПоОКПО 	  = "";
			КонецЕсли;
			
			Шапка.Параметры.АдресДоставки  = АдресДоставки;
			Шапка.Параметры.НомерДокумента = Выборка.Номер;		
			Шапка.Параметры.ДатаДокумента  = Выборка.Дата;
			
			Если ЗначениеЗаполнено(Организация) Тогда
				ОКПО = Организация.ОКПО;
				Шапка.Параметры.ОрганизацияПоОКПО 		= ОКПО;
				Шапка.Параметры.ПоставщикПоОКПО	  		= ОКПО;
				Шапка.Параметры.ВидДеятельностиПоОКДП 	= Организация.ВидДеятельностиПоОКДП;
			Иначе
				Шапка.Параметры.ОрганизацияПоОКПО 		= "";
				Шапка.Параметры.ПоставщикПоОКПО   		= "";
				Шапка.Параметры.ВидДеятельностиПоОКДП 	= "";
			КонецЕсли;
			
			Шапка.Параметры.ОснованиеНомер = ОснованиеНомер;
			Шапка.Параметры.ОснованиеДата  = ОснованиеДата;		
			
			//ТранспортнаяНакладнаяНомер
			//ТранспортнаяНакладнаяДата
			//ВидОперации
			
			ТабДок.Вывести(Шапка);		
			
			ЗаголовокТаб.Параметры.НомерСтраницы = "" + НомерСтраницы;
			ТабДок.Вывести(ЗаголовокТаб);		
			
			ВставлятьРазделительСтраниц = Истина;		
			НомерСтраницы = НомерСтраницы + 1;
			
			ВестиУчетРазмеровИВесаТоваров = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВестиУчетРазмеровИВесаТоваров");
			ИтогоМассаБрутто = 0;
			ИтогоКоличество  = 0;
			ИтогоСуммаБезНДС = 0;
			
			ВсегоСНДС 	= 0;
			Всего 		= 0;
			НДС 		= 0;			
			ЧислоСтрок 	= 0;
			
			Если ЗначениеЗаполнено(Организация) Тогда
				СтавкаНДСОрганизации = Организация.СтавкаНДС;
			Иначе
				СтавкаНДСОрганизации = 0;
			КонецЕсли;
			
			ВыборкаТовары = Выборка.Товары.Выбрать();
			Пока ВыборкаТовары.Следующий() Цикл
				
				ЧислоСтрок   = ЧислоСтрок + 1;
				Номенклатура = ВыборкаТовары.Номенклатура;
				ЗначениеЗаполненоНоменклатура= ЗначениеЗаполнено(Номенклатура);
				
				ОбластьСтрока.Параметры.НомерСтроки = "" + ЧислоСтрок;
				Если ЗначениеЗаполненоНоменклатура Тогда
					ОбластьСтрока.Параметры.Номенклатура 			  = Номенклатура;
					ОбластьСтрока.Параметры.ПредставлениеНоменклатуры = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Номенклатура);
					ОбластьСтрока.Параметры.НоменклатураКод 		  = Номенклатура.Код;
				Иначе
					ОбластьСтрока.Параметры.Номенклатура 			  = "";
					ОбластьСтрока.Параметры.ПредставлениеНоменклатуры = "";
					ОбластьСтрока.Параметры.НоменклатураКод 		  = "";
				КонецЕсли;
				
				ЕдиницаИзмерения = ВыборкаТовары.ЕдиницаИзмерения;
				Если ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
					ОбластьСтрока.Параметры.ЕдиницаИзмеренияНаименование = ЕдиницаИзмерения;
					ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод 		 = ЕдиницаИзмерения.Код;
				ИначеЕсли ЗначениеЗаполненоНоменклатура Тогда
					ОбластьСтрока.Параметры.ЕдиницаИзмеренияНаименование = Номенклатура.ОсновнаяЕдиницаИзмерения;
					ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод 		 = "";
				Иначе
					ОбластьСтрока.Параметры.ЕдиницаИзмеренияНаименование = "";
					ОбластьСтрока.Параметры.ЕдиницаИзмеренияКод 		 = "";					
				КонецЕсли;
				
				Количество = ВыборкаТОвары.Количество;
				Если Количество = 0 Тогда
					Количество = 1;
				КонецЕсли;
				
				ИтогоКоличество = ИтогоКоличество + Количество;				
				Сумма = ВыборкаТовары.Сумма;
				
				//ОбластьСтрока.Параметры.ВидУпаковки
				//ОбластьСтрока.Параметры.КоличествоВОдномМесте
				//ОбластьСтрока.Параметры.КоличествоМест
				Если ВестиУчетРазмеровИВесаТоваров 
					и ЗначениеЗаполненоНоменклатура Тогда
					
					Если ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
						ВесЕдиницы = ЕдиницаИзмерения.вес;
					Иначе
						ВесЕдиницы = Номенклатура.Вес;
					КонецЕсли;
					МассаБрутто 	 = ВесЕдиницы * Количество;
					ИтогоМассаБрутто = ИтогоМассаБрутто + МассаБрутто;
					ОбластьСтрока.Параметры.МассаБрутто = МассаБрутто;
					
				иначе
					ОбластьСтрока.Параметры.МассаБрутто = "";
				КонецЕсли;
				
				ОбластьСтрока.Параметры.Количество = Количество;				
				//ОбластьСтрока.Параметры.Цена = Сумма / Количество;	
				
				ВсегоСНДС 	= ВсегоСНДС + Сумма;
				СтавкаНДС 	= ?(ЗначениеЗаполненоНоменклатура И ЗначениеЗаполнено(Номенклатура.СтавкаНДС), Номенклатура.СтавкаНДС, СтавкаНДСОрганизации);
				СуммаБезНДС = Сумма - Сумма * (СтавкаНДС / 100);
				СуммаНДС 	= Сумма - СуммаБезНДС;
				НДС 		= НДС + СуммаНДС;				
				Всего 		= Всего + Сумма;
				
				ИтогоСуммаБезНДС = ИтогоСуммаБезНДС + СуммаБезНДС;
				
				ОбластьСтрока.Параметры.Цена  		= СуммаБезНДС / Количество;
				ОбластьСтрока.Параметры.СуммаБезНДС = СуммаБезНДС;
				ОбластьСтрока.Параметры.СтавкаНДС 	= СтавкаНДС; 
				ОбластьСтрока.Параметры.СуммаНДС 	= СуммаНДС;
				ОбластьСтрока.Параметры.СуммаСНДС 	= Сумма;
				
				ТабДок.Вывести(ОбластьСтрока);				
			КонецЦикла;   
			
			ОбластьВсего.Параметры.ИтогоКоличествоМест = "";
			Если ИтогоМассаБрутто = 0 Тогда
				ИтогоМассаБрутто    = "";
				МассаБруттоПрописью = "";
			Иначе
				МассаБруттоПрописью = ЧислоПрописью(ИтогоМассаБрутто, "Л=ru_RU");
			КонецЕсли;
			
			ОбластьВсего.Параметры.ИтогоМассаБрутто = ИтогоМассаБрутто;
			ОбластьВсего.Параметры.ИтогоКоличество	= ИтогоКоличество;
			ОбластьВсего.Параметры.ИтогоСуммаБезНДС = ИтогоСуммаБезНДС;
			ОбластьВсего.Параметры.ИтогоСуммаНДС    = НДС;
			ОбластьВсего.Параметры.ИтогоСуммаСНДС   = Всего;
			
			ТабДок.Вывести(ОбластьВсего);
			
			ОбластьПодвал.Параметры.КоличествоЛистовВПриложении = 1;
			КоличествоПорядковыхНомеровЗаписейПрописью 	= ЧислоПрописью(ЧислоСтрок, "Л=ru_RU");
			ОбластьПодвал.Параметры.МассаНеттоПрописью 	= МассаБруттоПрописью;
			ОбластьПодвал.Параметры.МассаБруттоПрописью = МассаБруттоПрописью;
			ОбластьПодвал.Параметры.ВсегоМестПрописью 	= "";
			ОбластьПодвал.Параметры.СуммаПрописью 		= ОбщийМодульТекстСервер.СформироватьСуммуПрописью(Всего, ВалютаЦены);
			ОбластьПодвал.Параметры.ФИОРуководителя     = Организация.Руководитель;
			ОбластьПодвал.Параметры.ФИОГлавБухгалтера   = Организация.ГлавныйБухгалтер;
			ОбластьПодвал.Параметры.ДолжностьКладовщика = ?(ЗначениеЗаполнено(Сотрудник), Сотрудник.Должность, "");
			ОбластьПодвал.Параметры.ФИОКладовщика       = ?(ЗначениеЗаполнено(Сотрудник), Сотрудник, "");
			ОбластьПодвал.Параметры.ДатаДокументаДень   = День(Выборка.Дата);
			ОбластьПодвал.Параметры.ДатаДокументаМесяц	= Месяц(Выборка.Дата);
			ОбластьПодвал.Параметры.ДатаДокументаГод	= Год(Выборка.Дата);
			//ОбластьПодвал.Параметры.ДоверенностьНомер
			//ОбластьПодвал.Параметры.ДоверенностьДата
			//ОбластьПодвал.Параметры.ДоверенностьВыдана
			//ОбластьПодвал.Параметры.ДоверенностьЧерезКого
			ОбластьПодвал.Параметры.ДолжностьРуководителя = ДолжностьРуководителя;
			ОбластьПодвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = КоличествоПорядковыхНомеровЗаписейПрописью;
			
			ТабДок.Вывести(ОбластьПодвал);
			
			ВставлятьРазделительСтраниц = Истина;
		КонецЦикла;     	
		
	Иначе	//регламентированный или произвольный
		
		РегламентированныйДокумент = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПечататьРегламентированныйДокументРасходнойНакладной")
		или ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьМеханизмыПечатиНалоговойНакладнойДляУкраины")
		или (ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьМеханизмыПечатиФормыТОРГ12") И ЭтоТорг12);
		//и НЕ Ссылка.ЭтоЗаказ;
		
		Если РегламентированныйДокумент Тогда
			Макет = ПолучитьОбщийМакет("РегламентированныеДокументы");
			ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок1");
			ОбластьПоставщик 	= Макет.ПолучитьОбласть("Поставщик");
			ОбластьПокупатель 	= Макет.ПолучитьОбласть("Покупатель");
			ДопИнформация 		= Макет.ПолучитьОбласть("ДопИнформация");
			Пробел 				= Макет.ПолучитьОбласть("Пробел");
			ИтогоНДС 			= Макет.ПолучитьОбласть("ИтогоНДС");
			СуммаПрописью 		= Макет.ПолучитьОбласть("СуммаПрописью");
			МестоСоставления 	= Макет.ПолучитьОбласть("МестоСоставления");
			
			Если НЕ этосчет Тогда
				Подписи = Макет.ПолучитьОбласть("Подписи");
			Иначе
				Подписи = Макет.ПолучитьОбласть("ПодписиСчета");	
			КонецЕсли;
			
			Если ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьЕдиницыИзмеренияНоменклатуры")
				И ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВыводитьВРасходномДокументеЕдиницуИзмеренияОтдельнойКолонкой") Тогда
				
				Если ЕстьСкидка Тогда
					ШапкаТаблицы 	= Макет.ПолучитьОбласть("ШапкаТаблицыСкидка1");	
					ОбластьТовары 	= Макет.ПолучитьОбласть("СтрокаСкидка1");
					Подвал 			= Макет.ПолучитьОбласть("ИтогоСкидка1");
					
				Иначе
					ШапкаТаблицы 	= Макет.ПолучитьОбласть("ШапкаТаблицы1");
					ОбластьТовары 	= Макет.ПолучитьОбласть("Строка1");	
					Подвал 			= Макет.ПолучитьОбласть("Итого1");	
				КонецЕсли;	
				
			Иначе
				Если ЕстьСкидка Тогда
					ШапкаТаблицы 	= Макет.ПолучитьОбласть("ШапкаТаблицыСкидка");	
					ОбластьТовары 	= Макет.ПолучитьОбласть("СтрокаСкидка");
					Подвал 			= Макет.ПолучитьОбласть("ИтогоСкидка");
					
				Иначе
					ШапкаТаблицы 	= Макет.ПолучитьОбласть("ШапкаТаблицы");
					ОбластьТовары 	= Макет.ПолучитьОбласть("Строка");	
					Подвал 			= Макет.ПолучитьОбласть("Итого");	
				КонецЕсли;	
			КонецЕсли;
			
		Иначе  //произвольный
			Макет = Документы.РасходыТовара.ПолучитьМакет("Печать");	 
			ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
			Шапка = Макет.ПолучитьОбласть("Шапка");
			
			Если ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьЕдиницыИзмеренияНоменклатуры")
				И ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВыводитьВРасходномДокументеЕдиницуИзмеренияОтдельнойКолонкой") Тогда
				
				если ЕстьСкидка тогда
					ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка1");
					ОбластьТовары 		= Макет.ПолучитьОбласть("Товары1");
					Подвал 				= Макет.ПолучитьОбласть("Подвал");
					
				иначе
					ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапкаБезСкидки1");
					ОбластьТовары 		= Макет.ПолучитьОбласть("ТоварыБезСкидки1");
					Подвал 				= Макет.ПолучитьОбласть("ПодвалБезСкидки");
				конецесли;
				
			иначе				
				если ЕстьСкидка тогда
					ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка");
					ОбластьТовары 		= Макет.ПолучитьОбласть("Товары");
					Подвал 				= Макет.ПолучитьОбласть("Подвал");
					
				иначе
					ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапкаБезСкидки");
					ОбластьТовары 		= Макет.ПолучитьОбласть("ТоварыБезСкидки");
					Подвал 				= Макет.ПолучитьОбласть("ПодвалБезСкидки");
				конецесли;
			КонецЕсли;
			
			ОбластьОплатыШапка = Макет.ПолучитьОбласть("ОплатыШапка");
			ОбластьОплаты = Макет.ПолучитьОбласть("Оплаты");
			
		КонецЕсли;
		
		ВставлятьРазделительСтраниц = Ложь;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			Валюта = ?(ЗначениеЗаполнено(Выборка.Валюта), Выборка.Валюта, валютаосн);
			
			Если РегламентированныйДокумент Тогда
				
				Организация = ?(ЗначениеЗаполнено(Выборка.Организация), Выборка.организация, ПредопределенноеЗначение("Справочник.Организации.ОсновноеПредприятие"));
				ПредставлениеОрганизации = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(организация);
				
				Если ЗначениеЗаполнено(Организация) Тогда
					СтавкаНДСОрганизации = Организация.СтавкаНДС;
				Иначе
					СтавкаНДСОрганизации = 0;
				КонецЕсли;
				
				Клиентпоставщик = Выборка.КлиентПоставщик;
				ПредставлениеПокупателя = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Клиентпоставщик);
				
				Сотрудник = ?(ЗначениеЗаполнено(Выборка.сотрудник), Выборка.сотрудник, Организация.сотрудник);
				
				Если ЭтоСчет Тогда
					ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Счет на оплату") + " № " + выборка.номер + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("от") + " " + формат(выборка.дата, "ДФ=dd.MM.yyyy");
				Иначе
					Если ЗаголовокРасходнойНакладной = Неопределено 
						ИЛИ ЗаголовокРасходнойНакладной = "" Тогда
						
						ИмяДокумента = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИндивидуальныйТекстВШапкеПечатнойФормыРасходаТовара");
					Иначе
						ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(ЗаголовокРасходнойНакладной);
					КонецЕсли;	
					
					Если ИмяДокумента = "" Тогда
						ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Расходная накладная");
					КонецЕсли;
					
					ОбластьЗаголовок.Параметры.ТекстЗаголовка = ИмяДокумента + " № " + выборка.номер + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("от") + " " + формат(выборка.дата, "ДФ=dd.MM.yyyy");
				КонецЕсли;
				
				ОбластьПоставщик.Параметры.ПредставлениеПоставщика = ПредставлениеОрганизации;
				ОбластьПоставщик.Параметры.Поставщик = Организация;
				РеквизитыПоставщика = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("расчетный счет") + " " + Организация.НомерСчета + ", " + Организация.НаименованиеБанка + ", " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("МФО") + " " + Организация.МФО;
				РеквизитыПоставщика = РеквизитыПоставщика + Символы.ПС;
				РеквизитыПоставщика = РеквизитыПоставщика + Организация.Адрес;
				
				Окпо = Организация.Окпо;
				Если ЗначениеЗаполнено(Окпо) Тогда
					РеквизитыПоставщика = РеквизитыПоставщика + Символы.ПС + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("код по ОКПО") + " " + Окпо;
				КонецЕсли;					
				
				ОбластьПоставщик.Параметры.РеквизитыПоставщика = РеквизитыПоставщика;
				
				
				Если ДваЭкземпляра Тогда
					ВсегоЭкземпляров = 2;
				Иначе
					ВсегоЭкземпляров = 1;
				КонецЕсли;
				
				Для счетчикЭкземпляров = 1 по ВсегоЭкземпляров Цикл
				
				ТабДок.Вывести(ОбластьЗаголовок);
				ТабДок.Вывести(ОбластьПоставщик);
				
				Если ЗначениеЗаполнено(Клиентпоставщик) Тогда
					ОбластьПокупатель.Параметры.ПредставлениеПокупателя = ПредставлениеПокупателя;
					ОбластьПокупатель.Параметры.Покупатель = Клиентпоставщик;
					РеквизитыПокупателя = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("расчетный счет") + " " + Клиентпоставщик.НомерСчета + ", " + Клиентпоставщик.НаименованиеБанка + ", " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("МФО") + " " + Клиентпоставщик.МФО;
					РеквизитыПокупателя = РеквизитыПокупателя + Символы.ПС;
					РеквизитыПокупателя = РеквизитыПокупателя + Клиентпоставщик.Адрес;
					
					Окпо = Клиентпоставщик.Окпо;
					Если ЗначениеЗаполнено(Окпо) Тогда
						РеквизитыПокупателя = РеквизитыПокупателя + Символы.ПС + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("код по ОКПО") + " " + Окпо;
					КонецЕсли;					
					
					ОбластьПокупатель.Параметры.РеквизитыПокупателя = РеквизитыПокупателя;
					
					ТабДок.Вывести(ОбластьПокупатель);
				КонецЕсли;
				
				Если НЕ ЭтоСчет Тогда
					ДопИнформация.Параметры.НазваниеПараметра = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Плательщик");
					ДопИнформация.Параметры.ЗначениеПараметра = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Тот же самый");
					ТабДок.Вывести(ДопИнформация);
					
					ЗаказКлиента = Выборка.ЗаказКлиента;
					Если ЗначениеЗаполнено(ЗаказКлиента) Тогда
						ДопИнформация.Параметры.НазваниеПараметра = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заказ");
						ДопИнформация.Параметры.ЗначениеПараметра = ЗаказКлиента;
						ТабДок.Вывести(ДопИнформация);
						
					ИначеЕсли НоСчетЕсть Тогда
						ДопИнформация.Параметры.НазваниеПараметра = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заказ");
						ДопИнформация.Параметры.ЗначениеПараметра = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Счет на оплату") + " № " + выборка.номер + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("от") + " " + формат(выборка.дата, "ДФ=dd.MM.yyyy");
						ТабДок.Вывести(ДопИнформация);
					КонецЕсли;	
				КонецЕсли;
				
				Договор = Выборка.договор;
				Если ЗначениеЗаполнено(Договор) Тогда
					ДопИнформация.Параметры.НазваниеПараметра = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Договор");
					ДопИнформация.Параметры.ЗначениеПараметра = Договор;
					ТабДок.Вывести(ДопИнформация);
					ФормаВзаиморасчетов = Договор.ФормаВзаиморасчетов;
					
				Иначе
					ФормаВзаиморасчетов = Организация.ФормаВзаиморасчетовПоУмолчанию;
				КонецЕсли;
				
				если ЗначениеЗаполнено(ФормаВзаиморасчетов) Тогда
					ДопИнформация.Параметры.НазваниеПараметра = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Условие продажи");
					ДопИнформация.Параметры.ЗначениеПараметра = ФормаВзаиморасчетов;
					ТабДок.Вывести(ДопИнформация);	
				КонецЕсли;
				ТабДок.Вывести(пробел);	
				
				ШапкаТаблицы.Параметры.Цена  = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Цена без НДС");
				ШапкаТаблицы.Параметры.Сумма = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сумма без НДС");
				ТабДок.Вывести(ШапкаТаблицы);	
				
				СуммаБезСкидкиБезНДС = 0;
				СуммаСкидки = 0;
				Всего 		= 0;
				НДС 		= 0;
				ВсегоСНДС 	= 0;
				ЧислоСтрок 	= 0;
				
				ВыборкаТовары = Выборка.Товары.Выбрать();
				Пока ВыборкаТовары.Следующий() Цикл
					
					ЧислоСтрок = ЧислоСтрок + 1;
					Номенклатура = ВыборкаТовары.Номенклатура;
					Если ЗначениеЗаполнено(Номенклатура) Тогда
						ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
						ОбластьТовары.Параметры.ЕдиницаИзмерения = ВыборкаТовары.ЕдиницаИзмерения;
						ОбластьТовары.Параметры.НоменклатураНаименование = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Номенклатура);
						
						Сумма = ВыборкаТовары.Сумма;
						Количество 	= ВыборкаТовары.Количество;
						Если Количество = 0 Тогда
							Количество = 1;
						КонецЕсли;
						ВсегоСНДС 	= ВсегоСНДС + Сумма;
						СтавкаНДС 	= ?(ЗначениеЗаполнено(Номенклатура.СтавкаНДС), Номенклатура.СтавкаНДС, СтавкаНДСОрганизации);
						СуммаБезНДС = Сумма - Сумма * (СтавкаНДС / 100);
						НДС 		= НДС + (Сумма - СуммаБезНДС);
						ОбластьТовары.Параметры.Сумма = СуммаБезНДС;
						ОбластьТовары.Параметры.Цена  = СуммаБезНДС / Количество;
						Всего 		= Всего + СуммаБезНДС;
						
						если ЕстьСкидка тогда
							СуммаБезСкидки = ВыборкаТовары.СуммаБезСкидки;
							СуммаБезСкидкиБезНДСВСтроке = СуммаБезСкидки - СуммаБезСкидки * (СтавкаНДС / 100);	
							ОбластьТовары.Параметры.СуммаБезСкидки = СуммаБезСкидкиБезНДСВСтроке;
							Скидка 		= СуммаБезНДС - СуммаБезСкидкиБезНДСВСтроке;
							СуммаСкидки = СуммаСкидки + Скидка;
							ОбластьТовары.Параметры.Скидка = Скидка;
							СуммаБезСкидкиБезНДС = СуммаБезСкидкиБезНДС + СуммаБезСкидкиБезНДСВСтроке;
						КонецЕсли;	
					КонецЕсли;
					
					ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
					
				КонецЦикла;
				
				если ЕстьСкидка тогда
					Подвал.Параметры.ВсегоБезСкидок = СуммаБезСкидкиБезНДС;
					Подвал.Параметры.ВсегоСкидок	= СуммаСкидки
				КонецЕсли;
				
				Подвал.Параметры.Всего = Всего;
				ТабДок.Вывести(Подвал);				
				
				Если не НДС = 0 Тогда
					ИтогоНДС.Параметры.НДС 		= Организация.СтавкаНДС;
					ИтогоНДС.Параметры.ВсегоНДС = НДС;
					ТабДок.Вывести(ИтогоНДС);
					
				КонецЕсли;
				
				ИтогоНДС.Параметры.НДС 		= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Всего с НДС");
				ИтогоНДС.Параметры.ВсегоНДС = ВсегоСНДС;
				ТабДок.Вывести(ИтогоНДС);
				
				СуммаПрописью.Параметры.ИтоговаяСтрока = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Всего наименований") + ЧислоСтрок + ", " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("на сумму") + " " + формат(ВсегоСНДС, "ЧЦ=15; ЧДЦ=2") + " " + валюта;
				СуммаКПрописи 		= ВсегоСНДС;
				ТекстСуммаПрописью 	= ОбщийМодульТекстСервер.СформироватьСуммуПрописью(ВсегоСНДС, Валюта);
				Если Не НДС = 0 Тогда
					ТекстСуммаПрописью = ТекстСуммаПрописью + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В том числе НДС:") + " ";
					ТекстСуммаПрописью = ТекстСуммаПрописью + ОбщийМодульТекстСервер.СформироватьСуммуПрописью(НДС, Валюта);	
				КонецЕсли;
				СуммаПрописью.Параметры.СуммаПрописью = ТекстСуммаПрописью;
				ТабДок.Вывести(СуммаПрописью);
				
				Подписи.Параметры.Сотрудник = Сотрудник;
				ТабДок.Вывести(Подписи);	
										КонецЦикла;
				
			Иначе //произвольный
				Если параметрысеанса.ВестиУчетСобственныхЮридическихЛицПС
					и ЗначениеЗаполнено(Выборка.Организация) Тогда
					
					ОбщийМодульСервер.ДобавитьШапкуОрганизации(ТабДок, Выборка.Организация);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.КлиентПоставщик) Тогда
					Если ТипЗнч(Выборка.КлиентПоставщик) = Тип("СправочникСсылка.Клиенты") Тогда
						
						если Выборка.ЭтоЗаказ Тогда
							ИмяДокумента = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИндивидуальныйТекстВШапкеПечатнойФормыЗаказаКлиента");
							если сокрлп(ИмяДокумента) = "" тогда
								ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заказ Клиента");						
							иначе
								ОбластьЗаголовок.Параметры.ИмяДокумента = ИмяДокумента;
							КонецЕсли;
							
						Иначе
							Если ЗаголовокРасходнойНакладной = Неопределено Тогда
								ИмяДокумента = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИндивидуальныйТекстВШапкеПечатнойФормыРасходаТовара");
							Иначе
								ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(ЗаголовокРасходнойНакладной);
							КонецЕсли;	
							
							если сокрлп(ИмяДокумента) = "" тогда
								ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Реализация товара");
							иначе
								ОбластьЗаголовок.Параметры.ИмяДокумента = ИмяДокумента;
							конецесли;
						конецесли;
						
						Шапка.Параметры.КлиентЗ = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Клиент");
						
					иначе
						ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Возврат Поставщику");
						Шапка.Параметры.КлиентЗ = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поставщик");
					КонецЕсли;
					
				Иначе
					если Выборка.ЭтоЗаказ Тогда
						ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Планируемое списание");
					иначе				
						ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Списание товара");
					КонецЕсли;
					
					Шапка.Параметры.КлиентЗ = "";	
				КонецЕсли;	
				
				ТабДок.Вывести(ОбластьЗаголовок);
				Если ЗначениеЗаполнено(Выборка.КлиентПоставщик)
					и не Выборка.КлиентПоставщик.НаименованиеДляПечати = "" Тогда
					
					Шапка.Параметры.КлиентПоставщик  = Выборка.КлиентПоставщик.НаименованиеДляПечати;
				КонецЕсли;
				
				Шапка.Параметры.Заполнить(Выборка);
				СтруктураДополнительныПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
				Если НЕ параметрысеанса.ВестиУчетСобственныхЮридическихЛицПС
					или не ЗначениеЗаполнено(Выборка.Организация) Тогда
					
					Шапка.Параметры.ТекстВШапкеДокументовПриПечати   	= СтруктураДополнительныПараметровМакета.ТекстВШапкеДокументовПриПечати;	
				иначе
					Шапка.Параметры.ТекстВШапкеДокументовПриПечати   	= "";
				КонецЕсли;
				
				Шапка.Параметры.СкладЗ = ?(ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоСкладам"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Склад"), "");
				
				ДолгКлиента = ОбщийМодульСервер.ПолучитьДолгКлиентаПоставщика(Выборка.КлиентПоставщик, Выборка.Дата - 1 );
				если долгКлиента = 0 тогда
					Шапка.Параметры.Долг = "";
				иначеЕсли долгКлиента> 0 тогда
					Шапка.Параметры.Долг = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Долг до продажи составляет:") + " " + ДолгКлиента + " " + валютаосн;			
				иначе
					Шапка.Параметры.Долг = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Переплата до продажи составила:") + " " + сокрлп(-ДолгКлиента) + " " + валютаосн;
				конецесли;
				
				ТабДок.Вывести(Шапка, Выборка.Уровень());
				
				Если Выборка.ЭтоЗаказ
					И ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьОтдельныеПоляАдресаИТелефонаВЗаказахКлиентов") Тогда
					
					АдресТелефон = Макет.ПолучитьОбласть("АдресТелефон");
					АдресТелефон.Параметры.Адрес   = Выборка.Адрес;
					АдресТелефон.Параметры.Телефон = Выборка.Телефон;
					
					ТабДок.Вывести(АдресТелефон);
				КонецЕсли;
				
				СуммаБезСкидки = 0;
				ТабДок.Вывести(ОбластьТоварыШапка);
				
				ВыборкаТовары  = Выборка.Товары.Выбрать();
				Пока ВыборкаТовары.Следующий() Цикл
					
					ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
					ОбластьТовары.Параметры.НоменклатураНаименование = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаТовары.Номенклатура);
					
					Если НеВыводитьНаПечатьДанныеОСкидкеПриПечатиРасходногоДокумента Тогда
						Количество = ОбластьТовары.Параметры.Количество;
						Если Не Количество = 0 тогда
							ОбластьТовары.Параметры.Цена = ВыборкаТовары.Сумма / Количество;	
						КонецЕсли;
					КонецЕсли;
					
					ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
					если ИспользоватьСкидки тогда
						СуммаБезСкидки = СуммаБезСкидки + ВыборкаТовары.СуммаБезСкидки;	
					КонецЕсли;
					
				КонецЦикла;
				
				Если ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("РазрешеноПриниматьПриРеализацииДеньгиСразуВНесколькихВалютах") Тогда
					ВыборкаОплаты = Выборка.Оплаты.Выбрать();
					
					Если НЕ ВыборкаОплаты.Количество() = 0 Тогда				
						ТабДок.Вывести(ОбластьОплатыШапка);	
						
						Пока ВыборкаОплаты.Следующий() Цикл
							ОбластьОплаты.Параметры.Заполнить(ВыборкаОплаты);	
							ТабДок.Вывести(ОбластьОплаты);	
						КонецЦикла;
					КонецЕсли;	
					
				КонецЕсли;
				
				Подвал.Параметры.Заполнить(Выборка);
				Подвал.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВПодвалеДокументовПриПечати;
				
				если ИспользоватьСкидки
					и ЕстьСкидка тогда		
					
					Подвал.Параметры.Стоимость   = СуммаБезСкидки ;
					Подвал.Параметры.СуммаСкидки = СуммаБезСкидки - Выборка.ТовараНаСумму ;	
				КонецЕсли;
				
				поступилоДенегНам = 0;
				Если ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("РазрешеноПриниматьПриРеализацииДеньгиСразуВНесколькихВалютах") 
					и не Ссылка.Оплаты.Количество() = 0 Тогда				
					
					Для Каждого Оплата Из Ссылка.Оплаты Цикл
						поступилоДенегНам = поступилоДенегНам + Оплата.Сумма * Оплата.Курс;
					КонецЦикла;
					
					Если поступилоДенегНам = 0 Тогда
						Подвал.Параметры.поступилоДенегНам = "";
					ИначеЕсли Выборка.ПоступилоДенег > 0 тогда
						Подвал.Параметры.поступилоДенегНам = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Принято от покупателя:") + " " + формат(поступилоДенегНам,"ЧЦ=15; ЧДЦ=2")  + " " + валюта;
					иначе
						Подвал.Параметры.поступилоДенегНам = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Также передано покупателю:") + " " + формат(-поступилоДенегНам,"ЧЦ=15; ЧДЦ=2") + " " + валюта;
					КонецЕсли;
					
				Иначе
					поступилоДенегНам = Выборка.поступилоДенег;
					
					Если поступилоДенегНам = 0 Тогда
						Подвал.Параметры.поступилоДенегНам = "";
					ИначеЕсли Выборка.ПоступилоДенег > 0 тогда
						Подвал.Параметры.поступилоДенегНам = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Принято от покупателя:") + " " + формат(поступилоДенегНам,"ЧЦ=15; ЧДЦ=2") + " " + валюта;
					иначе
						Подвал.Параметры.поступилоДенегНам = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Также передано покупателю:") + " " + формат(-поступилоДенегНам,"ЧЦ=15; ЧДЦ=2") + " " + валюта;
					КонецЕсли;
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.КлиентПоставщик) Тогда
					Если ТипЗнч(Выборка.КлиентПоставщик) = Тип("СправочникСсылка.Клиенты") 
						и не ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам") Тогда
						
						Подвал.Параметры.ОстатокДолга = "";
						
					иначеЕсли ТипЗнч(Выборка.КлиентПоставщик) = Тип("СправочникСсылка.Поставщики") 
						И не ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоПоставщикам") тогда
						
						Подвал.Параметры.ОстатокДолга = "";
						
					иначе
						
						Если ПараметрыСеанса.ВестиУчетВалютВСеансе
							и ПараметрыСеанса.ИспользоватьСложныйМеханизмЦенПС
							и ЗначениеЗаполнено(Выборка.ВидЦен) 
							и ЗначениеЗаполнено(Выборка.ВидЦен.ВалютаЦены) 
							и не Выборка.ВидЦен.ВалютаЦены = Выборка.валюта
							И (НЕ ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("РазрешеноПриниматьПриРеализацииДеньгиСразуВНесколькихВалютах") 
							иЛИ Ссылка.Оплаты.Количество() = 0) Тогда
							
							Сумма = ОбщийМодульСервер.ПоКурсу(Выборка.ТовараНаСумму, Выборка.валюта, Выборка.ВидЦен.ВалютаЦены, выборка.дата) - Выборка.ПоступилоДенег;
							
						иначе
							Сумма = Выборка.ТовараНаСумму - поступилоДенегНам;
						КонецЕсли;
						
						ОстатокДолга = ДолгКлиента + Сумма * Выборка.курс;
						
						Если ОстатокДолга = 0 Тогда
							Подвал.Параметры.ОстатокДолга = "";
						иначеесли ОстатокДолга > 0 тогда
							Подвал.Параметры.ОстатокДолга = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Остаток долг:") + " " + формат(ОстатокДолга,"ЧЦ=15; ЧДЦ=2") + " " + валютаосн;
						иначе
							Подвал.Параметры.ОстатокДолга = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Остаток переплата:") + " " + формат(-ОстатокДолга,"ЧЦ=15; ЧДЦ=2") + " " + валютаосн;
						КонецЕсли;
					КонецЕсли;
					
				иначе
					Подвал.Параметры.ОстатокДолга = "";
				КонецЕсли;
				
				ТабДок.Вывести(Подвал);
			Если ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("УчитыватьИнформациюОДоставкеВДокументахРасхода") Тогда
				 ИнформацияОДоставке = Макет.ПолучитьОбласть("ИнформацияОДоставке");
				 ИнформацияОДоставке.Параметры.Заполнить(Выборка);
				 ТабДок.Вывести(ИнформацияОДоставке);
			КонецЕсли;
			
			КонецЕсли;
			
			ВставлятьРазделительСтраниц = Истина;
		КонецЦикла;     	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	ЗначенияЗаполнения = Неопределено;
	Попытка 
		ЭтоЗаказ = Параметры.Ключ.ЭтоЗаказ;
	Исключение 	
		ЭтоЗаказ = Ложь;		
	КонецПопытки;
	
	Если (Параметры.свойство("ЭтоЗаказ")
		И Параметры.ЭтоЗаказ)
		или ЭтоЗаказ Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если ВидФормы = "ФормаСписка" Тогда
			ВыбраннаяФорма = "ФормаСпискаЗаказов";
			
		ИначеЕсли ВидФормы = "ФормаОбъекта" Тогда
			ВыбраннаяФорма = "ФормаДокументаЗаказ";
			
		Иначе
			ВыбраннаяФорма = "ФормаВыбораЗаказов";
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	ДанныеСсылка = Данные.Ссылка;
	Представление = ДанныеСсылка.ВидДокумента + " " + ДанныеСсылка.Номер + " - " + формат(ДанныеСсылка.Дата, "ДФ='dd.MM.yy ЧЧ:мм'");	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры
