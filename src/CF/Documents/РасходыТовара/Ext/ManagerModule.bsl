//sza131213-1201 SZA: 
//sza130909-2144 : 

Процедура Печать(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.РасходыТовара.ПолучитьМакет("Печать");
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходыТовара.Дата,
	|	РасходыТовара.КлиентПоставщик,
	|	РасходыТовара.Комментарий,
	|	РасходыТовара.ПоступилоДенег,
	|	РасходыТовара.Склад,
	|	РасходыТовара.ТовараВКоличестве,
	|	РасходыТовара.ТовараНаСумму,
	|	РасходыТовара.Товары.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Количество,
	|		Цена,
	|		ПроцентСкидки,
	|		СуммаБезСкидки,
	|		Сумма,
	|		СерияНоменклатуры
	|	),
	|	РасходыТовара.ВидЦен,
	|	РасходыТовара.Валюта,
	|	РасходыТовара.Курс,
	|	РасходыТовара.Договор,
	|	РасходыТовара.Организация,
	|	РасходыТовара.ЗаказКлиента,
	|	РасходыТовара.ЭтоЗаказ
	|ИЗ
	|	Документ.РасходыТовара КАК РасходыТовара
	|ГДЕ
	|	РасходыТовара.Ссылка В(&Ссылка)";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	валютаосн = Справочники.Валюты.ОсновнаяВалюта ;
	
	СуммаСкидки = 0;
	ЕстьСкидка = Ложь;
	ИспользоватьСкидки = ПараметрыСеанса.ИспользоватьСкидкиПС ;
	
	если ИспользоватьСкидки тогда
		Пока Выборка.Следующий() Цикл
			ВыборкаТовары = Выборка.Товары.Выбрать();
			Пока ВыборкаТовары.Следующий() Цикл
				
				если не ВыборкаТовары.СуммаБезСкидки = 0 тогда
					Скидка = (ВыборкаТовары.Сумма - ВыборкаТовары.СуммаБезСкидки);
					если не ЕстьСкидка тогда 					
						ЕстьСкидка = не Скидка = 0;
					КонецЕсли;
					СуммаСкидки = СуммаСкидки + Скидка; //Не прерывать!
				конецесли;
			КонецЦикла;
			
		КонецЦикла;		
	КонецЕсли;
	
	Выборка.Сбросить();
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	
	если ЕстьСкидка тогда
		ОбластьТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапка");
		ОбластьТовары = Макет.ПолучитьОбласть("Товары");
		Подвал = Макет.ПолучитьОбласть("Подвал");
	иначе
		ОбластьТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапкаБезСкидки");
		ОбластьТовары = Макет.ПолучитьОбласть("ТоварыБезСкидки");
		Подвал = Макет.ПолучитьОбласть("ПодвалБезСкидки");
	конецесли;
	
	ТабДок.Очистить();
	
	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Если параметрысеанса.ВестиУчетСобственныхЮридическихЛицПС
			и ЗначениеЗаполнено(Выборка.Организация) Тогда
			
			ОбщийМодульСервер.ДобавитьШапкуОрганизации(ТабДок, Выборка.Организация);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.КлиентПоставщик) Тогда
			Если ТипЗнч(Выборка.КлиентПоставщик) = Тип("СправочникСсылка.Клиенты") Тогда
				
				если Выборка.ЭтоЗаказ Тогда
					ИмяДокумента = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИндивидуальныйТекстВШапкеПечатнойФормыЗаказаКлиента");
					если сокрлп(ИмяДокумента) = "" тогда
						ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заказ Клиента");						
					иначе
						ОбластьЗаголовок.Параметры.ИмяДокумента = ИмяДокумента;
					КонецЕсли;
				
				Иначе
					ИмяДокумента = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИндивидуальныйТекстВШапкеПечатнойФормыРасходаТовара");
					если сокрлп(ИмяДокумента) = "" тогда
						ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Реализация товара");
					иначе
						ОбластьЗаголовок.Параметры.ИмяДокумента = ИмяДокумента;
					конецесли;
				конецесли;
				
				Шапка.Параметры.КлиентЗ = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Клиент");
				
			иначе
				ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Возврат Поставщику");
				Шапка.Параметры.КлиентЗ = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поставщик");
			КонецЕсли; //ТипЗнч(Выборка.КлиентПоставщик) = Тип("СправочникСсылка.Клиенты") Тогда
			
		Иначе
			если Выборка.ЭтоЗаказ Тогда
				ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Планируемое списание");
			иначе				
				ОбластьЗаголовок.Параметры.ИмяДокумента = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Списание товара");
			КонецЕсли;
			Шапка.Параметры.КлиентЗ = "";	
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		Если ЗначениеЗаполнено(Выборка.КлиентПоставщик)
			и не Выборка.КлиентПоставщик.НаименованиеДляПечати = "" Тогда
			
			Шапка.Параметры.КлиентПоставщик  = Выборка.КлиентПоставщик.НаименованиеДляПечати;
		КонецЕсли;
		
		Шапка.Параметры.Заполнить(Выборка);
		СтруктураДополнительныПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
		Если НЕ параметрысеанса.ВестиУчетСобственныхЮридическихЛицПС
			или не ЗначениеЗаполнено(Выборка.Организация) Тогда
			
			Шапка.Параметры.ТекстВШапкеДокументовПриПечати   	= СтруктураДополнительныПараметровМакета.ТекстВШапкеДокументовПриПечати;	
		иначе
			Шапка.Параметры.ТекстВШапкеДокументовПриПечати   	= "";
		КонецЕсли;
		
		Шапка.Параметры.СкладЗ = ?(ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоСкладам"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Склад"), "");
		
		ДолгКлиента = ОбщийМодульСервер.ПолучитьДолгКлиентаПоставщика(Выборка.КлиентПоставщик, Выборка.Дата - 1 );
		если долгКлиента = 0 тогда
			Шапка.Параметры.Долг = "";
		иначеЕсли долгКлиента> 0 тогда
			Шапка.Параметры.Долг = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Долг до продажи составляет:") + " " + ДолгКлиента + " " + валютаосн;			
		иначе
			Шапка.Параметры.Долг = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Переплата до продажи составила:") + " " + сокрлп(-ДолгКлиента) + " " + валютаосн;
		конецесли;
		
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		ТабДок.Вывести(ОбластьТоварыШапка);
		ВыборкаТовары = Выборка.Товары.Выбрать();
		СуммаБезСкидки = 0;
		Пока ВыборкаТовары.Следующий() Цикл
			
			ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
			ОбластьТовары.Параметры.НоменклатураНаименование = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(ВыборкаТовары.Номенклатура);
			
			ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
			если ИспользоватьСкидки тогда
				СуммаБезСкидки = СуммаБезСкидки + ВыборкаТовары.СуммаБезСкидки;	
			КонецЕсли;
			
		КонецЦикла;
		
		Подвал.Параметры.Заполнить(Выборка);
		Подвал.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВПодвалеДокументовПриПечати;
		
		если ИспользоватьСкидки
			и ЕстьСкидка тогда		
			
			Подвал.Параметры.Стоимость = СуммаБезСкидки ;
			Подвал.Параметры.СуммаСкидки = СуммаБезСкидки - Выборка.ТовараНаСумму ;	
		КонецЕсли;
		
		Валюта = ?(ЗначениеЗаполнено(Выборка.Валюта), Выборка.Валюта, валютаосн);
		
		Если Выборка.поступилоДенег = 0 Тогда
			Подвал.Параметры.поступилоДенегНам = "";
		ИначеЕсли Выборка.ПоступилоДенег > 0 тогда
			Подвал.Параметры.поступилоДенегНам = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Принято от покупателя:") + " " + Выборка.ПоступилоДенег + " " + валюта;
		иначе
			Подвал.Параметры.поступилоДенегНам = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Также передано покупателю:") + " " + сокрЛП( -Выборка.ПоступилоДенег) + " " + валюта;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.КлиентПоставщик) Тогда
			Если ТипЗнч(Выборка.КлиентПоставщик) = Тип("СправочникСсылка.Клиенты") 
				и не ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоКлиентам") Тогда
				
				Подвал.Параметры.ОстатокДолга = "";
			иначеЕсли не ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоПоставщикам") тогда
				Подвал.Параметры.ОстатокДолга = "";
				
			иначе
				
				Если ПараметрыСеанса.ВестиУчетВалютВСеансе
					и ПараметрыСеанса.ИспользоватьСложныйМеханизмЦенПС
					и ЗначениеЗаполнено(Выборка.ВидЦен) 
					и ЗначениеЗаполнено(Выборка.ВидЦен.ВалютаЦены) 
					и не Выборка.ВидЦен.ВалютаЦены = Выборка.валюта Тогда
					
					Сумма = ОбщийМодульСервер.ПоКурсу(Выборка.ТовараНаСумму, Выборка.валюта, Выборка.ВидЦен.ВалютаЦены, выборка.дата) - Выборка.ПоступилоДенег;
					
				иначе
					Сумма = Выборка.ТовараНаСумму - Выборка.ПоступилоДенег;
				КонецЕсли;
				
				ОстатокДолга = ДолгКлиента + Сумма * Выборка.курс;
				
				Если ОстатокДолга = 0 Тогда
					Подвал.Параметры.ОстатокДолга = "";
				иначеесли ОстатокДолга > 0 тогда
					Подвал.Параметры.ОстатокДолга = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Остаток долг:") + " " + ОстатокДолга + " " + валютаосн;
				иначе
					Подвал.Параметры.ОстатокДолга = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Остаток переплата:") + " " + сокрлп(-ОстатокДолга) + " " + валютаосн;
				КонецЕсли;
			КонецЕсли;
			
		иначе
			Подвал.Параметры.ОстатокДолга = "";
		КонецЕсли;
		
		ТабДок.Вывести(Подвал);
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	ЗначенияЗаполнения = Неопределено;
	Попытка 
		ЭтоЗаказ = Параметры.Ключ.ЭтоЗаказ;
	Исключение 	
		ЭтоЗаказ = Ложь;		
	КонецПопытки;
	
	Если (Параметры.свойство("ЭтоЗаказ")
		И Параметры.ЭтоЗаказ)
		или ЭтоЗаказ Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если ВидФормы = "ФормаСписка" Тогда
			ВыбраннаяФорма = "ФормаСпискаЗаказов";
			
		ИначеЕсли ВидФормы = "ФормаОбъекта" Тогда
			ВыбраннаяФорма = "ФормаДокументаЗаказ";
			
		Иначе
			ВыбраннаяФорма = "ФормаВыбораЗаказов";
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	если ЗначениеЗаполнено(Данные.Ссылка.ВидДокумента) тогда
		Представление = Данные.Ссылка.ВидДокумента + " " + Данные.Ссылка.Номер + " - " + формат(Данные.Ссылка.Дата, "ДФ='dd.MM.yy ЧЧ:мм'");	
		СтандартнаяОбработка = Ложь;
	ИначеЕсли Данные.Ссылка.ЭтоЗаказ Тогда
		Представление = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Заказ Клиента") + " " + Данные.Ссылка.Номер + " - " + формат(Данные.Ссылка.Дата, "ДФ='dd.MM.yy ЧЧ:мм'");	
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры
