// sza151210-2354 про
// sza140420-1552  
// sza140110-2332 : 
&НаКлиенте
Процедура БезПеремещенийИВозвратовПриИзменении(Элемент)
	ОтборПоСкладуПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоСкладуПриИзменении(Элемент)
	ОтборПоСкладуПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтборПоСкладуПриИзмененииНаСервере()
	
	Список.Параметры.УстановитьЗначениеПараметра("НеИспользоватьОтборПоСкладу", не ЗначениеЗаполнено(ОтборПоСкладу));
	Список.Параметры.УстановитьЗначениеПараметра("Склад", ОтборПоСкладу);
	Список.Параметры.УстановитьЗначениеПараметра("БезПеремещенийИВозвратов", БезПеремещенийИВозвратов);
	Элементы.ФормаСоздатьПеремещение.Видимость = НЕ БезПеремещенийИВозвратов;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	Если ЗначениеЗаполнено(параметры.Склад) Тогда
		ОтборПоСкладу = параметры.Склад;
	КонецЕсли;
	
	ОтборПоСкладуПриИзмененииНаСервере();
	ПодключитьОбработчикОжидания("ПослеИзображенияОкнаФормы", 0.3, ИСТИНА);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзображенияОкнаФормы() // Когда окно уже нарисовано пользователю
	ЭтаФорма.Элементы.ФормаЗакрыть.Видимость = НЕ ЭтаФорма.Окно = Неопределено;	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000370", ЭтаФорма, Отказ, );	
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ИспользоватьУчетПоСкладам = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоСкладам");
		Список.Параметры.УстановитьЗначениеПараметра("ПустойПоставщик", ПредопределенноеЗначение("Справочник.Поставщики.ПустаяСсылка"));
		Список.Параметры.УстановитьЗначениеПараметра("ПустойКлиент", ПредопределенноеЗначение("Справочник.Клиенты.ПустаяСсылка"));
		
		Если ИспользоватьУчетПоСкладам Тогда
			Элементы.БезПеремещенийИВозвратов.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Без перемещений, документов оприходования, списания и возврата товаров");
		Иначе
			Элементы.БезПеремещенийИВозвратов.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Без документов оприходования, списания и возврата товаров");
		КонецЕсли;
		
		Элементы.ПроТовары.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ФормироватьОписаниеТаблицОбъектовДляИхСписков");
		
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.ТовараВКоличестве, , ИСТИНА);	
		ОбщийМодульСервер.ОбеспечитьСписокОтборов(Список);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаказаПоставщику(Команда)
	
	ПараметрыФормы = Новый Структура("ЭтоЗаказ", ИСТИНА);
	ФормаДокумента = ПолучитьФорму("Документ.ПоступленияТовара.ФормаОбъекта", ПараметрыФормы);
	ФормаДокумента.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаказКлиента(Команда)
	
	ПараметрыФормы = Новый Структура("ЭтоЗаказ", ИСТИНА);
	ФормаДокумента = ПолучитьФорму("Документ.РасходыТовара.ФормаОбъекта", ПараметрыФормы);
	ФормаДокумента.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПеремещение(Команда)
	
	ФормаДокумента = ПолучитьФорму("Документ.ПеремещенияТовара.ФормаОбъекта");
	ФормаДокумента.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоступление(Команда)
	
	ФормаДокумента = ПолучитьФорму("Документ.ПоступленияТовара.ФормаОбъекта");
	ФормаДокумента.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРасход(Команда)
	
	ФормаДокумента = ПолучитьФорму("Документ.РасходыТовара.ФормаОбъекта");
	ФормаДокумента.Открыть();
	
КонецПроцедуры
