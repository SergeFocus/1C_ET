// sza151210-2355 про
// sza140606-0044
// sza130909-0324 :

&НаКлиенте
Процедура ОтборПоКлиентуОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)

	ОбщийМодульКлиент.ПоискОшибкиПриВводеТекстаПользователем("Клиенты", ДанныеВыбора, Текст, ОтборПоКлиенту);
	ОтборПоКлиентуПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ОтборПоКлиентуПриИзменении(Элемент)

	ОтборПоКлиентуПриИзмененииНаСервере();

КонецПроцедуры

Процедура ОтборПоКлиентуПриИзмененииНаСервере()

	список.Параметры.УстановитьЗначениеПараметра("Клиент", ОтборПоКлиенту);
	список.Параметры.УстановитьЗначениеПараметра("Организация", ОтборПоОрганизации);
	список.Параметры.УстановитьЗначениеПараметра("НеИспользоватьОтборПоОрганизации", НЕ ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВестиУчетСобственныхЮридическихЛицПС") ИЛИ НЕ ЗначениеЗаполнено(ОтборПоОрганизации));

КонецПроцедуры

&НаКлиенте
Процедура ОтборПоОрганизацииПриИзменении(Элемент)
	ОтборПоКлиентуПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Функция   ПолучитьКлиентаПоУмолчанию()

	РезультатПолучитьКлиентаПоУмолчанию = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("КлиентПоУмолчанию");

	Возврат РезультатПолучитьКлиентаПоУмолчанию;

КонецФункции // ПолучитьКлиентаПоУмолчанию

&НаКлиенте
Процедура ПослеИзображенияОкнаФормы() // Когда окно уже нарисовано пользователю
	ЭтаФорма.Элементы.ФормаЗакрыть.Видимость = НЕ ЭтаФорма.Окно = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                                 // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                            // ПРИ ОТКРЫТИИ

	Если ЗначениеЗаполнено(Параметры.Клиент) Тогда
		ОтборПоКлиенту = Параметры.Клиент;
	КонецЕсли;

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);

	Если НЕ ЗначениеЗаполнено(ОтборПоКлиенту) Тогда
		ОтборПоКлиенту = ПолучитьКлиентаПоУмолчанию();
	КонецЕсли;

	ОтборПоКлиентуПриИзмененииНаСервере();
	ПодключитьОбработчикОжидания("ПослеИзображенияОкнаФормы", 0.3, ИСТИНА);

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000607", ЭтаФорма, Отказ, );

	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);
		КонецЕсли;

		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.Количество, , ИСТИНА);
		ОбщийМодульСервер.ОбеспечитьСписокОтборов(Список);
		ОтборПоКлиентуПриИзмененииНаСервере();
		Элементы.ПроТовары.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ФормироватьОписаниеТаблицОбъектовДляИхСписков");
	КонецЕсли;

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры
