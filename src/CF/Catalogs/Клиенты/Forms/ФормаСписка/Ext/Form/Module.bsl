//sza131119-1833 SZA: 
//sza130905-1654 : 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	ИспользоватьМагнитныеКартыКлиентов 		= ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьМагнитныеКартыКлиентов");
	ИспользоватьПодключаемоеОборудование 	= ПодключаемоеОборудованиеДСервер.ИспользоватьПодключаемоеОборудование();
	Элементы.ДоглОтображаетсяНаТекущийМомент.Видимость = ТекущаяДата() > ОбщийМодульСервисСервер.ПользователяТекущаяДата();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                                                    // ПРИ ОТКРЫТИИ	
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	Если ИспользоватьПодключаемоеОборудование 
		и ИспользоватьМагнитныеКартыКлиентов
		И МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		
		ОписаниеОшибки = "" ;
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");
		
		Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении оборудования произошла ошибка:") + ОписаниеОшибки + ".";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ПроцентСкидки.Видимость = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВключитьВозможностьУказыватьПроцентСкидкиДляКлиентов");
	
	если не ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("СопровождатьКлиентовИзображениями")
		и ИспользуютсяИзображения тогда
		
		ИспользуютсяИзображения = Ложь;	
	КонецЕсли;
	Элементы.ГруппаИзображения.Видимость = ИспользуютсяИзображения;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                                  // ПРИ ЗАКРЫТИИ   	
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
	
	Если ИспользоватьПодключаемоеОборудование 
		и ИспользоватьМагнитныеКартыКлиентов Тогда
		
		ПоддерживаемыеТипыВО = Новый Массив ();
		ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");
		МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИспользоватьМагнитныеКартыКлиентов
		и Источник = "ПодключаемоеОборудование"
		И ВводДоступен () Тогда
		
		Если ИмяСобытия = "TracksData" Тогда
			ПолученКодИзСМК(Параметр);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолученКодИзСМК(Параметр)
	
	Если Параметр[1][3] <> Неопределено Тогда
		МКод = Параметр[1][3][0].ДанныеДорожек[0].ЗначениеПоля;
	Иначе
		МКод = Параметр[0];
	КонецЕсли;
	ПолучитьКлиента(МКод);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьКлиента(МКод)
	
	Клиент = ПолучитьКлиентаНаСервере(МКод);
	Если Клиент <> Неопределено Тогда
		ОткрытьЗначение(Клиент);
	конецесли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКлиентаНаСервере(МКод)
	
	Клиент = ПодключаемоеОборудованиеДСервер.НайтиКлиентаПоМК(МКод);
	Если Клиент <> Неопределено Тогда
		Возврат Клиент;
		
	Иначе
		ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Карта не найдена.");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура СтрокаПоискаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)	
	ОбщийМодульКлиент.АвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка);	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	ВыполнитьПоискНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПоискНаКлиенте()
	
	ОбщийМодульКлиент.УстановитьЭлементОтбора(
	Список.Отбор,
	"Наименование",
	СтрокаПоиска,
	?(НайтиПоТочномуСоответствию, ВидСравненияКомпоновкиДанных.равно, ВидСравненияКомпоновкиДанных.Содержит),
	,
	ЗначениеЗаполнено(СтрокаПоиска)
	);
	
	Элементы.Список.Обновить();
	
	Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
		Если НетНичего() Тогда
			
			СтрокаПоискаРус = ОбщийМодульКлиент.ПеревестиТекстНаЯзык(СтрокаПоиска, 0);  
			ОбщийМодульКлиент.УстановитьЭлементОтбора(
			Список.Отбор,
			"Наименование",
			СтрокаПоискаРус,
			?(НайтиПоТочномуСоответствию, ВидСравненияКомпоновкиДанных.равно, ВидСравненияКомпоновкиДанных.Содержит),
			,
			ЗначениеЗаполнено(СтрокаПоиска)
			);
			
			Элементы.Список.Обновить();
			
			Если НетНичего() Тогда
				
				СтрокаПоискаАнгл = ОбщийМодульКлиент.ПеревестиТекстНаЯзык(СтрокаПоиска, 1);  
				ОбщийМодульКлиент.УстановитьЭлементОтбора(
				Список.Отбор,
				"Наименование",
				СтрокаПоискаАнгл,
				?(НайтиПоТочномуСоответствию, ВидСравненияКомпоновкиДанных.равно, ВидСравненияКомпоновкиДанных.Содержит),
				,
				ЗначениеЗаполнено(СтрокаПоиска)
				);
				
				Элементы.Список.Обновить();
				
				если не НетНичего() Тогда
					СтрокаПоиска = СтрокаПоискаАнгл;
				КонецЕсли;
				
			Иначе
				СтрокаПоиска = СтрокаПоискаРус;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция   НетНичего()	
	Возврат Элементы.Список.ТекущиеДанные = Неопределено;	
КонецФункции //НетНичего

&НаКлиенте
Процедура НайтиПоТочномуСоответствиюПриИзменении(Элемент)
	ВыполнитьПоискНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если ИспользуютсяИзображения Тогда
		ПодСсылку = "";
		
		ТекущийЭлементСписка = Элементы.Список.ТекущаяСтрока;
		Если ЗначениеЗаполнено(ТекущийЭлементСписка) Тогда
			
			ОсновноеИзображениеОбъекта = ОбщийМодульПовтор.ПолучитьОсновноеИзображениеОбъекта(ТекущийЭлементСписка);
			
			Если ЗначениеЗаполнено(ОсновноеИзображениеОбъекта) Тогда				
				
				СтруктураИзображения = ОбщийМодульСервер.ПолучитьСтруктуруИзображения(ОсновноеИзображениеОбъекта);
				ПодСсылку = СтруктураИзображения.ПодСсылку;
				
				элементы.СсылкаНаИзображение.Видимость = не СтруктураИзображения.ИзображениеВБазеДанных;
				элементы.ИзображениеВБазеДанных.Видимость = СтруктураИзображения.ИзображениеВБазеДанных;
				
				если СтруктураИзображения.РазмерПриОтображении = 1 тогда
					элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.АвтоРазмер
				иначеесли СтруктураИзображения.РазмерПриОтображении = 2 тогда
					элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.Пропорционально
				иначеесли СтруктураИзображения.РазмерПриОтображении = 3 тогда
					элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.Растянуть
				иначеесли СтруктураИзображения.РазмерПриОтображении = 4 тогда
					элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.РеальныйРазмер
				иначеесли СтруктураИзображения.РазмерПриОтображении = 5 тогда
					элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.Черепица
				конецесли; 		 
			КонецЕсли;
			
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользуютсяИзображенияПриИзменении(Элемент)
	Элементы.ГруппаИзображения.Видимость = ИспользуютсяИзображения;
КонецПроцедуры
