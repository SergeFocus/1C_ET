//sza131211-1504 SZA: 
//sza130915-1735 : 

Процедура ПередЗаписью(Отказ)
	
	Модифицированность = Модифицированность();
	
	Если не ЭтоГруппа 
		и Модифицированность ТОгда
		
		Если НЕ ЗначениеЗаполнено(НаименованиеДляПечати) Тогда
			НаименованиеДляПечати = Наименование;	
		КонецЕсли;
		Если ЗначениеЗаполнено(Родитель) тогда 
			если ЗначениеЗаполнено(Родитель.ВидЦен) тогда
				
				ВидЦен = Родитель.ВидЦен;	
			КонецЕсли;
			если ОбщийМодульПовтор.ПолучитьПараметрСеанса("ИспользоватьСкидкиПС")
				и не родитель.ПроцентСкидки = 0 тогда
				
				ПроцентСкидки = родитель.ПроцентСкидки;
			КонецЕсли;	
		КонецЕсли;
		
		Если не ЗначениеЗаполнено(ПравовойСтатус) Тогда
			ПравовойСтатус = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПравовойСтатусПоУмолчанию");
		КонецЕсли;
		
		Отказ = ОбщийМодульСервер.ПроверитьУникальностьОКПО(Отказ, "Клиенты", ЭтотОбъект.ОКПО, ЭтотОбъект.Ссылка);
		
		Отказ = ОбщийМодульСервер.ПроверитьУникальностьНаименование(Отказ, "Клиенты", ЭтотОбъект.Наименование, ЭтотОбъект.Ссылка);
		
	Иначеесли Модифицированность  тогда
		
		Если НЕ отказ Тогда
			ПроцентСкидкиУстановлен = ОбщийМодульПовтор.ПолучитьПараметрСеанса("ИспользоватьСкидкиПС") и не ПроцентСкидки = 0;
			
			ЗначениеЗаполненовидцен = ЗначениеЗаполнено(видцен);
			
			Если ЗначениеЗаполнено(Ссылка)
				И (ЗначениеЗаполненоВидЦен
				или ПроцентСкидкиУстановлен) Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ Клиенты.Ссылка
				|ИЗ Справочник.Клиенты КАК Клиенты
				|ГДЕ Клиенты.Родитель = &Родитель
				|	И (Клиенты.ВидЦен <> &ВидЦен
				|			ИЛИ &ПроцентСкидкиУстановлен
				|				И Клиенты.ПроцентСкидки <> &ПроцентСкидки)
				|	И Клиенты.ЭтоГруппа = ЛОЖЬ";
				
				Запрос.УстановитьПараметр("Родитель", Ссылка);
				Запрос.УстановитьПараметр("ВидЦен", ВидЦен);  			
				Запрос.УстановитьПараметр("ПроцентСкидки", ПроцентСкидки);	
				
				Запрос.УстановитьПараметр("ПроцентСкидкиУстановлен", ПроцентСкидкиУстановлен);	
				
				РезультатЗапроса = Запрос.Выполнить();
				если не РезультатЗапроса.Пустой() Тогда
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					Счетчик  = 0;
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						КлиентОбъект = ВыборкаДетальныеЗаписи.ссылка.ПолучитьОбъект();
						Если ЗначениеЗаполненовидцен Тогда
							КлиентОбъект.ВидЦен = ВидЦен;
						КонецЕсли;
						
						если ПроцентСкидкиУстановлен тогда
							КлиентОбъект.ПроцентСкидки = ПроцентСкидки;	
						КонецЕсли;
						КлиентОбъект.Записать();
						Счетчик  = Счетчик  + 1;
					КонецЦикла;
					
					Если не Счетчик =0 Тогда
						
						если ОбщийМодульПовторВТеченииСервера.ВыводитьСообщенияМожно() тогда
							
							//Сообщение = Новый СообщениеПользователю;
							если ЗначениеЗаполнено(ВидЦен) тогда
								Если ПроцентСкидкиУстановлен Тогда
									текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вид цен и Процент скидки назначены для ");
								иначе
									текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вид цен назначен для ");
								КонецЕсли;				
							иначе
								текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Процент скидки назначен для ");
							КонецЕсли;
							//Сообщение.Текст = текст + Счетчик + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(" Клиентов этой группы.");
							ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(текст + Счетчик + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Клиентов этой группы."), , Ссылка);
							//Сообщение.Сообщить();	
						КонецЕсли;
						
					КонецЕсли; 	
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ЭтотОбъект.комментарий = "";
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Поставщики") Тогда
		// Заполнение шапки
		Адрес = ДанныеЗаполнения.Адрес;
		ВидЦен = ДанныеЗаполнения.ВидЦен;
		Комментарий = ДанныеЗаполнения.Комментарий;
		МФО = ДанныеЗаполнения.МФО;
		Наименование = ДанныеЗаполнения.Наименование;
		НаименованиеБанка = ДанныеЗаполнения.НаименованиеБанка;
		НаименованиеДляПечати = ДанныеЗаполнения.НаименованиеДляПечати;
		НомерСчета = ДанныеЗаполнения.НомерСчета;
		ОКПО = ДанныеЗаполнения.ОКПО;
		ОсновнаяВалюта = ДанныеЗаполнения.ОсновнаяВалюта;
		ПравовойСтатус = ДанныеЗаполнения.ПравовойСтатус;
		Регион = ДанныеЗаполнения.Регион;
		Склад = ДанныеЗаполнения.Склад;
		Телефон = ДанныеЗаполнения.Телефон;
		ХранилищеДенег = ДанныеЗаполнения.ХранилищеДенег;
		ЭлектроннаяПочта = ДанныеЗаполнения.ЭлектроннаяПочта;
		ЭтоСотрудник = ДанныеЗаполнения.ЭтоСотрудник;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		// Заполнение шапки
		Адрес = ДанныеЗаполнения.Адрес;
		ДатаРождения = ДанныеЗаполнения.ДатаРождения;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Наименование = ДанныеЗаполнения.Наименование;
		ОКПО = ДанныеЗаполнения.ОКПО;
		Телефон = ДанныеЗаполнения.Телефон;
		ХранилищеДенег = ДанныеЗаполнения.ХранилищеДенег;
		ЭлектроннаяПочта = ДанныеЗаполнения.ЭлектроннаяПочта;
		ЭтоСотрудник = ИСТИНА;
		ВидЦен = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВидЦенДляОтпускаТоваровСобственнымСотрудникам");
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры
