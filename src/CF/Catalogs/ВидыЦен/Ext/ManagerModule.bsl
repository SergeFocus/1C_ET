// sza141110-0249 неск ист
// sza140326-1245  
// sza131214-0136 : 
Процедура НаПечать(ТабДок, Ссылка) Экспорт
	
	ТабДок.ИмяПараметровПечати  = "ВидыЦен" + СокрЛП(ИмяКомпьютера());
	ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	
	ТабДок.Очистить();
	
	СсылкаНаОбъектПечати = Ссылка[0];
		
	РазрядМетаданных = ""; ИмяМетаданных = "";
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ТабДок = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ТабДок, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		
	Иначе		
		Макет = Справочники.ВидыЦен.ПолучитьМакет("НаПечать");
		Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВидыЦен.ВалютаЦены,
		               |	ВидыЦен.ДатаРедакции,
		               |	ВидыЦен.ДатаСоздания,
		               |	ВидыЦен.Зависимая,
		               |	ВидыЦен.Код,
		               |	ВидыЦен.Комментарий,
		               |	ВидыЦен.Наименование,
		               |	ВидыЦен.ОкруглятьТолькоВБольшуюСторону,
		               |	ВидыЦен.ОсновнойВидЦен,
		               |	ВидыЦен.Ответственный,
		               |	ВидыЦен.ПроцентОтБазовойЦены,
		               |	ВидыЦен.ПроцентСкидкиДляРасчетаЛьготнойЦены,
		               |	ВидыЦен.ФормулаРасчетаОтБазовогоВидаЦены,
		               |	ВидыЦен.ЦенаВЦелыхЕдиницах,
		               |	ВидыЦен.СпособыФормированияЦеныДляНоменклатурныхГрупп.(
		               |		НомерСтроки,
		               |		НоменклатурнаяГруппа,
		               |		ПроцентОтБазовойЦены,
		               |		ФормулаРасчетаОтБазовогоВидаЦены,
		               |		ЦенаВЦелыхЕдиницах,
		               |		ПроцентСкидкиДляРасчетаЛьготнойЦены,
		               |		ОкруглятьТолькоВБольшуюСторону,
		               |		Комментарий,
		               |		ОсновнойВидЦен
		               |	),
		               |	ВидыЦен.ЦенаВДесятых,
		               |	ВидыЦен.ИсточниковЗависимостиМожетБытьНесколько,
		               |	ВидыЦен.ТаблицаЗависимости.(
		               |		Ссылка,
		               |		НомерСтроки,
		               |		ОсновнойВидЦен,
		               |		ПроцентОтБазовойЦены,
		               |		ФормулаРасчетаОтБазовогоВидаЦены,
		               |		ЦенаВЦелыхЕдиницах,
		               |		ЦенаВДесятых,
		               |		ПроцентСкидкиДляРасчетаЛьготнойЦены,
		               |		ОкруглятьТолькоВБольшуюСторону,
		               |		Комментарий
		               |	)
		               |ИЗ
		               |	Справочник.ВидыЦен КАК ВидыЦен
		               |ГДЕ
		               |	ВидыЦен.Ссылка В(&Ссылка)";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		
		Если Ссылка.ИсточниковЗависимостиМожетБытьНесколько Тогда
			Шапка = Макет.ПолучитьОбласть("ШапкаКороткая");
		Иначе
			Шапка = Макет.ПолучитьОбласть("Шапка");
		КонецЕсли;
		
		ТаблицаЗависимостиШапка = Макет.ПолучитьОбласть("ТаблицаЗависимостиШапка");
		ТаблицаЗависимостиСтрока = Макет.ПолучитьОбласть("ТаблицаЗависимостиСтрока");
		ОбластьСпособыФормированияЦеныДляНоменклатурныхГруппШапка = Макет.ПолучитьОбласть("СпособыФормированияЦеныДляНоменклатурныхГруппШапка");
		ОбластьСпособыФормированияЦеныДляНоменклатурныхГрупп = Макет.ПолучитьОбласть("СпособыФормированияЦеныДляНоменклатурныхГрупп");
		Подвал = Макет.ПолучитьОбласть("Подвал");
		
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ТабДок);
			ТабДок.Вывести(ОбластьЗаголовок);
			
			Шапка.Параметры.Заполнить(Выборка);
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			
			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("НазначатьРазличныеСпособыФормированияЦеныДляНоменклатурныхГрупп") Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьСпособыФормированияЦеныДляНоменклатурныхГруппШапка);
				ТабДок.Вывести(ОбластьСпособыФормированияЦеныДляНоменклатурныхГруппШапка);
				ВыборкаСпособыФормированияЦеныДляНоменклатурныхГрупп = Выборка.СпособыФормированияЦеныДляНоменклатурныхГрупп.Выбрать();
				Пока ВыборкаСпособыФормированияЦеныДляНоменклатурныхГрупп.Следующий() Цикл
					ОбластьСпособыФормированияЦеныДляНоменклатурныхГрупп.Параметры.Заполнить(ВыборкаСпособыФормированияЦеныДляНоменклатурныхГрупп);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьСпособыФормированияЦеныДляНоменклатурныхГрупп);
					ТабДок.Вывести(ОбластьСпособыФормированияЦеныДляНоменклатурныхГрупп, ВыборкаСпособыФормированияЦеныДляНоменклатурныхГрупп.Уровень());
				КонецЦикла;	
			КонецЕсли;
			
			Если СсылкаНаОбъектПечати.ИсточниковЗависимостиМожетБытьНесколько Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ТаблицаЗависимостиШапка);
				ТабДок.Вывести(ТаблицаЗависимостиШапка);
				ВыборкаТаблицаЗависимости = Выборка.ТаблицаЗависимости.Выбрать();
				Пока ВыборкаТаблицаЗависимости.Следующий() Цикл
					ТаблицаЗависимостиСтрока.Параметры.Заполнить(ВыборкаТаблицаЗависимости);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ТаблицаЗависимостиСтрока);
					ТабДок.Вывести(ТаблицаЗависимостиСтрока, ВыборкаТаблицаЗависимости.Уровень());
				КонецЦикла;			
			КонецЕсли;
			
			Подвал.Параметры.Заполнить(Выборка);
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
			ТабДок.Вывести(Подвал);
			
			ВставлятьРазделительСтраниц = ИСТИНА;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ОбщийМодульПовтор.ВывестиНаименованияНаДругомЯзыке() Тогда
		
		ВозможноеПредставление = ОбщийМодульПовтор.ПолучитьПредставлениеНаЯзыке(Данные.Ссылка, , ИСТИНА);
		Если НЕ ВозможноеПредставление = Неопределено Тогда
			Представление = ВозможноеПредставление;
			СтандартнаяОбработка = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
