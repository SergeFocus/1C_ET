//sza141110-0249 неск ист
//sza140326-1245  
//sza131214-0136 : 
Процедура НаПечать(ТабДок, Ссылка) Экспорт
	
	Макет = Справочники.ВидыЦен.ПолучитьМакет("НаПечать");
	Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыЦен.ВалютаЦены,
	|	ВидыЦен.ДатаРедакции,
	|	ВидыЦен.ДатаСоздания,
	|	ВидыЦен.Зависимая,
	|	ВидыЦен.Код,
	|	ВидыЦен.Комментарий,
	|	ВидыЦен.Наименование,
	|	ВидыЦен.ОкруглятьТолькоВБольшуюСторону,
	|	ВидыЦен.ОсновнойВидЦен,
	|	ВидыЦен.Ответственный,
	|	ВидыЦен.ПроцентОтБазовойЦены,
	|	ВидыЦен.ПроцентСкидкиДляРасчетаЛьготнойЦены,
	|	ВидыЦен.ФормулаРасчетаОтБазовогоВидаЦены,
	|	ВидыЦен.ЦенаВЦелыхЕдиницах,
	|	ВидыЦен.СпособыФормированияЦеныДляНоменклатурныхГрупп.(
	|		НомерСтроки,
	|		НоменклатурнаяГруппа,
	|		ПроцентОтБазовойЦены,
	|		ФормулаРасчетаОтБазовогоВидаЦены,
	|		ЦенаВЦелыхЕдиницах,
	|		ПроцентСкидкиДляРасчетаЛьготнойЦены,
	|		ОкруглятьТолькоВБольшуюСторону,
	|		Комментарий,
	|		ОсновнойВидЦен
	|	),
	|	ВидыЦен.ЦенаВДесятых,
	|	ВидыЦен.ИсточниковЗависимостиМожетБытьНесколько,
	|	ВидыЦен.ТаблицаЗависимости.(
	|		Ссылка,
	|		НомерСтроки,
	|		ОсновнойВидЦен,
	|		ПроцентОтБазовойЦены,
	|		ФормулаРасчетаОтБазовогоВидаЦены,
	|		ЦенаВЦелыхЕдиницах,
	|		ЦенаВДесятых,
	|		ПроцентСкидкиДляРасчетаЛьготнойЦены,
	|		ОкруглятьТолькоВБольшуюСторону,
	|		Комментарий
	|	)
	|ИЗ
	|	Справочник.ВидыЦен КАК ВидыЦен
	|ГДЕ
	|	ВидыЦен.Ссылка В(&Ссылка)";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	
	Если Ссылка.ИсточниковЗависимостиМожетБытьНесколько Тогда
		Шапка = Макет.ПолучитьОбласть("ШапкаКороткая");
	Иначе
		Шапка = Макет.ПолучитьОбласть("Шапка");
	КонецЕсли;
	
	ТаблицаЗависимостиШапка = Макет.ПолучитьОбласть("ТаблицаЗависимостиШапка");
	ТаблицаЗависимостиСтрока = Макет.ПолучитьОбласть("ТаблицаЗависимостиСтрока");
	ОбластьСпособыФормированияЦеныДляНоменклатурныхГруппШапка = Макет.ПолучитьОбласть("СпособыФормированияЦеныДляНоменклатурныхГруппШапка");
	ОбластьСпособыФормированияЦеныДляНоменклатурныхГрупп = Макет.ПолучитьОбласть("СпособыФормированияЦеныДляНоменклатурныхГрупп");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	
	ТабДок.Очистить();
	
	ВставлятьРазделительСтраниц = ЛОЖЬ;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("НазначатьРазличныеСпособыФормированияЦеныДляНоменклатурныхГрупп") Тогда
			ТабДок.Вывести(ОбластьСпособыФормированияЦеныДляНоменклатурныхГруппШапка);
			ВыборкаСпособыФормированияЦеныДляНоменклатурныхГрупп = Выборка.СпособыФормированияЦеныДляНоменклатурныхГрупп.Выбрать();
			Пока ВыборкаСпособыФормированияЦеныДляНоменклатурныхГрупп.Следующий() Цикл
				ОбластьСпособыФормированияЦеныДляНоменклатурныхГрупп.Параметры.Заполнить(ВыборкаСпособыФормированияЦеныДляНоменклатурныхГрупп);
				ТабДок.Вывести(ОбластьСпособыФормированияЦеныДляНоменклатурныхГрупп, ВыборкаСпособыФормированияЦеныДляНоменклатурныхГрупп.Уровень());
			КонецЦикла;	
		КонецЕсли;
		
		Если Ссылка.ИсточниковЗависимостиМожетБытьНесколько Тогда
			ТабДок.Вывести(ТаблицаЗависимостиШапка);
			ВыборкаТаблицаЗависимости = Выборка.ТаблицаЗависимости.Выбрать();
			Пока ВыборкаТаблицаЗависимости.Следующий() Цикл
				ТаблицаЗависимостиСтрока.Параметры.Заполнить(ВыборкаТаблицаЗависимости);
				ТабДок.Вывести(ТаблицаЗависимостиСтрока, ВыборкаТаблицаЗависимости.Уровень());
			КонецЦикла;			
		КонецЕсли;
		
		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);
		
		ВставлятьРазделительСтраниц = ИСТИНА;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ОбщийМодульПовтор.ВывестиНаименованияНаДругомЯзыке() Тогда
		
		ВозможноеПредставление = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Данные.ссылка, , ИСТИНА);
		Если НЕ ВозможноеПредставление = Неопределено Тогда
			Представление = ВозможноеПредставление;
			СтандартнаяОбработка = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
