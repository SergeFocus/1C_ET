// sza141226-0244 номгруппа
// sza140829-2352
// sza140522-0313  
// sza131005-0159 : 
&НаКлиенте
Процедура ДополнительнаяИнформацияВидИнформацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура("ТипВладельца", ДопИнфоТипВладельца);
	ФормаВыбораВидаИнформации = ПолучитьФорму("Справочник.ДополнительныеРеквизиты.ФормаВыбора", ПараметрыФормы, ЭтаФорма);	
	ВидИнформации = ФормаВыбораВидаИнформации.ОткрытьМодально();
	Если ЗначениеЗаполнено(ВидИнформации) Тогда
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.ВидИнформации = ВидИнформации;
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.Информация = ОбщийМодульКлиент.ПолучитьЗначениеПоУмолчаниюПоляДополнительнойИнформации(ВидИнформации);
		СтандартнаяОбработка = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияПриИзменении(Элемент)
	ДопИнформацияИзменена = ИСТИНА;
КонецПроцедуры

&НаСервереБезКонтекста
Функция   естьдети(Знач Ссылка) 

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	Номенклатура.Ссылка
		|ИЗ Справочник.Номенклатура КАК Номенклатура
		|ГДЕ Номенклатура.ЭтоГруппа = ЛОЖЬ
		|	И Номенклатура.Родитель = &ОбъектСссылка";

	Запрос.УстановитьПараметр("ОбъектСссылка", Ссылка);

	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции // естьдети

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Объект.Наименование = Наименование;
	НаименованиеИзменяли = ИСТИНА;
	
	Если ПереводитьНаименованияАвтоматически Тогда
		ОбщийМодульКлиент.ПеревестиНаименованияАвтоматически(Наименование, НаименованияНаДругихЯзыках);
		БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахНаЯзыкеПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НеОтслеживатьОстатокПриИзменении(Элемент)
	ОбновитьВидимостьПланки();
КонецПроцедуры

Процедура ОбновитьВидимостьПланки()	
	Элементы.РекомендуемыйМинимальныйОстатокТовара.Видимость = ИспользуетсяРекМинОСтаток И НЕ Объект.НеОтслеживатьОстаток ;	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.КоличествоПоУмолчанию = 0 Тогда
		Объект.КоличествоПоУмолчанию = 1; 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка)
		И Объект.Ссылка = Объект.Родитель Тогда
		
		Объект.Родитель = ОбщийМодульКлиент.ПолучитьРодителя(Объект.Родитель);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПоддержкаДругихЯзыков тогда
		Если НаименованиеИзменяли тогда
			ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, Наименование);
		КонецЕсли;
		
		Если БылиИзмененияЗначенияПолейНаЯзыках Тогда
			Для Каждого СтрокаЯзыка Из НаименованияНаДругихЯзыках Цикл
				ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, СтрокаЯзыка.НаЯзыке, "Наименование", СтрокаЯзыка.Язык);	
			КонецЦикла;
		КонецЕсли;
	
	КонецЕсли;
	
	Если ДопИнформацияИзменена Тогда
		ОбщийМодульСервисСервер.ЗаписатьДополнительнуюИнформацию(Объект.Ссылка, ДополнительнаяИнформация);
	КонецЕсли;
	
	НоменклатурнаяГруппаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНаДругихЯзыках(Команда)
	Элементы.НаименованияНаДругихЯзыках.Видимость  = НЕ Элементы.НаименованияНаДругихЯзыках.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                               // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                          // ПРИ ОТКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000300", ЭтаФорма, Отказ, Объект);	
	
	Если НЕ Отказ Тогда
		
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ЗначениеЗаполненоОбъектСсылка = ЗначениеЗаполнено(Объект.Ссылка);
		
		Элементы.ВниманиеУстановленныеНижеНастройкиНазначатсяДляВсейНоменклатурыГруппы.Видимость = ЗначениеЗаполненоОбъектСсылка и естьдети(Объект.Ссылка);
		
		ИспользуетсяРекМинОСтаток = ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВключитьВозможностьУказыватьРекомендованныйМинимальныйОстатокНоменклатуры");
		ОбновитьВидимостьПланки();
		
		УчетПоСериям = ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВестиУчетПоСериямНоменклатуры")
						ИЛИ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетСерийНоменклатурыТолькоПриПоступлении");
						
		Элементы.ЗапретитьУказаниеБезСерии.Видимость = УчетПоСериям И Объект.СерийныйУчет;
		РегулироватьКоличествоНоменклатурыПоУмолчаниюДляУпаковок = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("РегулироватьКоличествоНоменклатурыПоУмолчаниюДляУпаковок");
		Элементы.КоличествоПоУмолчанию.Видимость = НЕ Объект.СерийныйУчет И РегулироватьКоличествоНоменклатурыПоУмолчаниюДляУпаковок;
		
		ДопИнфоТипВладельца = ОбщийМодульПовтор.ПолучитьТипВладельца(Объект.Ссылка); 	
		ОбщийМодульСервисСервер.ЗаполнитьДополнительнуюИнформацию(Объект.Ссылка, ДополнительнаяИнформация, ДопИнфоТипВладельца);			
		
		ПоддержкаДругихЯзыков = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПоддерживатьИныеЯзыкиКромеРусского");
		
		Если ПоддержкаДругихЯзыков 
			И ЗначениеЗаполненоОбъектСсылка Тогда
			
			Наименование = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Объект.Ссылка);
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ЗначенияНаДругихЯзыках.Язык,
			|	ЗначенияНаДругихЯзыках.НаЯзыке,
			|	ЗначенияНаДругихЯзыках.Поле
			|ИЗ РегистрСведений.ЗначенияНаДругихЯзыках КАК ЗначенияНаДругихЯзыках
			|ГДЕ ЗначенияНаДругихЯзыках.ОбъектБазыДанных = &ОбъектБазыДанных";
			
			Запрос.УстановитьПараметр("ОбъектБазыДанных", Объект.Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Если ВыборкаДетальныеЗаписи.Поле = "Наименование" Тогда
						СтрокаЯзыка = НаименованияНаДругихЯзыках.Добавить();
						СтрокаЯзыка.Язык 	= ВыборкаДетальныеЗаписи.Язык;
						СтрокаЯзыка.НаЯзыке = ВыборкаДетальныеЗаписи.НаЯзыке;	
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		Иначе
			Наименование = Объект.Наименование;			
		КонецЕсли;	
		
		Если ПоддержкаДругихЯзыков Тогда
			ПереводитьНаименованияАвтоматически = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьРегистрТекстовНаДругихЯзыкахДляАвтоматическогоПереводаНаименований");
			Элементы.НаименованияНаДругихЯзыкахЯзык.РежимВыбораИзСписка = ИСТИНА;
			ОбщийМодульПовтор.УстановитьСписокДоступныхЯзыков(Элементы.НаименованияНаДругихЯзыкахЯзык.СписокВыбора, ИСТИНА);
		КонецЕсли;

		НоменклатурнаяГруппаПриИзмененииНаСервере();
		
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.КоличествоПоУмолчанию, ИСТИНА);
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.ПланкаКоличестваДляЛьготнойЦены, ИСТИНА);
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.РекомендуемыйМинимальныйОстатокТовара, ИСТИНА);	
		
		Элементы.КоэффициентНакопленияНаВаучер.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьВаучеры") И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВаучерыНакопительнымиКартами");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РекомендуемыйМинимальныйОстатокТовараПриИзменении(Элемент)
	ОбновитьВидимостьПланки();	
КонецПроцедуры

&НаКлиенте
Процедура СерийныйУчетПриИзменении(Элемент)
	
	Элементы.ЗапретитьУказаниеБезСерии.Видимость = Объект.СерийныйУчет;
	Элементы.КоличествоПоУмолчанию.Видимость = РегулироватьКоличествоНоменклатурыПоУмолчаниюДляУпаковок И НЕ Объект.СерийныйУчет;
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкаСИзображениямиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогФильтр	 = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Каталог");
	ДиалогРасширение = "*";
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбФайла.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите каталог изображений") + ":";
	ДиалогВыбФайла.Каталог			=	Объект.ПапкаСИзображениями;
	ДиалогВыбФайла.Фильтр					=	ДиалогФильтр;
	ДиалогВыбФайла.Расширение				=	ДиалогРасширение;
	ДиалогВыбФайла.МножественныйВыбор		=	ЛОЖЬ;
	ДиалогВыбФайла.ПредварительныйПросмотр	=	ЛОЖЬ;
	ДиалогВыбФайла.ИндексФильтра			=	0;
	ДиалогВыбФайла.ПроверятьСуществованиеФайла	=	ИСТИНА;
	Если ДиалогВыбФайла.Выбрать() Тогда
		Объект.ПапкаСИзображениями = ДиалогВыбФайла.Каталог;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатурнаяГруппаПриИзменении(Элемент)
	НоменклатурнаяГруппаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура НоменклатурнаяГруппаПриИзмененииНаСервере()
	Элементы.НазначитьЭтуНоменклатурнуюГруппуВсемПодчиненным.Видимость = ЗначениеЗаполнено(Объект.Ссылка) И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетНоменклатурыВРазрезеНоменклатурныхГрупп") И ЗначениеЗаполнено(Объект.НоменклатурнаяГруппа) И естьдети(Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура НазначитьЭтуНоменклатурнуюГруппуВсемПодчиненным(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("НазначитьЭтуНоменклатурнуюГруппуВсемПодчиненнымЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Назначить номенклатурную группу всем подчиненным элементма?"), РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьЭтуНоменклатурнуюГруппуВсемПодчиненнымЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		НазначитьЭтуНоменклатурнуюГруппуВсемПодчиненнымНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура НазначитьЭтуНоменклатурнуюГруппуВсемПодчиненнымНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Номенклатура.Ссылка
	|ИЗ Справочник.Номенклатура КАК Номенклатура
	|ГДЕ НЕ Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
	|	И Номенклатура.Ссылка В ИЕРАРХИИ(&Родитель)";
	
	НоменклатурнаяГруппаНеТребуется = НЕ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетНоменклатурыВРазрезеНоменклатурныхГрупп") ИЛИ НЕ ЗначениеЗаполнено(Объект.НоменклатурнаяГруппа);
	
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", Объект.НоменклатурнаяГруппа);
	Запрос.УстановитьПараметр("Родитель", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда					
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Счетчик  = 0;
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			НоменклатураОбъект = ВыборкаДетальныеЗаписи.ссылка.ПолучитьОбъект();
			
			НоменклатураОбъект.НоменклатурнаяГруппа = Объект.НоменклатурнаяГруппа;
			НоменклатураОбъект.Записать();
			Счетчик  = Счетчик  + 1;    	
			
		КонецЦикла;
		
		Если ОбщийМодульПовторВТеченииСервера.ВыводитьСообщенияМожно() Тогда
			ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Обновлены параметры для номенклатуры в группе") + ": " + Счетчик, , Объект.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
