//sza140119-1437 
//sza130918-1629 : 

Процедура Печать(ТабДок, Ссылка) Экспорт
	
	Макет = Справочники.Номенклатура.ПолучитьМакет("Печать");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номенклатура.Артикул,
	|	Номенклатура.Комментарий,
	|	Номенклатура.Наименование,
	|	Номенклатура.НоменклатурнаяГруппа,
	|	Номенклатура.ОсновнойШтрихКод,
	|	Номенклатура.Производитель,
	|	Номенклатура.ПроцентСкидки,
	|	Номенклатура.Цена,
	|	Номенклатура.Ответственный,
	|	Номенклатура.ДатаСоздания,
	|	Номенклатура.ДатаРедакции,
	|	Номенклатура.Состав.(
	|		Ссылка,
	|		НомерСтроки,
	|		Номенклатура,
	|		Количество
	|	),
	|	Номенклатура.ЭтоНабор,
	|	Номенклатура.ПланкаКоличестваДляЛьготнойЦены,
	|	Номенклатура.РекомендуемыйМинимальныйОстатокТовара,
	|	Номенклатура.НаименованиеДляПечати,
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В(&Ссылка)";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок   = Макет.ПолучитьОбласть("Заголовок");  
	ОбластьНабор 	   = Макет.ПолучитьОбласть("Состав");  
	ОбластьНаборШапка  = Макет.ПолучитьОбласть("ШапкаНабор");  
	
	ИспользоватьСложныйМеханизмЦен = ПараметрыСеанса.ИспользоватьСложныйМеханизмЦенПС;
	ИспользоватьНаборы = ПараметрыСеанса.ИспользованиеНаборовТоваровПС;
	
	Если ИспользоватьСложныйМеханизмЦен Тогда
		Шапка = Макет.ПолучитьОбласть("ШапкаСложныеЦены");
	Иначе
		Шапка = Макет.ПолучитьОбласть("Шапка");
		шапка.Параметры.валюта = Справочники.Валюты.ОсновнаяВалюта ;

	КонецЕсли;
	ТабДок.Очистить();
	
	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);              		
		Шапка.Параметры.Наименование = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Выборка.Ссылка);
			
		Если параметрысеанса.ИспользоватьСкидкиПС
			и ПараметрыСеанса.ВключитьВозможностьУказыватьПроцентСкидкиДляНоменклатуры Тогда
			
			шапка.Параметры.ПроцентСкидкиЗ = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Процент скидки");
		Иначе
			шапка.Параметры.ПроцентСкидкиЗ = "";
			шапка.Параметры.ПроцентСкидки = "";
			
		КонецЕсли;
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		ВставлятьРазделительСтраниц = Истина;
		
		Если ИспользоватьСложныйМеханизмЦен Тогда
			СтрокаЦен = Макет.ПолучитьОбласть("СтрокаЦен");
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЦеныСрезПоследних.Цена,
			|	ЦеныСрезПоследних.ВидЦен,
			|	ЦеныСрезПоследних.Период,
			|	ЦеныСрезПоследних.Комментарий,
			|	ЦеныСрезПоследних.ВидЦен.ВалютаЦены КАК Валюта
			|ИЗ
			|	РегистрСведений.Цены.СрезПоследних(&ТекущаяДата, Номенклатура В (&номенклатура)) КАК ЦеныСрезПоследних";
			
			Запрос.УстановитьПараметр("номенклатура", Ссылка);
			Запрос.УстановитьПараметр("ТекущаяДата", ОбщийМодульСервисСервер.ПользователяТекущаяДата());
			
			РезультатЗапроса = Запрос.Выполнить();
			если не РезультатЗапроса.Пустой() Тогда
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					СтрокаЦен.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
					ТабДок.Вывести(СтрокаЦен, ВыборкаДетальныеЗаписи.Уровень());
				КонецЦикла;                                  		
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИспользоватьНаборы
			и Выборка.этонабор = ИСТИНА Тогда
			
			ТабДок.Вывести(ОбластьНаборШапка);
			ВыборкаНабор = Выборка.Состав.Выбрать();
			Пока ВыборкаНабор.Следующий() Цикл
				ОбластьНабор.Параметры.Заполнить(ВыборкаНабор);
				ТабДок.Вывести(ОбластьНабор, ВыборкаНабор.Уровень());
			КонецЦикла;
			
		КонецЕсли;		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПечатьСерийНоменклатуры(ТабДок, Ссылка) Экспорт
	
	Макет = Справочники.Номенклатура.ПолучитьМакет("ПечатьСерийНоменклатуры");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номенклатура.Артикул,
	|	Номенклатура.ЗапретитьУказаниеБезСерии,
	|	Номенклатура.Комментарий,
	|	Номенклатура.НаименованиеДляПечати,
	|	Номенклатура.НоменклатурнаяГруппа,
	|	Номенклатура.ОсновнойШтрихКод,
	|	Номенклатура.Производитель,
	|	Номенклатура.Ссылка,
	|	Номенклатура.Наименование
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка 		= Макет.ПолучитьОбласть("Шапка");
	СтрокаСерии = Макет.ПолучитьОбласть("С");
	ПодвалСерии = Макет.ПолучитьОбласть("П");
	Подвал 		= Макет.ПолучитьОбласть("Подвал");
	ТабДок.Очистить();
	
	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);		
		Шапка.Параметры.НаименованиеДляПечати = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Выборка.Ссылка);
		
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		ТабДок.Вывести(Макет.ПолучитьОбласть("ШС"));
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СерииНоменклатуры.Наименование КАК Серия,
		|	СерииНоменклатуры.КодПродукта,
		|	ЕСТЬNULL(ВложенныйЗапрос.Склад, &НетВНаличии) КАК Склад
		|ИЗ
		|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТоварыОстатки.Склад КАК Склад,
		|			ТоварыОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|			ТоварыОстатки.СуммаОстаток КАК СуммаОстаток,
		|			ТоварыОстатки.СерияНоменклатуры КАК СерияНоменклатуры
		|		ИЗ
		|			РегистрНакопления.Товары.Остатки(&Дата, Номенклатура = &Номенклатура) КАК ТоварыОстатки
		|		ГДЕ
		|			ТоварыОстатки.КоличествоОстаток <> 0) КАК ВложенныйЗапрос
		|		ПО СерииНоменклатуры.Ссылка = ВложенныйЗапрос.СерияНоменклатуры";
		
		Запрос.УстановитьПараметр("Дата", ОбщийМодульСервисСервер.ПользователяТекущаяДата());
		Запрос.УстановитьПараметр("НетВНаличии", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Нет в наличии"));
		Запрос.УстановитьПараметр("Номенклатура", Выборка.Ссылка);
		
		ЧислоЭлементов 		= 0;
		РезультатЗапроса 	= Запрос.Выполнить();
		если не РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				СтрокаСерии.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
				ТабДок.Вывести(СтрокаСерии);
				
				ЧислоЭлементов = ЧислоЭлементов + 1;
			КонецЦикла;
			
			ПодвалСерии.параметры.Количество = ЧислоЭлементов;
			ТабДок.Вывести(ПодвалСерии);
			
		КонецЕсли;
		
		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаСпискаСОтборомПоГруппе" 
		или ВидФормы = "ФормаСписка" Тогда
		
		Если ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПредставлятьСправочникНоменклатурыБезБлокаГрупп") ТОгда
			ВыбраннаяФорма = "ФормаСписка";	
			СтандартнаяОбработка = Ложь;
			
		ИначеЕсли ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных") Тогда
			ВыбраннаяФорма = "ФормаСпискаСОтборомПоГруппеУпрощенная";	
			СтандартнаяОбработка = Ложь;
		КонецЕсли;		
		
	Иначе		
		Если ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных") Тогда
			
			Если ВидФормы = "ФормаВыбора" тогда
				
				ВыбраннаяФорма = ВидФормы + "Упрощенная";
				СтандартнаяОбработка = Ложь;
				
			ИначеЕсли ВидФормы = "ФормаОбъекта" Тогда
				
				ВыбраннаяФорма = "ФормаЭлементаУпрощенная";
				СтандартнаяОбработка = Ложь;
				
			КонецЕсли;
			
		КонецЕсли; 	
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если НЕ ОбщийМодульПовтор.ТекущийЯзыкРусский()
		и ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПоддерживатьНаименованияНаДругихЯзыкахКромеРусского", Истина) Тогда
		
		ВозможноеПредставление = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Данные.ссылка, , Истина);
		Если НЕ ВозможноеПредставление = Неопределено Тогда
			Представление = ВозможноеПредставление;
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
