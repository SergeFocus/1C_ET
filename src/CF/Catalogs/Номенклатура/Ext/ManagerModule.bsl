// sza151214-1734 фикс
// sza141017-0023 : ключи учета
// sza140916-0253 печать доп реквизитов
// sza140119-1437
// sza130918-1629

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)

	Если ОбщийМодульПовтор.ВывестиНаименованияНаДругомЯзыке() Тогда
		ВозможноеПредставление = ОбщийМодульПовтор.ПолучитьПредставлениеНаЯзыке(Данные.Ссылка, , ИСТИНА);
		Если НЕ ВозможноеПредставление = Неопределено Тогда
			Представление = ВозможноеПредставление;
			СтандартнаяОбработка = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)

	ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных");

	Если ВидФормы = "ФормаСпискаСОтборомПоГруппе"
		ИЛИ ВидФормы = "ФормаСписка" Тогда

		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПредставлятьСправочникНоменклатурыБезБлокаГрупп") Тогда
			Если ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных Тогда
				ВыбраннаяФорма = "ФормаСпискаУпрощенная";
			Иначе
				ВыбраннаяФорма = "ФормаСписка";
			КонецЕсли;

			СтандартнаяОбработка = ЛОЖЬ;
		ИначеЕсли ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных Тогда
			ВыбраннаяФорма = "ФормаСпискаСОтборомПоГруппеУпрощенная";
			СтандартнаяОбработка = ЛОЖЬ;
		КонецЕсли;
	Иначе
		Если ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных Тогда

			Если ВидФормы = "ФормаВыбора" Тогда
				ВыбраннаяФорма = ВидФормы + "Упрощенная";
				СтандартнаяОбработка = ЛОЖЬ;
			ИначеЕсли ВидФормы = "ФормаОбъекта" Тогда
				ВыбраннаяФорма = "ФормаЭлементаУпрощенная";
				СтандартнаяОбработка = ЛОЖЬ;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура Печать(ДокументДляПечати, Ссылка) Экспорт

	ДокументДляПечати.ИмяПараметровПечати  = "Номенклатура" + СокрЛП(ИмяКомпьютера());
	ДокументДляПечати.КлючПараметровПечати = ДокументДляПечати.ИмяПараметровПечати;
	ДокументДляПечати.Очистить();
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(ПредопределенноеЗначение("Перечисление.ВидыПечатныхФорм.КарточкаНоменклатуры"));

	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ДокументДляПечати = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ДокументДляПечати, Ссылка[0], "Справочники", "Номенклатура");
	Иначе
		Макет = Справочники.Номенклатура.ПолучитьМакет("Печать");
		Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Номенклатура.Артикул,
		|	ВЫРАЗИТЬ(Номенклатура.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
		|	Номенклатура.Наименование,
		|	Номенклатура.НоменклатурнаяГруппа,
		|	Номенклатура.ОсновнойШтрихКод,
		|	Номенклатура.Производитель,
		|	Номенклатура.ПроцентСкидки,
		|	Номенклатура.Цена,
		|	Номенклатура.Ответственный,
		|	Номенклатура.ДатаСоздания,
		|	Номенклатура.ДатаРедакции,
		|	Номенклатура.Состав.(
		|		Ссылка,
		|		НомерСтроки,
		|		Номенклатура,
		|		Количество
		|	),
		|	Номенклатура.ЭтоНабор,
		|	Номенклатура.ПланкаКоличестваДляЛьготнойЦены,
		|	Номенклатура.РекомендуемыйМинимальныйОстатокТовара,
		|	Номенклатура.НаименованиеДляПечати,
		|	Номенклатура.Ссылка,
		|	Номенклатура.Вес,
		|	Номенклатура.Длина,
		|	Номенклатура.Ширина,
		|	Номенклатура.Высота,
		|	Номенклатура.ОсновнаяЕдиницаИзмерения,
		|	Номенклатура.Вес КАК Вес1,
		|	Номенклатура.Высота КАК Высота1,
		|	Номенклатура.Длина КАК Длина1,
		|	Номенклатура.Ширина КАК Ширина1,
		|	Номенклатура.НаОдноМесто
		|ИЗ Справочник.Номенклатура КАК Номенклатура
		|ГДЕ Номенклатура.Ссылка В(&Ссылка)";
		Запрос.Параметры.Вставить("Ссылка", Ссылка);

		Выборка = Запрос.Выполнить().Выбрать();
		ОбластьЗаголовок   = Макет.ПолучитьОбласть("Заголовок");
		ОбластьНабор 	   = Макет.ПолучитьОбласть("Состав");
		ШапкаРазмеры 	   = Макет.ПолучитьОбласть("Размеры");
		ОбластьНаборШапка  = Макет.ПолучитьОбласть("ШапкаНабор");
		ОбластьШапкаКлючаУчета  = Макет.ПолучитьОбласть("ШапкаКлючаУчета");
		ОбластьСтрокаКлючаУчета = Макет.ПолучитьОбласть("СтрокаКлючаУчета");
		ОбластьПечатиДополнительныхРеквизитов = Макет.ПолучитьОбласть("СДР");
		ИспользоватьСложныйМеханизмЦен = ПараметрыСеанса.ИспользоватьСложныйМеханизмЦенПС;
		ИспользоватьНаборы = ПараметрыСеанса.ИспользоватьНаборыТоваровПС;

		Если ИспользоватьСложныйМеханизмЦен Тогда
			Шапка = Макет.ПолучитьОбласть("ШапкаСложныеЦены");
		Иначе
			Шапка = Макет.ПолучитьОбласть("Шапка");
			шапка.Параметры.валюта = Справочники.Валюты.ОсновнаяВалюта ;
		КонецЕсли;

		ВставлятьРазделительСтраниц = ЛОЖЬ;

		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ДокументДляПечати.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;

			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
			ДокументДляПечати.Вывести(ОбластьЗаголовок);
			Шапка.Параметры.Заполнить(Выборка);
			Шапка.Параметры.Наименование = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Выборка.Ссылка);

			Если ПараметрыСеанса.ИспользоватьСкидкиПС
				И ПараметрыСеанса.ВключитьВозможностьУказыватьПроцентСкидкиДляНоменклатуры Тогда

				Шапка.Параметры.ПроцентСкидкиЗ = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Процент скидки");
			Иначе
				Шапка.Параметры.ПроцентСкидкиЗ = "";
				Шапка.Параметры.ПроцентСкидки  = "";
			КонецЕсли;

			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
			ДокументДляПечати.Вывести(Шапка, Выборка.Уровень());
			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетРазмеровИВесаТоваров") Тогда
				ШапкаРазмеры.Параметры.Заполнить(Выборка);

				Если ЗначениеЗаполнено(Выборка.Высота) Тогда
					Размеры = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Объем") + " " + (Выборка.Ширина * Выборка.Длина * Выборка.Высота);
				ИначеЕсли ЗначениеЗаполнено(Выборка.Ширина) Тогда
					Размеры = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Площадь") + " " + (Выборка.Ширина * Выборка.Длина);
				Иначе
					Размеры = "";
				КонецЕсли;

				ШапкаРазмеры.Параметры.Размеры = Размеры;
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ШапкаРазмеры);
				ДокументДляПечати.Вывести(ШапкаРазмеры, Выборка.Уровень());
			КонецЕсли;

			ВставлятьРазделительСтраниц = ИСТИНА;

			Если ИспользоватьСложныйМеханизмЦен Тогда
				СтрокаЦен = Макет.ПолучитьОбласть("СтрокаЦен");

				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ ЦеныСрезПоследних.Цена,
				|	ЦеныСрезПоследних.ВидЦен,
				|	ЦеныСрезПоследних.Период,
				|	ВЫРАЗИТЬ(ЦеныСрезПоследних.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
				|	ЦеныСрезПоследних.ВидЦен.ВалютаЦены КАК Валюта
				|ИЗ РегистрСведений.Цены.СрезПоследних(&ТекущаяДата, Номенклатура В (&Номенклатура)) КАК ЦеныСрезПоследних";
				Запрос.УстановитьПараметр("Номенклатура", Ссылка);
				Запрос.УстановитьПараметр("ТекущаяДата", ОбщийМодульСервисСервер.ПользователяТекущаяДата());

				РезультатЗапроса = Запрос.Выполнить();

				Если НЕ РезультатЗапроса.Пустой() Тогда
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						СтрокаЦен.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(СтрокаЦен);
						ДокументДляПечати.Вывести(СтрокаЦен, ВыборкаДетальныеЗаписи.Уровень());

					КонецЦикла;
				КонецЕсли;
			КонецЕсли;

			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьДополнительныеРеквизитыНоменклатурныхГрупп")
				И ЗначениеЗаполнено(Выборка.НоменклатурнаяГруппа) Тогда

				Счетчик = 1;
				НаименованияДополнительныхРеквизитов = ОбщийМодульПовтор.ПолучитьДополнительныеРеквизитыНоменклатурныхГрупп(Выборка.НоменклатурнаяГруппа);
				Если НЕ НаименованияДополнительныхРеквизитов = Неопределено Тогда
					Для Каждого ДопРеквизит Из НаименованияДополнительныхРеквизитов Цикл
						Если Счетчик <= 10 Тогда
							ДополнительныйРеквизит = ДопРеквизит.ДополнительныйРеквизит;
							НаименованиеДопРеквизита = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(ДополнительныйРеквизит);
							ЗначениеРеквизита = Неопределено;
							Выполнить(" ЗначениеРеквизита = Выборка.Ссылка.РеквизитНоменклатурнойГруппы" + СокрЛП(Счетчик) + ";");
							ОбластьПечатиДополнительныхРеквизитов.Параметры.ЗначениеРеквизита = ЗначениеРеквизита;
							ОбластьПечатиДополнительныхРеквизитов.Параметры.НаименованиеРеквизита = НаименованиеДопРеквизита;
							ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьПечатиДополнительныхРеквизитов);
							ДокументДляПечати.Вывести(ОбластьПечатиДополнительныхРеквизитов);
						КонецЕсли;

						Счетчик = Счетчик + 1;

					КонецЦикла;
				КонецЕсли;
			КонецЕсли;

			Если ИспользоватьНаборы
				И Выборка.ЭтоНабор = ИСТИНА Тогда

				ДокументДляПечати.Вывести(ОбластьНаборШапка);
				ВыборкаНабор = Выборка.Состав.Выбрать();
				Пока ВыборкаНабор.Следующий() Цикл
					ОбластьНабор.Параметры.Заполнить(ВыборкаНабор);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьНабор);
					ДокументДляПечати.Вывести(ОбластьНабор, ВыборкаНабор.Уровень());

				КонецЦикла;
			КонецЕсли;

			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьКлючиУчетаНоменклатурыИИхСвязанныеСписки") Тогда

				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ ДополнительныеРеквизиты.Ссылка
				|ИЗ Справочник.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
				|ГДЕ ДополнительныеРеквизиты.ЭтоКлючУчетаНоменклатуры = ИСТИНА";

				ЗапросСКУ = Новый Запрос;
				ЗапросСКУ.Текст = "ВЫБРАТЬ СвязанныеКлючиУчетаНоменклатуры.ЗначениеКлючаУчета КАК ЗначениеКлючаУчетаНоменклатуры,
				|	СвязанныеКлючиУчетаНоменклатуры.Комментарий
				|ИЗ РегистрСведений.СвязанныеКлючиУчетаНоменклатуры КАК СвязанныеКлючиУчетаНоменклатуры
				|ГДЕ СвязанныеКлючиУчетаНоменклатуры.Номенклатура = &Номенклатура
				|	И СвязанныеКлючиУчетаНоменклатуры.КлючУчета = &КлючУчета";
				ЗапросСКУ.УстановитьПараметр("Номенклатура", Выборка.Ссылка);

				РезультатЗапроса = Запрос.Выполнить();

				Если НЕ РезультатЗапроса.Пустой() Тогда
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						ЗапросСКУ.УстановитьПараметр("КлючУчета", ВыборкаДетальныеЗаписи.Ссылка);

						РезультатЗапросаСКУ = ЗапросСКУ.Выполнить();

						Если НЕ РезультатЗапросаСКУ.Пустой()  Тогда
							ОбластьШапкаКлючаУчета.Параметры.КлючУчетаНоменклатурыТекст = ОбщийМодульПовтор.ПолучитьПредставлениеНаЯзыке(ВыборкаДетальныеЗаписи.Ссылка);
							ОбластьШапкаКлючаУчета.Параметры.КлючУчетаНоменклатуры = ВыборкаДетальныеЗаписи.Ссылка;
							ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьШапкаКлючаУчета);
							ДокументДляПечати.Вывести(ОбластьШапкаКлючаУчета);
							ВыборкаДетальныеЗаписиСКУ = РезультатЗапросаСКУ.Выбрать();

							Пока ВыборкаДетальныеЗаписиСКУ.Следующий() Цикл
								ОбластьСтрокаКлючаУчета.Параметры.Заполнить(ВыборкаДетальныеЗаписиСКУ);
								ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьСтрокаКлючаУчета);
								ДокументДляПечати.Вывести(ОбластьСтрокаКлючаУчета);

							КонецЦикла;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;

			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьПредставлениеТоваровКонтрагентами") Тогда

				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	ПредставлениеТоваровКонтрагентами.КлиентПоставщик КАК КлиентПоставщик,
				|	ПредставлениеТоваровКонтрагентами.Поле,
				|	ПредставлениеТоваровКонтрагентами.ЗначениеПредставления
				|ИЗ РегистрСведений.ПредставлениеТоваровКонтрагентами КАК ПредставлениеТоваровКонтрагентами
				|ГДЕ ПредставлениеТоваровКонтрагентами.Номенклатура = &Номенклатура
				|УПОРЯДОЧИТЬ ПО КлиентПоставщик";
				Запрос.УстановитьПараметр("Номенклатура", Выборка.Ссылка);

				РезультатЗапроса = Запрос.Выполнить();

				Если НЕ РезультатЗапроса.Пустой() Тогда
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					Шапка = Макет.ПолучитьОбласть("ШПК");
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
					ДокументДляПечати.Вывести(Шапка);
					ОбластьСтрока = Макет.ПолучитьОбласть("СПК");

					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						ОбластьСтрока.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьСтрока);
						ДокументДляПечати.Вывести(ОбластьСтрока);

					КонецЦикла;
				КонецЕсли;
			КонецЕсли;

			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьЕдиницыИзмеренияНоменклатуры") Тогда

				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	ЕдиницыИзмерения.Ссылка,
				|	ЕдиницыИзмерения.Код,
				|	ЕдиницыИзмерения.Наименование,
				|	ЕдиницыИзмерения.Количество,
				|	ЕдиницыИзмерения.Вес,
				|	ЕдиницыИзмерения.Длина,
				|	ЕдиницыИзмерения.Ширина,
				|	ЕдиницыИзмерения.Высота,
				|	ЕдиницыИзмерения.КодЕдиницыПоКлассификатору,
				|	ЕдиницыИзмерения.НаОдноМесто,
				|	ВЫРАЗИТЬ(ЕдиницыИзмерения.Комментарий КАК СТРОКА(1000)) КАК Комментарий
				|ИЗ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
				|ГДЕ ЕдиницыИзмерения.Владелец = &Владелец
				|	И ЕдиницыИзмерения.ПометкаУдаления = ЛОЖЬ";
				Запрос.УстановитьПараметр("Владелец", Выборка.Ссылка);

				РезультатЗапроса = Запрос.Выполнить();

				Если НЕ РезультатЗапроса.Пустой() Тогда
					ШапкаРазмеры = Макет.ПолучитьОбласть("ЕдиницаИзмерения");
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						ШапкаРазмеры.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
						ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ШапкаРазмеры);
						ДокументДляПечати.Вывести(ШапкаРазмеры, ВыборкаДетальныеЗаписи.Уровень());

						Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетРазмеровИВесаТоваров") Тогда
							ШапкаРазмеры.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
							Если ЗначениеЗаполнено(Выборка.Высота) Тогда
								Размеры = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Объем") + " " + (Выборка.Ширина * Выборка.Длина * Выборка.Высота);
							ИначеЕсли ЗначениеЗаполнено(Выборка.Ширина) Тогда
								Размеры = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Площадь") + " " + (Выборка.Ширина * Выборка.Длина);
							Иначе
								Размеры = "";
							КонецЕсли;

							ШапкаРазмеры.Параметры.Размеры = Размеры;
							ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ШапкаРазмеры);
							ДокументДляПечати.Вывести(ШапкаРазмеры, ВыборкаДетальныеЗаписи.Уровень());
						КонецЕсли;

					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ПечатьСерийНоменклатуры(ДокументДляПечати, Ссылка) Экспорт

	ДокументДляПечати.ИмяПараметровПечати  = "НоменклатураССеией" + СокрЛП(ИмяКомпьютера());
	ДокументДляПечати.КлючПараметровПечати = ДокументДляПечати.ИмяПараметровПечати;
	ДокументДляПечати.Очистить();
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(ПредопределенноеЗначение("Перечисление.ВидыПечатныхФорм.КарточкаНоменклатуры"));

	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ДокументДляПечати = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ДокументДляПечати, Ссылка[0], "Справочники", "Номенклатура");
	Иначе
	Макет = Справочники.Номенклатура.ПолучитьМакет("ПечатьСерийНоменклатуры");
	Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Номенклатура.Артикул,
	|	Номенклатура.ЗапретитьУказаниеБезСерии,
	|	ВЫРАЗИТЬ(Номенклатура.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
	|	Номенклатура.НаименованиеДляПечати,
	|	Номенклатура.НоменклатурнаяГруппа,
	|	Номенклатура.ОсновнойШтрихКод,
	|	Номенклатура.Производитель,
	|	Номенклатура.Ссылка,
	|	Номенклатура.Наименование,
	|	Номенклатура.Вес,
	|	Номенклатура.Длина,
	|	Номенклатура.Ширина,
	|	Номенклатура.Высота
	|ИЗ Справочник.Номенклатура КАК Номенклатура
	|ГДЕ Номенклатура.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);

	Выборка = Запрос.Выполнить().Выбрать();
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка 		= Макет.ПолучитьОбласть("Шапка");
	СтрокаСерии = Макет.ПолучитьОбласть("С");
	ПодвалСерии = Макет.ПолучитьОбласть("П");
	Подвал 		= Макет.ПолучитьОбласть("Подвал");
	ВставлятьРазделительСтраниц = ЛОЖЬ;

	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ДокументДляПечати.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
		ДокументДляПечати.Вывести(ОбластьЗаголовок);
		Шапка.Параметры.Заполнить(Выборка);
		Шапка.Параметры.НаименованиеДляПечати = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Выборка.Ссылка);
		ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
		ДокументДляПечати.Вывести(Шапка, Выборка.Уровень());
		ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Макет);
		ДокументДляПечати.Вывести(Макет.ПолучитьОбласть("ШС"));

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ СерииНоменклатуры.Наименование КАК Серия,
		|	СерииНоменклатуры.КодПродукта,
		|	ЕСТЬNULL(ВложенныйЗапрос.Склад, &НетВНаличии) КАК Склад
		|ИЗ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТоварыОстатки.Склад КАК Склад,
		|			ТоварыОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|			ТоварыОстатки.СуммаОстаток КАК СуммаОстаток,
		|			ТоварыОстатки.СерияНоменклатуры КАК СерияНоменклатуры
		|		ИЗ РегистрНакопления.Товары.Остатки(&Дата, Номенклатура = &Номенклатура) КАК ТоварыОстатки
		|		ГДЕ ТоварыОстатки.КоличествоОстаток <> 0) КАК ВложенныйЗапрос
		|		ПО СерииНоменклатуры.Ссылка = ВложенныйЗапрос.СерияНоменклатуры";
		Запрос.УстановитьПараметр("Дата", ОбщийМодульСервисСервер.ПользователяТекущаяДата());
		Запрос.УстановитьПараметр("НетВНаличии", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Нет в наличии"));
		Запрос.УстановитьПараметр("Номенклатура", Выборка.Ссылка);
		ЧислоЭлементов 	 = 0;

		РезультатЗапроса = Запрос.Выполнить();

		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				СтрокаСерии.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(СтрокаСерии);
				ДокументДляПечати.Вывести(СтрокаСерии);
				ЧислоЭлементов = ЧислоЭлементов + 1;

			КонецЦикла;

			ПодвалСерии.параметры.Количество = ЧислоЭлементов;
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ПодвалСерии);
			ДокументДляПечати.Вывести(ПодвалСерии);
		КонецЕсли;

		Подвал.Параметры.Заполнить(Выборка);
		ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
		ДокументДляПечати.Вывести(Подвал);
		ВставлятьРазделительСтраниц = ИСТИНА;

	КонецЦикла;
			   КонецЕсли;

КонецПроцедуры

#КонецЕсли
