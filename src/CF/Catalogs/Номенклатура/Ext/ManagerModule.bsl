//sza141017-0023 : ключи учета
//sza140916-0253 печать доп реквизитов
//sza140119-1437 
//sza130918-1629 
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ОбщийМодульПовтор.ВывестиНаименованияНаДругомЯзыке() Тогда
		
		ВозможноеПредставление = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Данные.ссылка, , ИСТИНА);
		Если НЕ ВозможноеПредставление = Неопределено Тогда
			Представление = ВозможноеПредставление;
			СтандартнаяОбработка = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаСпискаСОтборомПоГруппе" 
		ИЛИ ВидФормы = "ФормаСписка" Тогда
		
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПредставлятьСправочникНоменклатурыБезБлокаГрупп") Тогда
			
			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных") Тогда
				ВыбраннаяФорма = "ФормаСпискаУпрощенная";		
			Иначе
				ВыбраннаяФорма = "ФормаСписка";		
			КонецЕсли;
			СтандартнаяОбработка = ЛОЖЬ;
			
		ИначеЕсли ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных") Тогда
			ВыбраннаяФорма = "ФормаСпискаСОтборомПоГруппеУпрощенная";	
			СтандартнаяОбработка = ЛОЖЬ;
		КонецЕсли;		
		
	Иначе		
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных") Тогда
			
			Если ВидФормы = "ФормаВыбора" тогда
				
				ВыбраннаяФорма = ВидФормы + "Упрощенная";
				СтандартнаяОбработка = ЛОЖЬ;
				
			ИначеЕсли ВидФормы = "ФормаОбъекта" Тогда
				
				ВыбраннаяФорма = "ФормаЭлементаУпрощенная";
				СтандартнаяОбработка = ЛОЖЬ;
				
			КонецЕсли;
			
		КонецЕсли; 	
	КонецЕсли;
	
КонецПроцедуры

Процедура Печать(ТабДок, Ссылка) Экспорт
	
	Макет = Справочники.Номенклатура.ПолучитьМакет("Печать");
	Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Номенклатура.Артикул,
	|	Номенклатура.Комментарий,
	|	Номенклатура.Наименование,
	|	Номенклатура.НоменклатурнаяГруппа,
	|	Номенклатура.ОсновнойШтрихКод,
	|	Номенклатура.Производитель,
	|	Номенклатура.ПроцентСкидки,
	|	Номенклатура.Цена,
	|	Номенклатура.Ответственный,
	|	Номенклатура.ДатаСоздания,
	|	Номенклатура.ДатаРедакции,
	|	Номенклатура.Состав.(
	|		Ссылка,
	|		НомерСтроки,
	|		Номенклатура,
	|		Количество ),
	|	Номенклатура.ЭтоНабор,
	|	Номенклатура.ПланкаКоличестваДляЛьготнойЦены,
	|	Номенклатура.РекомендуемыйМинимальныйОстатокТовара,
	|	Номенклатура.НаименованиеДляПечати,
	|	Номенклатура.Ссылка,
	|	Номенклатура.Вес,
	|	Номенклатура.Длина,
	|	Номенклатура.Ширина,
	|	Номенклатура.Высота,
	|	Номенклатура.ОсновнаяЕдиницаИзмерения
	|ИЗ Справочник.Номенклатура КАК Номенклатура
	|ГДЕ Номенклатура.Ссылка В(&Ссылка)";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок   = Макет.ПолучитьОбласть("Заголовок");  
	ОбластьНабор 	   = Макет.ПолучитьОбласть("Состав");  
	ОбластьНаборШапка  = Макет.ПолучитьОбласть("ШапкаНабор");
	ОбластьШапкаКлючаУчета  = Макет.ПолучитьОбласть("ШапкаКлючаУчета");
	ОбластьСтрокаКлючаУчета = Макет.ПолучитьОбласть("СтрокаКлючаУчета");
	
	ОбластьПечатиДополнительныхРеквизитов = Макет.ПолучитьОбласть("СДР");  
	
	ИспользоватьСложныйМеханизмЦен = ПараметрыСеанса.ИспользоватьСложныйМеханизмЦенПС;
	ИспользоватьНаборы = ПараметрыСеанса.ИспользоватьНаборыТоваровПС;
	
	Если ИспользоватьСложныйМеханизмЦен Тогда
		Шапка = Макет.ПолучитьОбласть("ШапкаСложныеЦены");
	Иначе
		Шапка = Макет.ПолучитьОбласть("Шапка");
		шапка.Параметры.валюта = Справочники.Валюты.ОсновнаяВалюта ;
	КонецЕсли;
	
	ТабДок.Очистить();
	
	ВставлятьРазделительСтраниц = ЛОЖЬ;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		Шапка.Параметры.Наименование = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Выборка.Ссылка);
		
		Если ПараметрыСеанса.ИспользоватьСкидкиПС
			И ПараметрыСеанса.ВключитьВозможностьУказыватьПроцентСкидкиДляНоменклатуры Тогда
			
			Шапка.Параметры.ПроцентСкидкиЗ = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Процент скидки");
		Иначе
			Шапка.Параметры.ПроцентСкидкиЗ = "";
			Шапка.Параметры.ПроцентСкидки  = "";
			
		КонецЕсли;
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		ВставлятьРазделительСтраниц = ИСТИНА;
		
		Если ИспользоватьСложныйМеханизмЦен Тогда
			СтрокаЦен = Макет.ПолучитьОбласть("СтрокаЦен");
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ЦеныСрезПоследних.Цена,
			|	ЦеныСрезПоследних.ВидЦен,
			|	ЦеныСрезПоследних.Период,
			|	ЦеныСрезПоследних.Комментарий,
			|	ЦеныСрезПоследних.ВидЦен.ВалютаЦены КАК Валюта
			|ИЗ РегистрСведений.Цены.СрезПоследних(&ТекущаяДата, Номенклатура В (&Номенклатура)) КАК ЦеныСрезПоследних";
			
			Запрос.УстановитьПараметр("Номенклатура", Ссылка);
			Запрос.УстановитьПараметр("ТекущаяДата", ОбщийМодульСервисСервер.ПользователяТекущаяДата());
			
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					СтрокаЦен.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
					ТабДок.Вывести(СтрокаЦен, ВыборкаДетальныеЗаписи.Уровень());
				КонецЦикла;                                  		
			КонецЕсли;
			
		КонецЕсли;
		
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьДополнительныеРеквизитыНоменклатурныхГрупп")
			И ЗначениеЗаполнено(Выборка.НоменклатурнаяГруппа) Тогда
			
			Счетчик = 1;
			НаименованияДополнительныхРеквизитов = ОбщийМодульПовтор.ПолучитьДополнительныеРеквизитыНоменклатурныхГрупп(Выборка.НоменклатурнаяГруппа);
			Если НЕ НаименованияДополнительныхРеквизитов = Неопределено Тогда
				
				Для Каждого ДопРеквизит Из НаименованияДополнительныхРеквизитов Цикл
					
					Если Счетчик <= 10 Тогда
						
						ДополнительныйРеквизит = ДопРеквизит.ДополнительныйРеквизит;
						НаименованиеДопРеквизита = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(ДополнительныйРеквизит);
						
						ЗначениеРеквизита = Неопределено;
						Выполнить(" ЗначениеРеквизита = Выборка.Ссылка.РеквизитНоменклатурнойГруппы" + СокрЛП(Счетчик) + ";");
						ОбластьПечатиДополнительныхРеквизитов.Параметры.ЗначениеРеквизита = ЗначениеРеквизита;
						ОбластьПечатиДополнительныхРеквизитов.Параметры.НаименованиеРеквизита = НаименованиеДопРеквизита;
						ТабДок.Вывести(ОбластьПечатиДополнительныхРеквизитов);
					КонецЕсли;
					
					Счетчик = Счетчик + 1;
				КонецЦикла;	
			КонецЕсли;	
		КонецЕсли;
		
		Если ИспользоватьНаборы
			И Выборка.этонабор = ИСТИНА Тогда
			
			ТабДок.Вывести(ОбластьНаборШапка);
			ВыборкаНабор = Выборка.Состав.Выбрать();
			Пока ВыборкаНабор.Следующий() Цикл
				ОбластьНабор.Параметры.Заполнить(ВыборкаНабор);
				ТабДок.Вывести(ОбластьНабор, ВыборкаНабор.Уровень());
			КонецЦикла;
			
		КонецЕсли;		
		
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьКлючиУчетаНоменклатурыИИхСвязанныеСписки") Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ДополнительныеРеквизиты.Ссылка
			|ИЗ Справочник.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
			|ГДЕ ДополнительныеРеквизиты.ЭтоКлючУчетаНоменклатуры = ИСТИНА";
			
			ЗапросСКУ = Новый Запрос;
			ЗапросСКУ.Текст = "ВЫБРАТЬ СвязанныеКлючиУчетаНоменклатуры.ЗначениеКлючаУчета КАК ЗначениеКлючаУчетаНоменклатуры,
			|	СвязанныеКлючиУчетаНоменклатуры.Комментарий
			|ИЗ РегистрСведений.СвязанныеКлючиУчетаНоменклатуры КАК СвязанныеКлючиУчетаНоменклатуры
			|ГДЕ СвязанныеКлючиУчетаНоменклатуры.Номенклатура = &Номенклатура
			|	И СвязанныеКлючиУчетаНоменклатуры.КлючУчета = &КлючУчета";
			
			ЗапросСКУ.УстановитьПараметр("Номенклатура", Выборка.Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Если НЕ РезультатЗапроса.Пустой() Тогда
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					ЗапросСКУ.УстановитьПараметр("КлючУчета", ВыборкаДетальныеЗаписи.Ссылка);
					РезультатЗапросаСКУ = ЗапросСКУ.Выполнить();
					Если НЕ РезультатЗапросаСКУ.Пустой()  Тогда
						
						ОбластьШапкаКлючаУчета.Параметры.КлючУчетаНоменклатурыТекст = ОбщийМодульПовтор.ПолучитьПредставлениеНаЯзыке(ВыборкаДетальныеЗаписи.Ссылка);
						ОбластьШапкаКлючаУчета.Параметры.КлючУчетаНоменклатуры = ВыборкаДетальныеЗаписи.Ссылка;
						ТабДок.Вывести(ОбластьШапкаКлючаУчета);
						
						ВыборкаДетальныеЗаписиСКУ = РезультатЗапросаСКУ.Выбрать();
						
						Пока ВыборкаДетальныеЗаписиСКУ.Следующий() Цикл
							ОбластьСтрокаКлючаУчета.Параметры.Заполнить(ВыборкаДетальныеЗаписиСКУ);
							ТабДок.Вывести(ОбластьСтрокаКлючаУчета);
						КонецЦикла;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;	
		КонецЕсли;
		
		Если ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьПредставлениеТоваровКонтрагентами") Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ПредставлениеТоваровКонтрагентами.КлиентПоставщик КАК КлиентПоставщик,
			|	ПредставлениеТоваровКонтрагентами.Поле,
			|	ПредставлениеТоваровКонтрагентами.ЗначениеПредставления
			|ИЗ РегистрСведений.ПредставлениеТоваровКонтрагентами КАК ПредставлениеТоваровКонтрагентами
			|ГДЕ ПредставлениеТоваровКонтрагентами.Номенклатура = &Номенклатура
			|УПОРЯДОЧИТЬ ПО КлиентПоставщик";
			
			Запрос.УстановитьПараметр("Номенклатура", Выборка.Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Шапка = Макет.ПолучитьОбласть("ШПК");
				ТабДок.Вывести(Шапка);
				
				ОбластьСтрока = Макет.ПолучитьОбласть("СПК");
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					ОбластьСтрока.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
					ТабДок.Вывести(ОбластьСтрока);
				КонецЦикла;	
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПечатьСерийНоменклатуры(ТабДок, Ссылка) Экспорт
	
	Макет = Справочники.Номенклатура.ПолучитьМакет("ПечатьСерийНоменклатуры");
	Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Номенклатура.Артикул,
	|	Номенклатура.ЗапретитьУказаниеБезСерии,
	|	Номенклатура.Комментарий,
	|	Номенклатура.НаименованиеДляПечати,
	|	Номенклатура.НоменклатурнаяГруппа,
	|	Номенклатура.ОсновнойШтрихКод,
	|	Номенклатура.Производитель,
	|	Номенклатура.Ссылка,
	|	Номенклатура.Наименование,
	|	Номенклатура.Вес,
	|	Номенклатура.Длина,
	|	Номенклатура.Ширина,
	|	Номенклатура.Высота
	|ИЗ Справочник.Номенклатура КАК Номенклатура
	|ГДЕ Номенклатура.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка 		= Макет.ПолучитьОбласть("Шапка");
	СтрокаСерии = Макет.ПолучитьОбласть("С");
	ПодвалСерии = Макет.ПолучитьОбласть("П");
	Подвал 		= Макет.ПолучитьОбласть("Подвал");
	ТабДок.Очистить();
	
	ВставлятьРазделительСтраниц = ЛОЖЬ;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);		
		Шапка.Параметры.НаименованиеДляПечати = ОбщийМодульТекстСервер.ПолучитьОбщееНаименование(Выборка.Ссылка);
		
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		ТабДок.Вывести(Макет.ПолучитьОбласть("ШС"));
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ СерииНоменклатуры.Наименование КАК Серия,
		|	СерииНоменклатуры.КодПродукта,
		|	ЕСТЬNULL(ВложенныйЗапрос.Склад, &НетВНаличии) КАК Склад
		|ИЗ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТоварыОстатки.Склад КАК Склад,
		|			ТоварыОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|			ТоварыОстатки.СуммаОстаток КАК СуммаОстаток,
		|			ТоварыОстатки.СерияНоменклатуры КАК СерияНоменклатуры
		|		ИЗ РегистрНакопления.Товары.Остатки(&Дата, Номенклатура = &Номенклатура) КАК ТоварыОстатки
		|		ГДЕ ТоварыОстатки.КоличествоОстаток <> 0) КАК ВложенныйЗапрос
		|		ПО СерииНоменклатуры.Ссылка = ВложенныйЗапрос.СерияНоменклатуры";
		
		Запрос.УстановитьПараметр("Дата", ОбщийМодульСервисСервер.ПользователяТекущаяДата());
		Запрос.УстановитьПараметр("НетВНаличии", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Нет в наличии"));
		Запрос.УстановитьПараметр("Номенклатура", Выборка.Ссылка);
		
		ЧислоЭлементов 	 = 0;
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				СтрокаСерии.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
				ТабДок.Вывести(СтрокаСерии);
				
				ЧислоЭлементов = ЧислоЭлементов + 1;
			КонецЦикла;
			
			ПодвалСерии.параметры.Количество = ЧислоЭлементов;
			ТабДок.Вывести(ПодвалСерии);
			
		КонецЕсли;
		
		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);
		
		ВставлятьРазделительСтраниц = ИСТИНА;
	КонецЦикла;
	
КонецПроцедуры
