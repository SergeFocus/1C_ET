//sza140124-1515 
//sza131121-1833 SZA: 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.ТипЗаметки) тогда
		
		Запись.ТипЗаметки 	= Параметры.ТипЗаметки;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Запись.ТипЗаметки) Тогда
		
		Запись.ТипЗаметки 	= Перечисления.ТипыЗаметок.Заметка ;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Запись.Ссылка) Тогда
		Запись.Актуально 	= Истина;                        	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ПараметрКоманды) Тогда
		
		Запись.Актуально = Истина;
		
		Запись.Причина 	= Параметры.ПараметрКоманды;		
		ТипПараметра 	= типзнч(Параметры.ПараметрКоманды);
		
		Если ТипПараметра = Тип("ДокументСсылка.РасходыТовара") Тогда
			Запись.СвязаноС = Параметры.ПараметрКоманды.КлиентПоставщик;
			Запись.Комментарий = Параметры.ПараметрКоманды.Комментарий;	
			
		ИначеЕсли ТипПараметра = Тип("ДокументСсылка.ДвиженияДенег") Тогда
			Если НЕ Параметры.ПараметрКоманды.НачислениеИВыплатаЗаработнойПлаты Тогда
				Запись.СвязаноС = Параметры.ПараметрКоманды.КлиентПоставщик;	
			КонецЕсли;
			Запись.Комментарий = Параметры.ПараметрКоманды.Комментарий;	
			
		ИначеЕсли ТипПараметра = Тип("ДокументСсылка.ПоступленияТовара") Тогда
			Запись.СвязаноС = Параметры.ПараметрКоманды.КлиентПоставщик;	
			
		ИначеЕсли ТипПараметра = Тип("ДокументСсылка.Инвентаризации") Тогда
			Запись.СвязаноС = Параметры.ПараметрКоманды.Склад;	
			Запись.Комментарий = Параметры.ПараметрКоманды.Комментарий;	
			
		ИначеЕсли ТипПараметра = Тип("ДокументСсылка.КорректировкиИРегистрацияОстатков") Тогда
			Запись.Комментарий = Параметры.ПараметрКоманды.Комментарий;	
			
		ИначеЕсли ТипПараметра = Тип("ДокументСсылка.ПеремещенияТовара") Тогда
			Запись.СвязаноС = Параметры.ПараметрКоманды.СкладКуда;
			Запись.Комментарий = "" + Параметры.ПараметрКоманды.Склад;	
			
		ИначеЕсли ТипПараметра = Тип("ДокументСсылка.ПланыПродаж") Тогда			
			Запись.Комментарий = Параметры.ПараметрКоманды.Комментарий;	
			
		ИначеЕсли ТипПараметра = Тип("ДокументСсылка.УстановкиЦен") Тогда
			Запись.СвязаноС = Параметры.ПараметрКоманды.ВидЦен;	
			Запись.Комментарий = Параметры.ПараметрКоманды.Комментарий;	
			
		ИначеЕсли ТипПараметра = Тип("СправочникСсылка.ВидыЦен") Тогда
			Запись.Комментарий = Параметры.ПараметрКоманды.Комментарий;	
			
		ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Договора") Тогда
			Запись.СвязаноС = Параметры.ПараметрКоманды.КлиентПоставщик;	
		ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Клиенты") Тогда
			Запись.Комментарий = Параметры.ПараметрКоманды.Телефон;	
			
		ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Номенклатура") Тогда
			
		ИначеЕсли ТипПараметра = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
			
		ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Организации") Тогда
			
		ИначеЕсли ТипПараметра = Тип("СправочникСсылка.ПартииПриобретения") Тогда
			Запись.Комментарий = "" + Параметры.ПараметрКоманды.Поставщик;	
			
		ИначеЕсли ТипПараметра = Тип("СправочникСсылка.ПодсистемаИЭИмпортЭкспортФСШаблоны") Тогда
		ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Поставщики") Тогда
			Запись.Комментарий = Параметры.ПараметрКоманды.Телефон;	
			
		ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Производители") Тогда
		ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Регионы") Тогда
		ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Склады") Тогда
		ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Сотрудники") Тогда
			Запись.Комментарий = Параметры.ПараметрКоманды.Телефон;	
			
		ИначеЕсли ТипПараметра = Тип("СправочникСсылка.СтатьиДвиженияДенег") Тогда
		ИначеЕсли ТипПараметра = Тип("СправочникСсылка.ФормулыОписания") Тогда
			Запись.Комментарий = Параметры.ПараметрКоманды.Формула;	
			
		КонецЕсли;
		
	КонецЕсли;
	
	ТипЗаметка 	= Перечисления.ТипыЗаметок.Заметка ;
	ТипЗадача	= Перечисления.ТипыЗаметок.Задача;	
	
	ПоддержкаДругихЯзыков = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПоддерживатьИныеЯзыкиКромеРусского") 
	И ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПоддерживатьНаименованияНаДругихЯзыкахКромеРусского", Истина);
	
	если ПоддержкаДругихЯзыков 
		и ЗначениеЗаполнено(Запись.Ссылка) тогда
		
		Наименование = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Запись.Ссылка);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗначенияНаДругихЯзыках.Язык,
		|	ЗначенияНаДругихЯзыках.НаЯзыке,
		|	ЗначенияНаДругихЯзыках.Поле
		|ИЗ
		|	РегистрСведений.ЗначенияНаДругихЯзыках КАК ЗначенияНаДругихЯзыках
		|ГДЕ
		|	ЗначенияНаДругихЯзыках.ОбъектБазыДанных = &ОбъектБазыДанных";
		
		Запрос.УстановитьПараметр("ОбъектБазыДанных", Запись.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		если не РезультатЗапроса.Пустой() тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ВыборкаДетальныеЗаписи.Поле = "Наименование" Тогда
					СтрокаЯзыка = НаименованияНаДругихЯзыках.Добавить();
					СтрокаЯзыка.Язык 	= ВыборкаДетальныеЗаписи.Язык;
					СтрокаЯзыка.НаЯзыке = ВыборкаДетальныеЗаписи.НаЯзыке;	
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	иначе
		Наименование = Запись.Наименование;
		
	КонецЕсли;	
	
	Пользователи = Справочники.Пользователи.Выбрать() ;
	пока Пользователи.Следующий() Цикл
		Если не пользователи.Предопределенный Тогда
			элементы.Получатель.СписокВыбора.Добавить(пользователи.Ссылка, пользователи.Наименование);
		КонецЕсли;	
	КонецЦикла;
		
	Изображения.Параметры.УстановитьЗначениеПараметра("Владелец", Запись.Ссылка);
	СтрокаСоединенияСБД = СтрокаСоединенияИнформационнойБазы();
	ФайловаяБД = НЕ Найти(Врег(СтрокаСоединенияСБД), "FILE=") = 0;

КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
		
	Запись.Наименование = Наименование;
	НаименованиеИзменяли = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНаДругихЯзыках(Команда)
	Элементы.НаименованияНаДругихЯзыках.Видимость  = НЕ Элементы.НаименованияНаДругихЯзыках.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахНаЯзыкеПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = Истина;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	если ПоддержкаДругихЯзыков тогда
		если НаименованиеИзменяли тогда
			ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Запись.Ссылка, Наименование);
		КонецЕсли;
		
		Если БылиИзмененияЗначенияПолейНаЯзыках Тогда
			Для Каждого СтрокаЯзыка Из НаименованияНаДругихЯзыках Цикл
				ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Запись.Ссылка, СтрокаЯзыка.НаЯзыке, "Наименование", СтрокаЯзыка.Язык);	
			КонецЦикла;
			ОбновитьПовторноИспользуемыеЗначения();
		КонецЕсли;
	
	конецесли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(Запись.ТекстЗаметки)
		и ЗначениеЗаполнено(Запись.Наименование) Тогда
		
		Запись.ТекстЗаметки = Запись.Наименование;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Запись.Наименование)
		и ЗначениеЗаполнено(Запись.ТекстЗаметки) Тогда
		
		Запись.Наименование = Запись.ТекстЗаметки;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Запись.ТекстЗаметки)
		и НЕ ЗначениеЗаполнено(Запись.Наименование) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Нет текста заметки!");
		Сообщение.Поле 	= "Наименование";
		Сообщение.УстановитьДанные(Запись);
		Сообщение.Сообщить();
		
		Отказ = истина;
		
	ИначеЕсли НЕ запись.ТипЗаметки = ТипЗаметка
		и НЕ ЗначениеЗаполнено(Запись.Дата) Тогда
		
		Если Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Дата не указана. Это просто заметка?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Запись.ТипЗаметки = ТипЗаметка;
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если не отказ
		и запись.Актуально
		И НЕ Запись.ТипЗаметки = ПредопределенноеЗначение("Перечисление.ТипыЗаметок.Заметка") 
		и Запись.Дата < ОбщийМодульКлиент.ПользователяТекущаяДата() 
		и Запись.ПовторятьКаждыеЧислоЧасов = 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Дата в прошлом:") + " " + формат(Запись.Дата, "ДФ='dd.MM.yy ЧЧ:мм'");
		Сообщение.Поле 	= "Дата";
		Сообщение.УстановитьДанные(Запись);
		Сообщение.Сообщить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЗаметкиПриИзменении(Элемент)
	ПриСменеТипаЗаметки();
КонецПроцедуры

&НаКлиенте
Процедура ПриСменеТипаЗаметки()
	
	Если НЕ ЗначениеЗаполнено(Запись.ТипЗаметки) Тогда
		Запись.ТипЗаметки = ТипЗаметка ;
	КонецЕсли;
	
	Элементы.Дата.АвтоОтметкаНезаполненного = НЕ Запись.ТипЗаметки = ТипЗаметка;
	Элементы.ГруппаДата.Видимость 			= НЕ Запись.ТипЗаметки = ТипЗаметка;
	Элементы.ВыполняемыеЗадачи.Видимость	= Запись.ТипЗаметки = ТипЗадача;
	Элементы.ТекстЗаметки.Видимость			= НЕ Запись.ТипЗаметки = ТипЗадача;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Запись.ссылка, истина);
	ПриСменеТипаЗаметки();
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Запись.Ссылка, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЧерезЧас(Команда)
	Запись.Дата = ТекущаяДата() + 3600;
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура ЗавтраУтром(Команда)
	Запись.Дата = КонецДня(ТекущаяДата()) + 3600 * 9;
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура ЗавтраВЭтоВремя(Команда)
	Запись.Дата = ТекущаяДата() + 3600 * 24;
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура ЧерезМесяц(Команда)
	Запись.Дата = ДобавитьМесяц(ТекущаяДата(), 1);
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура Через15Минут(Команда)
	Запись.Дата = ТекущаяДата() + 15 * 60;
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура Через30Минут(Команда)
	Запись.Дата = ТекущаяДата() + 30 * 60;
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура СегодняВечером(Команда)
	
	Дата = ТекущаяДата();
	Запись.Дата = дата(год(Дата), месяц(Дата), День(дата), 17, 50, 0);
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура ЧерезНеделю(Команда)
	Запись.Дата = ТекущаяДата() + 3600 * 24 * 7;
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура ВКонцеМесяца(Команда)
	
	Дата = ТекущаяДата();
	КонецМесяца = КонецМесяца(ТекущаяДата());
	Запись.Дата = дата(год(КонецМесяца), месяц(КонецМесяца), День(КонецМесяца), час(дата), Минута(дата), 0);
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура КаждыйЧас(Команда)
	
	Запись.ПовторятьКаждыеЧислоЧасов = 1;
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура КаждыйДень(Команда)
	
	Запись.ПовторятьКаждыеЧислоЧасов = 24;
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура КаждыйМесяц(Команда)
	
	Запись.ПовторятьКаждыеЧислоЧасов = 24 * 30.4375;
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура Каждые15минут(Команда)
	
	Запись.ПовторятьКаждыеЧислоЧасов = 0.25;
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура Каждые30Минут(Команда)
	
	Запись.ПовторятьКаждыеЧислоЧасов = 0.5;
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура КаждуюНеделю(Команда)
	
	Запись.ПовторятьКаждыеЧислоЧасов = 24 * 7;
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура КаждыйГод(Команда)
	
	Запись.ПовторятьКаждыеЧислоЧасов = 24 * 7 * 365.25;
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Функция   ИзменитьСледующийПериод()
	
	Если НЕ ЗначениеЗаполнено(запись.ПовторятьКаждыеЧислоЧасов)
		или не ЗначениеЗаполнено(Запись.Дата) Тогда
		
		элементы.СледующийПериод.Видимость = Ложь;
	Иначе
		СледующийПериод = ?(ЗначениеЗаполнено(Запись.ДатаПоследнегоНапоминания) И (Запись.ДатаПоследнегоНапоминания > Запись.Дата), Запись.ДатаПоследнегоНапоминания, запись.Дата) + запись.ПовторятьКаждыеЧислоЧасов * 3600;
		элементы.СледующийПериод.Видимость = Истина;
		
	КонецЕсли;
	
	ЧислоМинут = (Запись.ПовторятьКаждыеЧислоЧасов - цел(Запись.ПовторятьКаждыеЧислоЧасов)) * 60;
	если ЧислоМинут  > 0
		И ЧислоМинут < 1 тогда 
		
		ЧислоМинут = 1;	
	КонецЕсли;
	Частота = Формат(ЧислоМинут, "ЧЦ=4; ЧГ=0") + " m";
	Элементы.Частота.Видимость = НЕ цел(Запись.ПовторятьКаждыеЧислоЧасов) = Запись.ПовторятьКаждыеЧислоЧасов;
	
КонецФункции //ИзменитьСледующийПериод

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура ПовторятьКаждыеЧислоЧасовПриИзменении(Элемент)
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура ВыполняемыеЗадачиАдресОткрытие(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ВыполняемыеЗадачи.ТекущиеДанные;
	Адрес = ТекущиеДанные.Адрес;
	
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбФайла.Заголовок				= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите каталог:");
	ДиалогВыбФайла.МножественныйВыбор		= Ложь;
	ДиалогВыбФайла.ПредварительныйПросмотр	= Ложь;
	ДиалогВыбФайла.ИндексФильтра			= 0;
	ДиалогВыбФайла.Каталог					= Адрес;
	Если ДиалогВыбФайла.Выбрать() Тогда 
		ТекущиеДанные.Адрес = ДиалогВыбФайла.Каталог;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчас(Команда)
	
	Записать();
	ОбщийМодульСерверПривилегия.ВыполнитьЗадачку(Запись.ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполняемыеЗадачиКодИмяОтчетаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные 	= Элементы.ВыполняемыеЗадачи.ТекущиеДанные;
	КодИмяОтчета 	= ТекущиеДанные.КодИмяОтчета;
	Если ВвестиСтроку(КодИмяОтчета, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите код / имя отчета:"), , Истина) Тогда
		ТекущиеДанные.КодИмяОтчета = КодИмяОтчета;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ИзображенияПриАктивизацииСтроки(Элемент)
	
	ТекущийЭлементСписка = Элементы.Изображения.ТекущаяСтрока;
	Если ЗначениеЗаполнено(ТекущийЭлементСписка) Тогда
		 СтруктураИзображения = ОбщийМодульСервер.ПолучитьСтруктуруИзображения(ТекущийЭлементСписка);
		 ПодСсылку = СтруктураИзображения.ПодСсылку;
		 
		 элементы.СсылкаНаИзображение.Видимость    = не СтруктураИзображения.ИзображениеВБазеДанных;
		 элементы.ИзображениеВБазеДанных.Видимость = СтруктураИзображения.ИзображениеВБазеДанных;
		 
		 если СтруктураИзображения.РазмерПриОтображении = 1 тогда
			 элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.АвтоРазмер
		 иначеесли СтруктураИзображения.РазмерПриОтображении = 2 тогда
			 элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.Пропорционально
		 иначеесли СтруктураИзображения.РазмерПриОтображении = 3 тогда
			 элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.Растянуть
		 иначеесли СтруктураИзображения.РазмерПриОтображении = 4 тогда
			 элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.РеальныйРазмер
		 иначеесли СтруктураИзображения.РазмерПриОтображении = 5 тогда
			 элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.Черепица
		 конецесли; 		 
		 
	 КонецЕсли;
	 
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	Если НЕ ЗначениеЗаполнено(Запись.Ссылка) 
		и Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сначала следует записать этот элемент. Записать?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		
		Записать();			
	КонецЕсли;
		
	Если ЗначениеЗаполнено(Запись.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("СвязанныйОбъект", Запись.Ссылка);
		формаИзображения = ПолучитьФорму("Справочник.Изображения.ФормаОбъекта", ПараметрыФормы);	
		формаИзображения.Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполняемыеЗадачиТипЗадачиПриИзменении(Элемент)
	
	Если НЕ ФайловаяБД тогда
		ТекущиеДанные = элементы.ВыполняемыеЗадачи.ТекущиеДанные;
		Если не ТекущиеДанные = Неопределено
			и ЗначениеЗаполнено(ТекущиеДанные.ТипЗадачи)
			И (ТекущиеДанные.ТипЗадачи = ПредопределенноеЗначение("Перечисление.ТипыЗадач.РезервированиеКаталогаСБазойДанных")
			ИЛИ ТекущиеДанные.ТипЗадачи = ПредопределенноеЗначение("Перечисление.ТипыЗадач.РезервированиеКаталогаСБазойДанныхВАрхив")) Тогда
			
			Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Для не-файловой базы данных резервирование каталога недоступно!"));
			ТекущиеДанные.ТипЗадачи = ПредопределенноеЗначение("Перечисление.ТипыЗадач.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
