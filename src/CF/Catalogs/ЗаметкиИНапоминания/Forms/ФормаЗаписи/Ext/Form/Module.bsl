// sza150219-2351
// sza140718-1624 +произвольные отчеты
// sza140522-0311  
// sza131121-1833  

&НаСервере
Процедура ВидимостьДополнительныхКолонок()
	
	Видимость = ЛОЖЬ;
	Для Каждого Задача Из Запись.ВыполняемыеЗадачи Цикл
		Если Задача.ТипЗадачи = перечисления.ТипыЗадач.СформироватьПроизвольныйОтчетИОтправитьПоEmail
			ИЛИ Задача.ТипЗадачи = перечисления.ТипыЗадач.СформироватьПроизвольныйОтчетИСохранитьВФайлExcel Тогда
			
			Видимость = ИСТИНА;
			Прервать;
		КонецЕсли;		
	КонецЦикла;
	
	Элементы.ВыполняемыеЗадачиНаименованиеОтчета.Видимость  = Видимость;
	Элементы.ВыполняемыеЗадачиПериодОтчета.Видимость 		= Видимость;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьПолучателей()
	
	ВидимостьПолучателей = НЕ Запись.ТипЗаметки = ТипЗадача И НЕ Запись.ТипЗаметки = ТипЗаметка;
	
	Если Запись.Получатели.Количество() = 0
		ИЛИ Запись.Получатели.Количество() = 1 Тогда
		
		Элементы.ГоризонтПолучателей.Видимость = ВидимостьПолучателей;
		Элементы.Получатели.Видимость = ЛОЖЬ;
		
	Иначе
		Элементы.ГоризонтПолучателей.Видимость = ЛОЖЬ;
		Элементы.Получатели.Видимость = ВидимостьПолучателей;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВКонцеМесяца(Команда)
	
	Дата = ТекущаяДата();
	КонецМесяца = КонецМесяца(ТекущаяДата());
	Запись.Дата = дата(год(КонецМесяца), месяц(КонецМесяца), День(КонецМесяца), час(дата), Минута(дата), 0);
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчас(Команда)
	
	Записать();
	ОбщийМодульСерверПривилегия.ВыполнитьЗадачку(Запись.ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполняемыеЗадачиАдресОткрытие(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ВыполняемыеЗадачи.ТекущиеДанные;
	Адрес = ТекущиеДанные.Адрес;
	
	СтандартнаяОбработка = ЛОЖЬ;
	
	ДиалогДляВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогДляВыбораФайла.Заголовок				= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите каталог") + ": ";
	ДиалогДляВыбораФайла.МножественныйВыбор		= ЛОЖЬ;
	ДиалогДляВыбораФайла.ПредварительныйПросмотр	= ЛОЖЬ;
	ДиалогДляВыбораФайла.ИндексФильтра			= 0;
	ДиалогДляВыбораФайла.Каталог					= Адрес;
	ДиалогДляВыбораФайла.Показать(Новый ОписаниеОповещения("ВыполняемыеЗадачиАдресОткрытиеЗавершение", ЭтаФорма, Новый Структура("ДиалогДляВыбораФайла, ТекущиеДанные", ДиалогДляВыбораФайла, ТекущиеДанные)));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполняемыеЗадачиАдресОткрытиеЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ДиалогДляВыбораФайла = ДополнительныеПараметры.ДиалогДляВыбораФайла;
	ТекущиеДанные  = ДополнительныеПараметры.ТекущиеДанные;	
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда 
		ТекущиеДанные.Адрес = ДиалогДляВыбораФайла.Каталог;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыполняемыеЗадачиКодИмяОтчетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
	ТекущиеДанные = Элементы.ВыполняемыеЗадачи.ТекущиеДанные;
	
	ПоказатьВводЗначения(Новый ОписаниеОповещения("ВыполняемыеЗадачиКодИмяОтчетаНачалоВыбораЗавершение", ЭтаФорма, Новый Структура("ТекущиеДанные, ТекстПрограммыИзСправочника", ТекущиеДанные, ТекстПрограммыИзСправочника)), ТекстПрограммыИзСправочника, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите текст программы.."));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполняемыеЗадачиКодИмяОтчетаНачалоВыбораЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	ТекстПрограммыИзСправочника = ?(Значение = Неопределено, ДополнительныеПараметры.ТекстПрограммыИзСправочника, Значение);	
	
	Если (Значение <> Неопределено) Тогда
		ТекущиеДанные.КодИмяОтчета = ЗагрузитьТекстИзСправочника(ТекстПрограммыИзСправочника);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыполняемыеЗадачиКодИмяОтчетаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
	
	ТекущиеДанные 	= Элементы.ВыполняемыеЗадачи.ТекущиеДанные;
	КодИмяОтчета 	= ТекущиеДанные.КодИмяОтчета;
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ВыполняемыеЗадачиКодИмяОтчетаОткрытиеЗавершение", ЭтаФорма, Новый Структура("ТекущиеДанные, КодИмяОтчета", ТекущиеДанные, КодИмяОтчета)), КодИмяОтчета, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Введите код / имя отчета") + ": ", , ИСТИНА);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполняемыеЗадачиКодИмяОтчетаОткрытиеЗавершение(Строка, ДополнительныеПараметры) Экспорт
	
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	КодИмяОтчета = ?(Строка = Неопределено, ДополнительныеПараметры.КодИмяОтчета, Строка);	
	
	Если (Строка <> Неопределено) Тогда
		ТекущиеДанные.КодИмяОтчета = КодИмяОтчета;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыполняемыеЗадачиТипЗадачиПриИзменении(Элемент)
	
	Если НЕ ФайловаяБД Тогда
		ТекущиеДанные = Элементы.ВыполняемыеЗадачи.ТекущиеДанные;
		Если НЕ ТекущиеДанные = Неопределено
			И ЗначениеЗаполнено(ТекущиеДанные.ТипЗадачи)
			И (ТекущиеДанные.ТипЗадачи = ПредопределенноеЗначение("Перечисление.ТипыЗадач.РезервированиеКаталогаСБазойДанных")
			ИЛИ ТекущиеДанные.ТипЗадачи = ПредопределенноеЗначение("Перечисление.ТипыЗадач.РезервированиеКаталогаСБазойДанныхВАрхив")) Тогда
			
			ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Для не-файловой базы данных резервирование каталога недоступно!"));
			ТекущиеДанные.ТипЗадачи = ПредопределенноеЗначение("Перечисление.ТипыЗадач.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
	
	ВидимостьДополнительныхКолонок();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	Если НЕ ЗначениеЗаполнено(Запись.Ссылка) Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ДобавитьИзображениеЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сначала следует записать этот элемент. Записать?"), РежимДиалогаВопрос.ДаНет);
        Возврат;
	КонецЕсли;
	
	ДобавитьИзображениеФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда		
		Записать();	
	КонецЕсли;
	
	ДобавитьИзображениеФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеФрагмент()
	
	Если ЗначениеЗаполнено(Запись.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("СвязанныйОбъект", Запись.Ссылка);
		ОткрытьФорму("Справочник.Изображения.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСебя(Команда)
	НесколькоПолучателейПриИзмененииНаСервере(ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияВидИнформацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура("ТипВладельца", ДопИнфоТипВладельца);
	ФормаВыбораВидаИнформации = ПолучитьФорму("Справочник.ДополнительныеРеквизиты.ФормаВыбора", ПараметрыФормы, ЭтаФорма);	
	ВидИнформации = ФормаВыбораВидаИнформации.ОткрытьМодально();
	Если ЗначениеЗаполнено(ВидИнформации) Тогда
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.ВидИнформации = ВидИнформации;
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.Информация = ОбщийМодульКлиент.ПолучитьЗначениеПоУмолчаниюПоляДополнительнойИнформации(ВидИнформации);
		СтандартнаяОбработка = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияПриИзменении(Элемент)
	ДопИнформацияИзменена = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ЗавтраВЭтоВремя(Команда)
	Запись.Дата = ТекущаяДата() + 3600 * 24;
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура ЗавтраУтром(Команда)
	Запись.Дата = КонецДня(ТекущаяДата()) + 3600 * 9;
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗагрузитьТекстИзСправочника(Знач ТекстЭлементСправочника)
	
	Результат = Неопределено;
	
	Если ЗначениеЗаполнено(ТекстЭлементСправочника) Тогда
		Результат = ТекстЭлементСправочника.ТекстПрограммы + Символы.ПС + 
		ТекстЭлементСправочника.ТекстПрограммы2 + Символы.ПС +
		ТекстЭлементСправочника.ТекстПрограммы3;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция   ИзменитьСледующийПериод()
	
	Если НЕ ЗначениеЗаполнено(запись.ПовторятьКаждыеЧислоЧасов)
		ИЛИ не ЗначениеЗаполнено(Запись.Дата) Тогда
		
		Элементы.СледующийПериод.Видимость = ЛОЖЬ;
	Иначе
		СледующийПериод = ?(ЗначениеЗаполнено(Запись.ДатаПоследнегоНапоминания) И (Запись.ДатаПоследнегоНапоминания > Запись.Дата), Запись.ДатаПоследнегоНапоминания, запись.Дата) + запись.ПовторятьКаждыеЧислоЧасов * 3600;
		Элементы.СледующийПериод.Видимость = ИСТИНА;
		
	КонецЕсли;
	
	ЧислоМинут = (Запись.ПовторятьКаждыеЧислоЧасов - цел(Запись.ПовторятьКаждыеЧислоЧасов)) * 60;
	Если ЧислоМинут  > 0
		И ЧислоМинут < 1 Тогда 
		
		ЧислоМинут = 1;	
	КонецЕсли;
	Частота = Формат(ЧислоМинут, "ЧЦ=4; ЧГ=0") + " m";
	Элементы.Частота.Видимость = НЕ цел(Запись.ПовторятьКаждыеЧислоЧасов) = Запись.ПовторятьКаждыеЧислоЧасов;
	
КонецФункции // ИзменитьСледующийПериод

&НаКлиенте
Процедура ИзображенияПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("СписокПриАктивизацииСтрокиОповещение", 0.2, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура КаждуюНеделю(Команда)
	
	Запись.ПовторятьКаждыеЧислоЧасов = 24 * 7;
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура Каждые15минут(Команда)
	
	Запись.ПовторятьКаждыеЧислоЧасов = 0.25;
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура Каждые30Минут(Команда)
	
	Запись.ПовторятьКаждыеЧислоЧасов = 0.5;
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура КаждыйГод(Команда)
	
	Запись.ПовторятьКаждыеЧислоЧасов = 24 * 7 * 365.25;
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура КаждыйДень(Команда)
	
	Запись.ПовторятьКаждыеЧислоЧасов = 24;
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура КаждыйМесяц(Команда)
	
	Запись.ПовторятьКаждыеЧислоЧасов = 24 * 30.4375;
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура КаждыйЧас(Команда)
	
	Запись.ПовторятьКаждыеЧислоЧасов = 1;
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Запись.Наименование = Наименование;
	НаименованиеИзменяли = ИСТИНА;
	
	Если ПереводитьНаименованияАвтоматически Тогда
		ОбщийМодульКлиент.ПеревестиНаименованияАвтоматически(Наименование, НаименованияНаДругихЯзыках);
		БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахНаЯзыкеПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НесколькоПолучателейПриИзменении(Элемент)
	
	Если НесколькоПолучателей Тогда
		Элементы.Получатели.Видимость = ИСТИНА;
		Элементы.ГоризонтПолучателей.Видимость = ЛОЖЬ;
		НесколькоПолучателейПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НесколькоПолучателейПриИзмененииНаСервере(Знач ДобавитьСебя = ЛОЖЬ)
	
	Если ЗначениеЗаполнено(Запись.Получатель) Тогда
		Запись.Получатели.Очистить();
		СтрокаПолучателей = Запись.Получатели.Добавить();
		
		Если ДобавитьСебя Тогда
			СтрокаПолучателей.Получатель = ПараметрыСеанса.ТекущийПользователь;
		Иначе
			СтрокаПолучателей.Получатель = Запись.Получатель;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(Запись.ТекстЗаметки)
		И ЗначениеЗаполнено(Запись.Наименование) Тогда
		
		Запись.ТекстЗаметки = Запись.Наименование;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Запись.Наименование)
		И ЗначениеЗаполнено(Запись.ТекстЗаметки) Тогда
		
		Запись.Наименование = Запись.ТекстЗаметки;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Запись.ТекстЗаметки)
		И НЕ ЗначениеЗаполнено(Запись.Наименование) Тогда
		
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Нет текста заметки!"), Запись, "Наименование");
		Отказ = ИСТИНА;
		
	ИначеЕсли НЕ Запись.ТипЗаметки = ТипЗаметка
		И НЕ ЗначениеЗаполнено(Запись.Дата) Тогда
		
		Если Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Дата не указана. Это просто заметка?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Запись.ТипЗаметки = ТипЗаметка;
		Иначе
			Отказ = ИСТИНА;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Отказ
		И запись.Актуально
		И НЕ Запись.ТипЗаметки = ПредопределенноеЗначение("Перечисление.ТипыЗаметок.Заметка") 
		И Запись.Дата < ОбщийМодульКлиент.ПользователяТекущаяДата() 
		И Запись.ПовторятьКаждыеЧислоЧасов = 0 Тогда
		
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Дата в прошлом") + ": " + формат(Запись.Дата, "ДФ='dd.MM.yy ЧЧ:мм'") + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Задайте дату в будущем."), Запись, "Дата");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПовторятьКаждыеЧислоЧасовПриИзменении(Элемент)
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиПриИзменении(Элемент)
	
	Если Запись.Получатели.Количество() = 1 
		И ЗначениеЗаполнено(Запись.Получатели[0].Получатель) Тогда
		
		Запись.Получатель = Запись.Получатели[0].Получатель;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПоддержкаДругихЯзыков Тогда
		Если НаименованиеИзменяли Тогда
			ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Запись.Ссылка, Наименование);
		КонецЕсли;
		
		Если БылиИзмененияЗначенияПолейНаЯзыках Тогда
			Для Каждого СтрокаЯзыка Из НаименованияНаДругихЯзыках Цикл
				ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Запись.Ссылка, СтрокаЯзыка.НаЯзыке, "Наименование", СтрокаЯзыка.Язык);	
			КонецЦикла;
			ОбновитьПовторноИспользуемыеЗначения();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДопИнформацияИзменена Тогда
		ОбщийМодульСервисСервер.ЗаписатьДополнительнуюИнформацию(Запись.Ссылка, ДополнительнаяИнформация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНаДругихЯзыках(Команда)
	Элементы.НаименованияНаДругихЯзыках.Видимость  = НЕ Элементы.НаименованияНаДругихЯзыках.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Запись.Ссылка, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Запись.ссылка, ИСТИНА);
	ПриСменеТипаЗаметки();
	ИзменитьСледующийПериод();
	ВидимостьДополнительныхКолонок();
	
	ВидимостьПолучателей();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриСменеТипаЗаметки()
	
	Если НЕ ЗначениеЗаполнено(Запись.ТипЗаметки) Тогда
		Запись.ТипЗаметки = ТипЗаметка ;
	КонецЕсли;
	
	Элементы.Дата.АвтоОтметкаНезаполненного = НЕ Запись.ТипЗаметки = ТипЗаметка;
	Элементы.ГруппаДата.Видимость 			= НЕ Запись.ТипЗаметки = ТипЗаметка;
	Элементы.ВыполняемыеЗадачи.Видимость	= Запись.ТипЗаметки = ТипЗадача;
	Элементы.ТекстЗаметки.Видимость			= НЕ Запись.ТипЗаметки = ТипЗадача;
	
	ВидимостьПолучателей()
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ЗначениеЗаполненоЗаписьСсылка = ЗначениеЗаполнено(Запись.Ссылка);
		Если ЗначениеЗаполнено(Параметры.ТипЗаметки) Тогда		
			Запись.ТипЗаметки 	= Параметры.ТипЗаметки;
			
		ИначеЕсли НЕ ЗначениеЗаполнено(Запись.ТипЗаметки) Тогда		
			Запись.ТипЗаметки 	= Перечисления.ТипыЗаметок.Заметка ;
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Запись.Ссылка) Тогда
			Запись.Актуально 	= ИСТИНА;                        	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.ПараметрКоманды) Тогда
			
			Запись.Актуально = ИСТИНА; 		
			Запись.Причина 	 = Параметры.ПараметрКоманды;		
			ТипПараметра 	 = ТипЗнч(Параметры.ПараметрКоманды);
			
			Если ТипПараметра = Тип("ДокументСсылка.РасходыТовара") Тогда
				Запись.СвязаноС = Параметры.ПараметрКоманды.КлиентПоставщик;
				Запись.Комментарий = Параметры.ПараметрКоманды.Комментарий;	
				
			ИначеЕсли ТипПараметра = Тип("ДокументСсылка.ДвиженияДенег") Тогда
				Если НЕ Параметры.ПараметрКоманды.НачислениеИВыплатаЗаработнойПлаты Тогда
					Запись.СвязаноС = Параметры.ПараметрКоманды.КлиентПоставщик;	
				КонецЕсли;
				Запись.Комментарий = Параметры.ПараметрКоманды.Комментарий;	
				
			ИначеЕсли ТипПараметра = Тип("ДокументСсылка.ПоступленияТовара") Тогда
				Запись.СвязаноС = Параметры.ПараметрКоманды.КлиентПоставщик;	
				
			ИначеЕсли ТипПараметра = Тип("ДокументСсылка.Инвентаризации") Тогда
				Запись.СвязаноС = Параметры.ПараметрКоманды.Склад;	
				Запись.Комментарий = Параметры.ПараметрКоманды.Комментарий;	
				
			ИначеЕсли ТипПараметра = Тип("ДокументСсылка.КорректировкиИРегистрацияОстатков") Тогда
				Запись.Комментарий = Параметры.ПараметрКоманды.Комментарий;	
				
			ИначеЕсли ТипПараметра = Тип("ДокументСсылка.ПеремещенияТовара") Тогда
				Запись.СвязаноС = Параметры.ПараметрКоманды.СкладКуда;
				Запись.Комментарий = "" + Параметры.ПараметрКоманды.Склад;	
				
			ИначеЕсли ТипПараметра = Тип("ДокументСсылка.ПланыПродаж") Тогда			
				Запись.Комментарий = Параметры.ПараметрКоманды.Комментарий;	
				
			ИначеЕсли ТипПараметра = Тип("ДокументСсылка.УстановкиЦен") Тогда
				Запись.СвязаноС = Параметры.ПараметрКоманды.ВидЦен;	
				Запись.Комментарий = Параметры.ПараметрКоманды.Комментарий;	
				
			ИначеЕсли ТипПараметра = Тип("СправочникСсылка.ВидыЦен") Тогда
				Запись.Комментарий = Параметры.ПараметрКоманды.Комментарий;	
				
			ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Договора") Тогда
				Запись.СвязаноС = Параметры.ПараметрКоманды.КлиентПоставщик;	
			ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Клиенты") Тогда
				Запись.Комментарий = ОбщийМодульСервер.ПолучитьТекстТелефонов(Параметры.ПараметрКоманды);	
				
			ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Номенклатура") Тогда
				
			ИначеЕсли ТипПараметра = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
				
			ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Организации") Тогда
				Запись.Комментарий = ОбщийМодульСервер.ПолучитьТекстТелефонов(Параметры.ПараметрКоманды);
				
			ИначеЕсли ТипПараметра = Тип("СправочникСсылка.ПартииПриобретения") Тогда
				Запись.Комментарий = "" + Параметры.ПараметрКоманды.Поставщик;	
				
			ИначеЕсли ТипПараметра = Тип("СправочникСсылка.ПодсистемаИЭШаблоны") Тогда
			ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Поставщики") Тогда
				Запись.Комментарий = ОбщийМодульСервер.ПолучитьТекстТелефонов(Параметры.ПараметрКоманды);	
				
			ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Производители") Тогда
			ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Регионы") Тогда
			ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Склады") Тогда
			ИначеЕсли ТипПараметра = Тип("СправочникСсылка.Сотрудники") Тогда
				Запись.Комментарий = ОбщийМодульСервер.ПолучитьТекстТелефонов(Параметры.ПараметрКоманды);	
				
			ИначеЕсли ТипПараметра = Тип("СправочникСсылка.СтатьиДвиженияДенег") Тогда
			ИначеЕсли ТипПараметра = Тип("СправочникСсылка.ФормулыОписания") Тогда
				Запись.Комментарий = Параметры.ПараметрКоманды.Формула;	
				
			КонецЕсли;			
		КонецЕсли;   	
		
		Если Запись.Предопределенный 
			И запись.ВыполняемыеЗадачи.Количество() = 0 Тогда
			
			Задача = запись.ВыполняемыеЗадачи.Добавить();
			Задача.ТипЗадачи  = перечисления.ТипыЗадач.РезервированиеКаталогаСБазойДанных;
			Задача.Адрес      = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите здесь адрес (каталог) резервирования!");
			запись.Актуально  = ЛОЖЬ;
			запись.ТипЗаметки = Перечисления.ТипыЗаметок.Задача;
		КонецЕсли;
		
		ТипЗаметка 	= Перечисления.ТипыЗаметок.Заметка ;
		ТипЗадача	= Перечисления.ТипыЗаметок.Задача;	
		
		ДопИнфоТипВладельца = ОбщийМодульПовтор.ПолучитьТипВладельца(Запись.Ссылка); 	
		ОбщийМодульСервисСервер.ЗаполнитьДополнительнуюИнформацию(Запись.Ссылка, ДополнительнаяИнформация, ДопИнфоТипВладельца);			
		
		ПоддержкаДругихЯзыков = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПоддерживатьИныеЯзыкиКромеРусского") 
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПоддерживатьНаименованияНаДругихЯзыкахКромеРусского", ИСТИНА);
		
		Если ПоддержкаДругихЯзыков 
			И ЗначениеЗаполненоЗаписьСсылка Тогда
			
			Наименование = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Запись.Ссылка);
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ЗначенияНаДругихЯзыках.Язык,
			|	ЗначенияНаДругихЯзыках.НаЯзыке,
			|	ЗначенияНаДругихЯзыках.Поле
			|ИЗ РегистрСведений.ЗначенияНаДругихЯзыках КАК ЗначенияНаДругихЯзыках
			|ГДЕ ЗначенияНаДругихЯзыках.ОбъектБазыДанных = &ОбъектБазыДанных";
			
			Запрос.УстановитьПараметр("ОбъектБазыДанных", Запись.Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Если ВыборкаДетальныеЗаписи.Поле = "Наименование" Тогда
						СтрокаЯзыка = НаименованияНаДругихЯзыках.Добавить();
						СтрокаЯзыка.Язык 	= ВыборкаДетальныеЗаписи.Язык;
						СтрокаЯзыка.НаЯзыке = ВыборкаДетальныеЗаписи.НаЯзыке;	
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		Иначе
			Наименование = Запись.Наименование;			
		КонецЕсли;	
		
		Если ПоддержкаДругихЯзыков Тогда
			ПереводитьНаименованияАвтоматически = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьРегистрТекстовНаДругихЯзыкахДляАвтоматическогоПереводаНаименований");
			Элементы.НаименованияНаДругихЯзыкахЯзык.РежимВыбораИзСписка = ИСТИНА;
			ОбщийМодульПовтор.УстановитьСписокДоступныхЯзыков(Элементы.НаименованияНаДругихЯзыкахЯзык.СписокВыбора, ИСТИНА);
		КонецЕсли;
		
		Пользователи = Справочники.Пользователи.Выбрать();
		Пока Пользователи.Следующий() Цикл
			Если НЕ пользователи.Предопределенный Тогда
				Элементы.Получатель.СписокВыбора.Добавить(пользователи.Ссылка, Пользователи.Наименование);
				Элементы.ПолучателиПолучатель.СписокВыбора.Добавить(пользователи.Ссылка, Пользователи.Наименование);
			КонецЕсли;	
		КонецЦикла;
		
		Изображения.Параметры.УстановитьЗначениеПараметра("Владелец", Запись.Ссылка);
		СтрокаСоединенияСБД = СтрокаСоединенияИнформационнойБазы();
		ФайловаяБД = НЕ Найти(ВРег(СтрокаСоединенияСБД), "FILE=") = 0;	
		
		СписокВыбораПроизвольныхОтчетов = Новый СписокЗначений;
		
		Для Каждого Отчет Из МетаДанные.Отчеты Цикл
			Попытка
				ОсновнаяСхемаКомпоновкиДанных = Отчет.ОсновнаяСхемаКомпоновкиДанных;
				Если НЕ ОсновнаяСхемаКомпоновкиДанных = Неопределено Тогда
					Элементы.ВыполняемыеЗадачиНаименованиеОтчета.СписокВыбора.Добавить(Отчет.Имя, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(Отчет.Синоним));	
				КонецЕсли;
			Исключение
			КонецПопытки;
		КонецЦикла;
		
		Если ПараметрыСеанса.ВерсияПриложения < 803050000 
			ИЛИ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВместоТумблеровПоказыватьГалочки") Тогда
			
			Если НЕ ПараметрыСеанса.ВерсияПриложения < 803050000 Тогда
				Выполнить(" Элементы.Актуально.ВидФлажка = ВидФлажка.Флажок; ");	
			КонецЕсли;
			Элементы.Актуально.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Актуально");
			Элементы.Актуально.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СегодняВечером(Команда)
	
	Дата = ТекущаяДата();
	Запись.Дата = дата(год(Дата), месяц(Дата), День(дата), 17, 50, 0);
	ИзменитьСледующийПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура Сейчас(Команда)
	Запись.Дата = ТекущаяДата();
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтрокиОповещение()	
	
	ТекущийЭлементСписка = Элементы.Изображения.ТекущаяСтрока;
	Если ЗначениеЗаполнено(ТекущийЭлементСписка) Тогда
		СтруктураИзображения = ОбщийМодульСервер.ПолучитьСтруктуруИзображения(ТекущийЭлементСписка);
		ПодСсылку = СтруктураИзображения.ПодСсылку;
		
		Элементы.СсылкаНаИзображение.Видимость    = не СтруктураИзображения.ИзображениеВБазеДанных;
		Элементы.ИзображениеВБазеДанных.Видимость = СтруктураИзображения.ИзображениеВБазеДанных;
		
		Если СтруктураИзображения.РазмерПриОтображении = 1 Тогда
			Элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.АвтоРазмер
		ИначеЕсли СтруктураИзображения.РазмерПриОтображении = 2 Тогда
			Элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.Пропорционально
		ИначеЕсли СтруктураИзображения.РазмерПриОтображении = 3 Тогда
			Элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.Растянуть
		ИначеЕсли СтруктураИзображения.РазмерПриОтображении = 4 Тогда
			Элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.РеальныйРазмер
		ИначеЕсли СтруктураИзображения.РазмерПриОтображении = 5 Тогда
			Элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.Черепица
		КонецЕсли; 		 
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЗаметкиПриИзменении(Элемент)
	ПриСменеТипаЗаметки();
КонецПроцедуры

&НаКлиенте
Процедура Через15Минут(Команда)
	Запись.Дата = ТекущаяДата() + 15 * 60;
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура Через30Минут(Команда)
	Запись.Дата = ТекущаяДата() + 30 * 60;
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура ЧерезМесяц(Команда)
	Запись.Дата = ДобавитьМесяц(ТекущаяДата(), 1);
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура ЧерезНеделю(Команда)
	Запись.Дата = ТекущаяДата() + 3600 * 24 * 7;
	ИзменитьСледующийПериод();
КонецПроцедуры

&НаКлиенте
Процедура ЧерезЧас(Команда)
	Запись.Дата = ТекущаяДата() + 3600;
	ИзменитьСледующийПериод();
КонецПроцедуры
