// sza140104-0212 : 
// sza131214-0341 : 
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ОбщийМодульПовтор.ВывестиНаименованияНаДругомЯзыке() Тогда
		
		ВозможноеПредставление = ОбщийМодульПовтор.ПолучитьПредставлениеНаЯзыке(Данные.Ссылка, , ИСТИНА);
		Если НЕ ВозможноеПредставление = Неопределено Тогда
			Представление = ВозможноеПредставление;
			СтандартнаяОбработка = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура Печать(ТабДок, Ссылка) Экспорт
	
	ТабДок.ИмяПараметровПечати  = "ЗаметкиИНапоминания" + СокрЛП(ИмяКомпьютера());
	ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	
	ТабДок.Очистить();
	
	СсылкаНаОбъектПечати = Ссылка[0];
	
	РазрядМетаданных = ""; ИмяМетаданных = "";
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ТабДок = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ТабДок, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		
	Иначе		
		Макет = Справочники.ЗаметкиИНапоминания.ПолучитьМакет("Печать");
		Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ЗаметкиИНапоминания.Дата,
		|	ЗаметкиИНапоминания.ДатаРедакции,
		|	ЗаметкиИНапоминания.ДатаСоздания,
		|	ЗаметкиИНапоминания.Комментарий,
		|	ЗаметкиИНапоминания.Наименование,
		|	ЗаметкиИНапоминания.Ответственный,
		|	ЗаметкиИНапоминания.ПовторятьКаждыеЧислоЧасов,
		|	ЗаметкиИНапоминания.Причина,
		|	ЗаметкиИНапоминания.СвязаноС,
		|	ЗаметкиИНапоминания.ТекстЗаметки,
		|	ЗаметкиИНапоминания.ТипЗаметки,
		|	ЗаметкиИНапоминания.ВыполняемыеЗадачи.(
		|		ТипЗадачи,
		|		КодИмяОтчета,
		|		Адрес,
		|		Коментарий	)
		|ИЗ Справочник.ЗаметкиИНапоминания КАК ЗаметкиИНапоминания
		|ГДЕ ЗаметкиИНапоминания.Ссылка В (&Ссылка)";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		Шапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьВыполняемыеЗадачиШапка = Макет.ПолучитьОбласть("ВыполняемыеЗадачиШапка");
		ОбластьВыполняемыеЗадачи = Макет.ПолучитьОбласть("ВыполняемыеЗадачи");
		
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
			ТабДок.Вывести(ОбластьЗаголовок);
			
			Шапка.Параметры.Заполнить(Выборка);
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			
			ВыборкаВыполняемыеЗадачи = Выборка.ВыполняемыеЗадачи.Выбрать();
			Если НЕ ВыборкаВыполняемыеЗадачи.Количество() = 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьВыполняемыеЗадачиШапка);
				ТабДок.Вывести(ОбластьВыполняемыеЗадачиШапка);
				
				Пока ВыборкаВыполняемыеЗадачи.Следующий() Цикл
					ОбластьВыполняемыеЗадачи.Параметры.Заполнить(ВыборкаВыполняемыеЗадачи);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьВыполняемыеЗадачи);
					ТабДок.Вывести(ОбластьВыполняемыеЗадачи, ВыборкаВыполняемыеЗадачи.Уровень());
				КонецЦикла;	
			КонецЕсли;
			
			ВставлятьРазделительСтраниц = ИСТИНА;
		КонецЦикла; 	
	КонецЕсли;
	
КонецПроцедуры
