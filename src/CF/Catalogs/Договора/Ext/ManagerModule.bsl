// sza140612-0105  
// sza131125-0342  
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ОбщийМодульПовтор.ВывестиНаименованияНаДругомЯзыке() Тогда
		
		ВозможноеПредставление = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Данные.ссылка, , ИСТИНА);
		Если НЕ ВозможноеПредставление = Неопределено Тогда
			Представление = ВозможноеПредставление;
			СтандартнаяОбработка = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных") Тогда
		
		Если ВидФормы = "ФормаОбъекта" Тогда
			ВыбраннаяФорма = "ФормаЭлементаУпрощенная";
			СтандартнаяОбработка = ЛОЖЬ;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура Печать(ТабДок, Ссылка) Экспорт
	
	ТабДок.ИмяПараметровПечати  = "Договор" + СокрЛП(ИмяКомпьютера());
	ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	
	ТабДок.Очистить();
	
	СсылкаНаОбъектПечати = Ссылка[0];
	
	РазрядМетаданных = ""; ИмяМетаданных = "";
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ТабДок = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ТабДок, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		
	Иначе		
		Макет = Справочники.Договора.ПолучитьМакет("Печать");
		Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Договора.ВидЦен,
		|	Договора.ДатаЗаключения,
		|	Договора.ДатаНачала,
		|	Договора.ДатаОкончания,
		|	Договора.ДатаРедакции,
		|	Договора.ДатаСоздания,
		|	Договора.КлиентПоставщик,
		|	Договора.Комментарий,
		|	Договора.Наименование,
		|	Договора.НомерДоговора,
		|	Договора.ОграничиваетКоличествоТоваров,
		|	Договора.ОграничиваетСуммуЗадолженности,
		|	Договора.ОграничиваетСуммуТоваров,
		|	Договора.Организация,
		|	Договора.Ответственный,
		|	Договора.ПредусматриваетСтрогиеЦены,
		|	Договора.УстанавливаетСрокОплатыВДнях,
		|	Договора.Товары.(
		|		Ссылка,
		|		НомерСтроки,
		|		Номенклатура,
		|		ЕдиницаИзмерения,
		|		Цена,
		|		Коментарий
		|	),
		|	Договора.ПроцентКомиссионногоВознаграждения,
		|	Договора.ОбъектКлиента
		|ИЗ Справочник.Договора КАК Договора
		|ГДЕ Договора.Ссылка В(&Ссылка)";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
		ОбластьТоварыШапка 	= Макет.ПолучитьОбласть("ТоварыШапка");
		Шапка 			= Макет.ПолучитьОбласть("Шапка");
		ОбластьТовары 	= Макет.ПолучитьОбласть("Товары");
		Подвал 			= Макет.ПолучитьОбласть("Подвал");
		
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
			ТабДок.Вывести(ОбластьЗаголовок);
			
			Шапка.Параметры.Заполнить(Выборка);
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			
			ВыборкаТовары = Выборка.Товары.Выбрать();
			Если НЕ ВыборкаТовары.Количество() = 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТоварыШапка);
				ТабДок.Вывести(ОбластьТоварыШапка);
				Пока ВыборкаТовары.Следующий() Цикл
					ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьТовары);
					ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
				КонецЦикла;
			КонецЕсли;
			
			Подвал.Параметры.Заполнить(Выборка);
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
			ТабДок.Вывести(Подвал);
			
			ВставлятьРазделительСтраниц = ИСТИНА;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры
