//sza140104-0214 : 
//sza131214-0131 : 
Процедура Друкувати(ТабДок, Ссылка) Экспорт
	
	Макет = Справочники.ПодсистемаИЭИмпортЭкспортФСШаблоны.ПолучитьМакет("Друкувати");
	Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПодсистемаИЭИмпортЭкспортФСШаблоны.АдресФайла,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ВалютаНеНациональная,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ВестиЖурналИмпортноЭкспортныхОпераций,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ВидШаблона,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ВсегдаСоздаватьНовыйЭлементИлиДокумент,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ВставлятьМеждуТекстамиНазначенияСледующийТекст,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ВыдаватьЗапросДляИнтервалаДокументов,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ВыполнитьПрограммныйКодВНачалеЗагрузкиКаждогоПоля,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ВыполнитьПрограммныйКодВНачалеЗагрузкиСтроки,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ВыполнитьПрограммныйКодПередНачалом,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ВыполнитьПрограммныйКодПослеОкончания,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ВыполнитьПрограммныйКодПослеОкончанияЗагрузкиКаждогоПоля,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ВыполнитьПрограммныйКодПослеОкончанияЗагрузкиСтроки,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ВыполнятьПрограммы,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ГруппаДляНовойНоменклатуры,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ГруппаНовыхКлиентов,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ДанныйШаблонИспользоватьТолькоДляОбъектовСОпределеннымиРеквизитами,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ДляОбновленияСуществующихОбъектов,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ДобаватьТекстВПодвалФайла,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ДобавитьТекстВШапкуФайла,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ДополнительноеЗаполнениеРеквизитовПриИмпорте,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ДопустимоеЧислоПустыхСтрокПриПоискеКонцаФайла,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ЕдиницаИзмеренияНоменклатуры,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ЕслиКлиентНеНайденПриИмпортеОткрыватьПодборИзСуществующих,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ЗагружатьВсеФайлыИзПапки,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ЗнакМеждуИменемПоляИЗначением,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ИмяРегистра,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ИмяТаблицыШаблонаФайла,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ИскатьВПодкаталогах,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ИспользоватьВКачествеКлючевыхТолькоПоляИзТаблицы,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ИспользоватьДополнительноеПоведение,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ИспользоватьЗаголовкиБлоковДанных,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ИспользоватьСтрокуЗаголовок,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ИспользоватьТолькоДляИмпорта,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ИспользоватьТолькоДляЭкспорта,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.КаждоеПолеНоваяСтрока,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.Код,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.КодировкаDOS,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.КодировкаФайла,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.Комментарий,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.Производитель,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.МаскаФайла,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.Наименование,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.НалогообложениеНДСПоУмолчанию,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.НаправлениеДеятельности,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.НеВыводитьСообщениеОЗавершенииОбмена,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.НеЗакрыватьОкноПеречняОбъектовОбмена,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.НеПропускатьНепроведенныеДокументы,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.НеПропускатьОбъектыПомеченныеНаУдаление,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.НеУчитыватьПоследнююСтрокуФайла,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.НоменклатурнаяГруппа,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.НомерДокументаУстанавливатьНоНомеруВходящегоИлиИсходящегоДокумента,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.НомерЛиста,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.НомерПоляКотороеВсегдаЗаполнено,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ОбрабатыватьПлатежныеДокументы,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ОстанавливатьОбменПоОшибке,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ОтборДляКлиента,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ОтборДляОрганизации,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ОткрыватьФормуДокументовКоторыеНеУдалосьПровести,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ОткрыватьФормуКаждогоЭлементаИлиДокумента,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ПарольАрхива,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ПоискВНазначенииПлатежаНомераСчетаИДоговора,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ПоказыватьОбъектыОбмена,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ПоказыватьПрогрессПроизводстваОбмена,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ПопытатьсяПроводитьДокументы,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ПризнакДебетаОтрицательнаяСумма,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ПриЭкспортеПередЗаписьюВыводитьОкноСПеречнемВыгрузкиДляОтбора,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ПропуститьЧислоСимволовВКонцеСтроки,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ПропуститьЧислоСимволовСНачалаСтроки,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ПустыеСтрокиМеждуЗаписями,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.РазделителиВстречаютсяМеждуЗнаками,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.РазделительВСоставномНаименовании,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.РазделительДаты,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.РазделительПолей,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.РазделительПолейАльтернативный,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.РазделительЧисел,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.РасчитыватьСрокОкончанияОбмена,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.РезервБулево,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.РезервСтрока,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.РезервЧисло,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СоздаватьБанковскиеСчетаКлиентов,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СоздаватьДоговораКлиентов,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СоздаватьКонтрагентовПоОКПО,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СоздаватьМаркиНоменклатуры,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СоздаватьМетодыПолученияНоменклатуры,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СоздаватьЭлементыСправочникаНоменклатураВСлучаеИхОтсутствия,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СообщатьОНедостаточномЗаполненииПриЭкспортеДокументовДляПОБанка,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СоставлятьНаименованиеГруппыРодителяИзИменПолей,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СоставлятьНаименованиеПоВыражениюИзИменПолей,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СоставлятьХарактеристикуПоВыражениюИзИменПолей,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СпособПополненияНоменклатуры,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СпособСписания,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СтатьяДДСПоступленияПоУмолчанию,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СтатьяДДСРасходаПоУмолчанию,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СтрокаСортировкиДляСпискаЗадачИмпортаЭкспорта,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СуммироватьДанныеДокументовРасходДСПланПриВыгрузкеДляОдногоКлиентаОтОднойОрганизацииВТеченииСуток,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СуммироватьТолькоЕслиПлатежкиСОднимНомером,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СчетУчетаТоваров,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.СчетУчетаЗатрат,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ТекстПроизвольногоЗапроса,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ТипНоменклатуры,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ТолькоПриходные,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ТолькоРасходные,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.УдалятьФайлПослеУдачногоИмпорта,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.УсловиеДебета,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.УсловиеДебетаЗначение,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.УсловиеДебетаПоле,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.УсловиеЗаголовкаБлокаДанных,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.УсловиеЗаголовкаБлокаДанныхЗначение,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.УсловиеЗаголовкаБлокаДанныхНаличиеПодстроки,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.УсловиеЗаголовкаБлокаДанныхПоле,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.УстанавливатьДатуДокументамПриИмпортеЕслиНеОпределена,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.УстанавливатьДоговорКлиентаЕслиПодходитТолькоОдин,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.УстанавливатьПервыйПодходящийДоговорКлиента,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.УстанавливатьПризнакАвансаДокументамДенежныхСредств,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.УстанавливатьТекущуюДатуДляДокументовЕслиНеОпределена,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.УстанавливатьФлагОбменаЗагрузки,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ФайлАрхив,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ФильтроватьНеподходящиеСимволы,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ФорматПолейДаты,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ФорматФайла,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ФормироватьПервуюСтрокуИзЗаголовковПолей,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ЧислоСтрокСКонцаФайлаКоторыеСледуетПропустить,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ЧислоСтрокСНачалаФайлаКоторыеСледуетПропустить,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ЭтоПлатежныйдокумент,
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ПоследовательностьПолейВФайле.(
	|		НомерСтроки,
	|		ПолеТаблицы,
	|		ДанноеПолеКлючевоеДляПоискаИЗаписи,
	|		ИмяПоляВФайле,
	|		КомментарийПоля,
	|		ЕслиНеЗаполненоЗначитПринимаетПредыдущееЗначение
	|	),
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.УсловияФильтра.(
	|		НомерСтроки,
	|		НомерПоля,
	|		УсловиеРавенства,
	|		ЗначениеПоля,
	|		ПоведениеПриОбмене,
	|		Комментарий
	|	),
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ДополнительноеПоведение.(
	|		НомерСтроки,
	|		ЭлементПоведения
	|	),
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ОтборПоОрганизациям.(
	|		НомерСтроки,
	|		Организация
	|	),
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ОтборПоСчетамИКассам.(
	|		НомерСтроки,
	|		ХранилищеДС
	|	),
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ПоследовательностьПолейВЗаголовкеБлокаДанных.(
	|		НомерСтроки,
	|		ПолеТаблицы,
	|		ИмяПоляВФайле,
	|		КомментарийПоля,
	|		ЕслиНеЗаполненоЗначитПринимаетПредыдущееЗначение,
	|		ДанноеПолеКлючевоеДляПоискаИЗаписи
	|	),
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ТолькоДляОбъектовСРеквизитами.(
	|		НомерСтроки,
	|		КачествоУсловия,
	|		НаименованиеРеквизита,
	|		ИмяТаблицыРеквизита,
	|		ЗначениеРеквизита,
	|		Комментарий
	|	),
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ДополнительноеЗаполнениеРеквизитов.(
	|		НомерСтроки,
	|		НаименованиеРеквизита,
	|		ИмяТаблицыРеквизита,
	|		ЗначениеРеквизита,
	|		УстанавливатьТолькоЕслиЗначениеНеЗаполнено,
	|		Комментарий
	|	),
	|	ПодсистемаИЭИмпортЭкспортФСШаблоны.ПараметрыПроизвольногоЗапроса.(
	|		НомерСтроки,
	|		НаименованиеПараметра,
	|		ЗначениеПараметра,
	|		Комментарий
	|	)
	|ИЗ Справочник.ПодсистемаИЭИмпортЭкспортФСШаблоны КАК ПодсистемаИЭИмпортЭкспортФСШаблоны
	|ГДЕ ПодсистемаИЭИмпортЭкспортФСШаблоны.Ссылка В (&Ссылка)";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПоследовательностьПолейВФайлеШапка = Макет.ПолучитьОбласть("ПоследовательностьПолейВФайлеШапка");
	ОбластьПоследовательностьПолейВФайле = Макет.ПолучитьОбласть("ПоследовательностьПолейВФайле");
	ОбластьУсловияФильтраШапка = Макет.ПолучитьОбласть("УсловияФильтраШапка");
	ОбластьУсловияФильтра = Макет.ПолучитьОбласть("УсловияФильтра");
	ОбластьДополнительноеПоведениеШапка = Макет.ПолучитьОбласть("ДополнительноеПоведениеШапка");
	ОбластьДополнительноеПоведение = Макет.ПолучитьОбласть("ДополнительноеПоведение");
	ОбластьОтборПоОрганизациямШапка = Макет.ПолучитьОбласть("ОтборПоОрганизациямШапка");
	ОбластьОтборПоОрганизациям = Макет.ПолучитьОбласть("ОтборПоОрганизациям");
	ОбластьОтборПоСчетамИКассамШапка = Макет.ПолучитьОбласть("ОтборПоСчетамИКассамШапка");
	ОбластьОтборПоСчетамИКассам = Макет.ПолучитьОбласть("ОтборПоСчетамИКассам");
	ОбластьПоследовательностьПолейВЗаголовкеБлокаДанныхШапка = Макет.ПолучитьОбласть("ПоследовательностьПолейВЗаголовкеБлокаДанныхШапка");
	ОбластьПоследовательностьПолейВЗаголовкеБлокаДанных = Макет.ПолучитьОбласть("ПоследовательностьПолейВЗаголовкеБлокаДанных");
	ОбластьТолькоДляОбъектовСРеквизитамиШапка = Макет.ПолучитьОбласть("ТолькоДляОбъектовСРеквизитамиШапка");
	ОбластьТолькоДляОбъектовСРеквизитами = Макет.ПолучитьОбласть("ТолькоДляОбъектовСРеквизитами");
	ОбластьДополнительноеЗаполнениеРеквизитовШапка = Макет.ПолучитьОбласть("ДополнительноеЗаполнениеРеквизитовШапка");
	ОбластьДополнительноеЗаполнениеРеквизитов = Макет.ПолучитьОбласть("ДополнительноеЗаполнениеРеквизитов");
	ОбластьПараметрыПроизвольногоЗапросаШапка = Макет.ПолучитьОбласть("ПараметрыПроизвольногоЗапросаШапка");
	ОбластьПараметрыПроизвольногоЗапроса = Макет.ПолучитьОбласть("ПараметрыПроизвольногоЗапроса");
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = ЛОЖЬ;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ТабДок.Вывести(ОбластьПоследовательностьПолейВФайлеШапка);
		ВыборкаПоследовательностьПолейВФайле = Выборка.ПоследовательностьПолейВФайле.Выбрать();
		Пока ВыборкаПоследовательностьПолейВФайле.Следующий() Цикл
			ОбластьПоследовательностьПолейВФайле.Параметры.Заполнить(ВыборкаПоследовательностьПолейВФайле);
			ТабДок.Вывести(ОбластьПоследовательностьПолейВФайле, ВыборкаПоследовательностьПолейВФайле.Уровень());
		КонецЦикла;

		ТабДок.Вывести(ОбластьУсловияФильтраШапка);
		ВыборкаУсловияФильтра = Выборка.УсловияФильтра.Выбрать();
		Пока ВыборкаУсловияФильтра.Следующий() Цикл
			ОбластьУсловияФильтра.Параметры.Заполнить(ВыборкаУсловияФильтра);
			ТабДок.Вывести(ОбластьУсловияФильтра, ВыборкаУсловияФильтра.Уровень());
		КонецЦикла;

		ТабДок.Вывести(ОбластьДополнительноеПоведениеШапка);
		ВыборкаДополнительноеПоведение = Выборка.ДополнительноеПоведение.Выбрать();
		Пока ВыборкаДополнительноеПоведение.Следующий() Цикл
			ОбластьДополнительноеПоведение.Параметры.Заполнить(ВыборкаДополнительноеПоведение);
			ТабДок.Вывести(ОбластьДополнительноеПоведение, ВыборкаДополнительноеПоведение.Уровень());
		КонецЦикла;

		ТабДок.Вывести(ОбластьОтборПоОрганизациямШапка);
		ВыборкаОтборПоОрганизациям = Выборка.ОтборПоОрганизациям.Выбрать();
		Пока ВыборкаОтборПоОрганизациям.Следующий() Цикл
			ОбластьОтборПоОрганизациям.Параметры.Заполнить(ВыборкаОтборПоОрганизациям);
			ТабДок.Вывести(ОбластьОтборПоОрганизациям, ВыборкаОтборПоОрганизациям.Уровень());
		КонецЦикла;

		ТабДок.Вывести(ОбластьОтборПоСчетамИКассамШапка);
		ВыборкаОтборПоСчетамИКассам = Выборка.ОтборПоСчетамИКассам.Выбрать();
		Пока ВыборкаОтборПоСчетамИКассам.Следующий() Цикл
			ОбластьОтборПоСчетамИКассам.Параметры.Заполнить(ВыборкаОтборПоСчетамИКассам);
			ТабДок.Вывести(ОбластьОтборПоСчетамИКассам, ВыборкаОтборПоСчетамИКассам.Уровень());
		КонецЦикла;

		ТабДок.Вывести(ОбластьПоследовательностьПолейВЗаголовкеБлокаДанныхШапка);
		ВыборкаПоследовательностьПолейВЗаголовкеБлокаДанных = Выборка.ПоследовательностьПолейВЗаголовкеБлокаДанных.Выбрать();
		Пока ВыборкаПоследовательностьПолейВЗаголовкеБлокаДанных.Следующий() Цикл
			ОбластьПоследовательностьПолейВЗаголовкеБлокаДанных.Параметры.Заполнить(ВыборкаПоследовательностьПолейВЗаголовкеБлокаДанных);
			ТабДок.Вывести(ОбластьПоследовательностьПолейВЗаголовкеБлокаДанных, ВыборкаПоследовательностьПолейВЗаголовкеБлокаДанных.Уровень());
		КонецЦикла;

		ТабДок.Вывести(ОбластьТолькоДляОбъектовСРеквизитамиШапка);
		ВыборкаТолькоДляОбъектовСРеквизитами = Выборка.ТолькоДляОбъектовСРеквизитами.Выбрать();
		Пока ВыборкаТолькоДляОбъектовСРеквизитами.Следующий() Цикл
			ОбластьТолькоДляОбъектовСРеквизитами.Параметры.Заполнить(ВыборкаТолькоДляОбъектовСРеквизитами);
			ТабДок.Вывести(ОбластьТолькоДляОбъектовСРеквизитами, ВыборкаТолькоДляОбъектовСРеквизитами.Уровень());
		КонецЦикла;

		ТабДок.Вывести(ОбластьДополнительноеЗаполнениеРеквизитовШапка);
		ВыборкаДополнительноеЗаполнениеРеквизитов = Выборка.ДополнительноеЗаполнениеРеквизитов.Выбрать();
		Пока ВыборкаДополнительноеЗаполнениеРеквизитов.Следующий() Цикл
			ОбластьДополнительноеЗаполнениеРеквизитов.Параметры.Заполнить(ВыборкаДополнительноеЗаполнениеРеквизитов);
			ТабДок.Вывести(ОбластьДополнительноеЗаполнениеРеквизитов, ВыборкаДополнительноеЗаполнениеРеквизитов.Уровень());
		КонецЦикла;

		ТабДок.Вывести(ОбластьПараметрыПроизвольногоЗапросаШапка);
		ВыборкаПараметрыПроизвольногоЗапроса = Выборка.ПараметрыПроизвольногоЗапроса.Выбрать();
		Пока ВыборкаПараметрыПроизвольногоЗапроса.Следующий() Цикл
			ОбластьПараметрыПроизвольногоЗапроса.Параметры.Заполнить(ВыборкаПараметрыПроизвольногоЗапроса);
			ТабДок.Вывести(ОбластьПараметрыПроизвольногоЗапроса, ВыборкаПараметрыПроизвольногоЗапроса.Уровень());
		КонецЦикла;

		ВставлятьРазделительСтраниц = ИСТИНА;
	КонецЦикла;
	//}}
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ОбщийМодульПовтор.ВывестиНаименованияНаДругомЯзыке() Тогда
		
		ВозможноеПредставление = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Данные.ссылка, , ИСТИНА);
		Если НЕ ВозможноеПредставление = Неопределено Тогда
			Представление = ВозможноеПредставление;
			СтандартнаяОбработка = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
