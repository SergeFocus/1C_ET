//sza140428-0300  
//sza140424-1617  
Процедура НаПечать(ТабДок, Ссылка) Экспорт
	
	Макет = Справочники.ГруппыАналогов.ПолучитьМакет("НаПечать");
	Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ГруппыАналогов.ДатаРедакции,
	|	ГруппыАналогов.ДатаСоздания,
	|	ГруппыАналогов.Код,
	|	ГруппыАналогов.Комментарий,
	|	ГруппыАналогов.Наименование,
	|	ГруппыАналогов.Ответственный,
	|	ГруппыАналогов.Товары.(
	|		НомерСтроки,
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		Количество,
	|		ОСтроке	)
	|ИЗ Справочник.ГруппыАналогов КАК ГруппыАналогов
	|ГДЕ ГруппыАналогов.Ссылка В (&Ссылка)";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапка");
	ОбластьТовары = Макет.ПолучитьОбласть("Товары");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = ЛОЖЬ;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ТабДок.Вывести(ОбластьТоварыШапка);
		ВыборкаТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
			ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
		КонецЦикла;

		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);

		ВставлятьРазделительСтраниц = ИСТИНА;
	КонецЦикла;
	//}}
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)

	Если ОбщийМодульПовтор.ВывестиНаименованияНаДругомЯзыке() Тогда
		
		ВозможноеПредставление = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Данные.ссылка, , ИСТИНА);
		Если НЕ ВозможноеПредставление = Неопределено Тогда
			Представление = ВозможноеПредставление;
			СтандартнаяОбработка = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры



