// sza140420-0420  
// sza140228-0421  
// sza111031-1500 
&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	
	ФормироватьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаВыдачиПриИзменении(Элемент)
	
	ФормироватьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияВидИнформацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура("ТипВладельца", ДопИнфоТипВладельца);
	ФормаВыбораВидаИнформации = ПолучитьФорму("Справочник.ДополнительныеРеквизиты.ФормаВыбора", ПараметрыФормы, ЭтаФорма);	
	ВидИнформации = ФормаВыбораВидаИнформации.ОткрытьМодально();
	Если ЗначениеЗаполнено(ВидИнформации) Тогда
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.ВидИнформации = ВидИнформации;
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.Информация = ОбщийМодульКлиент.ПолучитьЗначениеПоУмолчаниюПоляДополнительнойИнформации(ВидИнформации);
		СтандартнаяОбработка = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияПриИзменении(Элемент)
	ДопИнформацияИзменена = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НомерДокументаПриИзменении(Элемент)
	
	ФормироватьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ значениезаполнено(Объект.ДатаОкончанияДействия) Тогда
		сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не указана дата окончания действия!"));
		отказ = ИСТИНА;
	КонецЕсли;
	
	Если НЕ значениезаполнено(Объект.ВидДокумента) Тогда
		сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не указан вид документа!"));
		отказ = ИСТИНА;
	КонецЕсли;
	
	Если НЕ значениезаполнено(Объект.НомерДокумента) Тогда
		сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Не указан номер документа!"));
		отказ = ИСТИНА;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		ФормироватьНаименование();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПлюсГод(Команда)
	
	Если значениезаполнено(Объект.ДатаОкончанияДействия) Тогда
		Объект.ДатаОкончанияДействия = Объект.ДатаОкончанияДействия + 3600 * 24 * 365.259636;
	Иначе
		Объект.ДатаОкончанияДействия = текущаядата() + 3600 * 24 * 365.259636;
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
Процедура ПоГруппеНоменклатуры(Команда)
	
	Формавыборгруппы = ПолучитьФорму("Справочник.Номенклатура.Форма.ФормаВыбораГруппы");
	ГруппаН = формавыборгруппы.ОткрытьМодально();
	Если ЗначениеЗаполнено(ГруппаН) Тогда
		ПоГруппеНоменклатурыС(ГруппаН);
	КонецЕсли;	                          
	
КонецПроцедуры

&НаСервере
Процедура ПоГруппеНоменклатурыС(ГруппаН)
	
	ОбъектН = ДанныеФормыВЗначение(Объект, тип("СправочникОбъект.СертификатыГигиеническиеЗаключения"));
	
	ЗапросГруппаН = Новый Запрос;
	ЗапросГруппаН.Текст = "ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В ИЕРАРХИИ(&ГруппаН)
	|	И Номенклатура.ЭтоГруппа = ЛОЖЬ
	|	И Номенклатура.ПометкаУдаления = ЛОЖЬ ";
	
	ЗапросГруппаН.УстановитьПараметр("ГруппаН", ГруппаН);
	
	ВыборГруппаН = ЗапросГруппаН.Выполнить();
	Если НЕ ВыборГруппаН.Пустой() Тогда
		РезГруппаН = ВыборГруппаН.Выбрать();
		
		Пока РезГруппаН.Следующий() Цикл
			
			Резсылка = РезГруппаН.Ссылка;
			Если ОбъектН.Товары.Найти(Резсылка, "Номенклатура") = Неопределено Тогда
				Строкасостава = ОбъектН.Товары.Добавить();
				Строкасостава.Номенклатура = Резсылка;
				Строкасостава.Комментарий = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В группе") + " " + ГруппаН;
			КонецЕсли;
			
		КонецЦикла;	// по результатам запроса ГруппаН
	КонецЕсли; // запрос ГруппаН 
	
	ЗначениеВДанныеФормы(ОбъектН, Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПоНГС(ГруппаН)
	
	ОбъектН = ДанныеФормыВЗначение(Объект, тип("СправочникОбъект.СертификатыГигиеническиеЗаключения"));
	
	ЗапросГруппаН = Новый Запрос;
	ЗапросГруппаН.Текст = "ВЫБРАТЬ
	                      |	Номенклатура.Ссылка
	                      |ИЗ
	                      |	Справочник.Номенклатура КАК Номенклатура
	                      |ГДЕ
	                      |	Номенклатура.ЭтоГруппа = ЛОЖЬ
	                      |	И Номенклатура.ПометкаУдаления = ЛОЖЬ
	                      |	И Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа";
	
	ЗапросГруппаН.УстановитьПараметр("НоменклатурнаяГруппа", ГруппаН);
	
	ВыборГруппаН = ЗапросГруппаН.Выполнить();
	Если НЕ ВыборГруппаН.Пустой() Тогда
		РезГруппаН = ВыборГруппаН.Выбрать();
		
		Пока РезГруппаН.Следующий() Цикл
			
			Резсылка = РезГруппаН.Ссылка;
			Если ОбъектН.Товары.Найти(Резсылка, "Номенклатура") = Неопределено Тогда
				Строкасостава = ОбъектН.Товары.Добавить();
				Строкасостава.Номенклатура = Резсылка;
				Строкасостава.Комментарий = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("В") + " " + ГруппаН;
			КонецЕсли;
			
		КонецЦикла;	// по результатам запроса ГруппаН
	КонецЕсли; // запрос ГруппаН 
	
	ЗначениеВДанныеФормы(ОбъектН, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоНоменклатурнойГруппе(Команда)
	
	Формавыборгруппы = ПолучитьФорму("Справочник.НоменклатурныеГруппы.ФормаВыбора");
	ГруппаН = формавыборгруппы.ОткрытьМодально();
	Если ЗначениеЗаполнено(ГруппаН) Тогда
		ПоНГС(ГруппаН);
	КонецЕсли;	                          
	
КонецПроцедуры

&НаСервере
Процедура ПоОПС(ГруппаН)
	
	ОбъектН = ДанныеФормыВЗначение(Объект, тип("СправочникОбъект.СертификатыГигиеническиеЗаключения"));
	
	ЗапросГруппаН = Новый Запрос;
	ЗапросГруппаН.Текст = "ВЫБРАТЬ
	                      |	Номенклатура.Ссылка
	                      |ИЗ
	                      |	Справочник.Номенклатура КАК Номенклатура
	                      |ГДЕ
	                      |	Номенклатура.ЭтоГруппа = ЛОЖЬ
	                      |	И Номенклатура.ПометкаУдаления = ЛОЖЬ
	                      |	И Номенклатура.Производитель = &Производитель";
	
	ЗапросГруппаН.УстановитьПараметр("Производитель", ГруппаН);
	
	ВыборГруппаН = ЗапросГруппаН.Выполнить();
	Если НЕ ВыборГруппаН.Пустой() Тогда
		РезГруппаН = ВыборГруппаН.Выбрать();
		
		Пока РезГруппаН.Следующий() Цикл
			
			Резсылка = РезГруппаН.Ссылка;
			Если ОбъектН.Товары.Найти(Резсылка, "Номенклатура") = Неопределено Тогда
				Строкасостава = ОбъектН.Товары.Добавить();
				Строкасостава.Номенклатура = Резсылка;
				Строкасостава.Комментарий = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("У поставщика") + ": " + ГруппаН;
			КонецЕсли;
			
		КонецЦикла;	// по результатам запроса ГруппаН
	КонецЕсли; // запрос ГруппаН 
	
	ЗначениеВДанныеФормы(ОбъектН, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоОсновномуПоставщику(Команда)
	
	Формавыборгруппы = ПолучитьФорму("Справочник.Производители.ФормаВыбора");
	ГруппаН = формавыборгруппы.ОткрытьМодально();
	Если ЗначениеЗаполнено(ГруппаН) Тогда
		ПоОПС(ГруппаН);
	КонецЕсли;	                          
	
КонецПроцедуры

&НаСервере
Процедура ПоПНС(ГруппаН)
	
	ОбъектН = ДанныеФормыВЗначение(Объект, тип("СправочникОбъект.СертификатыГигиеническиеЗаключения"));
	
	Для Каждого товар из ГруппаН.Товары цикл		
		
		Резсылка = товар.номенклатура;
		Если ОбъектН.Товары.Найти(Резсылка, "Номенклатура") = Неопределено Тогда
			Строкасостава = ОбъектН.Товары.Добавить();
			Строкасостава.Номенклатура = Резсылка;
			Строкасостава.Комментарий = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Из") + " " + ГруппаН;
		КонецЕсли;
		
	КонецЦикла;	// по результатам запроса ГруппаН
	
	ЗначениеВДанныеФормы(ОбъектН, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоПриходнойНакладной(Команда)
	
	Формавыборгруппы = ПолучитьФорму("Документ.ПоступленияТовара.ФормаВыбора");
	ГруппаН = формавыборгруппы.ОткрытьМодально();
	Если ЗначениеЗаполнено(ГруппаН) Тогда
		ПоПНС(ГруппаН);
	КонецЕсли;	                          
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
		
	Если ДопИнформацияИзменена Тогда
		ОбщийМодульСервисСервер.ЗаписатьДополнительнуюИнформацию(Объект.Ссылка, ДополнительнаяИнформация);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000360", ЭтаФорма, Отказ, Объект);
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ОбъектСсылка = Объект.Ссылка;
		
		ДопИнфоТипВладельца = ОбщийМодульПовтор.ПолучитьТипВладельца(ОбъектСсылка); 	
		ОбщийМодульСервисСервер.ЗаполнитьДополнительнуюИнформацию(ОбъектСсылка, ДополнительнаяИнформация, ДопИнфоТипВладельца);
		
		Если НЕ ЗначениеЗаполнено(ОбъектСсылка) Тогда
		
		Объект.Активен = ИСТИНА;
		Объект.ДатаРегистрации = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
		Объект.Зарегистрировал = ОбщийМодульПовтор.ПолучитьПараметрСеанса("ТекущийПользователь");
																	 КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ФормироватьНаименование()
	
	Если НЕ ОбщийМодульПовтор.ЭтоГруппа(Объект) тогда
		
		Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
			Префикс = Объект.ВидДокумента.ПрефиксКНомеру;
		Иначе
			префикс = "";
		КонецЕсли;
		
		Правильноеимя = СокрЛП(Префикс + " " + Объект.НомерДокумента + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("от") + " " + формат(Объект.ДатаВыдачи, "ДФ=dd.MM.yy"));
		Если НЕ Объект.Наименование = Правильноеимя Тогда
			Объект.Наименование = Правильноеимя;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ФормироватьНаименование();
