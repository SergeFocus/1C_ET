//sza140119-0154
//sza131018-1445

Процедура ПередЗаписью(Отказ)
	
	Отказ = ОбщийМодульСервер.ПроверитьУникальностьОКПО(Отказ, "Сотрудники", ЭтотОбъект.ОКПО, ЭтотОбъект.Ссылка);
	
	Если не отказ  
		И ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьШтрихКоды")
		и не Сокрлп(ОсновнойШтрихКод) = "" тогда
		
		РезультатОбработки = ОбщийМодульТоварСервер.ПолучитьНоменклатуруПоШтрихКоду(ОсновнойШтрихКод);
		
		Если ЗначениеЗаполнено(РезультатОбработки) Тогда
			ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка! Такой штрих-код найден (") + ОсновнойШтрихКод + "): " + РезультатОбработки.Номенклатура);
			Отказ = Истина;
			
		Иначе
			РезультатОбработки = ОбщийМодульСервер.ПолучитьСотрудникаПоШтрихКоду(ОсновнойШтрихКод);
			если ЗначениеЗаполнено(РезультатОбработки)
				И не РезультатОбработки = Ссылка Тогда
				
				ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Такой штрих код уже указан у сотрудника (") + ОсновнойШтрихКод + "): " + РезультатОбработки);
				Отказ = Истина;
			КонецЕсли;
			
		КонецЕсли;	
	КонецЕсли;	
	
	если не отказ
		и Модифицированность() тогда
		
		массивпустыхстрок = новый массив;
		для каждого СтрокаСоставаНабора из РасчетЗарплаты цикл
			Если НЕ ЗначениеЗаполнено(СтрокаСоставаНабора.ВидНачисления)
				и не ЗначениеЗаполнено(СтрокаСоставаНабора.Размер) Тогда
				массивпустыхстрок.Добавить(СтрокаСоставаНабора);
			КонецЕсли;                                    	
		КонецЦикла;
		для каждого СтрокаСоставаНабора из массивпустыхстрок цикл
			РасчетЗарплаты.Удалить(СтрокаСоставаНабора);	
		КонецЦикла;
		
		массивпустыхстрок = новый массив;
		для каждого СтрокаСоставаНабора из склады цикл
			Если НЕ ЗначениеЗаполнено(СтрокаСоставаНабора.Склад) Тогда
				массивпустыхстрок.Добавить(СтрокаСоставаНабора);
			КонецЕсли;                                    	
		КонецЦикла;
		для каждого СтрокаСоставаНабора из массивпустыхстрок цикл
			склады.Удалить(СтрокаСоставаНабора);	
		КонецЦикла;
		
		БылиИзменения = Ложь;
		Если НЕ ЗначениеЗаполнено(клиент) Тогда
			клиентОбъект = Справочники.Клиенты.СоздатьЭлемент() ;
			БылиИзменения = Истина;
		иначе
			клиентОбъект = клиент.ПолучитьОбъект();
		КонецЕсли;
		Если ЗначениеЗаполнено(адрес) 
			и не клиентОбъект.Адрес = адрес Тогда		
			БылиИзменения = Истина;
		КонецЕсли;		
		
		ВидЦен = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ВидЦенДляОтпускаТоваровСобственнымСотрудникам"); 
		Если ЗначениеЗаполнено(ВидЦен)
			и не клиентОбъект.ВидЦен = ВидЦен Тогда
			
			клиентОбъект.ВидЦен = ВидЦен;	
			БылиИзменения = Истина;
		КонецЕсли;
		Если ЗначениеЗаполнено(Комментарий) 
			и не клиентОбъект.Комментарий = Комментарий Тогда		
			
			клиентОбъект.Комментарий = Комментарий;
			БылиИзменения = Истина;
		КонецЕсли;
		
		РодительКлиент = Справочники.Клиенты.НайтиПоНаименованию(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Собственные Сотрудники")) ;
		
		Если НЕ ЗначениеЗаполнено(РодительКлиент) Тогда
			
			РодительКлиентОбъект = Справочники.Клиенты.СоздатьГруппу() ;
			РодительКлиентОбъект.Наименование 	= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Собственные Сотрудники");
			РодительКлиентОбъект.ВидЦен 		= ВидЦен;
			РодительКлиентОбъект.Записать();
			РодительКлиент = РодительКлиентОбъект.Ссылка;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РодительКлиент) 
			и РодительКлиент.ЭтоГруппа 
			и не клиентОбъект.Родитель = РодительКлиент Тогда
			
			клиентОбъект.Родитель = РодительКлиент;
			БылиИзменения = Истина;
		КонецЕсли;
		
		если не клиентОбъект.Наименование = Наименование тогда
			клиентОбъект.Наименование 			= Наименование;
			клиентОбъект.НаименованиеДляПечати 	= Наименование;    	
			БылиИзменения = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ОКПО) 
			и не клиентОбъект.ОКПО = ОКПО Тогда
			
			клиентОбъект.ОКПО = ОКПО;
			БылиИзменения = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Телефон) 
			и не клиентОбъект.Телефон = Телефон Тогда
			
			клиентОбъект.Телефон = Телефон;	
			БылиИзменения = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЭлектроннаяПочта) 
			и не клиентОбъект.ЭлектроннаяПочта = ЭлектроннаяПочта Тогда
			
			клиентОбъект.ЭлектроннаяПочта = ЭлектроннаяПочта;
			БылиИзменения = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаРождения) 
			и не клиентОбъект.ДатаРождения = ДатаРождения Тогда
			
			клиентОбъект.ДатаРождения = ДатаРождения;
			БылиИзменения = Истина;
		КонецЕсли;
		
		если не клиентОбъект.ЭтоСотрудник тогда
			клиентОбъект.ЭтоСотрудник = истина;   	
			БылиИзменения = Истина;
		КонецЕсли;
		
		если БылиИзменения тогда
			Попытка //Записи клиентОбъект
				
				клиентОбъект.Записать();
				клиент = клиентОбъект.Ссылка;
				
			Исключение //Записи клиентОбъект
				если ОбщийМодульПовторВТеченииСервера.ВыводитьСообщенияМожно() тогда
					//Сообщение = Новый СообщениеПользователю;
					//Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка при попытке записи связанного Клиента:") + " " + клиентОбъект + " " + ОписаниеОшибки();
					//Сообщение.Сообщить();                                               	
					ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка при попытке записи связанного Клиента:") + " " + клиентОбъект + " " + ОписаниеОшибки(), , Ссылка);
				КонецЕсли;
			КонецПопытки; //Записи клиентОбъект
			
		КонецЕсли;
		
		БылиИзменения = Ложь;
		Если НЕ ЗначениеЗаполнено(Поставщик) Тогда
			ПоставщикОбъект = Справочники.Поставщики.СоздатьЭлемент() ;
			БылиИзменения = Истина;
		иначе
			ПоставщикОбъект = Поставщик.ПолучитьОбъект();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(адрес) 
			и не ПоставщикОбъект.Адрес = адрес Тогда		
			
			БылиИзменения = Истина;
		КонецЕсли;		
		
		Если ЗначениеЗаполнено(ВидЦен)
			и не ПоставщикОбъект.ВидЦен = ВидЦен Тогда
			
			ПоставщикОбъект.ВидЦен = ВидЦен;	
			БылиИзменения = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Комментарий) 
			и не ПоставщикОбъект.Комментарий = Комментарий Тогда		
			
			ПоставщикОбъект.Комментарий = Комментарий;
			БылиИзменения = Истина;
		КонецЕсли;
		
		РодительПоставщик = Справочники.Поставщики.НайтиПоНаименованию(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Собственные Сотрудники")) ;
		
		Если НЕ ЗначениеЗаполнено(РодительПоставщик) Тогда
			
			РодительПоставщикОбъект = Справочники.Поставщики.СоздатьГруппу() ;
			РодительПоставщикОбъект.Наименование = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Собственные Сотрудники");
			РодительПоставщикОбъект.ВидЦен 		 = ВидЦен;
			РодительПоставщикОбъект.Записать();
			
			РодительПоставщик = РодительПоставщикОбъект.Ссылка;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РодительПоставщик) 
			и РодительПоставщик.ЭтоГруппа 
			и не ПоставщикОбъект.Родитель = РодительПоставщик Тогда
			
			ПоставщикОбъект.Родитель = РодительПоставщик;
			БылиИзменения = Истина;
		КонецЕсли;
		
		если не ПоставщикОбъект.Наименование = Наименование тогда
			ПоставщикОбъект.Наименование = Наименование;
			ПоставщикОбъект.НаименованиеДляПечати = Наименование;    	
			БылиИзменения = Истина;
		КонецЕсли;
		Если ЗначениеЗаполнено(ОКПО) 
			и не ПоставщикОбъект.ОКПО = ОКПО Тогда
			
			ПоставщикОбъект.ОКПО = ОКПО;
			БылиИзменения = Истина;
		КонецЕсли;
		Если ЗначениеЗаполнено(Телефон) 
			и не ПоставщикОбъект.Телефон = Телефон Тогда
			ПоставщикОбъект.Телефон = Телефон;	
			БылиИзменения = Истина;
		КонецЕсли;
		Если ЗначениеЗаполнено(ЭлектроннаяПочта) 
			и не ПоставщикОбъект.ЭлектроннаяПочта = ЭлектроннаяПочта Тогда
			
			ПоставщикОбъект.ЭлектроннаяПочта = ЭлектроннаяПочта;
			БылиИзменения = Истина;
		КонецЕсли;
		
		если не ПоставщикОбъект.ЭтоСотрудник тогда
			ПоставщикОбъект.ЭтоСотрудник = истина;   	
			БылиИзменения = Истина;
		КонецЕсли;
		
		если БылиИзменения тогда
			Попытка
				
				ПоставщикОбъект.Записать();
				Поставщик = ПоставщикОбъект.Ссылка;
				
			Исключение 
				если ОбщийМодульПовторВТеченииСервера.ВыводитьСообщенияМожно() тогда
					//Сообщение = Новый СообщениеПользователю;
					//Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка при попытке записи связанного Поставщика:") + " " + ПоставщикОбъект + " " + ОписаниеОшибки();
					//Сообщение.Сообщить();                                               	
					ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка при попытке записи связанного Поставщика:") + " " + ПоставщикОбъект + " " + ОписаниеОшибки(), , Ссылка);
				КонецЕсли;
			КонецПопытки;
			
		КонецЕсли; 	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ЭтотОбъект.комментарий = "";
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Склады") Тогда
		// Заполнение шапки
		Комментарий = ДанныеЗаполнения.Комментарий;
		Наименование = ДанныеЗаполнения.Наименование;
		ХранилищеДенег = ДанныеЗаполнения.ХранилищеДенег;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ХранилищаДенег") Тогда
		// Заполнение шапки
		Комментарий = ДанныеЗаполнения.Комментарий;
		Наименование = ДанныеЗаполнения.Наименование;
		ХранилищеДенег = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры
