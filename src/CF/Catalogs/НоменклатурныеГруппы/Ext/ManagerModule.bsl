// sza150619-0101 
// sza140104-0213 : 
// sza131214-0129 : 
Процедура НаПечать(ТабДок, Ссылка) Экспорт
	
	ТабДок.ИмяПараметровПечати  = "НоменклатурнаяГруппа" + СокрЛП(ИмяКомпьютера());
	ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	
	ТабДок.Очистить();
	
	СсылкаНаОбъектПечати = Ссылка[0];
	
	РазрядМетаданных = ""; ИмяМетаданных = "";
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ТабДок = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ТабДок, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		
	Иначе		
		Макет = Справочники.НоменклатурныеГруппы.ПолучитьМакет("НаПечать");
		Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ НоменклатурныеГруппы.Ссылка,
		               |	НоменклатурныеГруппы.ВерсияДанных,
		               |	НоменклатурныеГруппы.ПометкаУдаления,
		               |	НоменклатурныеГруппы.Предопределенный,
		               |	НоменклатурныеГруппы.Код,
		               |	НоменклатурныеГруппы.Наименование,
		               |	НоменклатурныеГруппы.ФормулаАвтоНаименованияНоменклатурыДаннойГруппы,
		               |	НоменклатурныеГруппы.СвязатьОдноименнуюГруппуНоменклатуры,
		               |	НоменклатурныеГруппы.НоменклатураЭтойГруппыССерийнымУчетом,
		               |	НоменклатурныеГруппы.ОбщееНаименованиеЕдиницыИзмерения,
		               |	НоменклатурныеГруппы.ЗапретитьАвтоматическийПересчетЦен,
		               |	НоменклатурныеГруппы.АртикулДолженБытьУникальным,
		               |	НоменклатурныеГруппы.ПроизвольнаяПечатнаяФормаЭтикетки,
		               |	НоменклатурныеГруппы.ФормулаФормированияАртикула,
		               |	НоменклатурныеГруппы.КоэффициентНакопленияНаВаучер,
		               |	НоменклатурныеГруппы.ФормулаФормированияПолногоНаименованияНоменклатуры,
		               |	НоменклатурныеГруппы.Комментарий,
		               |	НоменклатурныеГруппы.Ответственный,
		               |	НоменклатурныеГруппы.ДатаСоздания,
		               |	НоменклатурныеГруппы.ДатаРедакции,
		               |	НоменклатурныеГруппы.НаправлениеДеятельности,
		               |	НоменклатурныеГруппы.РеквизитыНоменклатуры.(
		               |		Ссылка,
		               |		НомерСтроки,
		               |		ДополнительныйРеквизит,
		               |		ЗначениеПоУмолчанию,
		               |		ОСтроке
		               |	)
		               |ИЗ Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
		               |ГДЕ НоменклатурныеГруппы.Ссылка В(&Ссылка)";
		
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		Шапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьРеквизитыНоменклатурыШапка = Макет.ПолучитьОбласть("РеквизитыНоменклатурыШапка");
		ОбластьРеквизитыНоменклатуры = Макет.ПолучитьОбласть("РеквизитыНоменклатуры");
		Подвал = Макет.ПолучитьОбласть("Подвал");
		
		ВставлятьРазделительСтраниц = ЛОЖЬ;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьЗаголовок);
			ТабДок.Вывести(ОбластьЗаголовок);
			
			Шапка.Параметры.Заполнить(Выборка);
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			
			ВыборкаРеквизитыНоменклатуры = Выборка.РеквизитыНоменклатуры.Выбрать();
			ЕСЛИ НЕ ВыборкаРеквизитыНоменклатуры.Количество() = 0 Тогда
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРеквизитыНоменклатурыШапка);
				ТабДок.Вывести(ОбластьРеквизитыНоменклатурыШапка);
				
				Пока ВыборкаРеквизитыНоменклатуры.Следующий() Цикл
					ОбластьРеквизитыНоменклатуры.Параметры.Заполнить(ВыборкаРеквизитыНоменклатуры);
					ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(ОбластьРеквизитыНоменклатуры);
					ТабДок.Вывести(ОбластьРеквизитыНоменклатуры, ВыборкаРеквизитыНоменклатуры.Уровень());
				КонецЦикла;	
			КонецЕсли;
			
			Подвал.Параметры.Заполнить(Выборка);
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
			ТабДок.Вывести(Подвал);
			
			ВставлятьРазделительСтраниц = ИСТИНА;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ОбщийМодульПовтор.ВывестиНаименованияНаДругомЯзыке() Тогда
		
		ВозможноеПредставление = ОбщийМодульПовтор.ПолучитьПредставлениеНаЯзыке(Данные.Ссылка, , ИСТИНА);
		Если НЕ ВозможноеПредставление = Неопределено Тогда
			Представление = ВозможноеПредставление;
			СтандартнаяОбработка = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
