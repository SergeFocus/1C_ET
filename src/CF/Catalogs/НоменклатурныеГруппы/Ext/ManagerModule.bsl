//sza140104-0213 : 
//sza131214-0129 : 
Процедура НаПечать(ТабДок, Ссылка) Экспорт
	
	Макет = Справочники.НоменклатурныеГруппы.ПолучитьМакет("НаПечать");
	Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ НоменклатурныеГруппы.ДатаРедакции,
	|	НоменклатурныеГруппы.ДатаСоздания,
	|	НоменклатурныеГруппы.Код,
	|	НоменклатурныеГруппы.Комментарий,
	|	НоменклатурныеГруппы.Наименование,
	|	НоменклатурныеГруппы.НоменклатураЭтойГруппыССерийнымУчетом,
	|	НоменклатурныеГруппы.Ответственный,
	|	НоменклатурныеГруппы.СвязатьОдноименнуюГруппуНоменклатуры,
	|	НоменклатурныеГруппы.ФормулаАвтоНаименованияНоменклатурыДаннойГруппы,
	|	НоменклатурныеГруппы.РеквитыНоменклатуры.(
	|		НомерСтроки,
	|		ДополнительныйРеквизит,
	|		ЗначениеПоУмолчанию,
	|		ОСтроке ),
	|	НоменклатурныеГруппы.ОбщееНаименованиеЕдиницыИзмерения
	|ИЗ Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
	|ГДЕ НоменклатурныеГруппы.Ссылка В(&Ссылка)";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьРеквитыНоменклатурыШапка = Макет.ПолучитьОбласть("РеквитыНоменклатурыШапка");
	ОбластьРеквитыНоменклатуры = Макет.ПолучитьОбласть("РеквитыНоменклатуры");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = ЛОЖЬ;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ТабДок.Вывести(ОбластьРеквитыНоменклатурыШапка);
		ВыборкаРеквитыНоменклатуры = Выборка.РеквитыНоменклатуры.Выбрать();
		Пока ВыборкаРеквитыНоменклатуры.Следующий() Цикл
			ОбластьРеквитыНоменклатуры.Параметры.Заполнить(ВыборкаРеквитыНоменклатуры);
			ТабДок.Вывести(ОбластьРеквитыНоменклатуры, ВыборкаРеквитыНоменклатуры.Уровень());
		КонецЦикла;

		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);

		ВставлятьРазделительСтраниц = ИСТИНА;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ОбщийМодульПовтор.ВывестиНаименованияНаДругомЯзыке() Тогда
		
		ВозможноеПредставление = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Данные.ссылка, , ИСТИНА);
		Если НЕ ВозможноеПредставление = Неопределено Тогда
			Представление = ВозможноеПредставление;
			СтандартнаяОбработка = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
