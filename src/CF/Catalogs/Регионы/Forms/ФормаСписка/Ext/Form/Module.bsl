// sza151108-1553 
// sza140719-1009
// sza140710-1201  локация
// sza131005-0203 : 
&НаКлиенте
Перем ПропуститьИнициализацию;

&НаКлиенте
Процедура ПриЗакрытии()               // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)          // ПРИ ОТКРЫТИИ
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	ПодключитьОбработчикОжидания("ПослеИзображенияОкнаФормы", 0.3, ИСТИНА);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзображенияОкнаФормы() // Когда окно уже нарисовано пользователю
	ЭтаФорма.Элементы.ФормаЗакрыть.Видимость = НЕ ЭтаФорма.Окно = Неопределено;	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
	ВестиУчетЛокацииКонтрагентов = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетЛокацииКонтрагентов");
	
	ОбщийМодульСервер.ОбеспечитьСписокОтборов(Список);
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьРегионыДляУчетаСтранАЛокацииГородов") Тогда
		ЭтаФорма.Заголовок 						= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Список Стран");
		Элементы.ФормаСоздать.Заголовок 		= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Добавить Страну");
		Элементы.ДеревоНаименование.Заголовок 	= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Группы Стран");
		Элементы.Наименование.Заголовок 		= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Наименование Стран");
		Элементы.ЛокацииНаименование.Заголовок  = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Города Страны");
		Элементы.ЛокацииСоздать.Заголовок 		= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Добавить город");
	КонецЕсли;
	
	ТекущийВладелец = Неопределено;
	Локации.Параметры.УстановитьЗначениеПараметра("Владелец", ТекущийВладелец);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если ВестиУчетЛокацииКонтрагентов Тогда
		ОбновитьСписокЛокацийРегиона();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокЛокацийРегиона()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если НЕ ПропуститьИнициализацию Тогда
		Если НЕ ТекущиеДанные = Неопределено Тогда
			
			Если НЕ ТекущийВладелец = ТекущиеДанные Тогда
				
				Локации.Параметры.УстановитьЗначениеПараметра("Владелец", ТекущиеДанные.Ссылка);
				//Элементы.Локации.Обновить();
				Если НЕ Элементы.Локации.Видимость Тогда
					Элементы.Локации.Видимость = ИСТИНА;	
				КонецЕсли;
				ТекущийВладелец = ТекущиеДанные;	
			КонецЕсли;
			
		ИначеЕсли Элементы.Локации.Видимость Тогда
			Элементы.Локации.Видимость = ЛОЖЬ;
			ПропуститьИнициализацию = ИСТИНА;
		КонецЕсли;
		
	Иначе
		ПропуститьИнициализацию = ЛОЖЬ;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВестиУчетЛокацииКонтрагентов Тогда
		ОбновитьСписокЛокацийРегиона();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Если ВестиУчетЛокацииКонтрагентов Тогда
		ОбновитьСписокЛокацийРегиона();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("УстановитьОтборПоИерархииОбработчикОжидания", 0.2, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоИерархииОбработчикОжидания()
	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено Тогда
		ТекущиеДанныеНавигации = Элементы.Дерево.ТекущиеДанные.Ссылка;
		Если НЕ ТекущийРодитель = ТекущиеДанныеНавигации Тогда
			
			ТекущийРодитель = ТекущиеДанныеНавигации;
			
			ЗначениеОтбора = ?(ТекущиеДанныеНавигации <> Неопределено, ТекущиеДанныеНавигации, ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
			ОбщийМодульКлиент.УстановитьЭлементОтбора(
			Список.Отбор,
			"Родитель",
			ЗначениеОтбора,
			ВидСравненияКомпоновкиДанных.Равно,
			,
			ИСТИНА
			);
			
			Если ТекущиеДанныеНавигации <> Неопределено Тогда
				Элементы.Наименование.Заголовок = СокрЛП(значениеотбора);
			Иначе
				Элементы.Наименование.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Наименование");
			КонецЕсли;	
		КонецЕсли;   	
	КонецЕсли;
	
КонецПроцедуры

ПропуститьИнициализацию = ЛОЖЬ;
