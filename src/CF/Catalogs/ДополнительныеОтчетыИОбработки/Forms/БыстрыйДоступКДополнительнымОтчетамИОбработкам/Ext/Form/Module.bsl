// sza151011-0006
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ВсеПользователи

&НаКлиенте
Процедура ВсеПользователиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)

	Если ТипЗнч(ПараметрыПеретаскивания.Значение[0]) = Тип("Число") Тогда
		Возврат;
	КонецЕсли;

	ПеренестиПользователей(ВсеПользователи, ПользователиКороткогоСписка, ПараметрыПеретаскивания.Значение);

КонецПроцедуры

&НаКлиенте
Процедура ВсеПользователиПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
&НаСервере
Процедура ЗаполнитьТаблицуПользователейСКороткимСписком()

	МассивПользователей = ПользователиКороткогоСписка.Выгрузить().ВыгрузитьКолонку("Пользователь");
	ТекстЗапроса = "ВЫБРАТЬ ИСТИНА КАК Используется,
					|	Ссылка	КАК Пользователь
					|ИЗ Справочник.Пользователи
					|ГДЕ НЕ ПометкаУдаления
					|	И НЕ Ссылка В (&МассивПользователей)";

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.Параметры.Вставить("МассивПользователей", МассивПользователей);

	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(), "ВсеПользователи");
	ВсеПользователи.Сортировать("Пользователь Возр");
	ПользователиКороткогоСписка.Сортировать("Пользователь Возр");

КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)

	Результат = Новый СписокЗначений;

	Для Каждого ЭлементКоллекции Из ПользователиКороткогоСписка Цикл
		Результат.Добавить(ЭлементКоллекции.Пользователь);
	КонецЦикла;

	Закрыть(Результат);

КонецПроцедуры

&НаКлиенте
Процедура ПеренестиПользователей(Приемник, Источник, МассивПеретаскиваемыхЭлементов)

	Для Каждого ПеретаскиваемыйЭлемент Из МассивПеретаскиваемыхЭлементов Цикл
		НовыйПользователь = Приемник.Добавить();
		НовыйПользователь.Пользователь = ПеретаскиваемыйЭлемент.Пользователь;
		Источник.Удалить(ПеретаскиваемыйЭлемент);

	КонецЦикла;

	Приемник.Сортировать("Пользователь Возр");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ПользователиКороткогоСписка
&НаКлиенте
Процедура ПользователиКороткогоСпискаПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)

	Если ТипЗнч(ПараметрыПеретаскивания.Значение[0]) = Тип("Число") Тогда
		Возврат;
	КонецЕсли;

	ПеренестиПользователей(ПользователиКороткогоСписка, ВсеПользователи, ПараметрыПеретаскивания.Значение);

КонецПроцедуры

&НаКлиенте
Процедура ПользователиКороткогоСпискаПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)

	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Быстрый доступ к команде") + " " + Параметры.ПредставлениеКоманды;

	Для Каждого ПользовательСтрока Из Параметры.ПользователиСБыстрымДоступом Цикл
		НоваяСтрока = ПользователиКороткогоСписка.Добавить();
		НоваяСтрока.Пользователь = ПользовательСтрока.Значение;
	КонецЦикла;

	ЗаполнитьТаблицуПользователейСКороткимСписком();

	ОбщийМодульСервисСервер.ОбработатьНовуюФорму(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы) Экспорт // Для реакции на события для запрограммированных элементов
	ОбщийМодульКлиент.РеакцияНаПрочиеСобытияФормы(КомандаСобытияФормы, ЭтаФорма);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
&НаКлиенте
Процедура УбратьДоступККомандеУВсехПользователей(Команда)

	МассивПеретаскиваемыхЭлементов = Новый Массив;

	Для Каждого ОписаниеСтроки Из ПользователиКороткогоСписка Цикл
		МассивПеретаскиваемыхЭлементов.Добавить(ОписаниеСтроки);
	КонецЦикла;

	ПеренестиПользователей(ВсеПользователи, ПользователиКороткогоСписка, МассивПеретаскиваемыхЭлементов);

КонецПроцедуры

&НаКлиенте
Процедура УбратьДоступККомандеУВыделенныхПользователей(Команда)

	МассивПеретаскиваемыхЭлементов = Новый Массив;

	Для Каждого ВыделеннаяСтрока Из Элементы.ПользователиКороткогоСписка.ВыделенныеСтроки Цикл
		МассивПеретаскиваемыхЭлементов.Добавить(Элементы.ПользователиКороткогоСписка.ДанныеСтроки(ВыделеннаяСтрока));
	КонецЦикла;

	ПеренестиПользователей(ВсеПользователи, ПользователиКороткогоСписка, МассивПеретаскиваемыхЭлементов);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступДляВсехПользователей(Команда)

	МассивПеретаскиваемыхЭлементов = Новый Массив;

	Для Каждого ОписаниеСтроки Из ВсеПользователи Цикл
		МассивПеретаскиваемыхЭлементов.Добавить(ОписаниеСтроки);
	КонецЦикла;

	ПеренестиПользователей(ПользователиКороткогоСписка, ВсеПользователи, МассивПеретаскиваемыхЭлементов);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьКомандуДляВыделенныхПользователей(Команда)

	МассивПеретаскиваемыхЭлементов = Новый Массив;

	Для Каждого ВыделеннаяСтрока Из Элементы.ВсеПользователи.ВыделенныеСтроки Цикл
		МассивПеретаскиваемыхЭлементов.Добавить(Элементы.ВсеПользователи.ДанныеСтроки(ВыделеннаяСтрока));
	КонецЦикла;

	ПеренестиПользователей(ПользователиКороткогоСписка, ВсеПользователи, МассивПеретаскиваемыхЭлементов);

КонецПроцедуры
