//sza140420-0414 SZA: 
//sza131129-2146 SZA: 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Объект.Ссылка, Истина);
	ВидимостьТаблицСправа();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Объект.Ссылка, Истина);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000950", ЭтаФорма, Отказ, Объект);
	
	Если НЕ Отказ Тогда
		
		ОбъектСсылка = Объект.Ссылка;
		
		Если НЕ ЗначениеЗаполнено(ОбъектСсылка) Тогда
			Если НЕ ЗначениеЗаполнено(Объект.Валюта) Тогда	
				Объект.Валюта = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
			КонецЕсли;
			
			Элементы.ДвижениеДенег.Видимость = Ложь;
			
		ИначеЕсли НЕ Объект.Предопределенный Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 Деньги.Период
			|ИЗ РегистрНакопления.Деньги КАК Деньги
			|ГДЕ Деньги.ХранилищеДенег = &ХранилищеДенег";
			
			Запрос.УстановитьПараметр("ХранилищеДенег", ОбъектСсылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			если не РезультатЗапроса.Пустой() тогда
				элементы.ФормаОплаты.ТолькоПросмотр = Истина;
				элементы.Валюта.ТолькоПросмотр 		= Истина;
				Элементы.ХранилищеУжеИспользуетсяИИзмененияНеДоступны.Видимость = Истина;
			конецесли;
			
		Иначе
			элементы.ФормаОплаты.ТолькоПросмотр = Истина;
			элементы.Валюта.ТолькоПросмотр 		= Истина;
			элементы.ХранилищеУжеИспользуетсяИИзмененияНеДоступны1.Видимость = Истина;
		КонецЕсли;
		
		ДвижениеДенег.Параметры.УстановитьЗначениеПараметра("ХранилищеДенег", ОбъектСсылка);
		
		Элементы.БезналичныеРеквизиты.Видимость = НЕ Объект.ФормаОплаты = ПредопределенноеЗначение("Перечисление.ФормыОплаты.Наличные");
		
		ДопИнфоТипВладельца = ОбщийМодульПовтор.ПолучитьТипВладельца(ОбъектСсылка); 	
		ОбщийМодульСервисСервер.ЗаполнитьДополнительнуюИнформацию(ОбъектСсылка, ДополнительнаяИнформация, ДопИнфоТипВладельца);				
		
		ПоддержкаДругихЯзыков = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПоддерживатьИныеЯзыкиКромеРусского") 
		И ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПоддерживатьНаименованияНаДругихЯзыкахКромеРусского", Истина);
		
		Если ПоддержкаДругихЯзыков 
			и ЗначениеЗаполнено(ОбъектСсылка) тогда
			
			Наименование = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(объектСсылка);
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ЗначенияНаДругихЯзыках.Язык,
			|	ЗначенияНаДругихЯзыках.НаЯзыке,
			|	ЗначенияНаДругихЯзыках.Поле
			|ИЗ РегистрСведений.ЗначенияНаДругихЯзыках КАК ЗначенияНаДругихЯзыках
			|ГДЕ ЗначенияНаДругихЯзыках.ОбъектБазыДанных = &ОбъектБазыДанных";
			
			Запрос.УстановитьПараметр("ОбъектБазыДанных", ОбъектСсылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			если не РезультатЗапроса.Пустой() тогда
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Если ВыборкаДетальныеЗаписи.Поле = "Наименование" Тогда
						СтрокаЯзыка = НаименованияНаДругихЯзыках.Добавить();
						СтрокаЯзыка.Язык 	= ВыборкаДетальныеЗаписи.Язык;
						СтрокаЯзыка.НаЯзыке = ВыборкаДетальныеЗаписи.НаЯзыке;	
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		иначе
			Наименование = объект.Наименование;
			
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	объект.Наименование = Наименование;
	НаименованиеИзменяли = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНаДругихЯзыках(Команда)
	Элементы.НаименованияНаДругихЯзыках.Видимость  = НЕ Элементы.НаименованияНаДругихЯзыках.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахНаЯзыкеПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = Истина;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	если ПоддержкаДругихЯзыков тогда
		если НаименованиеИзменяли тогда
			ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, Наименование);
		КонецЕсли;
		
		Если БылиИзмененияЗначенияПолейНаЯзыках Тогда
			Для Каждого СтрокаЯзыка Из НаименованияНаДругихЯзыках Цикл
				ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, СтрокаЯзыка.НаЯзыке, "Наименование", СтрокаЯзыка.Язык);	
			КонецЦикла;
			ОбновитьПовторноИспользуемыеЗначения();
		КонецЕсли;
		
	конецесли;
	
	Если ДопИнформацияИзменена Тогда
		ОбщийМодульСервисСервер.ЗаписатьДополнительнуюИнформацию(Объект.Ссылка, ДополнительнаяИнформация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранилищеПополненияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ХранилищеПополнения)
		и Объект.ХранилищеПополнения = Объект.Ссылка Тогда
		
		Объект.ХранилищеПополнения = ПредопределенноеЗначение("Справочник.ХранилищаДенег.ПустаяСсылка");
	КонецЕсли;
	
	ПроверитьВалютуХранилищаПополнения();
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаОплатыПриИзменении(Элемент)
	Элементы.БезналичныеРеквизиты.Видимость = НЕ Объект.ФормаОплаты = ПредопределенноеЗначение("Перечисление.ФормыОплаты.Наличные");
КонецПроцедуры

&НаСервере
процедура ПроверитьВалютуХранилищаПополнения()
	
	Если ЗначениеЗаполнено(Объект.ХранилищеПополнения) тогда
		Если не ЗначениеЗаполнено(объект.Валюта) Тогда
			
			Объект.Валюта = Объект.ХранилищеПополнения.Валюта;
			
		ИначеЕсли не Объект.Валюта = Объект.ХранилищеПополнения.Валюта тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Валюта хранилища пополнения должны быть той же!");
			Сообщение.Поле = "ХранилищеПополнения";
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			
			Объект.ХранилищеПополнения = Справочники.ХранилищаДенег.ПустаяСсылка();
			
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СменитьВидОкна(Команда)
	
	НеПоказыватьТаблицыСправа = НЕ НеПоказыватьТаблицыСправа;
	ВидимостьТаблицСправа();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьТаблицСправа()
	Элементы.ГруппаСправа.Видимость = НЕ НеПоказыватьТаблицыСправа;
КонецПроцедуры

&НаКлиенте
Процедура СвязанныеИзображения(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) 
		и Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сначала следует записать этот элемент. Записать?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		
		Записать();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("СвязанныйОбъект", Объект.Ссылка);
		ОткрытьФорму("Справочник.Изображения.ФормаСписка", ПараметрыФормы);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	Если НЕ ЗначениеЗаполнено(объект.Ссылка) 
		и Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сначала следует записать этот элемент. Записать?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		
		Записать();			
	КонецЕсли;
	
	Если ЗначениеЗаполнено(объект.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("СвязанныйОбъект", объект.Ссылка);
		формаИзображения = ПолучитьФорму("Справочник.Изображения.ФормаОбъекта", ПараметрыФормы);	
		формаИзображения.Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияПриИзменении(Элемент)
	ДопИнформацияИзменена = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияВидИнформацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура("ТипВладельца", ДопИнфоТипВладельца);
	ФормаВыбораВидаИнформации = ПолучитьФорму("Справочник.ДополнительныеРеквизиты.ФормаВыбора", ПараметрыФормы, ЭтаФорма);	
	ВидИнформации = ФормаВыбораВидаИнформации.ОткрытьМодально();
	Если ЗначениеЗаполнено(ВидИнформации) Тогда
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.ВидИнформации = ВидИнформации;
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.Информация = ОбщийМодульКлиент.ПолучитьЗначениеПоУмолчаниюПоляДополнительнойИнформации(ВидИнформации);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

