//sza140924-1157
//sza140601-2055  
//sza130915-1735 : 
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Клиенты") Тогда
		// Заполнение шапки
		Адрес 				= ДанныеЗаполнения.Адрес;
		ВидЦен 				= ДанныеЗаполнения.ВидЦен;
		Комментарий 		= ДанныеЗаполнения.Комментарий;
		МФО 				= ДанныеЗаполнения.МФО;
		Наименование 		= ДанныеЗаполнения.Наименование;
		НаименованиеБанка 	= ДанныеЗаполнения.НаименованиеБанка;
		НаименованиеДляПечати = ДанныеЗаполнения.НаименованиеДляПечати;
		НомерСчета 			= ДанныеЗаполнения.НомерСчета;
		ОКПО 				= ДанныеЗаполнения.ОКПО;
		ОсновнаяВалюта 		= ДанныеЗаполнения.ОсновнаяВалюта;
		ПравовойСтатус 		= ДанныеЗаполнения.ПравовойСтатус;
		Регион 				= ДанныеЗаполнения.Регион;
		Склад 				= ДанныеЗаполнения.Склад;
		Телефон 			= ДанныеЗаполнения.Телефон;
		Телефон2 			= ДанныеЗаполнения.Телефон2;
		Телефон3 			= ДанныеЗаполнения.Телефон3;
		Телефон4 			= ДанныеЗаполнения.Телефон4;
		Телефон5 			= ДанныеЗаполнения.Телефон5;
		ХранилищеДенег 		= ДанныеЗаполнения.ХранилищеДенег;
		ЭлектроннаяПочта 	= ДанныеЗаполнения.ЭлектроннаяПочта;
		ЭтоСотрудник 		= ДанныеЗаполнения.ЭтоСотрудник;
		ИНН 				= ДанныеЗаполнения.ИНН;
		ЯзыкОбщения 		= ДанныеЗаполнения.ЯзыкОбщения;
		ЯзыкДокументов  	= ДанныеЗаполнения.ЯзыкДокументов;
		Локация         	= ДанныеЗаполнения.Локация;
		КорреспондентскийСчет = ДанныеЗаполнения.КорреспондентскийСчет;
		СпособДоставки		= ДанныеЗаполнения.СпособДоставки;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Производители") Тогда
		// Заполнение шапки
		Адрес 				= ДанныеЗаполнения.Адрес;
		Комментарий 		= ДанныеЗаполнения.Комментарий;
		Наименование 		= ДанныеЗаполнения.Наименование;
		Регион 				= ДанныеЗаполнения.Регион;
		Производитель 		= ДанныеЗаполнения.Ссылка;
		Телефон 			= ДанныеЗаполнения.Телефон;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		// Заполнение шапки
		Адрес				= ДанныеЗаполнения.Адрес;
		Комментарий 		= ДанныеЗаполнения.Комментарий;
		Наименование 		= ДанныеЗаполнения.Наименование;
		ОКПО 				= ДанныеЗаполнения.ОКПО;
		ИНН 				= ДанныеЗаполнения.ИНН;
		Телефон 			= ДанныеЗаполнения.Телефон;
		Телефон2 			= ДанныеЗаполнения.Телефон2;
		Телефон3 			= ДанныеЗаполнения.Телефон3;
		Телефон4 			= ДанныеЗаполнения.Телефон4;
		Телефон5 			= ДанныеЗаполнения.Телефон5;
		ХранилищеДенег 		= ДанныеЗаполнения.ХранилищеДенег;
		ЭлектроннаяПочта 	= ДанныеЗаполнения.ЭлектроннаяПочта;
		ЭтоСотрудник 		= ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если НЕ Отказ 
		И НЕ ПометкаУдаления Тогда
		
		Если НЕ ЭтоГруппа 
			И Модифицированность() Тогда
			
			Если НЕ ЗначениеЗаполнено(НаименованиеДляПечати) Тогда
				НаименованиеДляПечати = Наименование;	
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Родитель) 
				И ЗначениеЗаполнено(Родитель.ВидЦен)
				И (не ЗначениеЗаполнено(ВидЦен) или ВидЦен <> Родитель.ВидЦен) Тогда
				
				ВидЦен = Родитель.ВидЦен;
			КонецЕсли;
			
			Отказ = ОбщийМодульСервер.ПроверитьУникальностьОКПО(Отказ, "Поставщики", ОКПО, Ссылка);		
			
			Отказ = ОбщийМодульСервер.ПроверитьУникальностьНаименование(Отказ, "Поставщики", Наименование, Ссылка);
			
			Отказ = ОбщийМодульСервер.ПроверитьУникальностьНомераТелефона(Отказ, "Поставщики", Телефон, Ссылка);
			Если НЕ ПустаяСтрока(Телефон2) Тогда
				Отказ = ОбщийМодульСервер.ПроверитьУникальностьНомераТелефона(Отказ, "Поставщики", Телефон2, Ссылка);
			КонецЕсли;			
			Если НЕ ПустаяСтрока(Телефон3) Тогда
				Отказ = ОбщийМодульСервер.ПроверитьУникальностьНомераТелефона(Отказ, "Поставщики", Телефон3, Ссылка);
			КонецЕсли;			
			Если НЕ ПустаяСтрока(Телефон4) Тогда
				Отказ = ОбщийМодульСервер.ПроверитьУникальностьНомераТелефона(Отказ, "Поставщики", Телефон4, Ссылка);
			КонецЕсли;			
			Если НЕ ПустаяСтрока(Телефон5) Тогда
				Отказ = ОбщийМодульСервер.ПроверитьУникальностьНомераТелефона(Отказ, "Поставщики", Телефон5, Ссылка);
			КонецЕсли;			
			
		ИначеЕсли Модифицированность() Тогда
			
			Если НЕ Отказ 
				И ЗначениеЗаполнено(Ссылка)
				И ЗначениеЗаполнено(ВидЦен) Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ Поставщики.Ссылка
				|ИЗ Справочник.Поставщики КАК Поставщики
				|ГДЕ Поставщики.Родитель = &Родитель И Поставщики.ВидЦен <> &ВидЦен";
				
				Запрос.УстановитьПараметр("Родитель", Ссылка);
				Запрос.УстановитьПараметр("ВидЦен", ВидЦен);  			
				
				РезультатЗапроса = Запрос.Выполнить();
				Если НЕ РезультатЗапроса.Пустой() Тогда
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					Счетчик  = 0;
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						ПоставщикОбъект = ВыборкаДетальныеЗаписи.ссылка.ПолучитьОбъект();
						ПоставщикОбъект.ВидЦен = ВидЦен;
						ПоставщикОбъект.Записать();
						Счетчик = Счетчик  + 1;
					КонецЦикла;
					
					Если НЕ Счетчик =0 Тогда
						Если ОбщийМодульПовторВТеченииСервера.ВыводитьСообщенияМожно() Тогда
							ОбщийМодульСервисСервер.ДобавитьСообщениеПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вид цен установлен для") + " " + Счетчик + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Поставщиков этой группы."), , ссылка);
						КонецЕсли;
						
					КонецЕсли;	
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		Если НЕ отказ
			И ЗначениеЗаполнено(Ссылка)
			И Модифицированность() Тогда
			
			ОбновитьПовторноИспользуемыеЗначения(); //ненаименования на языках, прочее
			
			ОбщийМодульСервер.ПроверитьСменуНаименованияНаТекущемЯзыке(Наименование, Ссылка, , Отказ);
			ОбщийМодульСервер.ПроверитьСменуНаименованияНаТекущемЯзыке(НаименованиеДляПечати, Ссылка, "НаименованиеДляПечати", Отказ);	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	комментарий = "";
	НаименованиеДляПечати = "";
КонецПроцедуры
