//sza140104-0215 : 
//sza131021-0148 : 

Процедура Печать(ТабДок, Ссылка) Экспорт
	
	ЭлементСправочника = ссылка[0];
	
	ТабДок.Очистить();
	
	ТабДок.Начатьавтогруппировкустрок();
	
	Макет = Справочники.Поставщики.ПолучитьМакет("Печать");
	Шапка = Макет.ПолучитьОбласть("Ш");
	Шапка.параметры.заполнить(ЭлементСправочника);
	
	СтруктураДополнительныПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
	Шапка.Параметры.ТекстВШапкеДокументовПриПечати   = СтруктураДополнительныПараметровМакета.ТекстВШапкеДокументовПриПечати;
	
	Если НЕ ЗначениеЗаполнено(ЭлементСправочника.НаименованиеДляПечати) Тогда
		Шапка.Параметры.НаименованиеДляПечати = ЭлементСправочника.наименование;
	КонецЕсли;                      		
	
	ТабДок.Вывести(Шапка);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыСПоставщиками.Период КАК ДАТА,
	|	РасчетыСПоставщиками.Регистратор,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщиками.ВидДвижения = &Приход
	|			ТОГДА РасчетыСПоставщиками.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщиками.ВидДвижения = &Приход
	|			ТОГДА 0
	|		ИНАЧЕ РасчетыСПоставщиками.Сумма
	|	КОНЕЦ КАК Оплачено
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПоставщиками
	|ГДЕ
	|	РасчетыСПоставщиками.Поставщик = &Поставщик
	|	И РасчетыСПоставщиками.Период <= &Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДАТА";
	
	Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);
	
	Запрос.УстановитьПараметр("Поставщик", ЭлементСправочника);
	Запрос.УстановитьПараметр("Период", ОбщийМодульСервисСервер.ПользователяТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	если не РезультатЗапроса .Пустой() тогда
		Шапка  = Макет.ПолучитьОбласть("ШД");
		Подвал = Макет.ПолучитьОбласть("П");
		Строка = Макет.ПолучитьОбласть("С");
		Шапка.Параметры.ВалютаПрограммы = Справочники.Валюты.ОсновнаяВалюта.Наименование;
		
		Шапка.Параметры.текущийдолг = ОбщийМодульСервер.ПолучитьДолгКлиентаПоставщика(ЭлементСправочника, ОбщийМодульСервисСервер.ПользователяТекущаяДата());
		ТабДок.Вывести(Шапка, 0);
		
		ТаблицаРезультат = РезультатЗапроса.Выгрузить();
		
		ТаблицаРезультат.Свернуть("Регистратор, Дата", "Сумма, Оплачено");
		ТаблицаРезультат.Сортировать("Дата");
		ТаблицаРезультат.Колонки.Добавить("Остаток");
		ТаблицаРезультат.Колонки.Добавить("Количество");
		остаток = 0;
		для каждого строкарезультата из ТаблицаРезультат цикл
			остаток = остаток + строкарезультата.сумма - строкарезультата.оплачено;
			строкарезультата.остаток = остаток;
			Если ТипЗнч(строкарезультата.регистратор) = Тип("ДокументСсылка.РасходыТовара") 
				или ТипЗнч(строкарезультата.регистратор) = Тип("ДокументСсылка.ПоступленияТовара") Тогда
				
				строкарезультата.количество = строкарезультата.регистратор.товары.итог("количество");
			КонецЕсли;
			строка.Параметры.Заполнить(строкарезультата);
			ТабДок.Вывести(строка, 1);
		КонецЦикла;
		
		Подвал.Параметры.Сумма = ТаблицаРезультат.Итог("Сумма");
		Подвал.Параметры.Количество = ТаблицаРезультат.Итог("Количество");
		Подвал.Параметры.Оплачено = ТаблицаРезультат.Итог("Оплачено");
		
		Подвал.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВПодвалеДокументовПриПечати;
		ТабДок.Вывести(Подвал, 0);
		
	КонецЕсли;
	
	ТабДок.Закончитьавтогруппировкустрок();
	
	ТабДок.ОтображатьСетку 	= Ложь;
	ТабДок.Защита 			= Истина;
	ТабДок.ТолькоПросмотр 	= Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;  	
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных") Тогда
		
		Если ВидФормы = "ФормаСписка" Тогда
			
			ВыбраннаяФорма = ВидФормы + "Упрощенная";
			СтандартнаяОбработка = Ложь;
			
		ИначеЕсли ВидФормы = "ФормаВыбора" тогда
			
			ВыбраннаяФорма = ВидФормы + "Упрощенная";
			СтандартнаяОбработка = Ложь;
			
		ИначеЕсли ВидФормы = "ФормаОбъекта" Тогда

			ВыбраннаяФорма = "ФормаЭлементаУпрощенная";
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если НЕ ОбщийМодульПовтор.ТекущийЯзыкРусский()
		и ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПоддерживатьНаименованияНаДругихЯзыкахКромеРусского", Истина) Тогда
		
		ВозможноеПредставление = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Данные.ссылка, , Истина);
		Если НЕ ВозможноеПредставление = Неопределено Тогда
			Представление = ВозможноеПредставление;
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
