// sza141216-0234
// sza140710-1755  локац
// sza140104-0215 : 
// sza131021-0148 : 
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ОбщийМодульПовтор.ВывестиНаименованияНаДругомЯзыке() Тогда
		
		ВозможноеПредставление = ОбщийМодульПовтор.ПолучитьПредставлениеНаЯзыке(Данные.Ссылка, , ИСТИНА);
		Если НЕ ВозможноеПредставление = Неопределено Тогда
			Представление = ВозможноеПредставление;
			СтандартнаяОбработка = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ДляУскоренияРаботыСБазойДанныхНеВыводитьДополнительныхДанных") Тогда
		
		Если ВидФормы = "ФормаСписка" Тогда
			
			ВыбраннаяФорма = ВидФормы + "Упрощенная";
			СтандартнаяОбработка = ЛОЖЬ;
			
		ИначеЕсли ВидФормы = "ФормаВыбора" тогда
			
			ВыбраннаяФорма = ВидФормы + "Упрощенная";
			СтандартнаяОбработка = ЛОЖЬ;
			
		ИначеЕсли ВидФормы = "ФормаОбъекта" Тогда
			
			ВыбраннаяФорма = "ФормаЭлементаУпрощенная";
			СтандартнаяОбработка = ЛОЖЬ;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура Печать(ТабДок, Ссылка) Экспорт
	
	ТабДок.ИмяПараметровПечати  = "Поставщик" + СокрЛП(ИмяКомпьютера());
	ТабДок.КлючПараметровПечати = ТабДок.ИмяПараметровПечати;
	
	ТабДок.Очистить();
	
	СсылкаНаОбъектПечати = Ссылка[0];
	
	РазрядМетаданных = ""; ИмяМетаданных = "";
	ПроизвольнаяПечатнаяФорма = ОбщийМодульТекстСервер.ОпределитьПроизвольнуюПечатнуюФорму(, , СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
	
	Если ЗначениеЗаполнено(ПроизвольнаяПечатнаяФорма) Тогда
		ТабДок = ОбщийМодульТекстСервер.СформироватьДокументПоПроизвольнойФорме(ПроизвольнаяПечатнаяФорма, , ТабДок, СсылкаНаОбъектПечати, РазрядМетаданных, ИмяМетаданных);
		
	Иначе		
		ЭлементСправочника = ссылка[0];
		
		ТабДок.Начатьавтогруппировкустрок();
		
		Макет = Справочники.Поставщики.ПолучитьМакет("Печать");
		Макет.КодЯзыкаМакета = ОбщийМодульПовтор.ПолучитьТекущийЯзыкДокументов();
		
		Шапка = Макет.ПолучитьОбласть("Ш");
		Шапка.параметры.заполнить(ЭлементСправочника);
		
		СтруктураДополнительныПараметровМакета = ОбщийМодульСервер.ПолучитьСтруктуруДополнительныхПараметровМакетаПечати();
		Шапка.Параметры.ТекстВШапкеДокументовПриПечати   = СтруктураДополнительныПараметровМакета.ТекстВШапкеДокументовПриПечати;
		
		Если НЕ ЗначениеЗаполнено(ЭлементСправочника.НаименованиеДляПечати) Тогда
			Шапка.Параметры.НаименованиеДляПечати = ЭлементСправочника.наименование;
		КонецЕсли;
		
		Регион  = ОбщийМодульПовтор.ПолучитьПредставлениеНаЯзыке(ЭлементСправочника.Регион, , ИСТИНА, ЭлементСправочника.ЯзыкДокументов);
		Если Регион = Неопределено Тогда
			Регион = СокрЛП(ЭлементСправочника.Регион);
		КонецЕсли;		
		Локация = ОбщийМодульПовтор.ПолучитьПредставлениеНаЯзыке(ЭлементСправочника.Локация, , ИСТИНА, ЭлементСправочника.ЯзыкДокументов);
		Если Локация = Неопределено Тогда
			Локация = СокрЛП(ЭлементСправочника.Локация);
		КонецЕсли;		
		
		ВыборкаАдрес = СокрЛП(ЭлементСправочника.адрес);
		Если Найти(ВыборкаАдрес, "" + СокрЛП(Регион)) = 0 Тогда
			Адрес = "" + СокрЛП(Регион) + ?(ЗначениеЗаполнено(Локация), ", " + СокрЛП(Локация), "") + ", " + ВыборкаАдрес;
		Иначе
			Адрес = ВыборкаАдрес;
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ЭлементСправочника.ЮридическийАдрес)
			И НЕ ВыборкаАдрес = СокрЛП(ЭлементСправочника.ЮридическийАдрес) Тогда
			
			Адрес = Адрес + ", " + ЭлементСправочника.ЮридическийАдрес;
		КонецЕсли;
		
		Шапка.Параметры.РегионАдрес = Адрес;
		
		ПолныйНомерТелефона = ОбщийМодульСервер.СоставитьТелефон(ЭлементСправочника, ИСТИНА);
		
		Шапка.Параметры.Телефон = ПолныйНомерТелефона;
		
		ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
		ТабДок.Вывести(Шапка);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РасчетыСПоставщиками.Период КАК ДАТА,
		|	РасчетыСПоставщиками.Регистратор,
		|	ВЫБОР
		|		КОГДА РасчетыСПоставщиками.ВидДвижения = &Приход
		|			ТОГДА РасчетыСПоставщиками.Сумма
		|		Иначе 0
		|	КОНЕЦ КАК Сумма,
		|	ВЫБОР
		|		КОГДА РасчетыСПоставщиками.ВидДвижения = &Приход
		|			ТОГДА 0
		|		Иначе РасчетыСПоставщиками.Сумма
		|	КОНЕЦ КАК Оплачено
		|ИЗ РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПоставщиками
		|ГДЕ РасчетыСПоставщиками.Поставщик = &Поставщик
		|	И РасчетыСПоставщиками.Период <= &Период
		|УПОРЯДОЧИТЬ ПО ДАТА";
		
		Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);	
		Запрос.УстановитьПараметр("Поставщик", ЭлементСправочника);
		Запрос.УстановитьПараметр("Период", ОбщийМодульСервисСервер.ПользователяТекущаяДата());
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса .Пустой() Тогда
			
			Шапка  = Макет.ПолучитьОбласть("ШД");
			Подвал = Макет.ПолучитьОбласть("П");
			Строка = Макет.ПолучитьОбласть("С");
			ОсновнаяВалюта = ПредопределенноеЗначение("Справочник.Валюты.ОсновнаяВалюта");
			Шапка.Параметры.ВалютаПрограммы = ОсновнаяВалюта.Наименование;
			
			Шапка.Параметры.текущийдолг = ОбщийМодульСервер.ПолучитьДолгКлиентаПоставщика(ЭлементСправочника, ОбщийМодульСервисСервер.ПользователяТекущаяДата());
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
			ТабДок.Вывести(Шапка, 0);
			
			Если  ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетОтдельныхДоговоровСКонтрагентами") Тогда
				Шапка  = Макет.ПолучитьОбласть("ШДК");
				Шапка.Параметры.ПросроченныйДолг = ОбщийМодульСервер.ПолучитьДолгКлиентаПоставщикаСОтсрочкой(ЭлементСправочника, ОбщийМодульСервисСервер.ПользователяТекущаяДата());
				Шапка.Параметры.ВалютаПрограммы  = ОсновнаяВалюта.Наименование;
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Шапка);
				ТабДок.Вывести(Шапка, 0);
			КонецЕсли;
			
			ТаблицаРезультат = РезультатЗапроса.Выгрузить();
			
			ТаблицаРезультат.Свернуть("Регистратор, Дата", "Сумма, Оплачено");
			ТаблицаРезультат.Сортировать("Дата");
			ТаблицаРезультат.Колонки.Добавить("Остаток");
			ТаблицаРезультат.Колонки.Добавить("Количество");
			остаток = 0;
			
			Для Каждого строкарезультата из ТаблицаРезультат цикл
				остаток = остаток + строкарезультата.сумма - строкарезультата.оплачено;
				строкарезультата.остаток = остаток;
				Если ТипЗнч(строкарезультата.регистратор) = Тип("ДокументСсылка.РасходыТовара") 
					ИЛИ ТипЗнч(строкарезультата.регистратор) = Тип("ДокументСсылка.ПоступленияТовара") Тогда
					
					строкарезультата.количество = строкарезультата.регистратор.товары.итог("количество");
				КонецЕсли;
				строка.Параметры.Заполнить(строкарезультата);
				ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Строка);
				ТабДок.Вывести(строка, 1);
			КонецЦикла;
			
			Подвал.Параметры.Сумма = ТаблицаРезультат.Итог("Сумма");
			Подвал.Параметры.Количество = ТаблицаРезультат.Итог("Количество");
			Подвал.Параметры.Оплачено = ТаблицаРезультат.Итог("Оплачено");
			
			Подвал.Параметры.ТекстВПодвалеДокументовПриПечати = СтруктураДополнительныПараметровМакета.ТекстВПодвалеДокументовПриПечати;
			ОбщийМодульСервисСервер.ЗаменитьСвоиЗначенияПараметровПечати(Подвал);
			ТабДок.Вывести(Подвал, 0);
			
		КонецЕсли;
		
		ТабДок.Закончитьавтогруппировкустрок();
		
		ТабДок.ОтображатьСетку 	= ЛОЖЬ;
		ТабДок.Защита 			= ИСТИНА;
		ТабДок.ТолькоПросмотр 	= ИСТИНА;
		ТабДок.ОтображатьЗаголовки = ЛОЖЬ;	
	КонецЕсли;  	
	
КонецПроцедуры
