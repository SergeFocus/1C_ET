//sza140710-1747  локац
//sza140420-0423  
//sza130905-1658 : 
&НаКлиенте
Процедура ПриЗакрытии()                                                  // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                                                    // ПРИ ОТКРЫТИИ
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	Если НЕ УчетПоПоставщикам Тогда
		закрыть(ПредопределенноеЗначение("Справочник.Поставщики.ФизическоеЛицо"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000650", ЭтаФорма, Отказ, );
	Если НЕ Отказ Тогда
		Элементы.ПолеПоиска.СписокВыбора.Добавить("Наименование", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("По Наименованию"));
		Элементы.ПолеПоиска.СписокВыбора.Добавить("Телефон", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("По Телефону"));	
		Элементы.ПолеПоиска.СписокВыбора.Добавить("ОКПО", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("По ОКПО"));
		Элементы.ПолеПоиска.СписокВыбора.Добавить("ИНН", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("По ИНН"));
		Элементы.ПолеПоиска.СписокВыбора.Добавить("Адрес", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("По Адресу"));
		
		УчетПоПоставщикам = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоПоставщикам");
		ОбщийМодульСервер.ОбеспечитьСписокОтборов(Список);	
		
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьРегионыДляУчетаСтранАЛокацииГородов") Тогда
			Элементы.Регион.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Страна");
			Элементы.Локация.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Город");
		КонецЕсли;         	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)	
	ОбщийМодульКлиент.АвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка);	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	ВыполнитьПоискНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОчистка(Элемент, СтандартнаяОбработка)
	ВыполнитьПоискНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ПолеПоискаПриИзменении(Элемент)
	ВыполнитьПоискНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПоискНаКлиенте()
	
	Если ПустаяСтрока(ПолеПоиска) Тогда
		ПолеПоиска = "Наименование";
	КонецЕсли;
	
	ОбщийМодульКлиент.УстановитьЭлементОтбора(
	Список.Отбор,
	"Наименование",
	"",
	?(НайтиПоТочномуСоответствию, ВидСравненияКомпоновкиДанных.равно, ВидСравненияКомпоновкиДанных.Содержит),
	, ЛОЖЬ
	);
	
	ОбщийМодульКлиент.УстановитьЭлементОтбора(
	Список.Отбор,
	"Телефон",
	"",
	?(НайтиПоТочномуСоответствию, ВидСравненияКомпоновкиДанных.равно, ВидСравненияКомпоновкиДанных.Содержит),
	, ЛОЖЬ
	);
	
	ОбщийМодульКлиент.УстановитьЭлементОтбора(
	Список.Отбор,
	"ОКПО",
	"",
	?(НайтиПоТочномуСоответствию, ВидСравненияКомпоновкиДанных.равно, ВидСравненияКомпоновкиДанных.Содержит),
	, ЛОЖЬ
	);
	
	ОбщийМодульКлиент.УстановитьЭлементОтбора(
	Список.Отбор,
	"ИНН",
	"",
	?(НайтиПоТочномуСоответствию, ВидСравненияКомпоновкиДанных.равно, ВидСравненияКомпоновкиДанных.Содержит),
	, ЛОЖЬ
	);
	
	ОбщийМодульКлиент.УстановитьЭлементОтбора(
	Список.Отбор,
	"Адрес",
	"",
	?(НайтиПоТочномуСоответствию, ВидСравненияКомпоновкиДанных.равно, ВидСравненияКомпоновкиДанных.Содержит),
	, ЛОЖЬ
	);
	
	Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
		
		ОбщийМодульКлиент.УстановитьЭлементОтбора(
		Список.Отбор,
		ПолеПоиска,
		СтрокаПоиска,
		?(НайтиПоТочномуСоответствию, ВидСравненияКомпоновкиДанных.равно, ВидСравненияКомпоновкиДанных.Содержит),
		, ИСТИНА
		);
		
		Если НетНичего()
			И НЕ ПолеПоиска = "Телефон"
			И НЕ ПолеПоиска = "ИНН"
			И НЕ ПолеПоиска = "ОКПО" Тогда
			
			СтрокаПоискаРус = ОбщийМодульКлиент.ПеревестиТекстНаЯзык(СтрокаПоиска, 0);  
			
			ОбщийМодульКлиент.УстановитьЭлементОтбора(
			Список.Отбор,
			ПолеПоиска,
			СтрокаПоискаРус,
			?(НайтиПоТочномуСоответствию, ВидСравненияКомпоновкиДанных.равно, ВидСравненияКомпоновкиДанных.Содержит),
			,
			ИСТИНА
			);
			Элементы.Список.Обновить();
			
			Если НетНичего() Тогда
				
				СтрокаПоискаАнгл = ОбщийМодульКлиент.ПеревестиТекстНаЯзык(СтрокаПоиска, 1);  
				
				ОбщийМодульКлиент.УстановитьЭлементОтбора(
				Список.Отбор,
				ПолеПоиска,
				СтрокаПоискаАнгл,
				?(НайтиПоТочномуСоответствию, ВидСравненияКомпоновкиДанных.равно, ВидСравненияКомпоновкиДанных.Содержит),
				,
				ИСТИНА
				);
				Элементы.Список.Обновить();
				
				Если НЕ НетНичего() Тогда
					СтрокаПоиска = СтрокаПоискаАнгл;
				КонецЕсли;
				
			Иначе
				СтрокаПоиска = СтрокаПоискаРус;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиПоТочномуСоответствиюПриИзменении(Элемент)
	ВыполнитьПоискНаКлиенте();
КонецПроцедуры

&НаКлиенте
Функция   НетНичего()	
	Возврат Элементы.Список.ТекущиеДанные = Неопределено;	
КонецФункции //НетНичего
