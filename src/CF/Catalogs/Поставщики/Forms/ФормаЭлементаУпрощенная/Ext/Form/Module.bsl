// sza140523-0136  
// sza130905-1706 : 
&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ДобавитьИзображениеЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сначала следует записать этот элемент. Записать?"), РежимДиалогаВопрос.ДаНет);
        Возврат;
	КонецЕсли;
	
	ДобавитьИзображениеФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда		
		Записать();	
	КонецЕсли;
	
	ДобавитьИзображениеФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеФрагмент()
	
	Перем ПараметрыФормы, формаИзображения;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("СвязанныйОбъект", Объект.Ссылка);
		формаИзображения = ПолучитьФорму("Справочник.Изображения.ФормаОбъекта", ПараметрыФормы);	
		формаИзображения.Открыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияВидИнформацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура("ТипВладельца", ДопИнфоТипВладельца);
	ФормаВыбораВидаИнформации = ПолучитьФорму("Справочник.ДополнительныеРеквизиты.ФормаВыбора", ПараметрыФормы, ЭтаФорма);	
	ВидИнформации = ФормаВыбораВидаИнформации.ОткрытьМодально();
	Если ЗначениеЗаполнено(ВидИнформации) Тогда
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.ВидИнформации = ВидИнформации;
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.Информация = ОбщийМодульКлиент.ПолучитьЗначениеПоУмолчаниюПоляДополнительнойИнформации(ВидИнформации);
		СтандартнаяОбработка = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияПриИзменении(Элемент)
	ДопИнформацияИзменена = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеДляПечатиНаДругихЯзыках(Команда)
	Элементы.НаименованияДляПечатиНаДругихЯзыках.Видимость = НЕ Элементы.НаименованияДляПечатиНаДругихЯзыках.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеДляПечатиПриИзменении(Элемент)
	
	Объект.НаименованиеДляПечати = НаименованиеДляПечати;
	НаименованиеИзменяли = ИСТИНА;
	
	Если ПереводитьНаименованияАвтоматически Тогда
		ОбщийМодульКлиент.ПеревестиНаименованияАвтоматически(НаименованиеДляПечати, НаименованияДляПечатиНаДругихЯзыках);
		БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Объект.Наименование  = Наименование;
	НаименованиеИзменяли = ИСТИНА;
	ОбработатьФИО();

	Если ПереводитьНаименованияАвтоматически Тогда
		ОбщийМодульКлиент.ПеревестиНаименованияАвтоматически(Наименование, НаименованияНаДругихЯзыках);
		БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованияДляПечатиНаДругихЯзыкахНаЯзыкеПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияДляПечатиНаДругихЯзыкахПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахНаЯзыкеПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ТекущаяСтраница = Элементы.ГруппаСтраниц.ТекущаяСтраница;
	СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
	СтраницаОсновноеДополнительно = СтраницыПанели.Индекс(ТекущаяСтраница);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(Объект.Наименование) 
		И ЗначениеЗаполнено(Объект.НаименованиеДляПечати) Тогда
		
		Объект.Наименование = Объект.НаименованиеДляПечати;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Элементы.ДобавитьСобытие.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетСобытий");
	
	Если ПоддержкаДругихЯзыков тогда
		Если НаименованиеИзменяли тогда
			ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, Наименование);
			ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, НаименованиеДляПечати, "НаименованиеДляПечати");
		КонецЕсли;
		
		Если БылиИзмененияЗначенияПолейНаЯзыках Тогда
			Для Каждого СтрокаЯзыка Из НаименованияНаДругихЯзыках Цикл
				ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, СтрокаЯзыка.НаЯзыке, "Наименование", СтрокаЯзыка.Язык);	
			КонецЦикла;
			Для Каждого СтрокаЯзыка Из НаименованияДляПечатиНаДругихЯзыках Цикл
				ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, СтрокаЯзыка.НаЯзыке, "НаименованиеДляПечати", СтрокаЯзыка.Язык);	
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДопИнформацияИзменена Тогда
		ОбщийМодульСервисСервер.ЗаписатьДополнительнуюИнформацию(Объект.Ссылка, ДополнительнаяИнформация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНаДругихЯзыках(Команда)
	Элементы.НаименованияНаДругихЯзыках.Видимость  = НЕ Элементы.НаименованияНаДругихЯзыках.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)           // ПРИ ОТКРЫТИИ
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Объект.Ссылка, ИСТИНА);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если ЗначениеЗаполнено(СтраницаОсновноеДополнительно)Тогда
			
			попытка
				СтраницыПанели  = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы;
				ТекущаяСтраница = СтраницыПанели.получить(СтраницаОсновноеДополнительно);
				Элементы.ГруппаСтраниц.ТекущаяСтраница = ТекущаяСтраница;
			Исключение
			конецпопытки;				
		КонецЕсли;
		
	Иначе
		ЭтаФорма.ТекущийЭлемент = Элементы.Наименование;	
	КонецЕсли;
	
	ОбновитьВидимостьТелефонов();
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("РегионРегламентированногоУчета") = ПредопределенноеЗначение("Перечисление.РегионыРегламентированногоУчета.Украина") Тогда
		Элементы.ОКПО.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("ЕДРПОУ");
		Элементы.МФО.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("МФО / SWIFT");
		Элементы.КПП.Видимость = ЛОЖЬ;
	ИначеЕсли ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("РегионРегламентированногоУчета") = ПредопределенноеЗначение("Перечисление.РегионыРегламентированногоУчета.Россия") Тогда
		Элементы.МФО.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("БИК / SWIFT");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)       // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000655", ЭтаФорма, Отказ, Объект);
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ЧислоОпцийДляКонтрагентов = ОбщийМодульПовтор.ЧислоОпцийДляКонтрагентов();
		Если ЧислоОпцийДляКонтрагентов < 6 Тогда
			Элементы.Переместить(Элементы.ДополнительныеПараметрыКонтрагента, Элементы.Расчеты);
		КонецЕсли;
		
		ИспользоватьМеханизмОтсрочкиПлатежа = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьМеханизмОтсрочкиПлатежа");
		Элементы.ГруппаФИО.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьФИОКонтрагентов");
		Элементы.ВидЦенДляРегистрацииПолнойСтоимости.Видимость = НЕ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ЗапретитьВозможностьРегистрироватьДополнительныеРасходыПриПриходованииТоваров");
		
		ОбъектРодитель = Объект.Родитель;
		
		Если ЗначениеЗаполнено(ОбъектРодитель) Тогда
			Если ЗначениеЗаполнено(ОбъектРодитель.ВидЦен) Тогда
				
				Элементы.ВидЦен.ТолькоПросмотр = ИСТИНА;
				Элементы.ВидЦен.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вид цен Группы Поставщиков") + ":";
				Если НЕ Объект.ВидЦен = ОбъектРодитель.ВидЦен Тогда
					Объект.ВидЦен = ОбъектРодитель.ВидЦен;
				КонецЕсли;				
			КонецЕсли;
			Если ЗначениеЗаполнено(Объект.Родитель.СрокОплатыВДняхПоУмолчанию)
				И Объект.СрокОплатыВДняхПоУмолчанию = 0 Тогда
				
				Объект.СрокОплатыВДняхПоУмолчанию = Объект.Родитель.СрокОплатыВДняхПоУмолчанию;
			КонецЕсли;		
		КонецЕсли;
		
		ОбъектСсылка = Объект.Ссылка;
		Если НЕ ЗначениеЗаполнено(ОбъектСсылка) Тогда
			
			Если НЕ ЗначениеЗаполнено(Объект.ПравовойСтатус) Тогда
				Объект.ПравовойСтатус = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПравовойСтатусПоставщикаПоУмолчанию");
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Объект.Регион ) Тогда
				Объект.Регион = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("РегионПоУмолчанию");
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Объект.СпособДоставки) Тогда
				Объект.СпособДоставки = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("СпособДоставкиПоУмолчанию");
			КонецЕсли;
			
			Если ИспользоватьМеханизмОтсрочкиПлатежа
				И НЕ ЗначениеЗаполнено(Объект.СрокОплатыВДняхПоУмолчанию) Тогда
				
				Объект.СрокОплатыВДняхПоУмолчанию = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ЧислоДнейОтсрочкиПередПоставщикамиПоУмолчанию");				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				Объект.ВидЦен = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВидЦенПоставщиков");
			КонецЕсли;
			
			Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьКатегорииКонтрагентов") Тогда
				Объект.Категория = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("КатегорияКонтрагентаПоУмолчанию");
			КонецЕсли;
			
			Элементы.ДобавитьСобытие.Видимость = ЛОЖЬ;
			
		Иначе
			Если НЕ Найти(Объект.Наименование, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Новый Поставщик")) = 0 Тогда				
				Объект.Наименование = "";
				Наименование = "";
				ЭтаФорма.ТекущийЭлемент = Элементы.Наименование;
			КонецЕсли;			
			КарточкаКлиента = ОбщийМодульСервер.НайтиКонтрагентаПоОКПО(Объект.ОКПО, ИСТИНА);
			
			Элементы.ДобавитьСобытие.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетСобытий");
		КонецЕсли;
		
		Элементы.КарточкаКлиента.Видимость = ЗначениеЗаполнено(КарточкаКлиента);
		
		НаименованиеОсновнойВалюты = Справочники.Валюты.ОсновнаяВалюта.Наименование ;
		Элементы.ОсновнойШтрихКод.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьШтрихКодыДляИдентификацииКонтрагентов");
		
		ДопИнфоТипВладельца = ОбщийМодульПовтор.ПолучитьТипВладельца(ОбъектСсылка); 	
		ОбщийМодульСервисСервер.ЗаполнитьДополнительнуюИнформацию(ОбъектСсылка, ДополнительнаяИнформация, ДопИнфоТипВладельца);				
		
		ПоддержкаДругихЯзыков = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПоддерживатьИныеЯзыкиКромеРусского") 
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПоддерживатьНаименованияНаДругихЯзыкахКромеРусского", ИСТИНА);
		
		Если ПоддержкаДругихЯзыков 
			И ЗначениеЗаполнено(ОбъектСсылка) Тогда
			
			ПредставлениеНаименования = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(ОбъектСсылка);
			НаименованиеДляПечати = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(ОбъектСсылка, "НаименованиеДляПечати");
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ЗначенияНаДругихЯзыках.Язык,
			|	ЗначенияНаДругихЯзыках.НаЯзыке,
			|	ЗначенияНаДругихЯзыках.Поле
			|ИЗ РегистрСведений.ЗначенияНаДругихЯзыках КАК ЗначенияНаДругихЯзыках
			|ГДЕ ЗначенияНаДругихЯзыках.ОбъектБазыДанных = &ОбъектБазыДанных";
			
			Запрос.УстановитьПараметр("ОбъектБазыДанных", ОбъектСсылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Если ВыборкаДетальныеЗаписи.Поле = "Наименование" Тогда
						СтрокаЯзыка = НаименованияНаДругихЯзыках.Добавить();
						СтрокаЯзыка.Язык 	= ВыборкаДетальныеЗаписи.Язык;
						СтрокаЯзыка.НаЯзыке = ВыборкаДетальныеЗаписи.НаЯзыке;
						
					ИначеЕсли ВыборкаДетальныеЗаписи.Поле = "НаименованиеДляПечати" Тогда
						СтрокаЯзыка = НаименованияДляПечатиНаДругихЯзыках.Добавить();
						СтрокаЯзыка.Язык 	= ВыборкаДетальныеЗаписи.Язык;
						СтрокаЯзыка.НаЯзыке = ВыборкаДетальныеЗаписи.НаЯзыке;	
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		Иначе
			ПредставлениеНаименования = Объект.Наименование;
			НаименованиеДляПечати = Объект.НаименованиеДляПечати;
		КонецЕсли;	
		
		Если ПоддержкаДругихЯзыков Тогда
			ПереводитьНаименованияАвтоматически = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьРегистрТекстовНаДругихЯзыкахДляАвтоматическогоПереводаНаименований");
			Элементы.НаименованияНаДругихЯзыкахЯзык.РежимВыбораИзСписка = ИСТИНА;
			ОбщийМодульПовтор.УстановитьСписокДоступныхЯзыков(Элементы.НаименованияНаДругихЯзыкахЯзык.СписокВыбора, ИСТИНА);
			
			Элементы.НаименованияДляПечатиНаДругихЯзыкахЯзык.РежимВыбораИзСписка = ИСТИНА;
			ОбщийМодульПовтор.УстановитьСписокДоступныхЯзыков(Элементы.НаименованияДляПечатиНаДругихЯзыкахЯзык.СписокВыбора, ИСТИНА);
			
			Элементы.ЯзыкОбщения.РежимВыбораИзСписка = ИСТИНА;
			ОбщийМодульПовтор.УстановитьСписокДоступныхЯзыков(Элементы.ЯзыкОбщения.СписокВыбора, , , ИСТИНА);

			Элементы.ЯзыкДокументов.РежимВыбораИзСписка = ИСТИНА;
			ОбщийМодульПовтор.УстановитьСписокДоступныхЯзыков(Элементы.ЯзыкДокументов.СписокВыбора, , ИСТИНА);
		КонецЕсли;
		
		Если ПараметрыСеанса.ВерсияПриложения < 803050000 
			ИЛИ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВместоТумблеровПоказыватьГалочки") Тогда			
			
			Если НЕ ПараметрыСеанса.ВерсияПриложения < 803050000 Тогда
				Выполнить(" Элементы.ЭтоСотрудник.ВидФлажка = ВидФлажка.Флажок;	");	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	РодительПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура РодительПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.Родитель) Тогда
		Если ЗначениеЗаполнено(Объект.Родитель.ВидЦен) Тогда		
			Объект.ВидЦен = Объект.Родитель.ВидЦен;	
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.Родитель.СрокОплатыВДняхПоУмолчанию)
			И Объект.СрокОплатыВДняхПоУмолчанию = 0 Тогда
			
			Объект.СрокОплатыВДняхПоУмолчанию = Объект.Родитель.СрокОплатыВДняхПоУмолчанию;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвязанныеИзображения(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("СвязанныеИзображенияЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сначала следует записать этот элемент. Записать?"), РежимДиалогаВопрос.ДаНет);
        Возврат;
	КонецЕсли;
	
	СвязанныеИзображенияФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура СвязанныеИзображенияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда		
		Записать();	
	КонецЕсли;
	
	СвязанныеИзображенияФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура СвязанныеИзображенияФрагмент()
	
	Перем ПараметрыФормы;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("СвязанныйОбъект", Объект.Ссылка);
		ОткрытьФорму("Справочник.Изображения.ФормаСписка", ПараметрыФормы);	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СкопироватьИмяПолучателя(Команда)
	Объект.ИмяПолучателя = Наименование;
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСложноеПолноеНаименование(Команда)
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("РегионРегламентированногоУчета") = ПредопределенноеЗначение("Перечисление.РегионыРегламентированногоУчета.Украина") Тогда
		ТекстМФО = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("МФО");
	ИначеЕсли ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("РегионРегламентированногоУчета") = ПредопределенноеЗначение("Перечисление.РегионыРегламентированногоУчета.Россия") Тогда
		ТекстМФО = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("БИК");
	КонецЕсли;
	
	Объект.НаименованиеДляПечати = "" + Объект.Наименование + 
	?(ЗначениеЗаполнено(Объект.ИНН), ", " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("ИНН") + " " + СокрЛП(Объект.ИНН), "") +
	?(ЗначениеЗаполнено(Объект.КПП), ", " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("КПП") + " " + СокрЛП(Объект.КПП), "") +
	?(ЗначениеЗаполнено(Объект.Адрес), ", " + СокрЛП(Объект.Адрес), "") +
	?(ЗначениеЗаполнено(Объект.НомерСчета), ", " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("р/с") + " " + СокрЛП(Объект.НомерСчета), "") +
	?(ЗначениеЗаполнено(Объект.НаименованиеБанка), ", " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("в банке") + " " + СокрЛП(Объект.НаименованиеБанка), "") +
	?(ЗначениеЗаполнено(Объект.МФО), ", " + ТекстМФО + " " + СокрЛП(Объект.МФО), "") +
	?(ЗначениеЗаполнено(Объект.КорреспондентскийСчет), ", " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("к/с") + " " + СокрЛП(Объект.КорреспондентскийСчет), "");
	
	НаименованиеДляПечати = Объект.НаименованиеДляПечати;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПриИзменении(Элемент)
	Объект.ЭлектроннаяПочта = СокрЛП(Объект.ЭлектроннаяПочта);	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьАдрес(Команда)
	
	Если Объект.Адрес = "" Тогда
		Объект.Адрес = ОбщийМодульКлиент.СформироватьАдрес(Объект.Регион, Объект.Локация, Объект.ПочтовыйИндекс, Объект.ЯзыкДокументов);	
	Иначе
		ПоказатьВопрос(Новый ОписаниеОповещения("СформироватьАдресЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы хотите сформировать адрес заново?"), РежимДиалогаВопрос.ДаНет, , , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Формирование адреса"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьАдресЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда		
		Объект.Адрес = ОбщийМодульКлиент.СформироватьАдрес(Объект.Регион, Объект.Локация, Объект.ПочтовыйИндекс, Объект.ЯзыкДокументов);	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЛокацияПриИзменении(Элемент)
	ЛокацияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЛокацияПриИзмененииНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Объект.ПочтовыйИндекс)
		И ЗначениеЗаполнено(Объект.Локация)
		И ЗначениеЗаполнено(Объект.Локация.ПочтовыйИндекс) Тогда
		
		Объект.ПочтовыйИндекс = Объект.Локация.ПочтовыйИндекс;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РегионПриИзменении(Элемент)
	РегионПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура РегионПриИзмененииНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Объект.ЯзыкДокументов)
		И ЗначениеЗаполнено(Объект.Регион)
		И ЗначениеЗаполнено(Объект.Регион.ЯзыкДокументов) Тогда
		
		Объект.ЯзыкДокументов = Объект.Регион.ЯзыкДокументов;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ЯзыкОбщения)
		И ЗначениеЗаполнено(Объект.Регион)
		И ЗначениеЗаполнено(Объект.Регион.ЯзыкОбщения) Тогда
		
		Объект.ЯзыкОбщения = Объект.Регион.ЯзыкОбщения;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТелефонПриИзменении(Элемент)
	ОбновитьВидимостьТелефонов();
КонецПроцедуры

&НаКлиенте
Процедура Телефон2ПриИзменении(Элемент)
	ОбновитьВидимостьТелефонов();
КонецПроцедуры

&НаКлиенте
Процедура Телефон3ПриИзменении(Элемент)
	ОбновитьВидимостьТелефонов();
КонецПроцедуры

&НаКлиенте
Процедура Телефон4ПриИзменении(Элемент)
	ОбновитьВидимостьТелефонов();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимостьТелефонов()
	
	Элементы.Телефон2.Видимость = ЗначениеЗаполнено(Объект.Телефон) ИЛИ ЗначениеЗаполнено(Объект.Телефон2);
	Элементы.Контакт2.Видимость = Элементы.Телефон2.Видимость;
	Элементы.Телефон3.Видимость = ЗначениеЗаполнено(Объект.Телефон2) ИЛИ ЗначениеЗаполнено(Объект.Телефон3);
	Элементы.Контакт3.Видимость = Элементы.Телефон3.Видимость;
	Элементы.Телефон4.Видимость = ЗначениеЗаполнено(Объект.Телефон3) ИЛИ ЗначениеЗаполнено(Объект.Телефон4);
	Элементы.Контакт4.Видимость = Элементы.Телефон4.Видимость;
	Элементы.Телефон5.Видимость = ЗначениеЗаполнено(Объект.Телефон4) ИЛИ ЗначениеЗаполнено(Объект.Телефон5);
	Элементы.Контакт5.Видимость = Элементы.Телефон5.Видимость;
	
КонецПроцедуры

&НаКлиенте
Процедура ЯзыкДокументовПриИзменении(Элемент)
	
	Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Загрузка макета текстов перевода.."), , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ждите.."));
	ЯзыкДокументовПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЯзыкДокументовПриИзмененииНаСервере()
	ОбщийМодульТекстСервер.ЗагрузитьТекстыОпределенногоЯзыкаИзМакета(Объект.ЯзыкДокументов, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ЮридическийАдресОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
	Если НЕ ПустаяСтрока(Объект.Адрес)
		И ПустаяСтрока(Объект.ЮридическийАдрес) Тогда
			
		Объект.ЮридическийАдрес = Объект.Адрес;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура АдресСтрокаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
	Если ПустаяСтрока(Объект.Адрес)
		И НЕ ПустаяСтрока(Объект.ЮридическийАдрес) Тогда
			
		Объект.Адрес = Объект.ЮридическийАдрес;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьФИО()
	
	КонецФамилии = Найти(Наименование, " ");
	Если КонецФамилии > 1 Тогда
		Объект.фамилия = Лев(Наименование, КонецФамилии - 1);
		
		ИмяОтчетство = Прав(Наименование, СтрДлина(Наименование) - КонецФамилии);
		
		КонецИмени = Найти(ИмяОтчетство, " ");
		Если КонецИмени > 1 Тогда
			Объект.Имя = СокрЛП(Лев(ИмяОтчетство, КонецИмени - 1));
			Если Прав(Объект.Имя, 1) = "." Тогда
				Объект.Имя = ВРег(Лев(Объект.Имя, 1));
			КонецЕсли;
			Объект.Отчество = СокрЛП(Прав(ИмяОтчетство, СтрДлина(ИмяОтчетство) - КонецИмени));
			Если Прав(Объект.Отчество, 1) = "." Тогда
				Объект.Отчество = ВРег(Лев(Объект.Отчество, 1));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФамилияПриИзменении(Элемент)
	
	НаименованиеНовое = Объект.Фамилия + " ";
	
	Имя = СокрЛП(Объект.Имя);
	Если СтрДлина(Имя) = 1 Тогда
		НаименованиеНовое = НаименованиеНовое + ВРег(Имя) + ".";
	Иначе
		НаименованиеНовое = НаименованиеНовое + Имя;
	КонецЕсли;
	
	НаименованиеНовое = НаименованиеНовое + " ";
	
	Отчество = СокрЛП(Объект.Отчество);
	Если СтрДлина(Отчество) = 1 Тогда
		НаименованиеНовое = НаименованиеНовое + ВРег(Отчество) + ".";
	Иначе
		НаименованиеНовое = НаименованиеНовое + Отчество;
	КонецЕсли;
	
	НаименованиеНовое = СокрЛП(НаименованиеНовое);
	
	Если НЕ НаименованиеНовое = Наименование Тогда
		Наименование = НаименованиеНовое;
		Объект.Наименование = Наименование;
		НаименованиеИзменяли = ИСТИНА;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСобытие(Команда)
	
	ПараметрыФормы = Новый Структура("Поставщик", Объект.Ссылка);
	ОткрытьФорму("Документ.События.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры
