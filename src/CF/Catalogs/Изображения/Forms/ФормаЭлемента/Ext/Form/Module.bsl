// sza150403-1808 выгр изобр
// sza150212-1426
// sza140831-1211
// sza140830-0036 : каталог
// sza140523-0244  
// sza131213-1940 : 
&НаКлиенте
Процедура АвтоНаименование(Команда)	
	АвтоНаименованиеОбъекта();	
КонецПроцедуры

&НаКлиенте
Процедура АвтоНаименованиеОбъекта(Знач ЭтоФотография = ЛОЖЬ)
	
	Наименование = ?(Объект.ЭтоОсновноеИзображениеОбъекта, ?(ЭтоФотография, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Основная фотография"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Основное изображение")) + " ", ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Изображение") + " ") + Объект.СвязанныйОбъект + " " + Объект.Родитель;
	Объект.Наименование = СокрЛП(Наименование + " " + ПолучитьАвтоНомер(Наименование));
	Наименование = Объект.Наименование;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоНаименованиеФотографии(Команда)	
	АвтоНаименованиеОбъекта(ИСТИНА);	
КонецПроцедуры
	
&НаСервере
Процедура ВидимостьФлагаОсновноеИзображение()
	
	Если ЗначениеЗаполнено(Объект.СвязанныйОбъект) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 Изображения.Ссылка,
		|	Изображения.ЭтоОсновноеИзображениеОбъекта
		|ИЗ Справочник.Изображения КАК Изображения
		|ГДЕ Изображения.СвязанныйОбъект = &СвязанныйОбъект
		|	И Изображения.ЭтоОсновноеИзображениеОбъекта = ИСТИНА
		|	И Изображения.Ссылка <> &Ссылка";
		
		Запрос.УстановитьПараметр("СвязанныйОбъект", Объект.СвязанныйОбъект);
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		РезультатЗапросаПустой = РезультатЗапроса.Пустой();
		Элементы.ЭтоОсновноеИзображениеОбъекта.Видимость   = РезультатЗапросаПустой;
		Элементы.ЭтоНеОсновноеИзображениеОбъекта.Видимость = НЕ РезультатЗапросаПустой;
		Если НЕ РезультатЗапросаПустой Тогда
			Объект.ЭтоОсновноеИзображениеОбъекта = ЛОЖЬ;	
		КонецЕсли;
		
	Иначе
		Элементы.ЭтоОсновноеИзображениеОбъекта.Видимость = ИСТИНА;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	ВидимостьФлагаОсновноеИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияВидИнформацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура("ТипВладельца", ДопИнфоТипВладельца);
	ФормаВыбораВидаИнформации = ПолучитьФорму("Справочник.ДополнительныеРеквизиты.ФормаВыбора", ПараметрыФормы, ЭтаФорма);	
	ВидИнформации = ФормаВыбораВидаИнформации.ОткрытьМодально();
	Если ЗначениеЗаполнено(ВидИнформации) Тогда
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.ВидИнформации = ВидИнформации;
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.Информация = ОбщийМодульКлиент.ПолучитьЗначениеПоУмолчаниюПоляДополнительнойИнформации(ВидИнформации);
		СтандартнаяОбработка = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияПриИзменении(Элемент)
	ДопИнформацияИзменена = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВБазуДанных(Команда)
	
	Если ЗначениеЗаполнено(Объект.СсылкаНаИзображение) Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузитьВБазуДанныхЗавершение1", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы готовы загрузить это изображение непосредственно в базу данных?"), РежимДиалогаВопрос.ДаНет);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВБазуДанныхЗавершение1(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда		
		АдресЛокально = "";
		ВыбранноеИмяФайла = "";
		Среда = ОбщийМодульПовтор.ПолучитьТекущуюСредуВыполнения();
		
		Оповещение = Новый ОписаниеОповещения("ЗагрузитьВБазуДанныхЗавершение", ЭтаФорма, Новый Структура("АдресЛокально", АдресЛокально));
		НачатьПомещениеФайла(Оповещение, АдресЛокально, Объект.СсылкаНаИзображение, ?(Среда = 5, ИСТИНА, ЛОЖЬ), УникальныйИдентификатор);	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВБазуДанныхЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	АдресЛокально = ДополнительныеПараметры.АдресЛокально;	
	
	Если Результат Тогда		
		Если ЗагрузитьИзображение(АдресЛокально) Тогда
			
			Объект.ИзображениеВБазеДанных 	= ИСТИНА;
			Объект.ИмяФайлаИзображения 		= "";
			
			Элементы.ГруппаСтраниц.Видимость 	= ЛОЖЬ;
			Элементы.ПодСсылку.Видимость 		= ЛОЖЬ;
			Элементы.ПодЗагрузку.Видимость 		= ИСТИНА;	
			Элементы.ОчиститьКартинкуИзБазыДанных.Видимость = ИСТИНА;
			Элементы.ФормаСохранитьВФайл.Видимость 			= ИСТИНА;
			Элементы.РазмерПриОтображении.Видимость 		= ИСТИНА;
			
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры

&НаСервере
функция   ЗагрузитьИзображение(Знач АдресИзображения)
	
	ОбъектО = РеквизитФормыВЗначение("Объект");
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресИзображения);
	ОбъектО.ХранилищеИзображения = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных());	
	
	// ПодСсылку = ПоместитьВоВременноеХранилище(ОбъектО.ХранилищеИзображения.Получить());
	
	ОбъектО.Записать();
	Модифицированность = ЛОЖЬ;
	ЗначениеВРеквизитФормы(ОбъектО, "Объект");
	УдалитьИзВременногоХранилища(АдресИзображения);
	ПодСсылку = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "ХранилищеИзображения");
	
	Возврат ИСТИНА;
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьФайлВБазуДанных(Команда)
	
	Если ЗначениеЗаполнено(Объект.ИмяФайлаИзображения) Тогда 
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузитьФайлВБазуДанныхЗавершение1", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы готовы загрузить этот файл изображения непосредственно в базу данных?"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлВБазуДанныхЗавершение1(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда		
		
		АдресЛокально = "";
		ВыбранноеИмяФайла = "";
		Среда = ОбщийМодульПовтор.ПолучитьТекущуюСредуВыполнения();
		
		НачатьПомещениеФайла(Новый ОписаниеОповещения("ЗагрузитьФайлВБазуДанныхЗавершение", ЭтаФорма, Новый Структура("АдресЛокально", АдресЛокально)), АдресЛокально, Объект.ИмяФайлаИзображения, ?(Среда = 5, ИСТИНА, ЛОЖЬ), УникальныйИдентификатор);	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлВБазуДанныхЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	АдресЛокально = ДополнительныеПараметры.АдресЛокально;	
	
	Если Результат Тогда
		Если ЗагрузитьИзображение(АдресЛокально) Тогда // Объект.ИмяФайлаИзображения) Тогда
			
			Объект.ИзображениеВБазеДанных   = ИСТИНА;
			Объект.ИмяФайлаИзображения 		= "";
			
			Элементы.ГруппаСтраниц.Видимость = ЛОЖЬ;
			Элементы.ПодСсылку.Видимость 	 = ЛОЖЬ;
			Элементы.ПодЗагрузку.Видимость   = ИСТИНА;	
			Элементы.ОчиститьКартинкуИзБазыДанных.Видимость = ИСТИНА;
			Элементы.ФормаСохранитьВФайл.Видимость 			= ИСТИНА;
			Элементы.РазмерПриОтображении.Видимость 		= ИСТИНА;
			
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаИзображенияОткрытие(Элемент, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.ИмяФайлаИзображения) Тогда
		Каталог = Объект.ИмяФайлаИзображения;
	Иначе
		Каталог = ОбщийМодульСервисСервер.ПолучитьКаталогСИзображениями(Объект.СвязанныйОбъект);
	КонецЕсли;
	
	ФорматТекст  = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Формат");
	ДиалогФильтр = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Все картинки") + " (*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf)|*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf|" 
    + ФорматТекст + " bmp (*.bmp;*.dib;*.rle)|*.bmp;*.dib;*.rle|"
    + ФорматТекст + " JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|"
    + ФорматТекст + " TIFF (*.tif)|*.tif|"
    + ФорматТекст + " GIF (*.gif)|*.gif|"
    + ФорматТекст + " PNG (*.png)|*.png|"
    + ФорматТекст + " icon (*.ico)|*.ico|"
    + ФорматТекст + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("метафайл") + " (*.wmf;*.emf)|*.wmf;*.emf|";
	
	СтандартнаяОбработка = ЛОЖЬ;
	ДиалогРасширение 	 = "*";
	ДиалогВыбФайла 	 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбФайла.Заголовок				= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите файл изображения") + ":";
	ДиалогВыбФайла.ПолноеИмяФайла			= Каталог;
	ДиалогВыбФайла.Фильтр					= ДиалогФильтр;
	ДиалогВыбФайла.Расширение				= ДиалогРасширение;
	ДиалогВыбФайла.МножественныйВыбор		= ЛОЖЬ;
	ДиалогВыбФайла.ПредварительныйПросмотр	= ЛОЖЬ;
	ДиалогВыбФайла.ИндексФильтра			= 0;
	ДиалогВыбФайла.ПроверятьСуществованиеФайла	=	ИСТИНА;
	
	Если ДиалогВыбФайла.Выбрать() Тогда
		Объект.ИмяФайлаИзображения = ДиалогВыбФайла.ПолноеИмяФайла;
		ИмяФайлаИзображенияПриИзмененииЭлемент();
	КонецЕсли; // когда файл  выбран 
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаИзображенияПриИзменении(Элемент)
	ИмяФайлаИзображенияПриИзмененииЭлемент();
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаИзображенияПриИзмененииЭлемент()
	ОбновитьИзображение(2);
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Объект.Наименование  = Наименование;
	НаименованиеИзменяли = ИСТИНА;
	
	Если ПереводитьНаименованияАвтоматически Тогда
		ОбщийМодульКлиент.ПеревестиНаименованияАвтоматически(Наименование, НаименованияНаДругихЯзыках);
		БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахНаЯзыкеПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

Процедура ОбновитьИзображение(Знач РежимОбновленияИзображения = 0)
	
	Если (РежимОбновленияИзображения = 1 ИЛИ РежимОбновленияИзображения = 0)		
		И ЗначениеЗаполнено(Объект.СсылкаНаИзображение) Тогда
		
		ПодСсылку = "<!DOCTYPE html PUBLIC ""-// W3C// DTD XHTML 1.0 Transitional// EN"" 
		|""http:// www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
		|<HTML style=""font-family:arial; font-size:11px;"">
		|<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8""/>
		|<img src = """ + Объект.СсылкаНаИзображение + """> 
		|</HTML>";
		Элементы.ПодСсылку.Видимость = ИСТИНА;
		
		// + """ alt = """ + Наименование + """>
		
		Объект.ИмяФайлаИзображения = "";
	Иначеесли РежимОбновленияИзображения = 1 тогда
		Элементы.ПодСсылку.Видимость = ЛОЖЬ;
		
	ИначеЕсли (РежимОбновленияИзображения = 2 ИЛИ РежимОбновленияИзображения = 0)		
		И ЗначениеЗаполнено(Объект.ИмяФайлаИзображения) Тогда
		
		ПодСсылку = "<!DOCTYPE html PUBLIC ""-// W3C// DTD XHTML 1.0 Transitional// EN"" 
		|""http:// www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
		|<HTML style=""font-family:arial; font-size:11px;"">
		|<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8""/>
		|<img src = """ + Объект.ИмяФайлаИзображения + """>
		|</HTML>";
		
		Объект.СсылкаНаИзображение = "";
		Элементы.ПодСсылку.Видимость = ИСТИНА;
	Иначеесли РежимОбновленияИзображения = 2 тогда
		Элементы.ПодСсылку.Видимость = ЛОЖЬ;
	КонецЕсли;    	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображение(Команда)
	ОбновитьИзображение();
КонецПроцедуры

Процедура ОбновитьРазмерИзображения()
	
	РазмерПриОтображении = ПолучитьКодРазмера();
	
	Если РазмерПриОтображении = 1 тогда
		Элементы.ПодЗагрузку.РазмерКартинки = РазмерКартинки.АвтоРазмер
	Иначеесли РазмерПриОтображении = 2 тогда
		Элементы.ПодЗагрузку.РазмерКартинки = РазмерКартинки.Пропорционально
	Иначеесли РазмерПриОтображении = 3 тогда
		Элементы.ПодЗагрузку.РазмерКартинки = РазмерКартинки.Растянуть
	Иначеесли РазмерПриОтображении = 4 тогда
		Элементы.ПодЗагрузку.РазмерКартинки = РазмерКартинки.РеальныйРазмер
	Иначеесли РазмерПриОтображении = 5 тогда
		Элементы.ПодЗагрузку.РазмерКартинки = РазмерКартинки.Черепица
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКартинкуИзБазыДанных(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ОчиститьКартинкуИзБазыДанныхЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы готовы удалить эту картинку из базы данных?"), РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКартинкуИзБазыДанныхЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОчиститьКартинкуИзБазыДанныхНаСервере();
		Элементы.ПодЗагрузку.Видимость = ЛОЖЬ;
		Элементы.ОчиститьКартинкуИзБазыДанных.Видимость = ЛОЖЬ;
		Элементы.ФормаСохранитьВФайл.Видимость	= ЛОЖЬ;
		Элементы.ГруппаСтраниц.Видимость 		= ИСТИНА;
		Элементы.РазмерПриОтображении.Видимость = ЛОЖЬ;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОчиститьКартинкуИзБазыДанныхНаСервере()
	
	ОбъектО = РеквизитФормыВЗначение("Объект");
	ОбъектО.ХранилищеИзображения = Неопределено;
	ЗначениеВРеквизитФормы(ОбъектО, "Объект");
	
	Объект.ИзображениеВБазеДанных = ЛОЖЬ;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ Объект.ИзображениеВБазеДанных
		И НЕ ЗаписыватьМолча
		И ПустаяСтрока(Объект.СсылкаНаИзображение)
		И ПустаяСтрока(Объект.ИмяФайлаИзображения) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Изображение не загружено, ссылка на него не указана!");
		Сообщение.Поле  = "СсылкаНаИзображение";
		Сообщение.УстановитьДанные(Объект);
		Сообщение.Сообщить();
		
		Отказ = ИСТИНА;
		
	КонецЕсли;
	
КонецПроцедуры

&НасервереБезКонтекста
Функция   ПолучитьАвтоНомер(Знач Наименование) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Изображения.Ссылка) КАК Количество
	|ИЗ Справочник.Изображения КАК Изображения
	|ГДЕ Изображения.Наименование ПОДОБНО &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		ВыборкаДетальныеЗаписи.Следующий();
		Результат = "" + (ВыборкаДетальныеЗаписи.Количество + 1);
	Иначе
		Результат = "1";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ПолучитьАвтоНомер

&НаСервере
Функция   ПолучитьКодРазмера()
	
	РазмерПриОтображении = Объект.РазмерПриОтображении;
	
	Если НЕ ЗначениеЗаполнено(РазмерПриОтображении) 
		ИЛИ РазмерПриОтображении = Перечисления.РазмерыКартинок.АвтоРазмер тогда
		
		результат = 1;
	ИначеЕсли РазмерПриОтображении = Перечисления.РазмерыКартинок.Пропорционально тогда
		результат = 2;
	ИначеЕсли РазмерПриОтображении = Перечисления.РазмерыКартинок.Растянуть тогда
		результат = 3;
	ИначеЕсли РазмерПриОтображении = Перечисления.РазмерыКартинок.РеальныйРазмер тогда
		результат = 4;
	ИначеЕсли РазмерПриОтображении = Перечисления.РазмерыКартинок.Черепица тогда
		результат = 5;
	Иначе
		результат = 1;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПоддержкаДругихЯзыков тогда
		Если НаименованиеИзменяли тогда
			ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, Наименование);
		КонецЕсли;
		
		Если БылиИзмененияЗначенияПолейНаЯзыках Тогда
			Для Каждого СтрокаЯзыка Из НаименованияНаДругихЯзыках Цикл
				ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, СтрокаЯзыка.НаЯзыке, "Наименование", СтрокаЯзыка.Язык);	
			КонецЦикла;
			ОбновитьПовторноИспользуемыеЗначения();
		КонецЕсли;
		
	КонецЕсли;
	
	Если МенялиОсновноеИзображение Тогда
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;
	
	Если ДопИнформацияИзменена Тогда
		ОбщийМодульСервисСервер.ЗаписатьДополнительнуюИнформацию(Объект.Ссылка, ДополнительнаяИнформация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНаДругихЯзыках(Команда)
	Элементы.НаименованияНаДругихЯзыках.Видимость  = НЕ Элементы.НаименованияНаДругихЯзыках.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Объект.Ссылка, ИСТИНА);
	ОбновитьРазмерИзображения();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ОбъектСсылка = Объект.Ссылка;
		
		ДопИнфоТипВладельца = ОбщийМодульПовтор.ПолучитьТипВладельца(ОбъектСсылка); 	
		ОбщийМодульСервисСервер.ЗаполнитьДополнительнуюИнформацию(ОбъектСсылка, ДополнительнаяИнформация, ДопИнфоТипВладельца);
		
		Если ЗначениеЗаполнено(Параметры.СвязанныйОбъект) Тогда
			Объект.СвязанныйОбъект = Параметры.СвязанныйОбъект;
			Объект.ЭтоОсновноеИзображениеОбъекта = ИСТИНА;
			МенялиОсновноеИзображение = ИСТИНА;
		КонецЕсли;
		
		Элементы.ГруппаСтраниц.Видимость = НЕ Объект.ИзображениеВБазеДанных;
		
		ПоддержкаДругихЯзыков = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПоддерживатьИныеЯзыкиКромеРусского") 
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПоддерживатьНаименованияНаДругихЯзыкахКромеРусского", ИСТИНА);
		
		Если ПоддержкаДругихЯзыков 
			И ЗначениеЗаполнено(ОбъектСсылка) Тогда
			
			Наименование = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(объектСсылка);
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ЗначенияНаДругихЯзыках.Язык,
			|	ЗначенияНаДругихЯзыках.НаЯзыке,
			|	ЗначенияНаДругихЯзыках.Поле
			|ИЗ РегистрСведений.ЗначенияНаДругихЯзыках КАК ЗначенияНаДругихЯзыках
			|ГДЕ ЗначенияНаДругихЯзыках.ОбъектБазыДанных = &ОбъектБазыДанных";
			
			Запрос.УстановитьПараметр("ОбъектБазыДанных", ОбъектСсылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Если ВыборкаДетальныеЗаписи.Поле = "Наименование" Тогда
						СтрокаЯзыка = НаименованияНаДругихЯзыках.Добавить();
						СтрокаЯзыка.Язык 	= ВыборкаДетальныеЗаписи.Язык;
						СтрокаЯзыка.НаЯзыке = ВыборкаДетальныеЗаписи.НаЯзыке;	
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		Иначе
			Наименование = Объект.Наименование;			
		КонецЕсли;	
		
		Если ПоддержкаДругихЯзыков Тогда
			ПереводитьНаименованияАвтоматически = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьРегистрТекстовНаДругихЯзыкахДляАвтоматическогоПереводаНаименований");
			Элементы.НаименованияНаДругихЯзыкахЯзык.РежимВыбораИзСписка = ИСТИНА;
			ОбщийМодульПовтор.УстановитьСписокДоступныхЯзыков(Элементы.НаименованияНаДругихЯзыкахЯзык.СписокВыбора, ИСТИНА);
		КонецЕсли;
		
		Если Объект.ИзображениеВБазеДанных ТОГДА
			
			// ПодСсылку = ПоместитьВоВременноеХранилище(Объект.Ссылка.ХранилищеИзображения.Получить());
			ПодСсылку = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "ХранилищеИзображения");
			
			Элементы.ПодЗагрузку.Видимость 					= ИСТИНА;
			Элементы.ОчиститьКартинкуИзБазыДанных.Видимость = ИСТИНА;
			Элементы.ФормаСохранитьВФайл.Видимость 			= ИСТИНА;
			Элементы.РазмерПриОтображении.Видимость 		= ИСТИНА;
			
		Иначе
			
			Если ЗначениеЗаполнено(Объект.СсылкаНаИзображение) Тогда
				
				ПодСсылку = "<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" 
				|""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
				|<HTML style=""font-family:arial; font-size:11px;"">
				|<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8""/>
				|<img src = """ + Объект.СсылкаНаИзображение + """>
				|</HTML>";
				Элементы.ПодСсылку.Видимость = ИСТИНА;
				
			ИначеЕсли ЗначениеЗаполнено(Объект.ИмяФайлаИзображения) Тогда
				Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.ПутьКФайлу;
				ПодСсылку = "<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" 
				|""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
				|<HTML style=""font-family:arial; font-size:11px;"">
				|<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8""/>
				|<img src = """ + Объект.ИмяФайлаИзображения + """>
				|</HTML>";
				
				Элементы.ПодСсылку.Видимость = ИСТИНА;
				
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.РазмерПриОтображении) Тогда
			Объект.РазмерПриОтображении = Перечисления.РазмерыКартинок.АвтоРазмер ;
		КонецЕсли;
		
		ВидимостьФлагаОсновноеИзображение();
		
		Если НЕ Объект.ЭтоОсновноеИзображениеОбъекта 
			И МенялиОсновноеИзображение Тогда
			
			МенялиОсновноеИзображение = ЛОЖЬ;
		КонецЕсли;     	
		
		Элементы.ПолучитьСWebCam.Видимость = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьWebcam");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерПриОтображенииПриИзменении(Элемент)	
	ОбновитьРазмерИзображения();	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФайл(Команда)
	
	АдресФайла = Объект.ИмяФайлаИзображения;
	
	ФорматТекст  = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Формат");
	ДиалогФильтр = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Все картинки") + " (*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf)|*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf|" 
    + ФорматТекст + " bmp (*.bmp;*.dib;*.rle)|*.bmp;*.dib;*.rle|"
    + ФорматТекст + " JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|"
    + ФорматТекст + " TIFF (*.tif)|*.tif|"
    + ФорматТекст + " GIF (*.gif)|*.gif|"
    + ФорматТекст + " PNG (*.png)|*.png|"
    + ФорматТекст + " icon (*.ico)|*.ico|"
    + ФорматТекст + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("метафайл") + " (*.wmf;*.emf)|*.wmf;*.emf|";
	
	ДиалогФильтр	 = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Файл изображения") + "(*.*)|*.*";
	ДиалогРасширение = "*";
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбФайла.Заголовок				= ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите файл сохранения изображения") + ": ";
	ДиалогВыбФайла.ПолноеИмяФайла			= АдресФайла;
	ДиалогВыбФайла.Фильтр					= ДиалогФильтр;
	ДиалогВыбФайла.Расширение				= ДиалогРасширение;
	ДиалогВыбФайла.МножественныйВыбор		= ЛОЖЬ;
	ДиалогВыбФайла.ИндексФильтра			= 0;
	Если ДиалогВыбФайла.Выбрать() Тогда
		СохранитьВФайлНаСервере(ДиалогВыбФайла.ПолноеИмяФайла);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура СохранитьВФайлНаСервере(Знач АдресФайла)
	
	ОбъектО = РеквизитФормыВЗначение("Объект");
	Изображение = ОбъектО.ХранилищеИзображения.Получить(); 
	Если НЕ Изображение = Неопределено Тогда
		Изображение.Записать(АдресФайла);	
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Нет изображения");
		Сообщение.УстановитьДанные(Объект);
		Сообщение.Сообщить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаНаИзображениеПриИзменении(Элемент)
	ОбновитьИзображение(1);	
КонецПроцедуры

&НаКлиенте
Процедура ЭтоОсновноеИзображениеОбъектаПриИзменении(Элемент)
	МенялиОсновноеИзображение = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзИнтернетНаДиск(Команда)
	
	Если ЗначениеЗаполнено(Объект.СсылкаНаИзображение) Тогда
		
		АдресЛокальноЗагрузки = "";
		ВыбранноеИмяФайла     = "";		
		Среда = ОбщийМодульПовтор.ПолучитьТекущуюСредуВыполнения();
		
		НачатьПомещениеФайла(Новый ОписаниеОповещения("ЗагрузитьИзИнтернетНаДискЗавершение", ЭтаФорма, Новый Структура("АдресЛокальноЗагрузки, ВыбранноеИмяФайла, Среда", АдресЛокальноЗагрузки, ВыбранноеИмяФайла, Среда)), АдресЛокальноЗагрузки, Объект.СсылкаНаИзображение, ?(Среда = 5, ИСТИНА, ЛОЖЬ), УникальныйИдентификатор);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзИнтернетНаДискЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	АдресЛокальноЗагрузки = ДополнительныеПараметры.АдресЛокальноЗагрузки;
	Среда = ДополнительныеПараметры.Среда;	
	
	Если Результат Тогда
		
		Отменить = ЛОЖЬ;		
		АдресЛокально = ОбщийМодульСервисСервер.ПолучитьКаталогСИзображениями(Объект.СвязанныйОбъект);
		
		ВыбранноеИмяФайла = ВыяснитьНаименованиеФайла(Объект.СсылкаНаИзображение);
		
		Если НЕ ЗначениеЗаполнено(АдресЛокально) Тогда
			ДиалогФильтр	 = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Каталог") + " (*.*)|*.*";
			ДиалогРасширение = ?(пустаястрока(объект.РасширениеФайла), "*", объект.РасширениеФайла);
			ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
			ДиалогВыбФайла.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите каталог для сохрания") + ":";
			ДиалогВыбФайла.Каталог       			=	АдресЛокально; // АДРЕС
			ДиалогВыбФайла.Фильтр					=	ДиалогФильтр;
			ДиалогВыбФайла.Расширение				=	ДиалогРасширение;
			ДиалогВыбФайла.МножественныйВыбор		=	ЛОЖЬ;
			ДиалогВыбФайла.ПредварительныйПросмотр	=	ЛОЖЬ;
			ДиалогВыбФайла.ИндексФильтра			=	0;
			Если ДиалогВыбФайла.Выбрать() Тогда
				АдресЛокально = ДиалогВыбФайла.Каталог;
			Иначе
				Отменить = ИСТИНА;
			КонецЕсли; 			
		КонецЕсли;
		
		Если НЕ Отменить Тогда
			
			ПолучитьФайл(АдресЛокальноЗагрузки, АдресЛокально + "\" + ВыбранноеИмяФайла, ?(Среда = 5, ИСТИНА, ЛОЖЬ));
			
			Объект.ИмяФайлаИзображения = АдресЛокально + "\" + ВыбранноеИмяФайла;
			Объект.СсылкаНаИзображение = "";
			
			Объект.ИзображениеВБазеДанных 	= ЛОЖЬ;
			
			ОбновитьИзображение(2);	
		КонецЕсли;
	КонецЕсли;
	
	ПроверитьНеобходимостьИзменитьРазмеры();

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНеобходимостьИзменитьРазмеры()
	
	Если НЕ ПустаяСтрока(Объект.РасширениеФайла) Тогда
		СтрокаДляПроверкиРасширения = Объект.РасширениеФайла;
	Иначе		
		СтрокаДляПроверкиРасширения = Объект.ИмяФайлаИзображения;	
	КонецЕсли;
	
	ПодСтрокаJPG = (Прав(СтрокаДляПроверкиРасширения, 3));
	ПодСтрокаJPEG = (Прав(СтрокаДляПроверкиРасширения, 4));
	
	Если НЕ НРег (ПодСтрокаJPG) = "jpg" И НЕ НРег (ПодСтрокаJPEG) = "jpeg" Тогда
		
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ПроверитьНеобходимостьИзменитьРазмерыЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Внимание! Указанный файл не является изображением JPG.") + Символы.ПС +
		ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Во многих интернет магазинах может не отображаться!"), 0, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Внимание!"));
        Возврат;		
	КонецЕсли;
	
	ПроверитьНеобходимостьИзменитьРазмерыФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНеобходимостьИзменитьРазмерыЗавершение(ДополнительныеПараметры) Экспорт
	
	ПроверитьНеобходимостьИзменитьРазмерыФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНеобходимостьИзменитьРазмерыФрагмент()
	
	Перем objImageFile, objImageProcess, АдресЛокально, СтрогиеРазмерыПредусмотреныеГруппой, ТекстОписаниеОшибки;
	
	СтрогиеРазмерыПредусмотреныеГруппой = РазмерыПредусмотреныРодителем(Объект.Родитель);
	Если СтрогиеРазмерыПредусмотреныеГруппой.РазмерыПредусмотрены Тогда
		
		Попытка
			// code by Игорь Гончаров gigantsales@gmail.com
			objImageFile = Новый COMОбъект("WIA.ImageFile");
			objImageProcess = Новый COMОбъект("WIA.ImageProcess");
			objImageFile.LoadFile(Объект.ИмяФайлаИзображения);
			
			objImageProcess.Filters.Add(objImageProcess.FilterInfos("Scale").FilterID);
			
			objImageProcess.Filters.Item(1).Properties.Item("MaximumWidth").Value  = СтрогиеРазмерыПредусмотреныеГруппой.РазмерПоГоризонтали;
			objImageProcess.Filters.Item(1).Properties.Item("MaximumHeight").Value = СтрогиеРазмерыПредусмотреныеГруппой.РазмерПоВертикали;
			
			objImageFile = objImageProcess.Apply(objImageFile);
			АдресЛокально = ОбщийМодульСервисСервер.ПолучитьКаталогСИзображениями(Объект.СвязанныйОбъект);
			
			УдалитьФайлы(Объект.ИмяФайлаИзображения);	 // функция не может перезаписывать файл!
			
			objImageFile.SaveFile(Объект.ИмяФайлаИзображения);
			
		Исключение
			ТекстОписаниеОшибки = ОписаниеОшибки();
			Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка скрипта изменения размера изображения") + ": " + ТекстОписаниеОшибки);
		КонецПопытки;
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция   РазмерыПредусмотреныРодителем(Знач ОбъектРодитель)
	
	СтрогиеРазмерыПредусмотреныеГруппой = Новый Структура;
	СтрогиеРазмерыПредусмотреныеГруппой.Вставить("РазмерПоГоризонтали", 0);
	СтрогиеРазмерыПредусмотреныеГруппой.Вставить("РазмерПоВертикали", 0);
	СтрогиеРазмерыПредусмотреныеГруппой.Вставить("РазмерыПредусмотрены", ЛОЖЬ);
	
	Если ЗначениеЗаполнено(ОбъектРодитель) Тогда
		СтрогиеРазмерыПредусмотреныеГруппой.РазмерПоГоризонтали = ОбъектРодитель.РазмерПоГоризонтали;
		СтрогиеРазмерыПредусмотреныеГруппой.РазмерПоВертикали 	= ОбъектРодитель.РазмерПоВертикали;
		Если НЕ СтрогиеРазмерыПредусмотреныеГруппой.РазмерПоГоризонтали = 0
			ИЛИ НЕ СтрогиеРазмерыПредусмотреныеГруппой.РазмерПоВертикали = 0 Тогда
			
			СтрогиеРазмерыПредусмотреныеГруппой.РазмерыПредусмотрены = ИСТИНА;
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтрогиеРазмерыПредусмотреныеГруппой;
	
КонецФункции

&НаКлиенте
Функция ВыяснитьНаименованиеФайла(Знач СсылкаНаИзображение)
	
	Если ПустаяСтрока(Объект.Наименование) Тогда
		АвтоНаименованиеОбъекта();	
	КонецЕсли;
	
	Результат = ВыяснитьНаименованиеФайлаИзображения(Объект.СсылкаНаИзображение, Объект.РасширениеФайла, Объект.Наименование);
	Объект.РасширениеФайла = Результат.РасширениеФайла;
	
	Возврат Результат.НаименованиеФайла;
	
КонецФункции

&НаСервере
Функция   СформироватьНаименованиеПоФормуле(Знач ФормулаНаименованияФайлаИзображения)
	
	РезультатНаименование = "";
	
	Если ЗначениеЗаполнено(ФормулаНаименованияФайлаИзображения) Тогда
		ФормулаНаименования = ФормулаНаименованияФайлаИзображения.Формула;
		
		Код 		= Объект.Код;
		Наиенование = Объект.Наименование;
		Владелец	= Объект.СвязанныйОбъект;
		НомерФото   = ПолучитьАвтоНомер(Наименование);
		
		Попытка
			Выполнить(" РезультатНаименование = " + ФормулаНаименования + "; ");
		Исключение 
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат РезультатНаименование;
	
КонецФункции

&НаКлиенте
Процедура ПолучитьСWebCam(Команда)
	
	Если ПустаяСтрока(Наименование) Тогда
		АвтоНаименованиеОбъекта(ИСТИНА);
	КонецЕсли;
	
	ЗаписыватьМолча = ИСТИНА;
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если глВерсияПлатформы < 803040000 Тогда ЗаписатьНаСервере(); Иначе Выполнить(" Записать(); "); КонецЕсли;
	КонецЕсли;
	ЗаписыватьМолча = ЛОЖЬ;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СвязанныйОбъект", Объект.СвязанныйОбъект);
	ПараметрыФормы.Вставить("СсылкаНаИзображение", Объект.СсылкаНаИзображение);
	ПараметрыФормы.Вставить("РасширениеФайла", Объект.РасширениеФайла);
	ПараметрыФормы.Вставить("Наименование", Объект.Наименование);
	
	АдресЛокально 		   = ОбщийМодульСервисСервер.ПолучитьКаталогСИзображениями(Объект.СвязанныйОбъект);
	РезультатНаименование  = ВыяснитьНаименованиеФайлаИзображения(Объект.СсылкаНаИзображение, Объект.РасширениеФайла, Объект.Наименование);
	Объект.РасширениеФайла = РезультатНаименование.РасширениеФайла;
	ВыбранноеИмяФайла 	   = РезультатНаименование.НаименованиеФайла;
	ИмяФайла 			   = АдресЛокально + "\" + ВыбранноеИмяФайла;
	
	РезультатФото = Неопределено;
	
	ОткрытьФорму("Справочник.Изображения.Форма.СнимокСКамеры", ПараметрыФормы, ЭтаФорма,,,, Новый ОписаниеОповещения("ПолучитьСWebCamЗавершение", ЭтаФорма, Новый Структура("ИмяФайла", ИмяФайла)), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСWebCamЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ИмяФайла = ДополнительныеПараметры.ИмяФайла;	
	
	РезультатФото = Результат;
	
	Если НЕ РезультатФото = Неопределено Тогда
		
		Попытка
			Если РезультатФото.ТолькоХранилище Тогда
				Фотография = ПолучитьИзВременногоХранилища(РезультатФото.Фото);
				Если НЕ Фотография = Неопределено Тогда
					Фотография.Записать(ИмяФайла);	
				КонецЕсли;
			Иначе
				КопироватьФайл(РезультатФото.Фото, ИмяФайла);
			КонецЕсли;		
			
			Объект.ИмяФайлаИзображения 	  = ИмяФайла;			
			Объект.СсылкаНаИзображение 	  = "";			
			Объект.ИзображениеВБазеДанных = ЛОЖЬ;			
			ОбновитьИзображение(2);	
			Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.ПутьКФайлу;
			
			ИмяФайлаИзображенияПриИзмененииЭлемент();
			
		Исключение
			ТекстОписаниеОшибки = ОписаниеОшибки();
			Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ошибка копирования в") + " " + РезультатФото.ИмяФайлаИзображения + " - " + ТекстОписаниеОшибки));
		КонецПопытки;
	КонецЕсли;

КонецПроцедуры

Функция   ВыяснитьНаименованиеФайлаИзображения(Знач СсылкаНаИзображение, Знач РасширениеФайла, Знач НаименованиеОбъекта) Экспорт
	
	Результат = Новый Структура("НаименованиеФайла, РасширениеФайла", "", РасширениеФайла);
	
	ФормулаНаименованияФайлаИзображения = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ФормулаНаименованияФайлаИзображения");
	
	Если ЗначениеЗаполнено(ФормулаНаименованияФайлаИзображения) Тогда
		Результат.НаименованиеФайла = СформироватьНаименованиеПоФормуле(ФормулаНаименованияФайлаИзображения);
		
		Если НЕ ПустаяСтрока(РасширениеФайла)
			И Найти(Результат.НаименованиеФайла, ".") = 0 Тогда
			
			Результат.НаименованиеФайла = Результат.НаименованиеФайла + "." + СокрЛП(РасширениеФайла);
		КонецЕсли;
		
	Иначе	
		Результат.НаименованиеФайла	= "";
		ДлинаСтроки = СтрДлина(СсылкаНаИзображение);
		Счетчик 	= ДлинаСтроки;
		Расширение  = "";
		ИдетРасширение = ИСТИНА;
		
		Пока Счетчик > 0 Цикл
			
			ТекущийСимвол = Сред(СсылкаНаИзображение, Счетчик, 1);
			
			Если ТекущийСимвол = "\"
				ИЛИ ТекущийСимвол = "/" Тогда
				
				Прервать;
			ИначеЕсли ИдетРасширение Тогда
				Расширение = ТекущийСимвол + Расширение;
			ИначеЕсли ТекущийСимвол = "." Тогда
				ИдетРасширение = ЛОЖЬ;
			Иначе
				Результат.НаименованиеФайла = ТекущийСимвол + Результат.НаименованиеФайла;
			КонецЕсли;		
			счетчик = счетчик - 1;
		КонецЦикла;
		
		Если НЕ ПустаяСтрока(Расширение) Тогда
			Результат.РасширениеФайла = Расширение;
		КонецЕсли;
		
		Если ПустаяСтрока(Результат.НаименованиеФайла) Тогда
			Результат.НаименованиеФайла = СокрЛП(НаименованиеОбъекта) + ".JPg";
			Результат.РасширениеФайла = "JPg";
		КонецЕсли;	
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ВыяснитьНаименованиеФайла

&НаСервере
Процедура ЗаписатьНаСервере()
	
	ЭтотОбъект1 = ДанныеФормыВзначение(Объект, Тип("СправочникОбъект.Изображения"));
	ЭтотОбъект1.Записать();
	ЗначениеВданныеФормы(ЭтотОбъект1, Объект); 
	
КонецПроцедуры
