// sza150514-0141 формирование
// sza140420-0445  
// sza131125-0349  
&НаКлиенте
Процедура ДобавитьШтрихКод(Команда)
	
	ПараметрыФормы = Новый Структура("Номенклатура", Номенклатура);
	ПараметрыФормы.Вставить("Серия", Объект.Ссылка);
	формаЗаписи = ПолучитьФорму("РегистрСведений.ШтрихКоды.ФормаЗаписи", ПараметрыФормы);
	формаЗаписи.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если НЕ Заблокирован
		И Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда
		
		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[ 1 ] = Неопределено Тогда
				ТекКод = Параметр[ 0 ];
			Иначе
				ТекКод = Параметр[ 1 ][ 1 ];
			КонецЕсли;
			
			Если Этаформа.ТекущийЭлемент = Элементы.Наименование Тогда
				Объект.Наименование = ТекКод;
			ИначеЕсли Этаформа.ТекущийЭлемент = Элементы.КодПродукта Тогда
				Объект.КодПродукта 	= ТекКод;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
	Элементы.ШтрихКодыСерии.Видимость = ИСТИНА;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
	
	Если ИспользоватьПодключаемоеОборудование Тогда
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить( "СканерШтрихКода" );
		МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
	
	Если НЕ Заблокирован
		И ИспользоватьПодключаемоеОборудование 
		И МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		
		ОписаниеОшибки = "" ;
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихКода");
		
		Если НЕ МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении оборудования произошла ошибка") + ": " + ОписаниеОшибки + ".";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
	ПроверитьБлокирование();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000350", ЭтаФорма, Отказ, Объект);
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ШтрихКодыСерии.Параметры.УстановитьЗначениеПараметра("СерияНоменклатуры", Объект.Ссылка);
		ИспользоватьШтрихКоды = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьШтрихКоды");
		
		Если НЕ ЗначениеЗаполнено(Объект.Владелец)
			И ЗначениеЗаполнено(Параметры.Номенклатура) Тогда
			
			Объект.Владелец = Параметры.Номенклатура;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда			
			Элементы.ДляУстановкиШтрихКодаДляСерииСледуетСначалаЕеСохранить.Видимость = ИспользоватьШтрихКоды;
			Элементы.ШтрихКодыСерии.Видимость = ЛОЖЬ;
		КонецЕсли;
		
		ИспользоватьПодключаемоеОборудование = ПодключаемоеОборудованиеДСервер.ИспользоватьПодключаемоеОборудование();
		
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда		
			Заблокирован = НЕ ОбщийМодульСервер.ПроверитьЧтоНоменклатураНеИспользовалась(Объект.Владелец, Объект.Ссылка);			
		Иначе
			Заблокирован = ЛОЖЬ;
		КонецЕсли;
		
		Номенклатура = Объект.Владелец;	
		
		Элементы.ДокументПриобретения.Видимость = ЗначениеЗаполнено(Объект.ДокументПриобретения);
		
		ИспользоватьДополнительныеКодыСерий = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьДополнительныеКодыСерий");
		Элементы.ДополнительныйКод1.Видимость = ИспользоватьДополнительныеКодыСерий;
		Элементы.ДополнительныйКод2.Видимость = ИспользоватьДополнительныеКодыСерий;
		Элементы.ДополнительныйКод3.Видимость = ИспользоватьДополнительныеКодыСерий;
		Элементы.ДополнительныйКод4.Видимость = ИспользоватьДополнительныеКодыСерий;
		Элементы.ДополнительныйКод5.Видимость = ИспользоватьДополнительныеКодыСерий;	
		
		ФормулаГенерацииСерий = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ФормулаГенерацииСерий");
		Элементы.СформироватьСерию.Видимость = ЗначениеЗаполнено(ФормулаГенерацииСерий);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьБлокирование()	
	Элементы.Наименование.ТолькоПросмотр = Заблокирован;	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ИспользоватьШтрихКоды Тогда
		ОбщийМодульТоварСервер.ЗарегистрироватьШтрихКод(Объект.Наименование, Объект.Владелец, , Объект.Ссылка);
		
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("КодыСерийУникальныИТакжеУказываютНаСерию") Тогда
			ОбщийМодульТоварСервер.ЗарегистрироватьШтрихКод(Объект.КодПродукта, Объект.Владелец, , Объект.Ссылка);
			ОбщийМодульТоварСервер.ЗарегистрироватьШтрихКод(Объект.ДополнительныйКод1, Объект.Владелец, , Объект.Ссылка);
			ОбщийМодульТоварСервер.ЗарегистрироватьШтрихКод(Объект.ДополнительныйКод2, Объект.Владелец, , Объект.Ссылка);
			ОбщийМодульТоварСервер.ЗарегистрироватьШтрихКод(Объект.ДополнительныйКод3, Объект.Владелец, , Объект.Ссылка);
			ОбщийМодульТоварСервер.ЗарегистрироватьШтрихКод(Объект.ДополнительныйКод4, Объект.Владелец, , Объект.Ссылка);
			ОбщийМодульТоварСервер.ЗарегистрироватьШтрихКод(Объект.ДополнительныйКод5, Объект.Владелец, , Объект.Ссылка);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСерию(Команда)
	
	НоваяСтрока = Объект.ОписаниеСерийНоменклатуры.Добавить();
	НоваяСтрока.Серия 	 = ОбщийМодульТоварСервер.СгенерироватьСерию(ФормулаГенерацииСерий, Объект.Владелец);
	НоваяСтрока.ШтрихКод = НоваяСтрока.Серия;
	
	Элементы.ОписаниеСерийНоменклатуры.ТекущаяСтрока  = НоваяСтрока.ПолучитьИдентификатор();
	Элементы.ОписаниеСерийНоменклатуры.ТекущийЭлемент = Элементы.ОписаниеСерийНоменклатурыКодПродукта;
	
КонецПроцедуры
