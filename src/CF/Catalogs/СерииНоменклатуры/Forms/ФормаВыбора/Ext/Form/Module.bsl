// sza150703-1527 с ост
// sza150511-0254 
// sza140420-0444  
// sza131127-2130  
&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000300", ЭтаФорма, Отказ, );
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ОтборПоСкладу 			  = Параметры.ОтборПоСкладу;
		Номенклатура			  = Параметры.Номенклатура;
		ОтборПоНоменклатура 	  = ЗначениеЗаполнено(Номенклатура);
		ВызовИзРасходаТовара 	  = Параметры.ВызовИзРасходаТовара;
		ИспользуетсяОтборПоСкладу = ВызовИзРасходаТовара И ЗначениеЗаполнено(Параметры.ОтборПоСкладу) И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетПоСкладам");
		ДатаОстатка = Параметры.ОтборПоДате;
		Если ДатаОстатка = '00010101000000' Тогда
			ДатаОстатка = ОбщийМодульСервисСервер.ПользователяТекущаяДата();
		КонецЕсли;
		
		Список.ТекстЗапроса = "ВЫБРАТЬ СправочникСерииНоменклатуры.Ссылка,
		|	СправочникСерииНоменклатуры.ПометкаУдаления,
		|	СправочникСерииНоменклатуры.Предопределенный,
		|	СправочникСерииНоменклатуры.Владелец,
		|	СправочникСерииНоменклатуры.Код,
		|	СправочникСерииНоменклатуры.Наименование,
		|	СправочникСерииНоменклатуры.КодПродукта,
		|	СправочникСерииНоменклатуры.Комментарий,
		|	СправочникСерииНоменклатуры.ДополнительныйКод1,
		|	СправочникСерииНоменклатуры.ДополнительныйКод2,
		|	СправочникСерииНоменклатуры.ДополнительныйКод3,
		|	СправочникСерииНоменклатуры.ДополнительныйКод4,
		|	СправочникСерииНоменклатуры.ДополнительныйКод5
		|ИЗ Справочник.СерииНоменклатуры КАК СправочникСерииНоменклатуры ";
		
		Если ВызовИзРасходаТовара Тогда								  
			Список.ТекстЗапроса = Список.ТекстЗапроса + " ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Товары.Остатки(
			|				&ДатаОстатка,
			|				(НЕ &ОтборПоСкладу
			|					ИЛИ Склад = &Склад)
			|					И (НЕ &ОтборПоНоменклатура ИЛИ Номенклатура = &Номенклатура)) КАК ТоварыОстатки
			|		ПО (ТоварыОстатки.СерияНоменклатуры = СправочникСерииНоменклатуры.Ссылка)
			|ГДЕ ТоварыОстатки.КоличествоОстаток > 0";			
			
			Список.Параметры.УстановитьЗначениеПараметра("ОтборПоСкладу", ИспользуетсяОтборПоСкладу);
			Список.Параметры.УстановитьЗначениеПараметра("Склад", ОтборПоСкладу);
			Список.Параметры.УстановитьЗначениеПараметра("ДатаОстатка", ДатаОстатка);	
			Список.Параметры.УстановитьЗначениеПараметра("ОтборПоНоменклатура", ОтборПоНоменклатура);
			Список.Параметры.УстановитьЗначениеПараметра("Номенклатура", Номенклатура);	
		КонецЕсли;
		
		Элементы.ОтборДляДокумента.Видимость = ВызовИзРасходаТовара;
		Элементы.Номенклатура.Видимость		 = ВызовИзРасходаТовара;
		Элементы.Отбор.Видимость 			 = НЕ ВызовИзРасходаТовара;
		
		ОбщийМодульСервер.ОбеспечитьСписокОтборов(Список);
		
		ИспользоватьДополнительныеКодыСерий = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьДополнительныеКодыСерий");
		Элементы.ДополнительныйКод1.Видимость = ИспользоватьДополнительныеКодыСерий;
		Элементы.ДополнительныйКод2.Видимость = ИспользоватьДополнительныеКодыСерий;
		Элементы.ДополнительныйКод3.Видимость = ИспользоватьДополнительныеКодыСерий;
		Элементы.ДополнительныйКод4.Видимость = ИспользоватьДополнительныеКодыСерий;
		Элементы.ДополнительныйКод5.Видимость = ИспользоватьДополнительныеКодыСерий;	
	КонецЕсли;
	
КонецПроцедуры
