//sza140523-0242 SZA: 
//sza140403-0112 SZA: 

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахНаЯзыкеПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНаДругихЯзыках(Команда)
	Элементы.НаименованияНаДругихЯзыках.Видимость  = НЕ Элементы.НаименованияНаДругихЯзыках.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНаименованияПриИзменении(Элемент)
	
	объект.Наименование = ПредставлениеНаименования;
	НаименованиеИзменяли = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000300", ЭтаФорма, Отказ, Объект);
	
	Если НЕ Отказ Тогда
		ОбъектСсылка = Объект.Ссылка;
		
		ДопИнфоТипВладельца = ОбщийМодульПовтор.ПолучитьТипВладельца(ОбъектСсылка); 	
		ОбщийМодульСервисСервер.ЗаполнитьДополнительнуюИнформацию(ОбъектСсылка, ДополнительнаяИнформация, ДопИнфоТипВладельца);
		
		ПоддержкаДругихЯзыков = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПоддерживатьИныеЯзыкиКромеРусского") 
		И ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ПоддерживатьНаименованияНаДругихЯзыкахКромеРусского", Истина);
		
		Если Не ЗначениеЗаполнено(ОбъектСсылка) Тогда
			Объект.Количество = 1;
			
		Иначе
			Элементы.ГруппаКнопокКоличества.Видимость  = Ложь;
			Элементы.ТиповыеЕдиницыИзмерения.Видимость = Ложь;
			
			если ПоддержкаДругихЯзыков тогда
				
				ПредставлениеНаименования = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(объектСсылка);
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ ЗначенияНаДругихЯзыках.Язык,
				|	ЗначенияНаДругихЯзыках.НаЯзыке,
				|	ЗначенияНаДругихЯзыках.Поле
				|ИЗ РегистрСведений.ЗначенияНаДругихЯзыках КАК ЗначенияНаДругихЯзыках
				|ГДЕ ЗначенияНаДругихЯзыках.ОбъектБазыДанных = &ОбъектБазыДанных";
				
				Запрос.УстановитьПараметр("ОбъектБазыДанных", ОбъектСсылка);
				
				РезультатЗапроса = Запрос.Выполнить();
				если не РезультатЗапроса.Пустой() тогда
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						Если ВыборкаДетальныеЗаписи.Поле = "Наименование" Тогда
							СтрокаЯзыка = НаименованияНаДругихЯзыках.Добавить();
							СтрокаЯзыка.Язык 	= ВыборкаДетальныеЗаписи.Язык;
							СтрокаЯзыка.НаЯзыке = ВыборкаДетальныеЗаписи.НаЯзыке;	
						КонецЕсли;
					КонецЦикла;
					
				КонецЕсли;
				
			иначе
				ПредставлениеНаименования = объект.Наименование;
				
			КонецЕсли;		
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	ВыполненияРаботТовары.Ссылка,
			|	ПеремещенияТовараТовары.Ссылка КАК Ссылка1,
			|	ПоступленияТовараТовары.Ссылка КАК Ссылка2,
			|	РасходыТовараТовары.Ссылка КАК Ссылка3
			|ИЗ
			|	Документ.ВыполненияРабот.Товары КАК ВыполненияРаботТовары,
			|	Документ.ПеремещенияТовара.Товары КАК ПеремещенияТовараТовары,
			|	Документ.ПоступленияТовара.Товары КАК ПоступленияТовараТовары,
			|	Документ.РасходыТовара.Товары КАК РасходыТовараТовары
			|ГДЕ
			|	ВыполненияРаботТовары.ЕдиницаИзмерения = &ЕдиницаИзмерения
			|	И ПеремещенияТовараТовары.ЕдиницаИзмерения = &ЕдиницаИзмерения
			|	И ПоступленияТовараТовары.ЕдиницаИзмерения = &ЕдиницаИзмерения
			|	И РасходыТовараТовары.ЕдиницаИзмерения = &ЕдиницаИзмерения
			|	И ПоступленияТовараТовары.Ссылка.Проведен = ИСТИНА
			|	И ПеремещенияТовараТовары.Ссылка.Проведен = ИСТИНА
			|	И ВыполненияРаботТовары.Ссылка.Проведен = ИСТИНА
			|	И РасходыТовараТовары.Ссылка.Проведен = ИСТИНА";
			
			Запрос.УстановитьПараметр("ЕдиницаИзмерения", ОбъектСсылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			если не РезультатЗапроса.Пустой() тогда
				Элементы.Количество.ТолькоПросмотр = Истина;
			КонецЕсли;		
		КонецЕсли;
		
		Элементы.Цены.Видимость = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьСложныйМеханизмЦен") И ЗначениеЗаполнено(ОбъектСсылка);
		Цены.Отбор.Элементы[0].ПравоеЗначение = ОбъектСсылка;
		
		Элементы.Количество01.Видимость = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("КоличествоНоменклатурыМожетБытьДробным") ;
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.Количество, Истина); 	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	если ПоддержкаДругихЯзыков тогда
		если НаименованиеИзменяли тогда
			ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, ПредставлениеНаименования);
		КонецЕсли;
		
		Если БылиИзмененияЗначенияПолейНаЯзыках Тогда
			Для Каждого СтрокаЯзыка Из НаименованияНаДругихЯзыках Цикл
				ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, СтрокаЯзыка.НаЯзыке, "Наименование", СтрокаЯзыка.Язык);	
			КонецЦикла;
		КонецЕсли;
		
	конецесли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Объект.Ссылка, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Объект.Ссылка, Истина);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	КоличествоПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КоличествоПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		Объект.Вес = Объект.Владелец.Вес * Объект.Количество;
		Если НЕ ЗначениеЗаполнено(Объект.Длина) Тогда
			Объект.Длина = Объект.Владелец.Длина * Объект.Количество;
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВесПриИзменении(Элемент)
	ВесПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВесПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(объект.Владелец.Вес)
		и ЗначениеЗаполнено(Объект.Вес)
		и не объект.Вес = объект.Владелец.Вес * Объект.Количество Тогда
		
		Сообщить(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вес номенклатуры рассчитан неверно:") + " " + Сокрлп(объект.Владелец.Вес));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Штука(Команда)
	
	ПредставлениеНаименования = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("шт.");
	НаименованиеИзменяли = Истина;
	Объект.Комментарий = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Штука");
	
КонецПроцедуры

&НаКлиенте
Процедура Литр(Команда)
	
	ПредставлениеНаименования = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("л.");
	НаименованиеИзменяли = Истина;
	Объект.Комментарий = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Литр");
	
КонецПроцедуры

&НаКлиенте
Процедура Метр(Команда)
	
	ПредставлениеНаименования = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("м.");
	НаименованиеИзменяли = Истина;
	Объект.Комментарий = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Метр");
	
КонецПроцедуры

&НаКлиенте
Процедура Упаковка(Команда)
	
	ПредставлениеНаименования = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("уп.");
	НаименованиеИзменяли = Истина;
	Объект.Комментарий = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Упаковка");
	
КонецПроцедуры

&НаКлиенте
Процедура Количество10(Команда)
	Объект.Количество = 10;
КонецПроцедуры

&НаКлиенте
Процедура Количество100(Команда)
	Объект.Количество = 100;
КонецПроцедуры

&НаКлиенте
Процедура Количество1000(Команда)
	Объект.Количество = 1000;
КонецПроцедуры

&НаКлиенте
Процедура КоличествоОчистка(Элемент, СтандартнаяОбработка)
	Объект.Количество = 1;
КонецПроцедуры

&НаКлиенте
Процедура Количество01(Команда)
	Объект.Количество = 0.1;
КонецПроцедуры

&НаКлиенте
Процедура Услуга(Команда)
	
	ПредставлениеНаименования = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("усл.");
	НаименованиеИзменяли = Истина;
	Объект.Комментарий = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Услуга");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Элементы.Цены.Видимость = ОбщийМодульПовтор.получитьЗначениеНастройкиИлиКонстанты("ИспользоватьСложныйМеханизмЦен") И ЗначениеЗаполнено(Объект.Ссылка);
	Цены.Отбор.Элементы[0].ПравоеЗначение = Объект.Ссылка;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияПриИзменении(Элемент)
	ДопИнформацияИзменена = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияВидИнформацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура("ТипВладельца", ДопИнфоТипВладельца);
	ФормаВыбораВидаИнформации = ПолучитьФорму("Справочник.ДополнительныеРеквизиты.ФормаВыбора", ПараметрыФормы, ЭтаФорма);	
	ВидИнформации = ФормаВыбораВидаИнформации.ОткрытьМодально();
	Если ЗначениеЗаполнено(ВидИнформации) Тогда
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.ВидИнформации = ВидИнформации;
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.Информация = ОбщийМодульКлиент.ПолучитьЗначениеПоУмолчаниюПоляДополнительнойИнформации(ВидИнформации);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры
