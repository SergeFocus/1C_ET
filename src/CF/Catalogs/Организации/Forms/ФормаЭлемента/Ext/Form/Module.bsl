// sza140710-1852  локац
// sza140429-1758 : 
// sza131115-1642
&НаКлиенте
Процедура ВидимостьТаблицСправа()
	Элементы.ГруппаСтраницСправа.Видимость = НЕ НеПоказыватьТаблицыСправа;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		ПоказатьВопрос(Новый ОписаниеОповещения("ДобавитьИзображениеЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сначала следует записать этот элемент. Записать?"), РежимДиалогаВопрос.ДаНет);
        Возврат;
	КонецЕсли;
	
	ДобавитьИзображениеФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда		
		Записать();	
	КонецЕсли;
	
	ДобавитьИзображениеФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеФрагмент()
	
	Перем ПараметрыФормы, формаИзображения;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("СвязанныйОбъект", Объект.Ссылка);
		формаИзображения = ПолучитьФорму("Справочник.Изображения.ФормаОбъекта", ПараметрыФормы);	
		формаИзображения.Открыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияВидИнформацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура("ТипВладельца", ДопИнфоТипВладельца);
	ФормаВыбораВидаИнформации = ПолучитьФорму("Справочник.ДополнительныеРеквизиты.ФормаВыбора", ПараметрыФормы, ЭтаФорма);	
	ВидИнформации = ФормаВыбораВидаИнформации.ОткрытьМодально();
	Если ЗначениеЗаполнено(ВидИнформации) Тогда
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.ВидИнформации = ВидИнформации;
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.Информация = ОбщийМодульКлиент.ПолучитьЗначениеПоУмолчаниюПоляДополнительнойИнформации(ВидИнформации);
		СтандартнаяОбработка = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияПриИзменении(Элемент)
	ДопИнформацияИзменена = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ИзображенияПриАктивизацииСтроки(Элемент)
	
	ТекущийЭлементСписка = Элементы.Изображения.ТекущаяСтрока;
	Если ЗначениеЗаполнено(ТекущийЭлементСписка) Тогда
		СтруктураИзображения = ОбщийМодульСервер.ПолучитьСтруктуруИзображения(ТекущийЭлементСписка);
		ПодСсылку = СтруктураИзображения.ПодСсылку;
		
		Элементы.СсылкаНаИзображение.Видимость    = не СтруктураИзображения.ИзображениеВБазеДанных;
		Элементы.ИзображениеВБазеДанных.Видимость = СтруктураИзображения.ИзображениеВБазеДанных;
		
		Если СтруктураИзображения.РазмерПриОтображении = 1 тогда
			Элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.АвтоРазмер
		Иначеесли СтруктураИзображения.РазмерПриОтображении = 2 тогда
			Элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.Пропорционально
		Иначеесли СтруктураИзображения.РазмерПриОтображении = 3 тогда
			Элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.Растянуть
		Иначеесли СтруктураИзображения.РазмерПриОтображении = 4 тогда
			Элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.РеальныйРазмер
		Иначеесли СтруктураИзображения.РазмерПриОтображении = 5 тогда
			Элементы.ИзображениеВБазеДанных.РазмерКартинки = РазмерКартинки.Черепица
		КонецЕсли; 		 
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеДляПечатиНаДругихЯзыках(Команда)
	Элементы.НаименованияДляПечатиНаДругихЯзыках.Видимость = не Элементы.НаименованияДляПечатиНаДругихЯзыках.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеДляПечатиПриИзменении(Элемент)
	
	Объект.НаименованиеДляПечати = НаименованиеДляПечати;
	НаименованиеИзменяли = ИСТИНА;
	
	Если ПереводитьНаименованияАвтоматически Тогда
		ОбщийМодульКлиент.ПеревестиНаименованияАвтоматически(НаименованиеДляПечати, НаименованияДляПечатиНаДругихЯзыках);
		БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Объект.Наименование = Наименование;
	НаименованиеИзменяли = ИСТИНА;
	
	Если ПереводитьНаименованияАвтоматически Тогда
		ОбщийМодульКлиент.ПеревестиНаименованияАвтоматически(Наименование, НаименованияНаДругихЯзыках);
		БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованияДляПечатиНаДругихЯзыкахНаЯзыкеПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияДляПечатиНаДругихЯзыкахПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахНаЯзыкеПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ТекущаяСтраница = Элементы.ГруппаСтраницСправа.ТекущаяСтраница;
	СтраницыПанели  = Элементы.ГруппаСтраницСправа.ПодчиненныеЭлементы;
	СтраницаПанели  = СтраницыПанели.Индекс(ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(Объект.Наименование) 
		И ЗначениеЗаполнено(Объект.НаименованиеДляПечати) Тогда
		
		Объект.Наименование = Объект.НаименованиеДляПечати;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Элементы.ДоговораЮридическогоЛица.Видимость = ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВестиУчетОтдельныхДоговоровСКонтрагентамиПС") И НЕ ОбщийМодульСервер.ЧислоДоговоровСЮрЛицом(Объект.Ссылка) = 0;
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПоддержкаДругихЯзыков тогда
		Если НаименованиеИзменяли тогда
			ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, Наименование);
			ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, НаименованиеДляПечати, "НаименованиеДляПечати");
		КонецЕсли;
		
		Если БылиИзмененияЗначенияПолейНаЯзыках Тогда
			Для Каждого СтрокаЯзыка Из НаименованияНаДругихЯзыках Цикл
				ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, СтрокаЯзыка.НаЯзыке, "Наименование", СтрокаЯзыка.Язык);
			КонецЦикла;
			Для Каждого СтрокаЯзыка Из НаименованияДляПечатиНаДругихЯзыках Цикл
				ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, СтрокаЯзыка.НаЯзыке, "НаименованиеДляПечати", СтрокаЯзыка.Язык);
			КонецЦикла;
			ОбновитьПовторноИспользуемыеЗначения();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДопИнформацияИзменена Тогда
		ОбщийМодульСервисСервер.ЗаписатьДополнительнуюИнформацию(Объект.Ссылка, ДополнительнаяИнформация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНаДругихЯзыках(Команда)
	Элементы.НаименованияНаДругихЯзыках.Видимость  = НЕ Элементы.НаименованияНаДругихЯзыках.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Объект.Ссылка, ИСТИНА);
	
	Если ЗначениеЗаполнено(Объект.Ссылка)
		И ЗначениеЗаполнено(СтраницаПанели)Тогда
		
		попытка
			СтраницыПанели  = Элементы.ГруппаСтраницСправа.ПодчиненныеЭлементы;
			ТекущаяСтраница = СтраницыПанели.получить(СтраницаПанели);
			Элементы.ГруппаСтраницСправа.ТекущаяСтраница = ТекущаяСтраница;
		Исключение
		КонецПопытки;
	КонецЕсли;	
	
	ВидимостьТаблицСправа();
	ОбновитьВидимостьТелефонов();
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("РегионРегламентированногоУчета") = ПредопределенноеЗначение("Перечисление.РегионыРегламентированногоУчета.Украина") Тогда
		Элементы.ОКПО.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("ЕДРПОУ");
		Элементы.МФО.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("МФО / SWIFT");
		Элементы.КПП.Видимость = ЛОЖЬ;
		Элементы.ВидДеятельностиПоОКДП.Видимость = ЛОЖЬ;
		
	ИначеЕсли ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("РегионРегламентированногоУчета") = ПредопределенноеЗначение("Перечисление.РегионыРегламентированногоУчета.Россия") Тогда
		Элементы.МФО.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("БИК / SWIFT");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("001150", ЭтаФорма, Отказ, Объект);
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ОбъектСсылка = Объект.Ссылка;
		
		ДопИнфоТипВладельца = ОбщийМодульПовтор.ПолучитьТипВладельца(ОбъектСсылка); 	
		ОбщийМодульСервисСервер.ЗаполнитьДополнительнуюИнформацию(ОбъектСсылка, ДополнительнаяИнформация, ДопИнфоТипВладельца);
		
		Если НЕ ЗначениеЗаполнено(ОбъектСсылка) Тогда
			
			Если НЕ ЗначениеЗаполнено(Объект.ВидЦен) Тогда
				ВидЦен = ПредопределенноеЗначение("Справочник.ВидыЦен.ГлавныйВидЦен");
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Объект.ПравовойСтатус) Тогда
				Объект.ПравовойСтатус = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПравовойСтатусПоУмолчанию");
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
				Объект.Склад = ПредопределенноеЗначение("Справочник.Склады.ОсновнойСклад");
			КонецЕсли;
		КонецЕсли;
		
		ДоговораЮридическогоЛица.Параметры.УстановитьЗначениеПараметра("Организация", ОбъектСсылка);	
		Заказы.Параметры.УстановитьЗначениеПараметра("Организация", ОбъектСсылка);	
		Заказы.Параметры.УстановитьЗначениеПараметра("Дата", ОбщийМодульСервисСервер.ПользователяТекущаяДата());	
		Изображения.Параметры.УстановитьЗначениеПараметра("Владелец", ОбъектСсылка);
		
		ВестиУчетОтдельныхДоговоровСКонтрагентамиПС = ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВестиУчетОтдельныхДоговоровСКонтрагентамиПС");
		Элементы.ДоговораЮридическогоЛица.Видимость = ВестиУчетОтдельныхДоговоровСКонтрагентамиПС И НЕ ОбщийМодульСервер.ЧислоДоговоровСЮрЛицом(ОбъектСсылка) = 0;
		Элементы.СоздатьНовыйДоговор.Видимость 		= ВестиУчетОтдельныхДоговоровСКонтрагентамиПС И ЗначениеЗаполнено(ОбъектСсылка);
		Элементы.Заказы.Видимость 					= ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетЗаказовПоставщикам") ИЛи ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВестиУчетЗаказовКлиентов");
		Элементы.Изображения.Видимость 				= ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("СопровождатьОрганизацииИзображениями");
		
		ПоддержкаДругихЯзыков = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПоддерживатьИныеЯзыкиКромеРусского") 
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПоддерживатьНаименованияНаДругихЯзыкахКромеРусского", ИСТИНА);
		
		Если ПоддержкаДругихЯзыков 
			И ЗначениеЗаполнено(ОбъектСсылка) Тогда
			
			Наименование = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(ОбъектСсылка);
			НаименованиеДляПечати = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(ОбъектСсылка, "НаименованиеДляПечати");
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ЗначенияНаДругихЯзыках.Язык,
			|	ЗначенияНаДругихЯзыках.НаЯзыке,
			|	ЗначенияНаДругихЯзыках.Поле
			|ИЗ РегистрСведений.ЗначенияНаДругихЯзыках КАК ЗначенияНаДругихЯзыках
			|ГДЕ ЗначенияНаДругихЯзыках.ОбъектБазыДанных = &ОбъектБазыДанных";
			
			Запрос.УстановитьПараметр("ОбъектБазыДанных", ОбъектСсылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Если ВыборкаДетальныеЗаписи.Поле = "Наименование" Тогда
						СтрокаЯзыка = НаименованияНаДругихЯзыках.Добавить();
						СтрокаЯзыка.Язык 	= ВыборкаДетальныеЗаписи.Язык;
						СтрокаЯзыка.НаЯзыке = ВыборкаДетальныеЗаписи.НаЯзыке;	
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		Иначе
			Наименование = Объект.Наименование;
			НаименованиеДляПечати = Объект.НаименованиеДляПечати;			
		КонецЕсли;	
		
		Если ПоддержкаДругихЯзыков Тогда
			ПереводитьНаименованияАвтоматически = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьРегистрТекстовНаДругихЯзыкахДляАвтоматическогоПереводаНаименований");
			Элементы.НаименованияНаДругихЯзыкахЯзык.РежимВыбораИзСписка = ИСТИНА;
			ОбщийМодульПовтор.УстановитьСписокДоступныхЯзыков(Элементы.НаименованияНаДругихЯзыкахЯзык.СписокВыбора, ИСТИНА);
			
			Элементы.НаименованияДляПечатиНаДругихЯзыкахЯзык.РежимВыбораИзСписка = ИСТИНА;
			ОбщийМодульПовтор.УстановитьСписокДоступныхЯзыков(Элементы.НаименованияДляПечатиНаДругихЯзыкахЯзык.СписокВыбора, ИСТИНА);
		КонецЕсли;
		
		ОбщийМодульСервисСервер.ОформитьФорматКоличества(Элементы.ЗаказыТовараВКоличестве, , ИСТИНА);	
		
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьРегионыДляУчетаСтранАЛокацииГородов") Тогда
			Элементы.Регион.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Страна");
			Элементы.Локация.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Город");
		КонецЕсли;
		
		ОбщийМодульСервер.ОбеспечитьСписокОтборов(ДоговораЮридическогоЛица);
		ОбщийМодульСервер.ОбеспечитьСписокОтборов(Заказы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СменитьВидОкна(Команда)
	
	НеПоказыватьТаблицыСправа = НЕ НеПоказыватьТаблицыСправа;
	ВидимостьТаблицСправа();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовыйДоговор(Команда)
	
	ПараметрыДляФормы = Новый Структура("ЮрЛицо", Объект.Ссылка);
	ФормаДоговора = ПолучитьФорму("Справочник.Договора.ФормаОбъекта", ПараметрыДляФормы);
	ФормаДоговора.отКрыть();
	
	Элементы.ДоговораЮридическогоЛица.Видимость = ОбщийМодульПовтор.ПолучитьПараметрСеанса("ВестиУчетОтдельныхДоговоровСКонтрагентамиПС") И НЕ ОбщийМодульСервер.ЧислоДоговоровСЮрЛицом(Объект.Ссылка) = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСложноеПолноеНаименование(Команда)
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("РегионРегламентированногоУчета") = ПредопределенноеЗначение("Перечисление.РегионыРегламентированногоУчета.Украина") Тогда
		ТекстМФО = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("МФО");
	ИначеЕсли ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("РегионРегламентированногоУчета") = ПредопределенноеЗначение("Перечисление.РегионыРегламентированногоУчета.Россия") Тогда
		ТекстМФО = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("БИК");
	КонецЕсли;
	
	Объект.НаименованиеДляПечати = "" + Объект.Наименование + 
	?(ЗначениеЗаполнено(Объект.ИНН), ", " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("ИНН") + " " + СокрЛП(Объект.ИНН), "") +
	?(ЗначениеЗаполнено(Объект.КПП), ", " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("КПП") + " " + СокрЛП(Объект.КПП), "") +
	?(ЗначениеЗаполнено(Объект.Адрес), ", " + СокрЛП(Объект.Адрес), "") +
	?(ЗначениеЗаполнено(Объект.НомерСчета), ", " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("р/с") + " " + СокрЛП(Объект.НомерСчета), "") +
	?(ЗначениеЗаполнено(Объект.НаименованиеБанка), ", " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("в банке") + " " + СокрЛП(Объект.НаименованиеБанка), "") +
	?(ЗначениеЗаполнено(Объект.МФО), ", " + ТекстМФО + " " + СокрЛП(Объект.МФО), "") +
	?(ЗначениеЗаполнено(Объект.КорреспондентскийСчет), ", " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("к/с") + " " + СокрЛП(Объект.КорреспондентскийСчет), "");
	
	НаименованиеДляПечати = Объект.НаименованиеДляПечати;
	
КонецПроцедуры

&НаКлиенте
Процедура ХранилищеДенегХранилищеПополненияПриИзменении(Элемент)
	ХранилищеДенегХранилищеПополненияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ХранилищеДенегХранилищеПополненияПриИзмененииНаСервере()
	
	Если значениезаполнено(Объект.ХранилищеДенег) 
		И НЕ Объект.ХранилищеДенег.ФормаОплаты = перечисления.ФормыОплаты.Наличные тогда
		
		Объект.МФО 			= Объект.ХранилищеДенег.МФО;
		Объект.НомерСчета 	= Объект.ХранилищеДенег.НомерСчета;
		Объект.НаименованиеБанка = Объект.ХранилищеДенег.НаименованиеБанка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьАдрес(Команда)
	
	Если Объект.Адрес = "" Тогда
		Объект.Адрес = ОбщийМодульКлиент.СформироватьАдрес(Объект.Регион, Объект.Локация, Объект.ПочтовыйИндекс);	
	Иначе 
		ПоказатьВопрос(Новый ОписаниеОповещения("СформироватьАдресЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Вы хотите сформировать адрес заново?"), РежимДиалогаВопрос.ДаНет, , , ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Формирование адреса"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьАдресЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда		
		Объект.Адрес = ОбщийМодульКлиент.СформироватьАдрес(Объект.Регион, Объект.Локация, Объект.ПочтовыйИндекс);	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТелефонПриИзменении(Элемент)
	ОбновитьВидимостьТелефонов();
КонецПроцедуры

&НаКлиенте
Процедура Телефон2ПриИзменении(Элемент)
	ОбновитьВидимостьТелефонов();
КонецПроцедуры

&НаКлиенте
Процедура Телефон3ПриИзменении(Элемент)
	ОбновитьВидимостьТелефонов();
КонецПроцедуры

&НаКлиенте
Процедура Телефон4ПриИзменении(Элемент)
	ОбновитьВидимостьТелефонов();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимостьТелефонов()
	
	Элементы.Телефон2.Видимость = ЗначениеЗаполнено(Объект.Телефон) ИЛИ ЗначениеЗаполнено(Объект.Телефон2);
	Элементы.Телефон3.Видимость = ЗначениеЗаполнено(Объект.Телефон2) ИЛИ ЗначениеЗаполнено(Объект.Телефон3);
	Элементы.Телефон4.Видимость = ЗначениеЗаполнено(Объект.Телефон3) ИЛИ ЗначениеЗаполнено(Объект.Телефон4);
	Элементы.Телефон5.Видимость = ЗначениеЗаполнено(Объект.Телефон4) ИЛИ ЗначениеЗаполнено(Объект.Телефон5);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮридическийАдресОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
	Если НЕ ПустаяСтрока(Объект.Адрес)
		И ПустаяСтрока(Объект.ЮридическийАдрес) Тогда
			
		Объект.ЮридическийАдрес = Объект.Адрес;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура АдресОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
	Если ПустаяСтрока(Объект.Адрес)
		И НЕ ПустаяСтрока(Объект.ЮридическийАдрес) Тогда
			
		Объект.Адрес = Объект.ЮридическийАдрес;
	КонецЕсли;
		
КонецПроцедуры
