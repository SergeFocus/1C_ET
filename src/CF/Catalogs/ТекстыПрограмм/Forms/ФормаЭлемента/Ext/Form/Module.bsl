// sza151013-0510

&НаКлиенте
Процедура ВыгрузитьКодВФайл(Команда)
	
	ДиалогФильтр	 = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Файл текста") + " (*.txt*)|*.txt*";
	ДиалогРасширение = "*";
	ДиалогДляВыбораФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогДляВыбораФайла.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите файл для записи кода") + ":";
	ДиалогДляВыбораФайла.ПолноеИмяФайла			=	АдресФайла; //АДРЕС
	ДиалогДляВыбораФайла.Фильтр					=	ДиалогФильтр;
	ДиалогДляВыбораФайла.Расширение				=	ДиалогРасширение;
	ДиалогДляВыбораФайла.МножественныйВыбор		=	Ложь;
	ДиалогДляВыбораФайла.ПредварительныйПросмотр	=	Ложь;
	ДиалогДляВыбораФайла.ИндексФильтра			=	0;
	
	Если ДиалогДляВыбораФайла.Выбрать() Тогда
		АдресФайла = ДиалогДляВыбораФайла.ПолноеИмяФайла;
		
		ТекстДок = Новый ТекстовыйДокумент;
		
		ТекстДок.Очистить();
		ТекстДок.ДобавитьСтроку("//<01> " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Программный код для выполнения в базе данных конфигурации Элементарная торговля") + " www.ELTR.od.ua");
		ТекстДок.ДобавитьСтроку("//<02> " + Объект.Наименование);
		Если НЕ ПустаяСтрока(Объект.ПолноеОписание) Тогда
			ТекстДок.ДобавитьСтроку("//<03> " + СтрЗаменить(Объект.ПолноеОписание, Символы.ПС, "//<03> "));	
		КонецЕсли;
		ТекстДок.ДобавитьСтроку("//<04> " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Дата разработки") + ": " + Объект.ДатаРазработки);
		Если НЕ ПустаяСтрока(Объект.Программист) Тогда
			ТекстДок.ДобавитьСтроку("//<05> " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Программист") + ": " + Объект.Программист);	
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(Объект.МинимальнаяВерсияКонфигурации) Тогда
			ТекстДок.ДобавитьСтроку("//<06> " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Минимальная версия конфигурации") + ": " + Объект.МинимальнаяВерсияКонфигурации);
		КонецЕсли;
		Если НЕ ПустаяСтрока(Объект.МаксимальнаяВерсияКонфигурации) Тогда
			ТекстДок.ДобавитьСтроку("//<07> " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Максимальная версия конфигурации") + ": " + Объект.МаксимальнаяВерсияКонфигурации);
		КонецЕсли;
		Если НЕ ПустаяСтрока(Объект.МинимальнаяВерсияПлатформы) Тогда
			ТекстДок.ДобавитьСтроку("//<08> " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Минимальная версия платформы") + ": " + Объект.МинимальнаяВерсияПлатформы);
		КонецЕсли;
		Если НЕ ПустаяСтрока(Объект.МаксимальнаяВерсияПлатформы) Тогда
			ТекстДок.ДобавитьСтроку("//<09> " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Максимальная версия платформы") + ": " + Объект.МаксимальнаяВерсияПлатформы);
		КонецЕсли;
		
		ТекстДок.ДобавитьСтроку("//<10> " + Объект.ВыполняетсяНа);
		ТекстДок.ДобавитьСтроку(" " + Объект.ТекстПрограммы);
		ТекстДок.ДобавитьСтроку("//<11> " + Объект.ВыполняетсяНа2);
		ТекстДок.ДобавитьСтроку(" " + Объект.ТекстПрограммы2);
		ТекстДок.ДобавитьСтроку("//<12> " + Объект.ВыполняетсяНа3);
		ТекстДок.ДобавитьСтроку(" " + Объект.ТекстПрограммы3);
		ТекстДок.ДобавитьСтроку("//<13> ." + ТекущаяДата());
		
		ТекстДок.Записать(АдресФайла);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПрограммныйКод1СНаКлиенте(Знач ПрограммныйКод1СДляВыполнения, ПереданноеЗначение = Неопределено)
	
	Попытка 
		Выполнить ("" + ПрограммныйКод1СДляВыполнения + ";");
	Исключение 	
		ТекстОписаниеОшибки = ОписаниеОшибки();
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ТекстОписаниеОшибки);
	КонецПопытки;	
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПрограммныйКод1СНаСервере(Знач ПрограммныйКод1СДляВыполнения, ПереданноеЗначение = Неопределено)
	
	Попытка 
		Выполнить ("" + ПрограммныйКод1СДляВыполнения + ";");
	Исключение 	
		ТекстОписаниеОшибки = ОписаниеОшибки();
		ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ТекстОписаниеОшибки);
	КонецПопытки;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция   ВыполнитьПрограммныйКод1СННаСервереБезКонтекста(Знач ПрограммныйКод1СДляВыполнения, ПереданноеЗначение = Неопределено)
	
	Результат = Неопределено;
	
	Попытка 
		Выполнить ("" + ПрограммныйКод1СДляВыполнения + ";");
		
	Исключение 	
		ТекстОписаниеОшибки = ОписаниеОшибки();
		
		Результат = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + ТекстОписаниеОшибки;		
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьПрограмму(Команда)
	
	ДатаСтарта = ОбщийМодульКлиент.ПользователяТекущаяДата();
	
	Если ПустаяСтрока(Объект.ВыполняетсяНа)
		ИЛИ Объект.ВыполняетсяНа = "НаСервере" Тогда
		
		ВыполнитьПрограммныйКод1СНаСервере(Объект.ТекстПрограммы);
	ИначеЕсли Объект.ВыполняетсяНа = "НаКлиенте" Тогда
		ВыполнитьПрограммныйКод1СНаКлиенте(Объект.ТекстПрограммы);
	ИначеЕсли Объект.ВыполняетсяНа = "НаСервереБезКонтекста" Тогда
		Результат = ВыполнитьПрограммныйКод1СННаСервереБезКонтекста(Объект.ТекстПрограммы);
		Если НЕ Результат = Неопределено Тогда
			ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + Результат);
		КонецЕсли;
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.ВыполняетсяНа2)
		ИЛИ Объект.ВыполняетсяНа2 = "НаСервере" Тогда
		
		ВыполнитьПрограммныйКод1СНаСервере(Объект.ТекстПрограммы2);
	ИначеЕсли Объект.ВыполняетсяНа2 = "НаКлиенте" Тогда
		ВыполнитьПрограммныйКод1СНаКлиенте(Объект.ТекстПрограммы2);
	ИначеЕсли Объект.ВыполняетсяНа2 = "НаСервереБезКонтекста" Тогда
		Результат = ВыполнитьПрограммныйКод1СННаСервереБезКонтекста(Объект.ТекстПрограммы2);
		Если НЕ Результат = Неопределено Тогда
			ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + Результат);
		КонецЕсли;
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.ВыполняетсяНа3)
		ИЛИ Объект.ВыполняетсяНа3 = "НаСервере" Тогда
		
		ВыполнитьПрограммныйКод1СНаСервере(Объект.ТекстПрограммы3);
	ИначеЕсли Объект.ВыполняетсяНа3 = "НаКлиенте" Тогда
		ВыполнитьПрограммныйКод1СНаКлиенте(Объект.ТекстПрограммы3);
	ИначеЕсли Объект.ВыполняетсяНа3 = "НаСервереБезКонтекста" Тогда        
		Результат = ВыполнитьПрограммныйКод1СННаСервереБезКонтекста(Объект.ТекстПрограммы3);
		Если НЕ Результат = Неопределено Тогда
			ОбщегоНазначения.СообщитьПользователю(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Произошла ошибка") + ": " + Результат);
		КонецЕсли;
	КонецЕсли;
	
	глПроверятьСообщения = ИСТИНА;
	
	Элементы.КодВыполнен.Видимость = ИСТИНА;
	
	ДатаОкончания = ОбщийМодульКлиент.ПользователяТекущаяДата();
	ПериодИсполнения = ДатаОкончания - ДатаСтарта;
	Элементы.КодВыполнен.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Код выполнялся с") + " " + Формат(ДатаСтарта, "ДФ=ЧЧ:мм:сс") + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("по") + " " + Формат(ДатаОкончания, "ДФ=ЧЧ:мм:сс") + ". " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("За") + " " + СокрЛП(ПериодИсполнения) + " " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("секунд.");	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКодИзФайла(Команда)
	
	ДиалогФильтр	 = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Файл текста") + " (*.*)|*.*";
	ДиалогРасширение = "*";
	ДиалогДляВыбораФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогДляВыбораФайла.Заголовок				=	ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите файл для импорта программного кода") + ":";
	ДиалогДляВыбораФайла.ПолноеИмяФайла			=	АдресФайла; //АДРЕС
	ДиалогДляВыбораФайла.Фильтр					=	ДиалогФильтр;
	ДиалогДляВыбораФайла.Расширение				=	ДиалогРасширение;
	ДиалогДляВыбораФайла.МножественныйВыбор		=	Ложь;
	ДиалогДляВыбораФайла.ПредварительныйПросмотр	=	Ложь;
	ДиалогДляВыбораФайла.ИндексФильтра			=	0;
	ДиалогДляВыбораФайла.ПроверятьСуществованиеФайла	=	ИСТИНА;
	
	Если ДиалогДляВыбораФайла.Выбрать() Тогда
		АдресФайла = ДиалогДляВыбораФайла.ПолноеИмяФайла;
		
		ТекстДок = Новый ТекстовыйДокумент;
		ТекстДок.Прочитать(АдресФайла);
		
		Объект.ТекстПрограммы  = "";
		Объект.ТекстПрограммы2 = "";
		Объект.ТекстПрограммы3 = "";
		Объект.ПолноеОписание  = "";
		
		ИдетТекст = ЛОЖЬ;
		ИдетТекст2 = ЛОЖЬ;
		ИдетТекст3 = ЛОЖЬ;
		Сч = 1;
		
		СтрокаФайла = ТекстДок.ПолучитьСтроку(Сч);
		Пока Сч <= ТекстДок.КоличествоСтрок() Цикл
			
			Если Лев(СокрЛП(СтрокаФайла), 3) = "//<" Тогда
				
				Первые7 = Лев(СокрЛП(СтрокаФайла), 7);
				Если Первые7 = "//<02> " Тогда
					Объект.Наименование = СтрЗаменить(СтрокаФайла, Первые7, "");
				ИначеЕсли Первые7 = "//<03> " Тогда
					Объект.ПолноеОписание = ?(ПустаяСтрока(Объект.ПолноеОписание), СтрЗаменить(СтрокаФайла, Первые7, ""), Объект.ПолноеОписание + Символы.ПС + СтрЗаменить(СтрокаФайла, Первые7, ""));
				ИначеЕсли Первые7 = "//<05> " Тогда
					Объект.Программист = СтрЗаменить(СтрокаФайла, "//<05> " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Программист"), "");
				ИначеЕсли Первые7 = "//<06> " Тогда
					Объект.МинимальнаяВерсияКонфигурации = СтрЗаменить(СтрокаФайла, "//<06> " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Минимальная версия конфигурации"), "");
				ИначеЕсли Первые7 = "//<07> " Тогда
					Объект.МаксимальнаяВерсияКонфигурации = СтрЗаменить(СтрокаФайла, "//<07> " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Максимальная версия конфигурации"), "");
				ИначеЕсли Первые7 = "//<08> " Тогда
					Объект.МинимальнаяВерсияПлатформы = СтрЗаменить(СтрокаФайла, "//<08> " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Минимальная версия платформы"), "");
				ИначеЕсли Первые7 = "//<09> " Тогда
					Объект.МаксимальнаяВерсияПлатформы = СтрЗаменить(СтрокаФайла, "//<09> " + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Максимальная версия платформы"), "");
				ИначеЕсли Первые7 = "//<10> " Тогда
					Объект.ВыполняетсяНа = СтрЗаменить(СтрокаФайла, Первые7, "");
					ИдетТекст = ИСТИНА;
				ИначеЕсли Первые7 = "//<11> " Тогда
					Объект.ВыполняетсяНа2 = СтрЗаменить(СтрокаФайла, Первые7, "");
					ИдетТекст = ЛОЖЬ;
					ИдетТекст2 = ИСТИНА;
				ИначеЕсли Первые7 = "//<12> " Тогда
					Объект.ВыполняетсяНа3 = СтрЗаменить(СтрокаФайла, Первые7, "");
					ИдетТекст2 = ЛОЖЬ;
					ИдетТекст3 = ИСТИНА;	
				КонецЕсли;	
				
			Иначе				
				Если ИдетТекст3 Тогда
					Если ПустаяСтрока(Объект.ТекстПрограммы3) Тогда
						Объект.ТекстПрограммы3 = СтрокаФайла;
					Иначе
						Объект.ТекстПрограммы3 = Объект.ТекстПрограммы3 + Символы.ПС + СтрокаФайла;
					КонецЕсли;
					
				ИначеЕсли ИдетТекст2 Тогда
					Если ПустаяСтрока(Объект.ТекстПрограммы2) Тогда
						Объект.ТекстПрограммы2 = СтрокаФайла;
					Иначе
						Объект.ТекстПрограммы2 = Объект.ТекстПрограммы2 + Символы.ПС + СтрокаФайла;
					КонецЕсли;
					
				Иначе
					Если ПустаяСтрока(Объект.ТекстПрограммы) Тогда
						Объект.ТекстПрограммы = СтрокаФайла;
					Иначе
						Объект.ТекстПрограммы = Объект.ТекстПрограммы + Символы.ПС + СтрокаФайла;
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;
			
			Сч = Сч + 1;
			СтрокаФайла = ТекстДок.ПолучитьСтроку(Сч);
		КонецЦикла;
		
	КонецЕсли; //когда файл АдресФайла выбран
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
		ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
	КонецЕсли;
	
	Если Параметры.ЗагрузкаИзОбработок Тогда
		Объект.ТекстПрограммы 	= параметры.Текст1;
		Объект.ТекстПрограммы2 	= параметры.Текст2;
		Объект.ТекстПрограммы3 	= параметры.Текст3;
		Объект.ВыполняетсяНа 	= "НаКлиенте";
		Объект.ВыполняетсяНа2 	= "НаСервере";
		Объект.ВыполняетсяНа3	= "НаКлиенте";
	КонецЕсли;
	
КонецПроцедуры
