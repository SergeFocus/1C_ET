// sza151117-0152 созд сотр
// sza150522-0238 
// sza150515
// sza131017-1819 : 
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
	Элементы.ЗапишитеКарточкуПользователяПередНастройкойОграниченийДоступа.Видимость = ЛОЖЬ;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                         // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                    // ПРИ ОТКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000150", ЭтаФорма, Отказ, );	
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ЭтаФорма.ТолькоПросмотр = ЛОЖЬ;
		
		ПолныеПрава = РольДоступна("ПолныеПрава");
		АдминистраторСистемы = РольДоступна("АдминистраторСистемы");
		
		ТекущийПользователь = ПользователиИнформационнойБазы.ТекущийПользователь();
		ДляПароля = ТекущийПользователь.Имя = "SZA";
		
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			
			ДанныеЭтогоПользователя = ПользователиИнформационнойБазы.НайтиПоИмени(Объект.Наименование);
			Если НЕ ДанныеЭтогоПользователя = Неопределено Тогда
				ПолноеИмя = ДанныеЭтогоПользователя.ПолноеИмя;
				
				Роли = "";
				Для Каждого РольВБазе Из Метаданные.Роли Цикл
					Если ДанныеЭтогоПользователя.Роли.Содержит(РольВБазе) Тогда
						Роли = ?(ПустаяСтрока(Роли), "", Роли + ", ") + ОбщийМодульСервисСервер.ПолучитьКрасивоеНаименованиеОбъекта(РольВБазе.Имя);
					КонецЕсли;
				КонецЦикла;
				
				Если НЕ ДанныеЭтогоПользователя.Язык = Неопределено тогда
					ЯзыкПользователя = СокрЛП(ДанныеЭтогоПользователя.Язык);	
				КонецЕсли;
				
				Если ДляПароля Тогда
					ДанныеЭтогоПользователя = ОбщийМодульСерверПривилегия.ПолучитьСекретыПользователя(ДанныеЭтогоПользователя);
					АутентификацияОС 		= ДанныеЭтогоПользователя.АутентификацияОС;
					АутентификацияOpenID 	= ДанныеЭтогоПользователя.АутентификацияOpenID;
					АутентификацияСтандартная = ДанныеЭтогоПользователя.АутентификацияСтандартная;
					ЗапрещеноИзменятьПароль = ДанныеЭтогоПользователя.ЗапрещеноИзменятьПароль;
					ОсновнойИнтерфейс 		= ДанныеЭтогоПользователя.ОсновнойИнтерфейс;
					ПарольУстановлен 		= ДанныеЭтогоПользователя.ПарольУстановлен;
					ПоказыватьВСпискеВыбора = ДанныеЭтогоПользователя.ПоказыватьВСпискеВыбора;
					ПользовательОС 			= ДанныеЭтогоПользователя.ПользовательОС;
					РежимЗапуска 			= СокрЛП(ДанныеЭтогоПользователя.РежимЗапуска);
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			Если ЗначениеЗаполнено(Параметры.ДополнительнаяОбработка) Тогда
				Объект.ПриЗапускеОткрывать = ПредопределенноеЗначение("Перечисление.ВариантыОкнаПриЗапускеДляПользователей.ЗапускатьДополнительнуюОбработку");
				Объект.ДополнительнаяОбработка = Параметры.ДополнительнаяОбработка;
			КонецЕсли;
		КонецЕсли;
		
		Элементы.СтраницаПароль.Видимость = ДляПароля И ЗначениеЗаполнено(ДанныеЭтогоПользователя);
		Элементы.ОграниченияДоступа.Видимость = ПолныеПрава;
		Элементы.ГруппаСтраницДоступа.ТолькоПросмотр = НЕ АдминистраторСистемы;
		Элементы.Наименование.ТолькоПросмотр = НЕ АдминистраторСистемы;
		
		ЗапускатьДополнительнуюОбработку = Объект.ПриЗапускеОткрывать = ПредопределенноеЗначение("Перечисление.ВариантыОкнаПриЗапускеДляПользователей.ЗапускатьДополнительнуюОбработку");
		Элементы.ДополнительнаяОбработка.Видимость = ЗапускатьДополнительнуюОбработку;
		Элементы.ЗапускатьМодально.Видимость = НЕ ЗапускатьДополнительнуюОбработку; // устанавливается для обработки
		
		Элементы.СоздатьСотрудника.Видимость = НЕ ЗначениеЗаполнено(Объект.Сотрудник);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗапускеОткрыватьПриИзменении(Элемент)
	
	ЗапускатьДополнительнуюОбработку = Объект.ПриЗапускеОткрывать = ПредопределенноеЗначение("Перечисление.ВариантыОкнаПриЗапускеДляПользователей.ЗапускатьДополнительнуюОбработку");
	Элементы.ДополнительнаяОбработка.Видимость = ЗапускатьДополнительнуюОбработку;
	Элементы.ЗапускатьМодально.Видимость = НЕ ЗапускатьДополнительнуюОбработку;
	
КонецПроцедуры

&НаКлиенте
Процедура ЖурналДействийПользователя(Команда)
	
	ПараметрыЖурнала = Новый Структура("Пользователь", Объект.Ссылка);
	ОткрытьФорму("Отчет.ЖурналСобытий.Форма", ПараметрыЖурнала);
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)	
	Элементы.СоздатьСотрудника.Видимость = НЕ ЗначениеЗаполнено(Объект.Сотрудник);	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСотрудника(Команда)
	
	Если НЕ ПустаяСтрока(Объект.Наименование) Тогда
		СоздатьСотрудникаНаСервере();
		Элементы.СоздатьСотрудника.Видимость = НЕ ЗначениеЗаполнено(Объект.Сотрудник);	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСотрудникаНаСервере()
	
	СотрудникОбъект = Справочники.Сотрудники.СоздатьЭлемент();
	СотрудникОбъект.Комментарий = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Для пользователя") + " " + Объект.Наименование;
	СотрудникОбъект.Наименование = Объект.Наименование;
	СотрудникОбъект.Фамилия = Объект.Наименование;
	СотрудникОбъект.Подпись = Объект.Подпись;
	СотрудникОбъект.Записать();
	
	Объект.Сотрудник = СотрудникОбъект.Ссылка;
	
КонецПроцедуры
