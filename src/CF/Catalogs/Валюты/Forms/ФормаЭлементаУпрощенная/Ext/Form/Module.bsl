//sza141223-2101 
//sza141111-1337
//sza140428-2306  
//sza131007-1623  
&НаСервере
Функция   ЕстьЗависимыеЦены(Знач Валюта)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	               |	Цены.Цена
	               |ИЗ
	               |	РегистрСведений.Цены КАК Цены
	               |ГДЕ
	               |	Цены.Цена <> 0
	               |	И Цены.ВидЦен.Зависимая = ИСТИНА
	               |	И Цены.ВидЦен.ОсновнойВидЦен.ВалютаЦены = &ВалютаЦены
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	               |	Цены.Цена
	               |ИЗ
	               |	РегистрСведений.Цены КАК Цены
	               |ГДЕ
	               |	Цены.Цена <> 0
	               |	И Цены.ВидЦен.Зависимая = ИСТИНА
	               |	И Цены.ВидЦен.СпособыФормированияЦеныДляНоменклатурныхГрупп.ОсновнойВидЦен.ВалютаЦены = &ВалютаЦены
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	               |	Цены.Цена
	               |ИЗ
	               |	РегистрСведений.Цены КАК Цены
	               |ГДЕ
	               |	Цены.Цена <> 0
	               |	И Цены.ВидЦен.Зависимая = ИСТИНА
	               |	И Цены.ВидЦен.ТаблицаЗависимости.ОсновнойВидЦен.ВалютаЦены = &ВалютаЦены";

	Запрос.УстановитьПараметр("ВалютаЦены", Валюта);

	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Объект.Наименование = Наименование;
	НаименованиеИзменяли = ИСТИНА;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахНаЯзыкеПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаСервереБезКонтекста
Функция   НетКурсов(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ КурсыВалютСрезПоследних.Курс
	|ИЗ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта = &Ссылка) КАК КурсыВалютСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", ОбщийМодульСервисСервер.ПользователяТекущаяДата());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Пустой();
	
КонецФункции

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
	
	Если НЕ Объект.Предопределенный
		И НетКурсов(Объект.Ссылка) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Внимание. Не следует использовать данную валюту, пока у нее нет курса!");
		Сообщение.Сообщить();		
	КонецЕсли;
	
	Элементы.КурсыВалюты.Видимость = ЗначениеЗаполнено(Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПроверитьЗаписанныйОбъект();
	
	Если ПоддержкаДругихЯзыков тогда
		Если НаименованиеИзменяли тогда
			ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, Наименование);
		КонецЕсли;
		
		Если БылиИзмененияЗначенияПолейНаЯзыках Тогда
			Для Каждого СтрокаЯзыка Из НаименованияНаДругихЯзыках Цикл
				ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, СтрокаЯзыка.НаЯзыке, "Наименование", СтрокаЯзыка.Язык);	
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНаДругихЯзыках(Команда)
	Элементы.НаименованияНаДругихЯзыках.Видимость  = НЕ Элементы.НаименованияНаДругихЯзыках.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()                                             // ПРИ ЗАКРЫТИИ
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                        // ПРИ ОТКРЫТИИ	
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Объект.Ссылка, ИСТИНА);
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЭтаФорма.ТекущийЭлемент = Элементы.Наименование;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)         // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("000950", ЭтаФорма, Отказ, Объект);
	
	Если НЕ Отказ Тогда
		Элементы.ТекущийКурс.Видимость =  НЕ Объект.Предопределенный ;
		
		ПроверитьЗаписанныйОбъект();
		
		ПоддержкаДругихЯзыков = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПоддерживатьИныеЯзыкиКромеРусского") 
		И ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ПоддерживатьНаименованияНаДругихЯзыкахКромеРусского", ИСТИНА);
		
		ЗначениеЗаполненоОбъектСсылка = ЗначениеЗаполнено(Объект.Ссылка);
		
		Если ПоддержкаДругихЯзыков 
			И ЗначениеЗаполненоОбъектСсылка Тогда
			
			Наименование = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Объект.Ссылка);
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ЗначенияНаДругихЯзыках.Язык,
			|	ЗначенияНаДругихЯзыках.НаЯзыке,
			|	ЗначенияНаДругихЯзыках.Поле
			|ИЗ РегистрСведений.ЗначенияНаДругихЯзыках КАК ЗначенияНаДругихЯзыках
			|ГДЕ ЗначенияНаДругихЯзыках.ОбъектБазыДанных = &ОбъектБазыДанных";
			
			Запрос.УстановитьПараметр("ОбъектБазыДанных", Объект.Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Если ВыборкаДетальныеЗаписи.Поле = "Наименование" Тогда
						СтрокаЯзыка = НаименованияНаДругихЯзыках.Добавить();
						СтрокаЯзыка.Язык 	= ВыборкаДетальныеЗаписи.Язык;
						СтрокаЯзыка.НаЯзыке = ВыборкаДетальныеЗаписи.НаЯзыке;	
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		Иначе
			Наименование = Объект.Наименование;
			
		КонецЕсли;
		Элементы.КурсыВалюты.Видимость = ЗначениеЗаполненоОбъектСсылка;
	КонецЕсли;		
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗаписанныйОбъект()
	
	ЗначениеЗаполненоОбъектСсылка = ЗначениеЗаполнено(Объект.Ссылка);
	Элементы.ТекущийКурс.Видимость = ЗначениеЗаполненоОбъектСсылка;
	
	ТекущийКурс = ОбщийМодульПовтор.ПолучитьТекущийКурс(Объект.Ссылка);
	
КонецПроцедуры //ПроверитьЗаписанныйОбъект

&НаСервере
Процедура РассчитатьВсеЗависимыеЦены()	
	ОбщийМодульСервер.РассчитатьВсеЗависимыеЦеныПриСменеКурса(Объект.Ссылка);	
КонецПроцедуры

&НаКлиенте
Процедура РасчитатьВсеЗависимыеЦены(Команда)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("002350");	
		
		Если НЕ ОТказ 
			И ЕстьЗависимыеЦены(Объект.Ссылка) 
			И Вопрос(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Есть Зависимые цены!") + символы.пс + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Рассчитать все зависимые цены по этой валюте?"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			
			Состояние(ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Расчет всех зависимых цен.."));
			РассчитатьВсеЗависимыеЦены();
			
		КонецЕсли;
		
		глПроверятьСообщения = ИСТИНА;             	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КурсыВалюты(Команда)
	
	ПараметрыФормы = Новый Структура("Валюта", Объект.Ссылка);
	ФормаКурса = ПолучитьФорму("РегистрСведений.КурсыВалют.ФормаСписка", ПараметрыФормы);
	ФормаКурса.открыть();
	
КонецПроцедуры
