//sza141015-1747 ключи учета
//sza140830-1600
//sza140521-0200  
//sza140107-0143 : 
&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Объект.Наименование  = Наименование;
	НаименованиеИзменяли = ИСТИНА;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахНаЯзыкеПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПоддержкаДругихЯзыков тогда
		Если НаименованиеИзменяли тогда
			ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, Наименование);
		КонецЕсли;
		
		Если БылиИзмененияЗначенияПолейНаЯзыках Тогда
			Для Каждого СтрокаЯзыка Из НаименованияНаДругихЯзыках Цикл
				ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, СтрокаЯзыка.НаЯзыке, "Наименование", СтрокаЯзыка.Язык);	
			КонецЦикла;
			ОбновитьПовторноИспользуемыеЗначения();
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ЗначениеПоУмолчанию.Доступность = ЗначениеЗаполнено(Объект.ТипДополнительногоРеквизита);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНаДругихЯзыках(Команда)
	Элементы.НаименованияНаДругихЯзыках.Видимость  = НЕ Элементы.НаименованияНаДругихЯзыках.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Объект.Ссылка, ИСТИНА);
	ОбновитьВидимостьКнопок();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Отказ Тогда
		
		Если Параметры.ЭтоКлючУчетаНоменклатуры Тогда
			Объект.ЭтоКлючУчетаНоменклатуры = ИСТИНА;
			Объект.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляКлючейУчетаНоменклатуры;
		КонецЕсли;
		
		Если Объект.ЭтоКлючУчетаНоменклатуры Тогда
			ЭтаФорма.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ключ Учета Номенклатуры");
			Элементы.ЭтоРеквизитДляОбъекта.Видимость = ЛОЖЬ;
			Элементы.Наименование.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Наименование Ключа Учета Номенклатуры");
			Элементы.ПараметрыДополнительногоРеквизита.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Параметры Ключа Учета Номенклатуры");
			Элементы.ТипДополнительногоРеквизита.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Тип Ключа Учета Номенклатуры");
			Элементы.Периодический.Видимость = ЛОЖЬ;
		КонецЕсли;
		
		ЗначениеЗаполненоОбъектСсылка = ЗначениеЗаполнено(Объект.Ссылка);
		
		Если ЗначениеЗаполнено(Параметры.ОбъектВладелец) Тогда
			
			СтруктураВладельца 	= ОбщийМодульПовтор.ПолучитьИмяДополнительногоРеквизита(параметры.ОбъектВладелец);
			Объект.ЭтоРеквизитДляОбъекта = СтруктураВладельца.ЭтоРеквизитДляОбъекта;
			Объект.НаименованиеОбъектаВладельца = СтруктураВладельца.НаименованиеОбъектаВладельца;
			
		ИначеЕсли ЗначениеЗаполнено(Параметры.ЭтоРеквизитДляОбъекта) Тогда
			Объект.ЭтоРеквизитДляОбъекта = Параметры.ЭтоРеквизитДляОбъекта;
			
		КонецЕсли;
		
		Если ЗначениеЗаполненоОбъектСсылка Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ЗначенияДополнительныхРеквизитов.ЗначениеРеквизита
			|ИЗ РегистрСведений.ЗначенияДополнительныхРеквизитов КАК ЗначенияДополнительныхРеквизитов
			|ГДЕ ЗначенияДополнительныхРеквизитов.ДополнительныйРеквизит = &ДополнительныйРеквизит";
			
			Запрос.УстановитьПараметр("ДополнительныйРеквизит", Объект.Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				ЗначениеПоУмолчанию = Объект.ЗначениеПоУмолчанию;
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл				
					ЗначениеРеквизита = ВыборкаДетальныеЗаписи.ЗначениеРеквизита;
					
					Если ЗначениеЗаполнено(ЗначениеРеквизита) 
						И НЕ ЗначениеПоУмолчанию = ЗначениеРеквизита тогда
						
						Элементы.ПараметрыДополнительногоРеквизита.Доступность = ЛОЖЬ;
						Элементы.ИзменениеПараметровНедоступноРеквизитУжеИспользуется.Видимость = ИСТИНА;
						
						Прервать;
						
					КонецЕсли;
				КонецЦикла;                        	
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект.ТипДополнительногоРеквизита) Тогда
				Элементы.ЗначениеПоУмолчанию.Доступность = ИСТИНА;
			КонецЕсли;
			
		Иначе		
			
			Элементы.ЗначениеПоУмолчанию.Доступность = ЛОЖЬ;
		КонецЕсли;
		
		Если ПоддержкаДругихЯзыков 
			И ЗначениеЗаполненоОбъектСсылка тогда
			
			Наименование = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Объект.Ссылка);
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ЗначенияНаДругихЯзыках.Язык,
			|	ЗначенияНаДругихЯзыках.НаЯзыке,
			|	ЗначенияНаДругихЯзыках.Поле
			|ИЗ РегистрСведений.ЗначенияНаДругихЯзыках КАК ЗначенияНаДругихЯзыках
			|ГДЕ ЗначенияНаДругихЯзыках.ОбъектБазыДанных = &ОбъектБазыДанных";
			
			Запрос.УстановитьПараметр("ОбъектБазыДанных", Объект.Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Если ВыборкаДетальныеЗаписи.Поле = "Наименование" Тогда
						СтрокаЯзыка = НаименованияНаДругихЯзыках.Добавить();
						СтрокаЯзыка.Язык 	= ВыборкаДетальныеЗаписи.Язык;
						СтрокаЯзыка.НаЯзыке = ВыборкаДетальныеЗаписи.НаЯзыке;	
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		Иначе
			Наименование = Объект.Наименование;
			
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипДополнительногоРеквизитаПриИзменении(Элемент)
	
	ТипДополнительногоРеквизита = Объект.ТипДополнительногоРеквизита;
	Если ЗначениеЗаполнено(ТипДополнительногоРеквизита) Тогда
		Объект.ЗначениеПоУмолчанию = ОбщийМодульПовтор.ПолучитьПустоеЗначениеДополнительногоРеквизита(ТипДополнительногоРеквизита);
		Элементы.ЗначениеПоУмолчанию.Доступность = ИСТИНА;
		
		ОбновитьВидимостьКнопок();
	Иначе
		Объект.ЗначениеПоУмолчанию = ЛОЖЬ;
		Элементы.ЗначениеПоУмолчанию.Доступность = ЛОЖЬ;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимостьКнопок()
	
	Если ЗначениеЗаполнено(Объект.ТипДополнительногоРеквизита) 
		И ( Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.ЗначениеИзСправочника")
		ИЛИ Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.СсылкаНаЭлементСправочника")
		ИЛИ Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.СсылкаНаДокумент")) Тогда
		
		Элементы.ЗначениеПоУмолчанию.КнопкаВыбора  = ИСТИНА;
		Элементы.ЗначениеПоУмолчанию.КнопкаОчистки = ИСТИНА;
	КонецЕсли;
	
	Элементы.ИспользуютсяДополнительныеПараметрыЗначений.Видимость = ЗначениеЗаполнено(Объект.ТипДополнительногоРеквизита)
	И Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.ЗначениеИзСправочника");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПоУмолчаниюНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.СсылкаНаЭлементСправочника") Тогда
		СтандартнаяОбработка = ЛОЖЬ;
		
		Если Объект.ЗначениеПоУмолчанию = Неопределено Тогда
			ТипРеквизита = ВыбратьИзСписка(ОбщийМодульКлиент.ПолучитьСписокИзМетаданных(ИСТИНА));
			Если НЕ ТипРеквизита = Неопределено Тогда
				Объект.ЗначениеПоУмолчанию = ПредопределенноеЗначение("Справочник." + ТипРеквизита.Значение + ".ПустаяСсылка");	
			КонецЕсли;
		КонецЕсли;
		ВвестиЗначение(Объект.ЗначениеПоУмолчанию, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите значение") + ": ");
		
	ИначеЕсли Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.СсылкаНаДокумент") Тогда
		СтандартнаяОбработка = ЛОЖЬ;
		
		Если Объект.ЗначениеПоУмолчанию = Неопределено Тогда
			ТипРеквизита = ВыбратьИзСписка(ОбщийМодульКлиент.ПолучитьСписокИзМетаданных(ЛОЖЬ));
			Если НЕ ТипРеквизита = Неопределено Тогда
				Объект.ЗначениеПоУмолчанию = ПредопределенноеЗначение("Документ." + ТипРеквизита.Значение + ".ПустаяСсылка");	
			КонецЕсли;
		КонецЕсли;
		ВвестиЗначение(Объект.ЗначениеПоУмолчанию, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите значение") + ": ");
		
	ИначеЕсли Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.ЗначениеИзСправочника")
		И Объект.ЗначениеПоУмолчанию = Неопределено Тогда
		
		СтандартнаяОбработка = ЛОЖЬ;
		
		Объект.ЗначениеПоУмолчанию = ПредопределенноеЗначение("Справочник.НаборЗначенийДополнительныхРеквизитов.ПустаяСсылка");
		ПараметрыФормы = Новый Структура("Владелец", Объект.Ссылка);
		ФормаВыбора = ПолучитьФорму("Справочник.НаборЗначенийДополнительныхРеквизитов.Форма.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
		ФормаВыбора.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите значение") + ":";
		Объект.ЗначениеПоУмолчанию = ФормаВыбора.ОткрытьМодально();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПоУмолчаниюОчистка(Элемент, СтандартнаяОбработка)
	
	Если Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.СсылкаНаЭлементСправочника")
		ИЛИ Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.СсылкаНаДокумент") Тогда
		СтандартнаяОбработка = ЛОЖЬ;
		
		Объект.ЗначениеПоУмолчанию = Неопределено;		
	КонецЕсли;
	
КонецПроцедуры
