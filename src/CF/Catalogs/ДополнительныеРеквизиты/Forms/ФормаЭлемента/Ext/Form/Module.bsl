// sza141015-1747 ключи учета
// sza140830-1600
// sza140521-0200
// sza140107-0143 :

&НаКлиенте
Процедура ЗначениеПоУмолчаниюНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗначениеПоУмолчаниюНачалоВыбораЗавершение8", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Сначала следует записать этот элемент. Записать?"), РежимДиалогаВопрос.ДаНет);

		Возврат;
	КонецЕсли;

	ЗначениеПоУмолчаниюНачалоФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПоУмолчаниюНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт

	ТипРеквизита = ВыбранныйЭлемент;

	Если НЕ ТипРеквизита = Неопределено Тогда
		Объект.ЗначениеПоУмолчанию = ПредопределенноеЗначение("Документ." + ТипРеквизита.Значение + ".ПустаяСсылка");
	КонецЕсли;

	ЗначениеПоУмолчаниюНачалоВыбораФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПоУмолчаниюНачалоВыбораЗавершение1(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт

	ТипРеквизита = ВыбранныйЭлемент;

	Если НЕ ТипРеквизита = Неопределено Тогда
		Объект.ЗначениеПоУмолчанию = ПредопределенноеЗначение("Справочник." + ТипРеквизита.Значение + ".ПустаяСсылка");
	КонецЕсли;

	ЗначениеПоУмолчаниюНачалоВыбораФрагмент1();

КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПоУмолчаниюНачалоВыбораЗавершение8(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Записать();
		ЗначениеПоУмолчаниюНачалоФрагмент();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПоУмолчаниюНачалоВыбораФрагмент()
	ПоказатьВводЗначения(Неопределено, Объект.ЗначениеПоУмолчанию, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите значение") + ": ");
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПоУмолчаниюНачалоВыбораФрагмент1()
	ПоказатьВводЗначения(Неопределено, Объект.ЗначениеПоУмолчанию, ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите значение") + ": ");
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПоУмолчаниюНачалоФрагмент()

	Если Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.СсылкаНаЭлементСправочника") Тогда
		СтандартнаяОбработка = ЛОЖЬ;
		Если Объект.ЗначениеПоУмолчанию = Неопределено Тогда
			ТипРеквизита = Неопределено;
			ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ЗначениеПоУмолчаниюНачалоВыбораЗавершение1", ЭтаФорма), ОбщийМодульКлиент.ПолучитьСписокИзМетаданных(ИСТИНА));

            Возврат;
		КонецЕсли;

		ЗначениеПоУмолчаниюНачалоВыбораФрагмент1();
	ИначеЕсли Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.СсылкаНаДокумент") Тогда
		СтандартнаяОбработка = ЛОЖЬ;

		Если Объект.ЗначениеПоУмолчанию = Неопределено Тогда
			ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ЗначениеПоУмолчаниюНачалоВыбораЗавершение", ЭтаФорма), ОбщийМодульКлиент.ПолучитьСписокИзМетаданных(ЛОЖЬ));

            Возврат;
		КонецЕсли;

		ЗначениеПоУмолчаниюНачалоВыбораФрагмент();
	ИначеЕсли Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.ЗначениеИзСправочника")
		И Объект.ЗначениеПоУмолчанию = Неопределено Тогда

		СтандартнаяОбработка = ЛОЖЬ;
		Объект.ЗначениеПоУмолчанию = ПредопределенноеЗначение("Справочник.НаборЗначенийДополнительныхРеквизитов.ПустаяСсылка");
		ПараметрыФормы = Новый Структура("Владелец", Объект.Ссылка);
		ФормаВыбора = ПолучитьФорму("Справочник.НаборЗначенийДополнительныхРеквизитов.Форма.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
		ФормаВыбора.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Укажите значение") + ":";
		Объект.ЗначениеПоУмолчанию = ФормаВыбора.ОткрытьМодально();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПоУмолчаниюОчистка(Элемент, СтандартнаяОбработка)

	Если Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.СсылкаНаЭлементСправочника")
		ИЛИ Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.СсылкаНаДокумент") Тогда

		СтандартнаяОбработка = ЛОЖЬ;
		Объект.ЗначениеПоУмолчанию = Неопределено;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)

	Объект.Наименование  = Наименование;
	НаименованиеИзменяли = ИСТИНА;
	Если ПереводитьНаименованияАвтоматически Тогда
		ОбщийМодульКлиент.ПеревестиНаименованияАвтоматически(Наименование, НаименованияНаДругихЯзыках);
		БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахНаЯзыкеПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура НаименованияНаДругихЯзыкахПриИзменении(Элемент)
	БылиИзмененияЗначенияПолейНаЯзыках = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимостьКнопок()

	Если ЗначениеЗаполнено(Объект.ТипДополнительногоРеквизита)
		И ( Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.ЗначениеИзСправочника")
		ИЛИ Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.СсылкаНаЭлементСправочника")
		ИЛИ Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.СсылкаНаДокумент")) Тогда

		Элементы.ЗначениеПоУмолчанию.КнопкаВыбора  = ИСТИНА;
		Элементы.ЗначениеПоУмолчанию.КнопкаОчистки = ИСТИНА;
	КонецЕсли;

	Элементы.ИспользуютсяДополнительныеПараметрыЗначений.Видимость = ЗначениеЗаполнено(Объект.ТипДополнительногоРеквизита)
	И Объект.ТипДополнительногоРеквизита = ПредопределенноеЗначение("Перечисление.ТипыДополнительныхРеквизитов.ЗначениеИзСправочника");

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	Если ПоддержкаДругихЯзыков Тогда
		Если НаименованиеИзменяли Тогда
			ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, Наименование);
		КонецЕсли;

		Если БылиИзмененияЗначенияПолейНаЯзыках Тогда
			Для Каждого СтрокаЯзыка Из НаименованияНаДругихЯзыках Цикл
				ОбщийМодульСервер.обновитьЗначениеНаЯзыке(Объект.Ссылка, СтрокаЯзыка.НаЯзыке, "Наименование", СтрокаЯзыка.Язык);
			КонецЦикла;

			ОбновитьПовторноИспользуемыеЗначения();
		КонецЕсли;
	КонецЕсли;

	Элементы.ЗначениеПоУмолчанию.Доступность = ЗначениеЗаполнено(Объект.ТипДополнительногоРеквизита);

КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНаДругихЯзыках(Команда)
	Элементы.НаименованияНаДругихЯзыках.Видимость  = НЕ Элементы.НаименованияНаДругихЯзыках.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Объект.Ссылка, ИСТИНА);
	ОбновитьВидимостьКнопок();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);
		КонецЕсли;

		Если Параметры.ЭтоКлючУчетаНоменклатуры Тогда
			Объект.ЭтоКлючУчетаНоменклатуры = ИСТИНА;
			Объект.ЭтоРеквизитДляОбъекта = Перечисления.ОбъектыДляДополнительныхРеквизитов.ДляКлючейУчетаНоменклатуры;
		КонецЕсли;

		Если Объект.ЭтоКлючУчетаНоменклатуры Тогда
			ЭтаФорма.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Ключ Учета Номенклатуры");
			Элементы.ЭтоРеквизитДляОбъекта.Видимость = ЛОЖЬ;
			Элементы.Наименование.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Наименование Ключа Учета Номенклатуры");
			Элементы.ПараметрыДополнительногоРеквизита.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Параметры Ключа Учета Номенклатуры");
			Элементы.ТипДополнительногоРеквизита.Заголовок = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Тип Ключа Учета Номенклатуры");
			Элементы.Периодический.Видимость = ЛОЖЬ;
		КонецЕсли;

		ЗначениеЗаполненоОбъектСсылка = ЗначениеЗаполнено(Объект.Ссылка);

		Если ЗначениеЗаполнено(Параметры.ОбъектВладелец) Тогда
			СтруктураВладельца 	= ОбщийМодульСервер.ПолучитьИмяДополнительногоРеквизита(Параметры.ОбъектВладелец);
			Объект.ЭтоРеквизитДляОбъекта = СтруктураВладельца.ЭтоРеквизитДляОбъекта;
			Объект.НаименованиеОбъектаВладельца = СтруктураВладельца.НаименованиеОбъектаВладельца;
		ИначеЕсли ЗначениеЗаполнено(Параметры.ЭтоРеквизитДляОбъекта) Тогда
			Объект.ЭтоРеквизитДляОбъекта = Параметры.ЭтоРеквизитДляОбъекта;
		КонецЕсли;

		Если ЗначениеЗаполненоОбъектСсылка Тогда

			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 ЗначенияДополнительныхРеквизитов.ЗначениеРеквизита
			               |ИЗ РегистрСведений.ЗначенияДополнительныхРеквизитов КАК ЗначенияДополнительныхРеквизитов
			               |ГДЕ ЗначенияДополнительныхРеквизитов.ДополнительныйРеквизит = &ДополнительныйРеквизит
			               |	И ЗначенияДополнительныхРеквизитов.ЗначениеРеквизита <> &ЗначениеПоУмолчанию";
			Запрос.УстановитьПараметр("ДополнительныйРеквизит", Объект.Ссылка);
			Запрос.УстановитьПараметр("ЗначениеПоУмолчанию", Объект.ЗначениеПоУмолчанию);

			РезультатЗапроса = Запрос.Выполнить();

			Если НЕ РезультатЗапроса.Пустой() Тогда
				Элементы.ТипДополнительногоРеквизита.Доступность = ЛОЖЬ;
				Элементы.ИспользуютсяДополнительныеПараметрыЗначений.Доступность = ЛОЖЬ;
				Элементы.Периодический.Доступность = ЛОЖЬ;
				Элементы.ИзменениеПараметровНедоступноРеквизитУжеИспользуется.Видимость = ИСТИНА;
			КонецЕсли;

			Если ЗначениеЗаполнено(Объект.ТипДополнительногоРеквизита) Тогда
				Элементы.ЗначениеПоУмолчанию.Доступность = ИСТИНА;
			КонецЕсли;
		Иначе
			Элементы.ЗначениеПоУмолчанию.Доступность = ЛОЖЬ;

			Если НЕ ЗначениеЗаполнено(Объект.ЭтоРеквизитДляОбъекта) Тогда
				Элементы.ЭтоРеквизитДляОбъекта.ТолькоПросмотр = ЛОЖЬ;
			КонецЕсли;
		КонецЕсли;

		Если ПоддержкаДругихЯзыков
			И ЗначениеЗаполненоОбъектСсылка Тогда

			Наименование = ОбщийМодульПовтор.получитьПредставлениеНаЯзыке(Объект.Ссылка);

			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ЗначенияНаДругихЯзыках.Язык,
			|	ЗначенияНаДругихЯзыках.НаЯзыке,
			|	ЗначенияНаДругихЯзыках.Поле
			|ИЗ РегистрСведений.ЗначенияНаДругихЯзыках КАК ЗначенияНаДругихЯзыках
			|ГДЕ ЗначенияНаДругихЯзыках.ОбъектБазыДанных = &ОбъектБазыДанных";
			Запрос.УстановитьПараметр("ОбъектБазыДанных", Объект.Ссылка);

			РезультатЗапроса = Запрос.Выполнить();

			Если НЕ РезультатЗапроса.Пустой() Тогда
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Если ВыборкаДетальныеЗаписи.Поле = "Наименование" Тогда
						СтрокаЯзыка = НаименованияНаДругихЯзыках.Добавить();
						СтрокаЯзыка.Язык 	= ВыборкаДетальныеЗаписи.Язык;
						СтрокаЯзыка.НаЯзыке = ВыборкаДетальныеЗаписи.НаЯзыке;
					КонецЕсли;

				КонецЦикла;
			КонецЕсли;
		Иначе
			Наименование = Объект.Наименование;
		КонецЕсли;

		Если ПоддержкаДругихЯзыков Тогда
			ПереводитьНаименованияАвтоматически = ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьРегистрТекстовНаДругихЯзыкахДляАвтоматическогоПереводаНаименований");
			Элементы.НаименованияНаДругихЯзыкахЯзык.РежимВыбораИзСписка = ИСТИНА;
			ОбщийМодульПовтор.УстановитьСписокДоступныхЯзыков(Элементы.НаименованияНаДругихЯзыкахЯзык.СписокВыбора, ИСТИНА);
		КонецЕсли;

		Если ПараметрыСеанса.ВерсияПриложения < 803050000
			ИЛИ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВместоТумблеровПоказыватьГалочки") Тогда

			Если НЕ ПараметрыСеанса.ВерсияПриложения < 803050000 Тогда
				Выполнить(" Элементы.Периодический.ВидФлажка = ВидФлажка.Флажок; ");
			КонецЕсли;
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(Объект.ЭтоРеквизитДляОбъекта) Тогда
			Элементы.ЭтоРеквизитДляОбъекта.ТолькоПросмотр = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТипДополнительногоРеквизитаПриИзменении(Элемент)

	ТипДополнительногоРеквизита = Объект.ТипДополнительногоРеквизита;

	Если ЗначениеЗаполнено(ТипДополнительногоРеквизита) Тогда
		Объект.ЗначениеПоУмолчанию = ОбщийМодульПовтор.ПолучитьПустоеЗначениеДополнительногоРеквизита(ТипДополнительногоРеквизита);
		Элементы.ЗначениеПоУмолчанию.Доступность = ИСТИНА;
		ОбновитьВидимостьКнопок();
	Иначе
		Объект.ЗначениеПоУмолчанию = ЛОЖЬ;
		Элементы.ЗначениеПоУмолчанию.Доступность = ЛОЖЬ;
	КонецЕсли;

КонецПроцедуры
