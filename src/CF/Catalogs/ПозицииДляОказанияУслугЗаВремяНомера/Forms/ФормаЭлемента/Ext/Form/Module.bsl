// sza151022-2138 
// sza140523-0343  
// sza140321-1612  

&НаКлиенте
Процедура ДополнительнаяИнформацияВидИнформацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура("ТипВладельца", ДопИнфоТипВладельца);
	ФормаВыбораВидаИнформации = ПолучитьФорму("Справочник.ДополнительныеРеквизиты.ФормаВыбора", ПараметрыФормы, ЭтаФорма);	
	ВидИнформации = ФормаВыбораВидаИнформации.ОткрытьМодально();
	Если ЗначениеЗаполнено(ВидИнформации) Тогда
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.ВидИнформации = ВидИнформации;
		Элементы.ДополнительнаяИнформация.ТекущиеДанные.Информация = ОбщийМодульКлиент.ПолучитьЗначениеПоУмолчаниюПоляДополнительнойИнформации(ВидИнформации);
		СтандартнаяОбработка = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияПриИзменении(Элемент)
	ДопИнформацияИзменена = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ИсторияУчастия.Параметры.УстановитьЗначениеПараметра("ПозицияНомер", Объект.Ссылка);
	Элементы.ДанныеСправа.Видимость = ИСТИНА;
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ДопИнформацияИзменена Тогда
		ОбщийМодульСервисСервер.ЗаписатьДополнительнуюИнформацию(Объект.Ссылка, ДополнительнаяИнформация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = ОбщийМодульСервисСервер.ПроверитьОтказДоступа("001300", ЭтаФорма, Отказ, Объект);
	
	Если НЕ Отказ Тогда
		Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;
		
		ОбъектСсылка = Объект.Ссылка;
		
		Если НЕ ЗначениеЗаполнено(ОбъектСсылка) Тогда
			Если ЗначениеЗаполнено(Объект.Родитель) Тогда
				Объект.Склад  = Объект.Родитель.Склад;
				Объект.ВидЦен = Объект.Родитель.ВидЦен;
			КонецЕсли;
		Иначе
			Элементы.ДанныеСправа.Видимость = ЛОЖЬ;
		КонецЕсли;
		
		ИсторияУчастия.Параметры.УстановитьЗначениеПараметра("ПозицияНомер", Объект.Ссылка);
		
		ДопИнфоТипВладельца = ОбщийМодульПовтор.ПолучитьТипВладельца(ОбъектСсылка); 	
		ОбщийМодульСервисСервер.ЗаполнитьДополнительнуюИнформацию(ОбъектСсылка, ДополнительнаяИнформация, ДопИнфоТипВладельца);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	РодительПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура РодительПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.Родитель) Тогда
		Объект.Склад  = Объект.Родитель.Склад;
		Объект.ВидЦен = Объект.Родитель.ВидЦен;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументОказанияУслугЗаВремяДляЭтойПозиции(Команда)
	
	ПараметрыДокумента = Новый Структура("ПозицияНомер", Объект.Ссылка);
	ОткрытьФорму("Документ.ОказанияУслугЗаВремя.ФормаОбъекта", ПараметрыДокумента);
	
КонецПроцедуры
