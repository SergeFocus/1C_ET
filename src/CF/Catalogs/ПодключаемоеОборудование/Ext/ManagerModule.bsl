//sza131227-0147 : 
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Функция возвращает список подключенного в справочнике ПО
Функция   ПолучитьСписокОборудования(ТипыПО = Неопределено, Идентификатор = Неопределено, РабочееМесто = Неопределено) Экспорт

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ПодключаемоеОборудование.Ссылка КАК Ссылка,
	|	ПодключаемоеОборудование.ИдентификаторУстройства,
	|	ПодключаемоеОборудование.Наименование КАК Наименование,
	|	ПодключаемоеОборудование.ТипОборудования КАК ТипОборудования,
	|	ПодключаемоеОборудование.ОбработчикДрайвера КАК ОбработчикДрайвера,
	|	ПодключаемоеОборудование.РабочееМесто КАК РабочееМесто,
	|	РабочиеМеста.ИмяКомпьютера КАК ИмяКомпьютера,
	|	РабочиеМеста.СетевойПорт КАК СетевойПорт
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РабочиеМеста КАК РабочиеМеста
	|		ПО (РабочиеМеста.Ссылка = ПодключаемоеОборудование.РабочееМесто)
	|ГДЕ
	|	(НЕ ПодключаемоеОборудование.УстройствоОтключено)" +
		// Добавим в текст запроса условия-фильтры переданые в параметрах вызова
		?(Идентификатор = Неопределено,
			// Добавим в текст запроса фильтр по типам оборудования (если задан)
		  ?(ТипыПО <> Неопределено,
		    "
		    |	И (ПодключаемоеОборудование.РабочееМесто <> ЗНАЧЕНИЕ(Справочник.РабочиеМеста.ПустаяСсылка))
		    |	И (ПодключаемоеОборудование.ТипОборудования В (&ТипОборудования))
		    |	И (РабочиеМеста.Ссылка = &РабочееМесто)",
		    "
		    |	И РабочиеМеста.Ссылка = &РабочееМесто"),
			// Добавим в текст запроса фильтр по конкретному устройству (имеет приоритет над другими фильтрами)
		  "
		  |	И (ПодключаемоеОборудование.РабочееМесто <> ЗНАЧЕНИЕ(Справочник.РабочиеМеста.ПустаяСсылка))
		  |	И (ПодключаемоеОборудование.Ссылка = &Идентификатор ИЛИ
		  |	   ПодключаемоеОборудование.ИдентификаторУстройства = &Идентификатор)") +
	"
	|	И (НЕ ПодключаемоеОборудование.ПометкаУдаления)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПодключаемоеОборудованиеПоРабочимМестам.Устройство КАК ПодключаемоеОборудование,
	|	ПодключаемоеОборудованиеПоРабочимМестам.Устройство.ИдентификаторУстройства КАК ИдентификаторУстройства,
	|	ПодключаемоеОборудованиеПоРабочимМестам.Устройство.Наименование КАК Наименование,
	|	ПодключаемоеОборудованиеПоРабочимМестам.Устройство.ТипОборудования КАК ТипОборудования,
	|	ПодключаемоеОборудованиеПоРабочимМестам.Устройство.ОбработчикДрайвера КАК ОбработчикДрайвера,
	|	ПодключаемоеОборудованиеПоРабочимМестам.Устройство.РабочееМесто КАК РабочееМесто,
	|	ПодключаемоеОборудованиеПоРабочимМестам.РабочееМесто.ИмяКомпьютера КАК ИмяКомпьютера,
	|	ПодключаемоеОборудованиеПоРабочимМестам.РабочееМесто.СетевойПорт КАК СетевойПорт
	|ИЗ
	|	РегистрСведений.ПодключаемоеОборудованиеПоРабочимМестам КАК ПодключаемоеОборудованиеПоРабочимМестам
	|ГДЕ
	|	(НЕ ПодключаемоеОборудованиеПоРабочимМестам.Устройство.УстройствоОтключено)" +
		// Добавим в текст запроса условия-фильтры переданые в параметрах вызова
		?(Идентификатор = Неопределено,
			// Добавим в текст запроса фильтр по типам оборудования (если задан)
		  ?(ТипыПО <> Неопределено,
		    "
		    |	И (ПодключаемоеОборудованиеПоРабочимМестам.Устройство.РабочееМесто <> ЗНАЧЕНИЕ(Справочник.РабочиеМеста.ПустаяСсылка))
		    |	И (ПодключаемоеОборудованиеПоРабочимМестам.Устройство.ТипОборудования В (&ТипОборудования))
		    |	И (ПодключаемоеОборудованиеПоРабочимМестам.РабочееМесто = &РабочееМесто)",
		    "
		    |	И ПодключаемоеОборудованиеПоРабочимМестам.РабочееМесто = &РабочееМесто"),

		  // Добавим в текст запроса фильтр по конкретному устройству (имеет приоритет над другими фильтрами)
		  "
		  |	И (ПодключаемоеОборудованиеПоРабочимМестам.Устройство.РабочееМесто <> ЗНАЧЕНИЕ(Справочник.РабочиеМеста.ПустаяСсылка))
		  |	И (ПодключаемоеОборудованиеПоРабочимМестам.Устройство.Ссылка = &Идентификатор ИЛИ
		  |	   ПодключаемоеОборудованиеПоРабочимМестам.Устройство.ИдентификаторУстройства = &Идентификатор)") +
	"
	|	И (НЕ ПодключаемоеОборудованиеПоРабочимМестам.Устройство.ПометкаУдаления)
	|";

	// Добавим полученное условие отбора к тексту запроса
	ТекстЗапроса = ТекстЗапроса + "
	|УПОРЯДОЧИТЬ ПО
	|	ТипОборудования,
	|	Наименование;";

	Запрос = Новый Запрос(ТекстЗапроса);
	
	// Установим параметры запроса (фильтрующие выборку значения)
	Если Идентификатор = Неопределено Тогда
		// То используется фильтр по рабочему месту
		Если НЕ ЗначениеЗаполнено(РабочееМесто) Тогда
			// Если РМ не задано в параметрах, то всегда текущее из параметров сеанса
			РабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
		КонецЕсли;

		Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
		// И возможно фильтр по типам оборудования
		Если ТипыПО <> Неопределено Тогда
			//Подготовка перечислений типов ТО для запроса
			МассивТиповПО = Новый Массив();
			Если ТипЗнч(ТипыПО) = Тип("Структура") Тогда
				Для Каждого ТипПО Из ТипыПО Цикл
					МассивТиповПО.Добавить(Перечисления.ТипыПодключаемогоОборудования[ТипПО.Ключ]);
				КонецЦикла;

			ИначеЕсли ТипЗнч(ТипыПО) = Тип("Массив") Тогда
				Для Каждого ТипПО Из ТипыПО Цикл
					МассивТиповПО.Добавить(Перечисления.ТипыПодключаемогоОборудования[ТипПО]);
				КонецЦикла;

			Иначе
				МассивТиповПО.Добавить(Перечисления.ТипыПодключаемогоОборудования[ТипыПО]);
			КонецЕсли;

			Запрос.УстановитьПараметр("ТипОборудования", МассивТиповПО);
		КонецЕсли;
	Иначе // Фильтр по конкретному устройству
		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	КонецЕсли;

	Выборка = Запрос.Выполнить().Выбрать();

	// Перебирая выборку составляем список устройств
	СписокОборудования = Новый Массив();
	Пока Выборка.Следующий() Цикл
		// Заполним структуру данных очередного устройства
		ДанныеУстройста = Новый Структура();
		ДанныеУстройста.Вставить("Ссылка"                 , Выборка.Ссылка);
		ДанныеУстройста.Вставить("ИдентификаторУстройства", Выборка.ИдентификаторУстройства);
		ДанныеУстройста.Вставить("Наименование"           , Выборка.Наименование);
		ДанныеУстройста.Вставить("ТипОборудования"        , Выборка.ТипОборудования);
		ДанныеУстройста.Вставить("ОбработчикДрайвера"     , Выборка.ОбработчикДрайвера);
		ДанныеУстройста.Вставить("РабочееМесто"           , Выборка.РабочееМесто);
		ДанныеУстройста.Вставить("ИмяКомпьютера"          , Выборка.ИмяКомпьютера);
		ДанныеУстройста.Вставить("СетевойПорт"            , Выборка.СетевойПорт);
		СписокОборудования.Добавить(ДанныеУстройста);
	КонецЦикла;

	// Возвращаем полученный список с данными всех найденных устройств
	Возврат СписокОборудования;

КонецФункции

// Функция возвращает по идентификатору устройства его параметры
//
Функция   ПолучитьПараметрыУстройства(Идентификатор) Экспорт

	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ПодключаемоеОборудование.Параметры
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|ГДЕ
	|	ПодключаемоеОборудование.Ссылка = &Идентификатор ИЛИ
	|	ПодключаемоеОборудование.ИдентификаторУстройства = &Идентификатор
	|");

	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	Выборка = Запрос.Выполнить().Выбрать();

	Выборка.Следующий();

	Возврат Выборка.Параметры.Получить();

КонецФункции

// Процедура предназначена для сохранения параметров устройства
//в реквизит Параметры типа хранилище значения в элементе справочника
Функция   СохранитьПараметрыУстройства(Идентификатор, Параметры) Экспорт

	Попытка
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ПодключаемоеОборудование.Ссылка
		|ИЗ
		|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
		|ГДЕ
		|	ПодключаемоеОборудование.Ссылка = &Идентификатор ИЛИ
		|	ПодключаемоеОборудование.ИдентификаторУстройства = &Идентификатор
		|");

		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
		ТаблицаРезультатов = Запрос.Выполнить().Выгрузить();

		ОбъектСправочника = ТаблицаРезультатов[0].Ссылка.ПолучитьОбъект();
		ОбъектСправочника.Параметры = Новый ХранилищеЗначения(Параметры);
		ОбъектСправочника.Записать();

		Результат = Истина;
	Исключение
		Результат = Ложь;
	КонецПопытки;

	Возврат Результат;

КонецФункции

// Функция возвращает структуру с данными устройства
//(со значениями реквизитов элемента справочника)
Функция   ПолучитьДанныеУстройства(Идентификатор) Экспорт

	ДанныеУстройста = Новый Структура();

	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	СпрПодключаемоеОборудование.Ссылка,
	|	СпрПодключаемоеОборудование.ИдентификаторУстройства КАК ИдентификаторУстройства,
	|	СпрПодключаемоеОборудование.Наименование КАК Наименование,
	|	СпрПодключаемоеОборудование.ТипОборудования КАК ТипОборудования,
	|	СпрПодключаемоеОборудование.ОбработчикДрайвера КАК ОбработчикДрайвера,
	|	СпрПодключаемоеОборудование.РабочееМесто КАК РабочееМесто,
	|	РабочиеМеста.ИмяКомпьютера Как ИмяКомпьютера,
	|	РабочиеМеста.СетевойПорт
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК СпрПодключаемоеОборудование
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РабочиеМеста КАК РабочиеМеста
	|		ПО СпрПодключаемоеОборудование.РабочееМесто = РабочиеМеста.Ссылка
	|ГДЕ
	|	(СпрПодключаемоеОборудование.ИдентификаторУстройства = &Идентификатор
	|			ИЛИ СпрПодключаемоеОборудование.Ссылка = &Идентификатор)
	|");

	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);

	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		ДанныеУстройста.Вставить("Ссылка"                 , Выборка.Ссылка);
		ДанныеУстройста.Вставить("ИдентификаторУстройства", Выборка.ИдентификаторУстройства);
		ДанныеУстройста.Вставить("Наименование"           , Выборка.Наименование);
		ДанныеУстройста.Вставить("ТипОборудования"        , Выборка.ТипОборудования);
		ДанныеУстройста.Вставить("ОбработчикДрайвера"     , Выборка.ОбработчикДрайвера);
		ДанныеУстройста.Вставить("РабочееМесто"           , Выборка.РабочееМесто);
		ДанныеУстройста.Вставить("ИмяКомпьютера"          , Выборка.ИмяКомпьютера);
		ДанныеУстройста.Вставить("СетевойПорт"            , Выборка.СетевойПорт);
	КонецЕсли;

	Возврат ДанныеУстройста;

КонецФункции

#КонецЕсли
Процедура НаПечать(ТабДок, Ссылка) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(НаПечать)
	Макет = Справочники.ПодключаемоеОборудование.ПолучитьМакет("НаПечать");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПодключаемоеОборудование.ВерсияКомпоненты,
	|	ПодключаемоеОборудование.ДатаРедакции,
	|	ПодключаемоеОборудование.ДатаСоздания,
	|	ПодключаемоеОборудование.ИдентификаторУстройства,
	|	ПодключаемоеОборудование.Наименование,
	|	ПодключаемоеОборудование.ОбработчикДрайвера,
	|	ПодключаемоеОборудование.Ответственный,
	|	ПодключаемоеОборудование.Параметры,
	|	ПодключаемоеОборудование.РабочееМесто,
	|	ПодключаемоеОборудование.ТипОборудования,
	|	ПодключаемоеОборудование.ТребуетсяПереустановка,
	|	ПодключаемоеОборудование.УстройствоИспользуется,
	|	ПодключаемоеОборудование.УстройствоОтключено
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|ГДЕ
	|	ПодключаемоеОборудование.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры
