// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
&НаКлиенте
Процедура ПечатьОтчетаБезГашенияВыполнить()

	ОписаниеОшибки = "";

	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		// Подключение устройства
		ИдентификаторУстройства = МенеджерОборудованияКлиент.ВыбратьУстройство("ФискальныйРегистратор",
		    ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите фискальный регистратор"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Фискальный регистратор не подключен"));

		Если ИдентификаторУстройства <> Неопределено Тогда
			Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
			                                                                              ИдентификаторУстройства, ОписаниеОшибки);

			Если Результат Тогда
				ВходныеПараметры  = Неопределено;
				ВыходныеПараметры = Неопределено;

				Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
				                                                        "PrintXReport",
				                                                        ВходныеПараметры,
				                                                        ВыходныеПараметры);

				Если НЕ Результат Тогда
					ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При снятии отчета на фискальном регистраторе произошла ошибка") + ".
					|%ОписаниеОшибки%
					|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Отчет на фискальном регистраторе не сформирован") + ".";
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ВыходныеПараметры[1]);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;

				МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
				                                                                 ИдентификаторУстройства);
			Иначе
				ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении устройства произошла ошибка.") + Символы.ПС + ОписаниеОшибки;
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
	Иначе
		ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Предварительно необходимо выбрать рабочее место подключаемого оборудования текущего сеанса.");

		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПечатьОтчетаСГашениемВыполнить()

	ОписаниеОшибки = "";

	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		// Подключение устройства
		ИдентификаторУстройства = МенеджерОборудованияКлиент.ВыбратьУстройство("ФискальныйРегистратор",
		    ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите фискальный регистратор"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Фискальный регистратор не подключен"));

		Если ИдентификаторУстройства <> Неопределено Тогда
			Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
			                                                                              ИдентификаторУстройства, ОписаниеОшибки);

			Если Результат Тогда
				ВходныеПараметры  = Неопределено;
				ВыходныеПараметры = Неопределено;

				Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
				                                                        "PrintZReport",
				                                                        ВходныеПараметры,
				                                                        ВыходныеПараметры);

				Если НЕ Результат Тогда
					ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При снятии отчета на фискальном регистраторе произошла ошибка") + ".
					|""%ОписаниеОшибки%""
					|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Отчет на фискальном регистраторе не сформирован.");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ВыходныеПараметры[1]);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;

				МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
				                                                                 ИдентификаторУстройства);
			Иначе
				ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении устройства произошла ошибка.") + Символы.ПС + ОписаниеОшибки;
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
	Иначе
		ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Предварительно необходимо выбрать рабочее место подключаемого оборудования текущего сеанса.");

		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли; 		

КонецПроцедуры
