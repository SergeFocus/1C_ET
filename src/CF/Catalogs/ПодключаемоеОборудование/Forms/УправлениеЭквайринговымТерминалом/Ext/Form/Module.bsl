// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
&НаКлиенте
Процедура ВернутьПлатежПоКарте(Команда)

	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		ИдентификаторУстройстваЭТ = Неопределено;
		ИдентификаторУстройстваФР = Неопределено;
		ОписаниеОшибки            = "";

		СуммаОперации       = 0;
		НомерКарты          = "";
		// НомерСсылкиОперации = "";
		НомерЧека           = "";
		СтрокаСлипЧека      = "";

		// Выбор устройства ЭТ
		ИдентификаторУстройстваЭТ = МенеджерОборудованияКлиент.ВыбратьУстройство("ЭквайринговыйТерминал",
		    ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите эквайринговый терминал"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Эквайринговый терминал не подключен"));

		Если ИдентификаторУстройстваЭТ <> Неопределено Тогда
			// Выбор устройства ФР
			ИдентификаторУстройстваФР = МенеджерОборудованияКлиент.ВыбратьУстройство("ФискальныйРегистратор",
			    ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите фискальный регистратор"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Фискальный регистратор не подключен"));

			Если ИдентификаторУстройстваФР <> Неопределено Тогда
				// Подключение устройства ЭТ
				РезультатЭТ = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
				                                                                                ИдентификаторУстройстваЭТ,
				                                                                                ОписаниеОшибки);

				Если РезультатЭТ Тогда
					// Подключение устройства ФР
					РезультатФР = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
					                                                                                ИдентификаторУстройстваФР,
					                                                                                ОписаниеОшибки);

					Если РезультатФР Тогда
						
						Результат = Неопределено;
						
						ОткрытьФорму("Справочник.ПодключаемоеОборудование.Форма.ФормаАвторизацииЭТ",,,,,, Новый ОписаниеОповещения("ВернутьПлатежПоКартеЗавершение", ЭтаФорма, Новый Структура("ИдентификаторУстройстваФР, ИдентификаторУстройстваЭТ, НомерЧека, СуммаОперации", ИдентификаторУстройстваФР, ИдентификаторУстройстваЭТ, НомерЧека, СуммаОперации)), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
					Иначе
						ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении фискального регистратора произошла ошибка") + ":
						|""%ОписаниеОшибки%"".
						|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция по карте не была выполнена.");
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
					КонецЕсли;
				Иначе
					ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении эквайрингового терминала произошла ошибка") + ":
						|""%ОписаниеОшибки%"".
						|" +ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция по карте не была выполнена.");
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Предварительно необходимо выбрать рабочее место подключаемого оборудования текущего сеанса.");

		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВернутьПлатежПоКартеЗавершение(Результат1, ДополнительныеПараметры) Экспорт
	
	ИдентификаторУстройстваФР = ДополнительныеПараметры.ИдентификаторУстройстваФР;
	ИдентификаторУстройстваЭТ = ДополнительныеПараметры.ИдентификаторУстройстваЭТ;
	НомерЧека = ДополнительныеПараметры.НомерЧека;
	СуммаОперации = ДополнительныеПараметры.СуммаОперации;
	
	
	// Предварительно авторизуем операцию
	Результат = Результат1;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ВходныеПараметры  = Новый Массив();
		ВыходныеПараметры = Неопределено;
		
		ВходныеПараметры.Добавить(Результат.Сумма);
		ВходныеПараметры.Добавить(Результат.ДанныеКарты);
		ВходныеПараметры.Добавить(Результат.СсылочныйНомер);
		ВходныеПараметры.Добавить(Результат.НомерЧека);
		
		// Выполнение операции на ЭТ
		РезультатЭТ = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваЭТ,
		"AuthorizeRefund",
		ВходныеПараметры,
		ВыходныеПараметры);
		
		Если НЕ РезультатЭТ Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При выполнении операции возникла ошибка") + ":
			|""%ОписаниеОшибки%"".
			|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Возврат по карте не был произведен") + ".";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,
			"%ОписаниеОшибки%",
			ВыходныеПараметры[1]);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе
			Если НЕ ПустаяСтрока(ВыходныеПараметры[3][1]) Тогда
				глПодключаемоеОборудование.Вставить("ПоследнийСлипЧек", ВыходныеПараметры[3][1]);
			КонецЕсли;
			
			НомерКарты          = ВыходныеПараметры[0];
			НомерСсылкиОперации = ВыходныеПараметры[1];
			НомерЧека           = ВыходныеПараметры[2];
			СтрокаСлипЧека      = ВыходныеПараметры[3][1];
			
			Если НЕ ПустаяСтрока(СтрокаСлипЧека) Тогда
				ВходныеПараметры = Новый Массив();
				ВходныеПараметры.Добавить(СтрокаСлипЧека);
				ВыходныеПараметры = Неопределено;
				
				РезультатФР = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,
				"PrintText",
				ВходныеПараметры,
				ВыходныеПараметры);
			КонецЕсли;
		КонецЕсли;
		
		Если РезультатЭТ И Не РезультатФР Тогда
			ОписаниеОшибкиФР = ВыходныеПараметры[1];
			
			ВходныеПараметры  = Новый Массив();
			ВыходныеПараметры = Неопределено;
			
			ВходныеПараметры.Добавить(СуммаОперации);
			ВходныеПараметры.Добавить(НомерСсылкиОперации);
			ВходныеПараметры.Добавить(НомерЧека);
			
			// Выполнение операции на ЭТ
			МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваЭТ,
			"EmergencyVoid",
			ВходныеПараметры,
			ВыходныеПараметры);
			
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При печати слип-чека возникла ошибка") + ":
			|""%ОписаниеОшибки%"".
			|" +ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция по карте была отменена") + ".";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,
			"%ОписаниеОшибки%",
			ОписаниеОшибкиФР);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
	// Отключение устройства ФР
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
	ИдентификаторУстройстваФР);
	// Отключение устройства ЭТ
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
	ИдентификаторУстройстваЭТ);

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПреавторизацию(Команда)

	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		ИдентификаторУстройстваЭТ = Неопределено;
		ИдентификаторУстройстваФР = Неопределено;
		ОписаниеОшибки            = "";

		СуммаОперации       = 0;
		НомерКарты          = "";
		// НомерСсылкиОперации = "";
		НомерЧека           = "";
		СтрокаСлипЧека      = "";

		// Выбор устройства ЭТ
		ИдентификаторУстройстваЭТ = МенеджерОборудованияКлиент.ВыбратьУстройство("ЭквайринговыйТерминал",
		    ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите эквайринговый терминал"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Эквайринговый терминал не подключен"));

		Если ИдентификаторУстройстваЭТ <> Неопределено Тогда
			// Выбор устройства ФР
			ИдентификаторУстройстваФР = МенеджерОборудованияКлиент.ВыбратьУстройство("ФискальныйРегистратор",
			    ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите фискальный регистратор"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Фискальный регистратор не подключен"));

			Если ИдентификаторУстройстваФР <> Неопределено Тогда
				// Подключение устройства ЭТ
				РезультатЭТ = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
				                                                                                ИдентификаторУстройстваЭТ,
				                                                                                ОписаниеОшибки);

				Если РезультатЭТ Тогда
					// Подключение устройства ФР
					РезультатФР = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
					                                                                                ИдентификаторУстройстваФР,
					                                                                                ОписаниеОшибки);

					Если РезультатФР Тогда
						
						Результат = Неопределено;
						
						ОткрытьФорму("Справочник.ПодключаемоеОборудование.Форма.ФормаАвторизацииЭТ",,,,,, Новый ОписаниеОповещения("ВыполнитьПреавторизациюЗавершение", ЭтаФорма, Новый Структура("ИдентификаторУстройстваФР, ИдентификаторУстройстваЭТ, СуммаОперации", ИдентификаторУстройстваФР, ИдентификаторУстройстваЭТ, СуммаОперации)), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
					Иначе
						ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении фискального регистратора произошла ошибка") + ":
						|""%ОписаниеОшибки%"".
						|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция по карте не была выполнена.");
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
					КонецЕсли;
				Иначе
					ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении эквайрингового терминала произошла ошибка") + ":
						|""%ОписаниеОшибки%"".
						|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция по карте не была выполнена.");
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Предварительно необходимо выбрать рабочее место подключаемого оборудования текущего сеанса.");

		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПреавторизациюЗавершение(Результат1, ДополнительныеПараметры) Экспорт
	
	ИдентификаторУстройстваФР = ДополнительныеПараметры.ИдентификаторУстройстваФР;
	ИдентификаторУстройстваЭТ = ДополнительныеПараметры.ИдентификаторУстройстваЭТ;
	СуммаОперации = ДополнительныеПараметры.СуммаОперации;
	
	
	// Предварительно авторизуем операцию
	Результат = Результат1;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ВходныеПараметры  = Новый Массив();
		ВыходныеПараметры = Неопределено;
		
		ВходныеПараметры.Добавить(Результат.Сумма);
		ВходныеПараметры.Добавить(Результат.ДанныеКарты);
		
		// Выполнение операции на ЭТ
		РезультатЭТ = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваЭТ,
		"AuthorizePreSales",
		ВходныеПараметры,
		ВыходныеПараметры);
		
		Если НЕ РезультатЭТ Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При выполнении операции возникла ошибка") + ":
			|""%ОписаниеОшибки%"".
			|" +ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Преавторизация по карте не была произведена.");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,
			"%ОписаниеОшибки%",
			ВыходныеПараметры[1]);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе
			Если НЕ ПустаяСтрока(ВыходныеПараметры[3][1]) Тогда
				глПодключаемоеОборудование.Вставить("ПоследнийСлипЧек", ВыходныеПараметры[3][1]);
			КонецЕсли;
			
			НомерКарты          = ВыходныеПараметры[0];
			НомерСсылкиОперации = ВыходныеПараметры[1];
			НомерЧека           = ВыходныеПараметры[2];
			СтрокаСлипЧека      = ВыходныеПараметры[3][1];
			
			Если НЕ ПустаяСтрока(СтрокаСлипЧека) Тогда
				ВходныеПараметры = Новый Массив();
				ВходныеПараметры.Добавить(СтрокаСлипЧека);
				ВыходныеПараметры = Неопределено;
				
				РезультатФР = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,
				"PrintText",
				ВходныеПараметры,
				ВыходныеПараметры);
			КонецЕсли;
		КонецЕсли;
		
		Если РезультатЭТ И Не РезультатФР Тогда
			ОписаниеОшибкиФР = ВыходныеПараметры[1];
			
			ВходныеПараметры  = Новый Массив();
			ВыходныеПараметры = Неопределено;
			
			ВходныеПараметры.Добавить(СуммаОперации);
			ВходныеПараметры.Добавить(НомерСсылкиОперации);
			ВходныеПараметры.Добавить(НомерЧека);
			
			// Выполнение операции на ЭТ
			МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваЭТ,
			"EmergencyVoid",
			ВходныеПараметры,
			ВыходныеПараметры);
			
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При печати слип-чека возникла ошибка") + ":
			|""%ОписаниеОшибки%"".
			|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция по карте была отменена.");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,
			"%ОписаниеОшибки%",
			ОписаниеОшибкиФР);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
	// Отключение устройства ФР
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
	ИдентификаторУстройстваФР);
	// Отключение устройства ЭТ
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
	ИдентификаторУстройстваЭТ);

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСверкуИтогов(Команда)

	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		ИдентификаторУстройстваЭТ = Неопределено;
		ИдентификаторУстройстваФР = Неопределено;
		ОписаниеОшибки            = "";

		СуммаОперации       = 0;
		НомерКарты          = "";
		// НомерСсылкиОперации = "";
		НомерЧека           = "";
		СтрокаСлипЧека      = "";

		// Выбор устройства ЭТ
		ИдентификаторУстройстваЭТ = МенеджерОборудованияКлиент.ВыбратьУстройство("ЭквайринговыйТерминал",
		    ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите эквайринговый терминал"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Эквайринговый терминал не подключен"));

		Если ИдентификаторУстройстваЭТ <> Неопределено Тогда
			// Выбор устройства ФР
			ИдентификаторУстройстваФР = МенеджерОборудованияКлиент.ВыбратьУстройство("ФискальныйРегистратор",
			    ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите фискальный регистратор"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Фискальный регистратор не подключен"));

			Если ИдентификаторУстройстваФР <> Неопределено Тогда
				// Подключение устройства ЭТ
				РезультатЭТ = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
				                                                                                ИдентификаторУстройстваЭТ,
				                                                                                ОписаниеОшибки);

				Если РезультатЭТ Тогда
					// Подключение устройства ФР
					РезультатФР = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
					                                                                                ИдентификаторУстройстваФР,
					                                                                                ОписаниеОшибки);

					Если РезультатФР Тогда
						ВходныеПараметры  = Неопределено;
						ВыходныеПараметры = Неопределено;

						// Выполнение операции на ЭТ
						РезультатЭТ = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваЭТ,
						                                                          "Settlement",
						                                                          ВходныеПараметры,
						                                                          ВыходныеПараметры);

						Если НЕ РезультатЭТ Тогда
							ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При выполнении операции возникла ошибка") + ":
							|""%ОписаниеОшибки%"".
							|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция сверки итогов не была проведена.");
							ТекстСообщения = СтрЗаменить(ТекстСообщения,
														 "%ОписаниеОшибки%",
														 ВыходныеПараметры[1]);
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
						Иначе
							Если НЕ ПустаяСтрока(ВыходныеПараметры[0][1]) Тогда
								глПодключаемоеОборудование.Вставить("ПоследнийСлипЧек", ВыходныеПараметры[0][1]);
							КонецЕсли;

							НомерКарты          = "";
							НомерСсылкиОперации = "";
							НомерЧека           = "";
							СтрокаСлипЧека      = ВыходныеПараметры[0][1];

							Если НЕ ПустаяСтрока(СтрокаСлипЧека) Тогда
								ВходныеПараметры = Новый Массив();
								ВходныеПараметры.Добавить(СтрокаСлипЧека);
								ВыходныеПараметры = Неопределено;

								РезультатФР = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,
								                                                          "PrintText",
								                                                          ВходныеПараметры,
								                                                          ВыходныеПараметры);
								Если НЕ РезультатФР Тогда
									ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При печати слип-чека возникла ошибка") + ":
										|""%ОписаниеОшибки%"".";
									ТекстСообщения = СтрЗаменить(ТекстСообщения,
																 "%ОписаниеОшибки%",
																 ВыходныеПараметры[1]);
									ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
								КонецЕсли;
							Иначе
								ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция сверки итогов успешно выполнена");
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
							КонецЕсли;
						КонецЕсли;

						// Отключение устройства ФР
						МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
						                                                                 ИдентификаторУстройстваФР);
						// Отключение устройства ЭТ
						МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
						                                                                 ИдентификаторУстройстваЭТ);
					Иначе
						ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении фискального регистратора произошла ошибка") + ":
						|""%ОписаниеОшибки%"".
						|"+ ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция сверки итогов не была проведена.");
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
					КонецЕсли;
				Иначе
					ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("ри подключении эквайрингового терминала произошла ошибка") + ":
						|""%ОписаниеОшибки%"".
						|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция сверки итогов не была проведена.");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Предварительно необходимо выбрать рабочее место подключаемого оборудования текущего сеанса.");

		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПреавторизацию(Команда)

	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		ИдентификаторУстройстваЭТ = Неопределено;
		ИдентификаторУстройстваФР = Неопределено;
		ОписаниеОшибки            = "";

		СуммаОперации       = 0;
		НомерКарты          = "";
		// НомерСсылкиОперации = "";
		НомерЧека           = "";
		СтрокаСлипЧека      = "";

		// Выбор устройства ЭТ
		ИдентификаторУстройстваЭТ = МенеджерОборудованияКлиент.ВыбратьУстройство("ЭквайринговыйТерминал",
		    ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите эквайринговый терминал"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Эквайринговый терминал не подключен"));

		Если ИдентификаторУстройстваЭТ <> Неопределено Тогда
			// Выбор устройства ФР
			ИдентификаторУстройстваФР = МенеджерОборудованияКлиент.ВыбратьУстройство("ФискальныйРегистратор",
			    ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите фискальный регистратор"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Фискальный регистратор не подключен"));

			Если ИдентификаторУстройстваФР <> Неопределено Тогда
				// Подключение устройства ЭТ
				РезультатЭТ = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
				                                                                                ИдентификаторУстройстваЭТ,
				                                                                                ОписаниеОшибки);

				Если РезультатЭТ Тогда
					// Подключение устройства ФР
					РезультатФР = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
					                                                                                ИдентификаторУстройстваФР,
					                                                                                ОписаниеОшибки);

					Если РезультатФР Тогда
						
						Результат = Неопределено;
						
						ОткрытьФорму("Справочник.ПодключаемоеОборудование.Форма.ФормаАвторизацииЭТ",,,,,, Новый ОписаниеОповещения("ЗавершитьПреавторизациюЗавершение", ЭтаФорма, Новый Структура("ИдентификаторУстройстваФР, ИдентификаторУстройстваЭТ, НомерЧека, СуммаОперации", ИдентификаторУстройстваФР, ИдентификаторУстройстваЭТ, НомерЧека, СуммаОперации)), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
					Иначе
						ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении фискального регистратора произошла ошибка") + ":
						|""%ОписаниеОшибки%"".
						|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция по карте не была выполнена.");
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
					КонецЕсли;
				Иначе
					ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении эквайрингового терминала произошла ошибка") + ":
						|""%ОписаниеОшибки%"".
						|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция по карте не была выполнена.");
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Предварительно необходимо выбрать рабочее место подключаемого оборудования текущего сеанса.");

		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПреавторизациюЗавершение(Результат1, ДополнительныеПараметры) Экспорт
	
	ИдентификаторУстройстваФР = ДополнительныеПараметры.ИдентификаторУстройстваФР;
	ИдентификаторУстройстваЭТ = ДополнительныеПараметры.ИдентификаторУстройстваЭТ;
	НомерЧека = ДополнительныеПараметры.НомерЧека;
	СуммаОперации = ДополнительныеПараметры.СуммаОперации;
	
	
	// Предварительно авторизуем операцию
	Результат = Результат1;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ВходныеПараметры  = Новый Массив();
		ВыходныеПараметры = Неопределено;
		
		ВходныеПараметры.Добавить(Результат.Сумма);
		ВходныеПараметры.Добавить(Результат.ДанныеКарты);
		ВходныеПараметры.Добавить(Результат.СсылочныйНомер);
		ВходныеПараметры.Добавить(Результат.НомерЧека);
		
		// Выполнение операции на ЭТ
		РезультатЭТ = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваЭТ,
		"AuthorizeCompletion",
		ВходныеПараметры,
		ВыходныеПараметры);
		
		Если НЕ РезультатЭТ Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При выполнении операции возникла ошибка") + ":
			|""%ОписаниеОшибки%"".
			|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Преавторизация по карте не была завершена.");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,
			"%ОписаниеОшибки%",
			ВыходныеПараметры[1]);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе
			Если НЕ ПустаяСтрока(ВыходныеПараметры[0][1]) Тогда
				глПодключаемоеОборудование.Вставить("ПоследнийСлипЧек", ВыходныеПараметры[0][1]);
			КонецЕсли;
			
			НомерКарты           = "";
			НомерСсылкиОперации  = "";
			НомерЧека            = "";
			СтрокаСлипЧека       = ВыходныеПараметры[0][1];
			
			Если НЕ ПустаяСтрока(СтрокаСлипЧека) Тогда
				ВходныеПараметры = Новый Массив();
				ВходныеПараметры.Добавить(СтрокаСлипЧека);
				ВыходныеПараметры = Неопределено;
				
				РезультатФР = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,
				"PrintText",
				ВходныеПараметры,
				ВыходныеПараметры);
			КонецЕсли;
		КонецЕсли;
		
		Если РезультатЭТ И Не РезультатФР Тогда
			ОписаниеОшибкиФР = ВыходныеПараметры[1];
			
			ВходныеПараметры  = Новый Массив();
			ВыходныеПараметры = Неопределено;
			
			ВходныеПараметры.Добавить(СуммаОперации);
			ВходныеПараметры.Добавить(НомерСсылкиОперации);
			ВходныеПараметры.Добавить(НомерЧека);
			
			// Выполнение операции на ЭТ
			МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваЭТ,
			"EmergencyVoid",
			ВходныеПараметры,
			ВыходныеПараметры);
			
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При печати слип-чека возникла ошибка") + ":
			|""%ОписаниеОшибки%"".
			|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция по карте была отменена.");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,
			"%ОписаниеОшибки%",
			ОписаниеОшибкиФР);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
	// Отключение устройства ФР
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
	ИдентификаторУстройстваФР);
	// Отключение устройства ЭТ
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
	ИдентификаторУстройстваЭТ);

КонецПроцедуры

&НаКлиенте
Процедура НапечататьПоследнийСлипЧек(Команда)

	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		ИдентификаторУстройстваФР = Неопределено;
		ОписаниеОшибки = "";

		// Выбор устройства ФР
		ИдентификаторУстройстваФР = МенеджерОборудованияКлиент.ВыбратьУстройство("ФискальныйРегистратор",
			ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите фискальный регистратор"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Фискальный регистратор не подключен"));

		Если ИдентификаторУстройстваФР <> Неопределено Тогда
			// Подключение устройства ФР
			РезультатФР = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
			                                                                                ИдентификаторУстройстваФР,
			                                                                                ОписаниеОшибки);

			Если РезультатФР Тогда
				Если НЕ ПустаяСтрока(глПодключаемоеОборудование.ПоследнийСлипЧек) Тогда
					ВходныеПараметры = Новый Массив();
					ВходныеПараметры.Добавить(глПодключаемоеОборудование.ПоследнийСлипЧек);
					ВыходныеПараметры = Неопределено;

					РезультатФР = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,
					                                                          "PrintText",
					                                                          ВходныеПараметры,
					                                                          ВыходныеПараметры);
					Если НЕ РезультатФР Тогда
						ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При печати слип-чека возникла ошибка") + ":
						|""%ОписаниеОшибки%"".";
						ТекстСообщения = СтрЗаменить(ТекстСообщения,
						                             "%ОписаниеОшибки%",
						                             ВыходныеПараметры[1]);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
					КонецЕсли;
				КонецЕсли;

				// Отключение устройства ФР
				МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
				                                                                 ИдентификаторУстройстваФР);
			Иначе
				ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении фискального регистратора произошла ошибка") + ":
				|""%ОписаниеОшибки%"".
				|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция по карте не была выполнена.");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
	Иначе
		ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Предварительно необходимо выбрать рабочее место подключаемого оборудования текущего сеанса.");

		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОплатитьПлатежнойКартой(Команда)

	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		ИдентификаторУстройстваЭТ = Неопределено;
		ИдентификаторУстройстваФР = Неопределено;
		ОписаниеОшибки            = "";

		СуммаОперации       = 0;
		НомерКарты          = "";
		// НомерСсылкиОперации = "";
		НомерЧека           = "";
		СтрокаСлипЧека      = "";

		// Выбор устройства ЭТ
		ИдентификаторУстройстваЭТ = МенеджерОборудованияКлиент.ВыбратьУстройство("ЭквайринговыйТерминал",
		    ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите эквайринговый терминал"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Эквайринговый терминал не подключен"));

		Если ИдентификаторУстройстваЭТ <> Неопределено Тогда
			// Выбор устройства ФР
			ИдентификаторУстройстваФР = МенеджерОборудованияКлиент.ВыбратьУстройство("ФискальныйРегистратор",
			    ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Выберите фискальный регистратор"), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Фискальный регистратор не подключен"));

			Если ИдентификаторУстройстваФР <> Неопределено Тогда
				// Подключение устройства ЭТ
				РезультатЭТ = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
				                                                                                ИдентификаторУстройстваЭТ,
				                                                                                ОписаниеОшибки);

				Если РезультатЭТ Тогда
					// Подключение устройства ФР
					РезультатФР = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
					                                                                                ИдентификаторУстройстваФР,
					                                                                                ОписаниеОшибки);

					Если РезультатФР Тогда

						Результат = Неопределено;

						ОткрытьФорму("Справочник.ПодключаемоеОборудование.Форма.ФормаАвторизацииЭТ",,,,,, Новый ОписаниеОповещения("ОплатитьПлатежнойКартойЗавершение", ЭтаФорма, Новый Структура("ИдентификаторУстройстваФР, ИдентификаторУстройстваЭТ, НомерЧека, СуммаОперации", ИдентификаторУстройстваФР, ИдентификаторУстройстваЭТ, НомерЧека, СуммаОперации)), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
					Иначе
						ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении фискального регистратора произошла ошибка") + ":
						|""%ОписаниеОшибки%"".
						|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция по карте не была выполнена.");
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
					КонецЕсли;
				Иначе
					ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При подключении эквайрингового терминала произошла ошибка") + ":
						|""%ОписаниеОшибки%"".
						|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция по карте не была выполнена.");
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Предварительно необходимо выбрать рабочее место подключаемого оборудования текущего сеанса.");

		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОплатитьПлатежнойКартойЗавершение(Результат1, ДополнительныеПараметры) Экспорт
	
	ИдентификаторУстройстваФР = ДополнительныеПараметры.ИдентификаторУстройстваФР;
	ИдентификаторУстройстваЭТ = ДополнительныеПараметры.ИдентификаторУстройстваЭТ;
	НомерЧека = ДополнительныеПараметры.НомерЧека;
	СуммаОперации = ДополнительныеПараметры.СуммаОперации;
	
	
	// Предварительно авторизуем операцию
	Результат = Результат1;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ВходныеПараметры  = Новый Массив();
		ВыходныеПараметры = Неопределено;
		
		ВходныеПараметры.Добавить(Результат.Сумма);
		ВходныеПараметры.Добавить(Результат.ДанныеКарты);
		
		// Выполнение операции на ЭТ             
		РезультатЭТ = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваЭТ,
		"AuthorizeSales",
		ВходныеПараметры,
		ВыходныеПараметры);
		
		Если НЕ РезультатЭТ Тогда
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При выполнении операции возникла ошибка") + ":
			|""%ОписаниеОшибки%"".
			|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Оплата по карте не была произведена.");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,
			"%ОписаниеОшибки%",
			ВыходныеПараметры[1]);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе
			Если НЕ ПустаяСтрока(ВыходныеПараметры[3][1]) Тогда
				глПодключаемоеОборудование.Вставить("ПоследнийСлипЧек", ВыходныеПараметры[3][1]);
			КонецЕсли;
			
			НомерКарты          = ВыходныеПараметры[0];
			НомерСсылкиОперации = ВыходныеПараметры[1];
			СтрокаСлипЧека      = ВыходныеПараметры[3][1];
			
			Если НЕ ПустаяСтрока(СтрокаСлипЧека) Тогда
				ВходныеПараметры = Новый Массив();
				ВходныеПараметры.Добавить(СтрокаСлипЧека);
				ВыходныеПараметры = Неопределено;
				
				РезультатФР = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,
				"PrintText",
				ВходныеПараметры,
				ВыходныеПараметры);
			КонецЕсли;
		КонецЕсли;
		
		Если РезультатЭТ И Не РезультатФР Тогда
			ОписаниеОшибкиФР = ВыходныеПараметры[1];
			
			ВходныеПараметры  = Новый Массив();
			ВыходныеПараметры = Неопределено;
			
			ВходныеПараметры.Добавить(СуммаОперации);
			ВходныеПараметры.Добавить(НомерСсылкиОперации);
			ВходныеПараметры.Добавить(НомерЧека);
			
			// Выполнение операции на ЭТ
			МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваЭТ,
			"EmergencyVoid",
			ВходныеПараметры,
			ВыходныеПараметры);
			
			ТекстСообщения = ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("При печати слип-чека возникла ошибка") + ":
			|""%ОписаниеОшибки%"".
			|" + ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Операция по карте была отменена.");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,
			"%ОписаниеОшибки%",
			ОписаниеОшибкиФР);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
	// Отключение устройства ФР
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
	ИдентификаторУстройстваФР);
	// Отключение устройства ЭТ
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
	ИдентификаторУстройстваЭТ);

КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПлатежПоКарте(Команда)

	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		ИдентификаторУстройстваЭТ = Неопределено;
		ИдентификаторУстройстваФР = Неопределено;
		ОписаниеОшибки            = "";

		СуммаОперации       = 0;
		НомерКарты          = "";
		// НомерСсылкиОперации = "";
		НомерЧека           = "";
		СтрокаСлипЧека      = "";

		// Выбор устройства ЭТ
		ИдентификаторУстройстваЭТ = МенеджерОборудованияКлиент.ВыбратьУстройство("ЭквайринговыйТерминал",
		    НСтр("ru='Выберите эквайринговый терминал'"), НСтр("ru='Эквайринговый терминал не подключен'"));

		Если ИдентификаторУстройстваЭТ <> Неопределено Тогда
			// Выбор устройства ФР
			ИдентификаторУстройстваФР = МенеджерОборудованияКлиент.ВыбратьУстройство("ФискальныйРегистратор",
			    НСтр("ru='Выберите фискальный регистратор'"), НСтр("ru='Фискальный регистратор не подключен'"));

			Если ИдентификаторУстройстваФР <> Неопределено Тогда
				// Подключение устройства ЭТ
				РезультатЭТ = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
				                                                                                ИдентификаторУстройстваЭТ,
				                                                                                ОписаниеОшибки);

				Если РезультатЭТ Тогда
					// Подключение устройства ФР
					РезультатФР = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
					                                                                                ИдентификаторУстройстваФР,
					                                                                                ОписаниеОшибки);

					Если РезультатФР Тогда
						
						Результат = Неопределено;
						
						ОткрытьФорму("Справочник.ПодключаемоеОборудование.Форма.ФормаАвторизацииЭТ",,,,,, Новый ОписаниеОповещения("ОтменитьПлатежПоКартеЗавершение", ЭтаФорма, Новый Структура("ИдентификаторУстройстваФР, ИдентификаторУстройстваЭТ, НомерЧека", ИдентификаторУстройстваФР, ИдентификаторУстройстваЭТ, НомерЧека)), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
					Иначе
						ТекстСообщения = НСтр("ru = 'При подключении фискального регистратора произошла ошибка:
						|""%ОписаниеОшибки%"".
						|Операция по карте не была выполнена.'");
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
					КонецЕсли;
				Иначе
					ТекстСообщения = НСтр("ru = 'При подключении эквайрингового терминала произошла ошибка:
						|""%ОписаниеОшибки%"".
						|Операция по карте не была выполнена.'");
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ТекстСообщения = НСтр("ru = 'Предварительно необходимо выбрать рабочее место подключаемого оборудования текущего сеанса.'");

		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПлатежПоКартеЗавершение(Результат1, ДополнительныеПараметры) Экспорт
	
	ИдентификаторУстройстваФР = ДополнительныеПараметры.ИдентификаторУстройстваФР;
	ИдентификаторУстройстваЭТ = ДополнительныеПараметры.ИдентификаторУстройстваЭТ;
	НомерЧека = ДополнительныеПараметры.НомерЧека;
	
	
	// Предварительно авторизуем операцию
	Результат = Результат1;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ВходныеПараметры  = Новый Массив();
		ВыходныеПараметры = Неопределено;
		
		ВходныеПараметры.Добавить(Результат.Сумма);
		ВходныеПараметры.Добавить(Результат.СсылочныйНомер);
		ВходныеПараметры.Добавить(Результат.НомерЧека);
		
		// Выполнение операции на ЭТ
		РезультатЭТ = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваЭТ,
		"AuthorizeVoid",
		ВходныеПараметры,
		ВыходныеПараметры);
		
		Если НЕ РезультатЭТ Тогда
			ТекстСообщения = НСтр("ru = 'При выполнении операции возникла ошибка:
			|""%ОписаниеОшибки%"".
			|Отмена по карте не была произведена.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,
			"%ОписаниеОшибки%",
			ВыходныеПараметры[1]);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе
			Если НЕ ПустаяСтрока(ВыходныеПараметры[0][1]) Тогда
				глПодключаемоеОборудование.Вставить("ПоследнийСлипЧек", ВыходныеПараметры[0][1]);
			КонецЕсли;
			
			НомерКарты          = "";
			НомерСсылкиОперации = "";
			НомерЧека           = "";
			СтрокаСлипЧека      = ВыходныеПараметры[0][1];
			
			Если НЕ ПустаяСтрока(СтрокаСлипЧека) Тогда
				ВходныеПараметры = Новый Массив();
				ВходныеПараметры.Добавить(СтрокаСлипЧека);
				ВыходныеПараметры = Неопределено;
				
				РезультатФР = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,
				"PrintText",
				ВходныеПараметры,
				ВыходныеПараметры);
			КонецЕсли;
		КонецЕсли;
		
		Если РезультатЭТ И Не РезультатФР Тогда
			ОписаниеОшибкиФР = ВыходныеПараметры[1];
			
			ТекстСообщения = НСтр("ru = 'При печати слип-чека возникла ошибка:
			|""%ОписаниеОшибки%"".
			|Операция по карте была отменена.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,
			"%ОписаниеОшибки%",
			ОписаниеОшибкиФР);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
	// Отключение устройства ФР
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
	ИдентификаторУстройстваФР);
	// Отключение устройства ЭТ
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
	ИдентификаторУстройстваЭТ);

КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПреавторизацию(Команда)

	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		ИдентификаторУстройстваЭТ = Неопределено;
		ИдентификаторУстройстваФР = Неопределено;
		ОписаниеОшибки            = "";

		СуммаОперации       = 0;
		НомерКарты          = "";
		НомерСсылкиОперации = "";
		НомерЧека           = "";
		СтрокаСлипЧека      = "";

		// Выбор устройства ЭТ
		ИдентификаторУстройстваЭТ = МенеджерОборудованияКлиент.ВыбратьУстройство("ЭквайринговыйТерминал",
		    НСтр("ru='Выберите эквайринговый терминал'"), НСтр("ru='Эквайринговый терминал не подключен'"));

		Если ИдентификаторУстройстваЭТ <> Неопределено Тогда
			// Выбор устройства ФР
			ИдентификаторУстройстваФР = МенеджерОборудованияКлиент.ВыбратьУстройство("ФискальныйРегистратор",
			    НСтр("ru='Выберите фискальный регистратор'"), НСтр("ru='Фискальный регистратор не подключен'"));

			Если ИдентификаторУстройстваФР <> Неопределено Тогда
				// Подключение устройства ЭТ
				РезультатЭТ = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
				                                                                                ИдентификаторУстройстваЭТ,
				                                                                                ОписаниеОшибки);

				Если РезультатЭТ Тогда
					// Подключение устройства ФР
					РезультатФР = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
					                                                                                ИдентификаторУстройстваФР,
					                                                                                ОписаниеОшибки);

					Если РезультатФР Тогда
						
						Результат = Неопределено;
						
						ОткрытьФорму("Справочник.ПодключаемоеОборудование.Форма.ФормаАвторизацииЭТ",,,,,, Новый ОписаниеОповещения("ОтменитьПреавторизациюЗавершение", ЭтаФорма, Новый Структура("ИдентификаторУстройстваФР, ИдентификаторУстройстваЭТ, НомерЧека, СуммаОперации", ИдентификаторУстройстваФР, ИдентификаторУстройстваЭТ, НомерЧека, СуммаОперации)), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
					Иначе
						ТекстСообщения = НСтр("ru = 'При подключении фискального регистратора произошла ошибка:
						|""%ОписаниеОшибки%"".
						|Операция по карте не была выполнена.'");
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
					КонецЕсли;
				Иначе
					ТекстСообщения = НСтр("ru = 'При подключении эквайрингового терминала произошла ошибка:
						|""%ОписаниеОшибки%"".
						|Операция по карте не была выполнена.'");
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		ТекстСообщения = НСтр("ru = 'Предварительно необходимо выбрать рабочее место подключаемого оборудования текущего сеанса.'");

		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПреавторизациюЗавершение(Результат1, ДополнительныеПараметры) Экспорт
	
	ИдентификаторУстройстваФР = ДополнительныеПараметры.ИдентификаторУстройстваФР;
	ИдентификаторУстройстваЭТ = ДополнительныеПараметры.ИдентификаторУстройстваЭТ;
	НомерЧека = ДополнительныеПараметры.НомерЧека;
	СуммаОперации = ДополнительныеПараметры.СуммаОперации;
	
	
	// Предварительно авторизуем операцию
	Результат = Результат1;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ВходныеПараметры  = Новый Массив();
		ВыходныеПараметры = Неопределено;
		
		ВходныеПараметры.Добавить(Результат.Сумма);
		ВходныеПараметры.Добавить(Результат.ДанныеКарты);
		ВходныеПараметры.Добавить(Результат.СсылочныйНомер);
		ВходныеПараметры.Добавить(Результат.НомерЧека);
		
		// Выполнение операции на ЭТ
		РезультатЭТ = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваЭТ,
		"AuthorizeVoidPreSales",
		ВходныеПараметры,
		ВыходныеПараметры);
		
		Если НЕ РезультатЭТ Тогда
			ТекстСообщения = НСтр("ru = 'При выполнении операции возникла ошибка:
			|""%ОписаниеОшибки%"".
			|Преавторизация по карте не была отменена.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,
			"%ОписаниеОшибки%",
			ВыходныеПараметры[1]);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе
			Если НЕ ПустаяСтрока(ВыходныеПараметры[0][1]) Тогда
				глПодключаемоеОборудование.Вставить("ПоследнийСлипЧек", ВыходныеПараметры[0][1]);
			КонецЕсли;
			
			НомерКарты           = "";
			НомерСсылкиОперации  = "";
			НомерЧека            = "";
			СтрокаСлипЧека       = ВыходныеПараметры[0][1];
			
			Если НЕ ПустаяСтрока(СтрокаСлипЧека) Тогда
				ВходныеПараметры = Новый Массив();
				ВходныеПараметры.Добавить(СтрокаСлипЧека);
				ВыходныеПараметры = Неопределено;
				
				РезультатФР = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,
				"PrintText",
				ВходныеПараметры,
				ВыходныеПараметры);
			КонецЕсли;
		КонецЕсли;
		
		Если РезультатЭТ И Не РезультатФР Тогда
			ОписаниеОшибкиФР = ВыходныеПараметры[1];
			
			ВходныеПараметры  = Новый Массив();
			ВыходныеПараметры = Неопределено;
			
			ВходныеПараметры.Добавить(СуммаОперации);
			ВходныеПараметры.Добавить(НомерСсылкиОперации);
			ВходныеПараметры.Добавить(НомерЧека);
			
			// Выполнение операции на ЭТ
			МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваЭТ,
			"EmergencyVoid",
			ВходныеПараметры,
			ВыходныеПараметры);
			
			ТекстСообщения = НСтр("ru = 'При печати слип-чека возникла ошибка:
			|""%ОписаниеОшибки%"".
			|Операция по карте была отменена.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,
			"%ОписаниеОшибки%",
			ОписаниеОшибкиФР);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
	// Отключение устройства ФР
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
	ИдентификаторУстройстваФР);
	// Отключение устройства ЭТ
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
	ИдентификаторУстройстваЭТ);

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
			ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
		КонецЕсли;		

КонецПроцедуры



