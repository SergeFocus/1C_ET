// sza131127-0457  
&НаКлиенте
Процедура ИмяОбработчикаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение <> Объект.ОбработчикДрайвера Тогда
		ОбработатьВыборОбработчика(ВыбранноеЗначение, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Настроить(Команда)
	
	Если НЕ МенеджерОборудованияКлиент.ДрайверУстановлен(Объект.Ссылка) Тогда
		Результат = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("НастроитьЗавершение", ЭтаФорма), ОбщийМодульПовтор.ПолучитьТекстНаЯзыке("Установить драйвер?"), РежимДиалогаВопрос.ДаНет);
        Возврат;
	КонецЕсли;
	
	НастроитьФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Результат = РезультатВопроса;
	Если Результат = КодВозвратаДиалога.Да Тогда
		МенеджерОборудованияКлиент.УстановитьДрайвер(Объект.Ссылка);
	КонецЕсли;
	
	НастроитьФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура НастроитьФрагмент()
	
	Перем НастройкиИзменены, Результат, СообщениеОбОшибке;
	
	ОчиститьСообщения();
	СообщениеОбОшибке = "";
	НастройкиИзменены = ЛОЖЬ;
	
	Записать();
	
	Результат = МенеджерОборудованияКлиент.ВыполнитьНастройкуОборудования(
	Объект.Ссылка,
	НастройкиИзменены,
	СообщениеОбОшибке);
	
	Прочитать();
	
	Если Результат И НастройкиИзменены Тогда
		// Настройки были изменены
		ОбновитьПовторноИспользуемыеЗначения();
	ИначеЕсли Не Результат Тогда
		ОбщегоНазначения.СообщитьПользователю(СообщениеОбОшибке);
	КонецЕсли;

КонецПроцедуры

// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
&НаКлиенте
Процедура ОбработатьВыборОбработчика(ВыбранныйОбработчик, СтандартнаяОбработка = ИСТИНА)
	
	Объект.Наименование = "'" + Строка(ВыбранныйОбработчик) + "'"
	+ ?(ПустаяСтрока(Строка(Объект.РабочееМесто)),
	"",
	" " + НСтр("ru='на'") + " " + Строка(Объект.РабочееМесто));
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ Отказ
		И Модифицированность Тогда
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;
	
КонецПроцедуры

// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
&НаСервере
Функция   ПолучитьСписокДрайверов(ТипОборудования)
	
	СписокДрайверов = Новый СписокЗначений();
	Для Каждого ИмяПеречисления Из Метаданные.Перечисления.ОбработчикиДрайверовПодключаемогоОборудования.ЗначенияПеречисления Цикл
		
		Если ТипОборудования = Перечисления["ТипыПодключаемогоОборудования"][ИмяПеречисления.Комментарий]
			Или ПустаяСтрока(ИмяПеречисления.Комментарий) Тогда
			СписокДрайверов.Добавить(Перечисления["ОбработчикиДрайверовПодключаемогоОборудования"][ИмяПеречисления.Имя]);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокДрайверов;
	
КонецФункции

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	глЧислоОбъектов = глЧислоОбъектов + 1; глПроверятьСообщения = ИСТИНА;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 1, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиент.СобытиеФормы(ЭтаФорма, 0, Объект.Ссылка, ИСТИНА);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)          // ПРИ СОЗДАНИИ НА СЕРВЕРЕ
	
	Если ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ИспользоватьСобственныйПереводЭлементовИнтерфейса") Тогда
		ОбщийМодульСервер.ПеревестиРеквизитыФормы(ЭтаФорма);	
	КонецЕсли;
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест"
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Загрузка и установка списка доступных обработок
	СписокДрайверов = ПолучитьСписокДрайверов(Объект.ТипОборудования);
	Элементы.ОбработчикДрайвера.СписокВыбора.Очистить();
	Для Каждого СтрокаСписка Из СписокДрайверов Цикл
		Элементы.ОбработчикДрайвера.СписокВыбора.Добавить(СтрокаСписка.Значение, СтрокаСписка.Представление);
	КонецЦикла;
	
	// Перечисление стандартных типов
	Для Каждого ИмяПеречисления Из Метаданные.Перечисления.ТипыПодключаемогоОборудования.ЗначенияПеречисления Цикл
		СоответствиеТиповОборудования.Добавить(ИмяПеречисления.Синоним, ИмяПеречисления.Комментарий);
	КонецЦикла;
	
	// Защита от изменения типа устройства если тип явно задан или экземпляр уже создан
	Элементы.ТипОборудования.ТолькоПросмотр = (Объект.Ссылка <> Справочники.ПодключаемоеОборудование.ПустаяСсылка());
	
	// Защита от изменения обработчика драйвера уже созданного экземпляра устройства
	Элементы.ОбработчикДрайвера.ТолькоПросмотр = (Объект.Ссылка <> Справочники.ПодключаемоеОборудование.ПустаяСсылка());
	
	Элементы.ФормаНастроить.Доступность = ЗначениеЗаполнено(Объект.Ссылка); 
	
	Если Объект.УстройствоИспользуется = Объект.УстройствоОтключено Тогда
		Объект.УстройствоИспользуется = НЕ Объект.УстройствоОтключено;
		Модифицированность = ЛОЖЬ;
	КонецЕсли;
	
	Если ПараметрыСеанса.ВерсияПриложения < 803050000 
		ИЛИ ОбщийМодульПовтор.ПолучитьЗначениеНастройкиИлиКонстанты("ВместоТумблеровПоказыватьГалочки") Тогда			
		
		Если НЕ ПараметрыСеанса.ВерсияПриложения < 803050000 Тогда
			Выполнить(" Элементы.УстройствоИспользуется.ВидФлажка = ВидФлажка.Флажок; ");	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Элементы.ФормаНастроить.Доступность = ЗначениеЗаполнено(Объект.Ссылка); 
	
КонецПроцедуры

// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ
&НаКлиенте
Процедура ТипОборудованияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Объект.ТипОборудования <> ВыбранноеЗначение Тогда
		Объект.ТипОборудования = ВыбранноеЗначение;
		Модифицированность = ИСТИНА;
		
		// Загрузка и установка списка доступных обработок
		СписокДрайверов = ПолучитьСписокДрайверов(Объект.ТипОборудования);
		Элементы.ОбработчикДрайвера.СписокВыбора.Очистить();
		Для Каждого СтрокаСписка Из СписокДрайверов Цикл
			Элементы.ОбработчикДрайвера.СписокВыбора.Добавить(СтрокаСписка.Значение, СтрокаСписка.Представление);
		КонецЦикла;
		
		Объект.ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ПустаяСсылка");
		
	КонецЕсли;
	
	СтандартнаяОбработка = ЛОЖЬ;
	
КонецПроцедуры
